--- php-5.3.0RC1/Zend/zend_extensions.c	2009-01-17 04:05:13.000000000 +0200
+++ php-5.3.0RC1/Zend/zend_extensions.c	2009-04-19 17:06:05.000000000 +0300
@@ -5,7 +5,7 @@
    | Copyright (c) 1998-2009 Zend Technologies Ltd. (http://www.zend.com) |
    +----------------------------------------------------------------------+
    | This source file is subject to version 2.00 of the Zend license,     |
-   | that is bundled with this package in the file LICENSE, and is        | 
+   | that is bundled with this package in the file LICENSE, and is        |
    | available through the world-wide-web at the following url:           |
    | http://www.zend.com/license/2_00.txt.                                |
    | If you did not receive a copy of the Zend license and are unable to  |
@@ -17,14 +17,14 @@
    +----------------------------------------------------------------------+
 */
 
-/* $Id: zend_extensions.c,v 1.48.2.1.2.3.2.4 2009/01/17 02:05:13 stas Exp $ */
+/* $Id: zend_extensions.c,v 1.59 2009/04/08 12:19:13 dmitry Exp $ */
 
 #include "zend_extensions.h"
 
 ZEND_API zend_llist zend_extensions;
 static int last_resource_number;
 
-int zend_load_extension(const char *path)
+int zend_load_extension(const char *path) /* {{{ */
 {
 #if ZEND_EXTENSIONS_SUPPORT
 	DL_HANDLE handle;
@@ -79,8 +79,9 @@
 			DL_UNLOAD(handle);
 			return FAILURE;
 		}
-	} else if (strcmp(ZEND_EXTENSION_BUILD_ID, extension_version_info->build_id)) {
-		fprintf(stderr, "Cannot load %s - it was build with configuration %s, whereas running engine is %s\n",
+	} else if (strcmp(ZEND_EXTENSION_BUILD_ID, extension_version_info->build_id) &&
+	           (!new_extension->build_id_check || new_extension->build_id_check(ZEND_EXTENSION_BUILD_ID) != SUCCESS)) {
+		fprintf(stderr, "Cannot load %s - it was built with configuration %s, whereas running engine is %s\n",
 					new_extension->name, extension_version_info->build_id, ZEND_EXTENSION_BUILD_ID);
 		DL_UNLOAD(handle);
 		return FAILURE;
@@ -92,9 +93,9 @@
 	return FAILURE;
 #endif
 }
+/* }}} */
 
-
-int zend_register_extension(zend_extension *new_extension, DL_HANDLE handle)
+int zend_register_extension(zend_extension *new_extension, DL_HANDLE handle) /* {{{ */
 {
 #if ZEND_EXTENSIONS_SUPPORT
 	zend_extension extension;
@@ -111,9 +112,9 @@
 
 	return SUCCESS;
 }
+/* }}} */
 
-
-static void zend_extension_shutdown(zend_extension *extension TSRMLS_DC)
+static void zend_extension_shutdown(zend_extension *extension TSRMLS_DC) /* {{{ */
 {
 #if ZEND_EXTENSIONS_SUPPORT
 	if (extension->shutdown) {
@@ -121,8 +122,9 @@
 	}
 #endif
 }
+/* }}} */
 
-static int zend_extension_startup(zend_extension *extension)
+static int zend_extension_startup(zend_extension *extension) /* {{{ */
 {
 #if ZEND_EXTENSIONS_SUPPORT
 	if (extension->startup) {
@@ -134,32 +136,32 @@
 #endif
 	return 0;
 }
+/* }}} */
 
-
-int zend_startup_extensions_mechanism()
+int zend_startup_extensions_mechanism(void) /* {{{ */
 {
 	/* Startup extensions mechanism */
 	zend_llist_init(&zend_extensions, sizeof(zend_extension), (void (*)(void *)) zend_extension_dtor, 1);
 	last_resource_number = 0;
 	return SUCCESS;
 }
+/* }}} */
 
-
-int zend_startup_extensions()
+int zend_startup_extensions(void) /* {{{ */
 {
 	zend_llist_apply_with_del(&zend_extensions, (int (*)(void *)) zend_extension_startup);
 	return SUCCESS;
 }
+/* }}} */
 
-
-void zend_shutdown_extensions(TSRMLS_D)
+void zend_shutdown_extensions(TSRMLS_D) /* {{{ */
 {
 	zend_llist_apply(&zend_extensions, (llist_apply_func_t) zend_extension_shutdown TSRMLS_CC);
 	zend_llist_destroy(&zend_extensions);
 }
+/* }}} */
 
-
-void zend_extension_dtor(zend_extension *extension)
+void zend_extension_dtor(zend_extension *extension) /* {{{ */
 {
 #if ZEND_EXTENSIONS_SUPPORT && !ZEND_DEBUG
 	if (extension->handle) {
@@ -167,9 +169,9 @@
 	}
 #endif
 }
+/* }}} */
 
-
-static void zend_extension_message_dispatcher(const zend_extension *extension, int num_args, va_list args TSRMLS_DC)
+static void zend_extension_message_dispatcher(const zend_extension *extension, int num_args, va_list args TSRMLS_DC) /* {{{ */
 {
 	int message;
 	void *arg;
@@ -181,17 +183,17 @@
 	arg = va_arg(args, void *);
 	extension->message_handler(message, arg);
 }
+/* }}} */
 
-
-ZEND_API void zend_extension_dispatch_message(int message, void *arg)
+ZEND_API void zend_extension_dispatch_message(int message, void *arg) /* {{{ */
 {
 	TSRMLS_FETCH();
 
 	zend_llist_apply_with_arguments(&zend_extensions, (llist_apply_with_args_func_t) zend_extension_message_dispatcher TSRMLS_CC, 2, message, arg);
 }
+/* }}} */
 
-
-ZEND_API int zend_get_resource_handle(zend_extension *extension)
+ZEND_API int zend_get_resource_handle(zend_extension *extension) /* {{{ */
 {
 	if (last_resource_number<ZEND_MAX_RESERVED_RESOURCES) {
 		extension->resource_number = last_resource_number;
@@ -200,9 +202,9 @@
 		return -1;
 	}
 }
+/* }}} */
 
-
-ZEND_API zend_extension *zend_get_extension(const char *extension_name)
+ZEND_API zend_extension *zend_get_extension(const char *extension_name) /* {{{ */
 {
 	zend_llist_element *element;
 
@@ -215,6 +217,7 @@
 	}
 	return NULL;
 }
+/* }}} */
 
 /*
  * Support for dynamic loading of MH_BUNDLEs on Darwin / Mac OS X
@@ -223,7 +226,7 @@
 
 #if HAVE_MACH_O_DYLD_H
 
-void *zend_mh_bundle_load(char* bundle_path)
+void *zend_mh_bundle_load(char* bundle_path) /* {{{ */
 {
 	NSObjectFileImage bundle_image;
 	NSModule bundle_handle;
@@ -246,8 +249,9 @@
 
 	return bundle_handle;
 }
+/* }}} */
 
-int zend_mh_bundle_unload(void *bundle_handle)
+int zend_mh_bundle_unload(void *bundle_handle) /* {{{ */
 {
 	NSSymbol bundle_fini_nssymbol;
 	void (*bundle_fini)(void);
@@ -261,19 +265,22 @@
 
 	return (int) NSUnLinkModule(bundle_handle, NULL);
 }
+/* }}} */
 
-void *zend_mh_bundle_symbol(void *bundle_handle, const char *symbol_name)
+void *zend_mh_bundle_symbol(void *bundle_handle, const char *symbol_name) /* {{{ */
 {
 	NSSymbol symbol;
 	symbol = NSLookupSymbolInModule(bundle_handle, symbol_name);
 	return NSAddressOfSymbol(symbol);
 }
+/* }}} */
 
-const char *zend_mh_bundle_error(void)
+const char *zend_mh_bundle_error(void) /* {{{ */
 {
 	/* Witness the state of the art error reporting */
 	return NULL;
 }
+/* }}} */
 
 #endif /* HAVE_MACH_O_DYLD_H */
 
