? post-5.2.2RC1.diff
Index: EXTENSIONS
===================================================================
RCS file: /repository/php-src/EXTENSIONS,v
retrieving revision 1.72.2.4.2.2
retrieving revision 1.72.2.4.2.4
diff -u -p -d -r1.72.2.4.2.2 -r1.72.2.4.2.4
--- EXTENSIONS	9 Jul 2006 22:58:36 -0000	1.72.2.4.2.2
+++ EXTENSIONS	20 Apr 2007 08:18:42 -0000	1.72.2.4.2.4
@@ -127,32 +127,14 @@ EXTENSION:           dbase
 MAINTENANCE:         Orphaned
 STATUS:              Working
 -------------------------------------------------------------------------------
-EXTENSION:           dbx
-PRIMARY MAINTAINER:  Marc Boeren <M.Boeren@guidance.nl>
-MAINTENANCE:         Maintained
-STATUS:              Working
-SINCE:               4.0.6
-COMMENT:             DB abstraction for odbc, mysql, pgsql, mssql, fbsql and more, see documentation
--------------------------------------------------------------------------------
 EXTENSION:           fbsql
 PRIMARY MAINTAINER:  Frank M. Kromann <fmk@swwwing.com>
 MAINTENANCE:         Unknown
 STATUS:              Unknown
 -------------------------------------------------------------------------------
-EXTENSION:           informix
-PRIMARY MAINTAINER:  Danny Heijl <Danny.Heijl@cevi.be>
-MAINTENANCE:         Maintained
-STATUS:              Working
--------------------------------------------------------------------------------
-EXTENSION:           ingres_ii
-PRIMARY MAINTAINER:  David Hénot <henot@php.net>
-MAINTENANCE:         Maintained
-STATUS:              Experimental
-SINCE:               4.0.2
--------------------------------------------------------------------------------
 EXTENSION:           interbase
 PRIMARY MAINTAINER:  Ard Biesheuvel <ard@ard.nu>, Jouni Ahto <jouni.ahto@exdec.fi>
-MAINTENANCE:         Maintained
+MAINTENANCE:         Odd fixes
 STATUS:              Working
 -------------------------------------------------------------------------------
 EXTENSION:           msql
@@ -187,14 +169,53 @@ MAINTENANCE:         Maintained
 STATUS:              Working
 COMMENT:             Working 
 -------------------------------------------------------------------------------
-EXTENSION:           oracle
-MAINTENANCE:         Orphaned
+EXTENSION:           pdo
+PRIMARY MAINTAINER:  Unknown
+MAINTENANCE:         Odd fixes
 STATUS:              Working
-COMMENT:             Using the new OCI8 driver is encouraged where possible.
+SINCE:               5.1
 -------------------------------------------------------------------------------
-EXTENSION:           ovrimos
-MAINTENANCE:         Unknown
-STATUS:              Unknown
+EXTENSION:           pdo_dblib
+PRIMARY MAINTAINER:  Unknown
+MAINTENANCE:         Odd fixes
+STATUS:              Working
+SINCE:               5.1
+-------------------------------------------------------------------------------
+EXTENSION:           pdo_firebird
+PRIMARY MAINTAINER:  Unknown
+MAINTENANCE:         Odd fixes
+STATUS:              Working
+SINCE:               5.1
+-------------------------------------------------------------------------------
+EXTENSION:           pdo_mysql
+PRIMARY MAINTAINER:  Unknown
+MAINTENANCE:         Odd fixes
+STATUS:              Working
+SINCE:               5.1
+-------------------------------------------------------------------------------
+EXTENSION:           pdo_odbc
+PRIMARY MAINTAINER:  Unknown
+MAINTENANCE:         Odd fixes
+STATUS:              Working
+SINCE:               5.1
+-------------------------------------------------------------------------------
+EXTENSION:           pdo_oci
+PRIMARY MAINTAINER:  Unknown
+MAINTENANCE:         Odd fixes
+STATUS:              Working
+SINCE:               5.1
+-------------------------------------------------------------------------------
+EXTENSION:           pdo_pgsql
+PRIMARY MAINTAINER:  Unknown
+MAINTENANCE:         Odd fixes
+STATUS:              Working
+SINCE:               5.1
+-------------------------------------------------------------------------------
+EXTENSION:           pdo_sqlite
+PRIMARY MAINTAINER:  Unknown
+MAINTENANCE:         Odd fixes
+STATUS:              Working
+SINCE:               5.1
 -------------------------------------------------------------------------------
 EXTENSION:           pgsql
 PRIMARY MAINTAINER:  Marcus Boerger <helly@php.net>, Yasuo Ohgaki <yohgaki@php.net>
@@ -237,11 +258,11 @@ SINCE:               5.0
 EXTENSION:           soap
 PRIMARY MAINTAINER:  Dmitry Stogov <dmitry@zend.com>
 MAINTENANCE:         Maintained
-STATUS:              Experimental
+STATUS:              Working
 -------------------------------------------------------------------------------
 EXTENSION:           wddx
 PRIMARY MAINTAINER:  Andrei Zmievski <andrei@php.net>
-MAINTENANCE:         Maintained
+MAINTENANCE:         Orphaned
 STATUS:              Working
 -------------------------------------------------------------------------------
 EXTENSION:           xml
@@ -249,11 +270,21 @@ PRIMARY MAINTAINER:  Thies C. Arntzen <t
 MAINTENANCE:         Maintained
 STATUS:              Working
 -------------------------------------------------------------------------------
+EXTENSION:           xmlreader
+PRIMARY MAINTAINER:  Rob Richards <rrichards@php.net>, Christian Stocker <chregu@php.net> 
+MAINTENANCE:         Maintained
+STATUS:              Working
+-------------------------------------------------------------------------------
 EXTENSION:           xmlrpc
 PRIMARY MAINTAINER:  Dan Libby
-MAINTENANCE:         UNKNOWN
+MAINTENANCE:         Orphaned
 STATUS:              Experimental
 -------------------------------------------------------------------------------
+EXTENSION:           xmlwriter
+PRIMARY MAINTAINER:  Rob Richards <rrichards@php.net>, Pierre-Alain Joye <pajoye@php.net> 
+MAINTENANCE:         Maintained
+STATUS:              Working
+-------------------------------------------------------------------------------
 EXTENSION:           xsl
 PRIMARY MAINTAINER:  Christian Stocker <chregu@php.net>, Rob Richards <rrichards@php.net>
 MAINTENANCE:         Maintained
@@ -267,7 +298,7 @@ SINCE:               5.0
 -------------------------------------------------------------------------------
 EXTENSION:           bcmath
 MAINTENANCE:         Unknown
-STATUS:              Unknown
+STATUS:              Working
 -------------------------------------------------------------------------------
 EXTENSION:           bz2
 PRIMARY MAINTAINER:  Hartmut Holzgraefe <hholzgra@php.net>
@@ -286,11 +317,6 @@ MAINTENANCE:         Maintained
 STATUS:              Windows
 SINCE:               5.0
 -------------------------------------------------------------------------------
-EXTENSION:           cpdf
-PRIMARY MAINTAINER:  Uwe Steinmann <steinm@php.net>
-MAINTENANCE:         Maintained
-STATUS:              Working
--------------------------------------------------------------------------------
 EXTENSION:           ctype
 PRIMARY MAINTAINER:  Hartmut Holzgraefe <hholzgra@php.net>
 MAINTENANCE:         Maintained
@@ -313,27 +339,19 @@ MAINTENANCE:         Maintained
 STATUS:              Working
 SINCE:               4.2
 -------------------------------------------------------------------------------
-EXTENSION:           fam
-PRIMARY MAINTAINER:  Sascha Schumann <sascha@schumann.cx>
-MAINTENANCE:         Unknown
-STATUS:              Unknown
--------------------------------------------------------------------------------
-EXTENSION:           fdf
-PRIMARY MAINTAINER:  Uwe Steinmann <steinm@php.net>
+EXTENSION:           filter
+PRIMARY MAINTAINER:  Derick Rethans <derick@php.net>, Pierre-Alain Joye <pajoye@php.net>, Ilia Alshanetsky <iliaa@php.net>
 MAINTENANCE:         Maintained
-STATUS:              Unknown
--------------------------------------------------------------------------------
-EXTENSION:           filepro
-MAINTENANCE:         Unknown
-STATUS:              Unknown
+STATUS:              Working
+SINCE:               5.2
 -------------------------------------------------------------------------------
 EXTENSION:           ftp
-PRIMARY MAINTAINER:  Stefan Esser (sesser@php.net)
-MAINTENANCE:         Maintained
+PRIMARY MAINTAINER:  Stefan Esser <sesser@php.net>
+MAINTENANCE:         Odd fixes
 STATUS:              Working
 -------------------------------------------------------------------------------
 EXTENSION:           gd
-PRIMARY MAINTAINER:  Rasmus Lerdorf <rasmus@php.net>
+PRIMARY MAINTAINER:  Pierre-Alain Joye <pajoye@php.net>
 MAINTENANCE:         Maintained
 STATUS:              Working
 -------------------------------------------------------------------------------
@@ -342,15 +360,11 @@ MAINTENANCE:         Unknown
 STATUS:              Working
 -------------------------------------------------------------------------------
 EXTENSION:           gmp
-MAINTENANCE:         Unknown
-STATUS:              Unknown
+PRIMARY MAINTAINER:  Stanislav Malyshev <stas@php.net>, Antony Dovgal <tony2001@php.net>
+MAINTENANCE:         Maintained
+STATUS:              Working
 SINCE:               4.0.4
 -------------------------------------------------------------------------------
-EXTENSION:           hwapi
-PRIMARY MAINTAINER:  Uwe Steinmann <steinm@php.net>
-MAINTENANCE:         Unknown
-STATUS:              Unknown
--------------------------------------------------------------------------------
 EXTENSION:           iconv
 PRIMARY MAINTAINER:  Moriyoshi Koizumi <moriyoshi@php.net>
 MAINTENANCE:         Maintained
@@ -361,13 +375,14 @@ PRIMARY MAINTAINER:  Chuck Hagenbuch <ch
 MAINTENANCE:         Maintained
 STATUS:              Working
 -------------------------------------------------------------------------------
-EXTENSION:           ircg
-PRIMARY MAINTAINER:  Sascha Schumann <sascha@schumann.cx>
-MAINTENANCE:         Unknown
-STATUS:              Unknown
+EXTENSION:           json
+PRIMARY MAINTAINER:  Unknown
+MAINTENANCE:         Odd fixes
+STATUS:              Working
+SINCE:               5.2
 -------------------------------------------------------------------------------
 EXTENSION:           ldap
-PRIMARY MAINTAINER:  Stig Venaas <venaas@php.net>
+PRIMARY MAINTAINER:  Stig Venaas <venaas@php.net>, Douglas Goldstein <cardoe@php.net>
 MAINTENANCE:         Maintained
 STATUS:              Working
 -------------------------------------------------------------------------------
@@ -381,14 +396,9 @@ PRIMARY MAINTAINER:  Derick Rethans <der
 MAINTENANCE:         Maintained
 STATUS:              Working
 -------------------------------------------------------------------------------
-EXTENSION:           mcve
-PRIMARY MAINTAINER:  Unknown
-MAINTENANCE:         Unknown
-STATUS:              Unknown
--------------------------------------------------------------------------------
 EXTENSION:           mhash
 PRIMARY MAINTAINER:  Sascha Schumann <sascha@schumann.cx>
-MAINTENANCE:         Maintained
+MAINTENANCE:         Unknown
 STATUS:              Working
 -------------------------------------------------------------------------------
 EXTENSION:           mime_magic
@@ -402,47 +412,25 @@ PRIMARY MAINTAINER:  Frank M. Kromann
 MAINTENANCE:         Unknown
 STATUS:              Experimental
 -------------------------------------------------------------------------------
-EXTENSION:           mnogosearch
-PRIMARY MAINTAINER:  Sergey Kartashoff <gluke@mail.ru>
-MAINTENANCE:         Unknown
-STATUS:              Unknown
--------------------------------------------------------------------------------
-EXTENSION:           mono
-PRIMARY MAINTAINER:  Sterling Hughes <sterling@php.net>
-MAINTENANCE:         Unknown
-STATUS:              Unknown
--------------------------------------------------------------------------------
-EXTENSION:           msession
-PRIMARY MAINTAINER   Mark L. Woodward <mlwmohawk@mohawksoft.com>
-MAINTENANCE:         Maintained
-STATUS:              Working/Experimental
-COMMENT:             Tested on Linux, should work on other UNIX platforms. Backend server code can compile under Windows.
--------------------------------------------------------------------------------
 EXTENSION:           ncurses
 PRIMARY MAINTAINER   Ilia Alshanetsky <iliaa@php.net>, Wez Furlong <wez@php.net>, Hartmut Holzgraefe <hholzgra@php.net>, Georg Richter <georg@php.net>
 MAINTENANCE:         Unknown
 STATUS:              Experimental
 -------------------------------------------------------------------------------
 EXTENSION:           openssl
-PRIMARY MAINTAINER:  Wez Furlong <wez@php.net>
+PRIMARY MAINTAINER:  Wez Furlong <wez@php.net>, Pierre-Alain Joye <pajoye@php.net>
 MAINTENANCE:         Maintained
-STATUS:              Experimental
+STATUS:              Working
 SINCE:               4.0.4
 -------------------------------------------------------------------------------
 EXTENSION:           pcntl
 MAINTENANCE:         Unknown
-STATUS:              Experimental
--------------------------------------------------------------------------------
-EXTENSION:           pcre
-PRIMARY MAINTAINER:  Andrei Zmievski <andrei@php.net>
-MAINTENANCE:         Maintained
 STATUS:              Working
 -------------------------------------------------------------------------------
-EXTENSION:           pfpro
-PRIMARY MAINTAINER:  David Croft <david@infotrek.co.uk>
+EXTENSION:           pcre
+PRIMARY MAINTAINER:  Andrei Zmievski <andrei@php.net>, Nuno Lopes <nlopess@php.net>
 MAINTENANCE:         Maintained
 STATUS:              Working
-SINCE:               4.0.2
 -------------------------------------------------------------------------------
 EXTENSION:           posix
 PRIMARY MAINTAINER:  Kristian Köhntopp <kris@koehntopp.de>
@@ -477,7 +465,7 @@ STATUS:              Working
 EXTENSION:           shmop
 PRIMARY MAINTAINER:  Ilia Alshanetsky <iliaa@php.net>
 MAINTENANCE:         Maintained
-STATUS:              Experimental
+STATUS:              Working
 SINCE:               4.0.3
 -------------------------------------------------------------------------------
 EXTENSION:           snmp
@@ -488,7 +476,7 @@ STATUS:              Working
 EXTENSION:           sockets
 PRIMARY MAINTAINER:  Chris Vandomelen <chrisv@b0rked.dhs.org>
 MAINTENANCE:         Maintained
-STATUS:              Experimental
+STATUS:              Working
 SINCE:               4.0.2
 -------------------------------------------------------------------------------
 EXTENSION:           spl
@@ -499,31 +487,30 @@ SINCE:               5.0.0
 -------------------------------------------------------------------------------
 EXTENSION:           sysvmsg
 MAINTENANCE:         Unknown
-STATUS:              Unknown
+STATUS:              Working
 -------------------------------------------------------------------------------
 EXTENSION:           sysvsem
 MAINTENANCE:         Unknown
-STATUS:              Unknown
+STATUS:              Working
 -------------------------------------------------------------------------------
 EXTENSION:           sysvshm
 MAINTENANCE:         Unknown
 STATUS:              Working
 -------------------------------------------------------------------------------
 EXTENSION:           tidy
-PRIMARY MAINTAINER:  John Coggeshall <john@php.net>, Ilia Alshanetsky <iliaa@php.net>
+PRIMARY MAINTAINER:  John Coggeshall <john@php.net>, Ilia Alshanetsky <iliaa@php.net>, Nuno Lopes <nlopess@php.net>
 MAINTENANCE:         Maintained
-STATUS:              Unknown
+STATUS:              Working
 -------------------------------------------------------------------------------
 EXTENSION:           tokenizer
 PRIMARY MAINTAINER:  Andrei Zmievski <andrei@php.net>
 MAINTENANCE:         Unknown
-STATUS:              Unknown
+STATUS:              Working
 -------------------------------------------------------------------------------
-EXTENSION:           yaz
-PRIMARY MAINTAINER:  Adam Dickmeiss <adam@indexdata.dk>
+EXTENSION:           zip
+PRIMARY MAINTAINER:  Pierre-Alain Joye <pajoye@php.net>
 MAINTENANCE:         Maintained
-STATUS:              Unknown
-SINCE:               4.0.1
+STATUS:              Working
 -------------------------------------------------------------------------------
 EXTENSION:           zlib
 PRIMARY MAINTAINER:  Stefan Roehrich <sr@linux.de>
Index: INSTALL
===================================================================
RCS file: /repository/php-src/INSTALL,v
retrieving revision 1.37.2.2.2.2
retrieving revision 1.37.2.2.2.3
diff -u -p -d -r1.37.2.2.2.2 -r1.37.2.2.2.3
--- INSTALL	19 Jan 2007 19:25:02 -0000	1.37.2.2.2.2
+++ INSTALL	20 Apr 2007 14:13:47 -0000	1.37.2.2.2.3
@@ -11,7 +11,7 @@ Installing PHP
         Caudium
         fhttpd related notes
         Sun, iPlanet and Netscape servers on Sun Solaris
-        CGI and commandline setups
+        CGI and command line setups
         HP-UX specific installation notes
         OpenBSD installation notes
         Solaris specific installation tips
@@ -20,6 +20,7 @@ Installing PHP
    3. Installation on Mac OS X
 
         Using Packages
+        Using the bundled PHP
         Compiling for OS X Server
         Compiling for MacOS X Client
 
@@ -28,7 +29,7 @@ Installing PHP
         Introduction to PECL Installations
         Downloading PECL extensions
         PECL for Windows users
-        Compiling shared PECL extensions with PEAR
+        Compiling shared PECL extensions with the pecl command
         Compiling shared PECL extensions with phpize
         Compiling PECL extensions statically into PHP
 
@@ -90,7 +91,7 @@ Chapter 1. General Installation Consider
 
    With PHP you can also write desktop GUI applications using the PHP-GTK
    extension. This is a completely different approach than writing web
-   pages, as you do not output any HTML, but manage windows and objects
+   pages, as you do not output any HTML, but manage Windows and objects
    within them. For more information about PHP-GTK, please visit the site
    dedicated to this extension. PHP-GTK is not included in the official
    PHP distribution.
@@ -124,10 +125,10 @@ Chapter 2. Installation on Unix systems
    package installation system. This can assist in setting up a standard
    configuration, but if you need to have a different set of features
    (such as a secure server, or a different database driver), you may need
-   to build PHP and/or your webserver. If you are unfamiliar with building
-   and compiling your own software, it is worth checking to see whether
-   somebody has already built a packaged version of PHP with the features
-   you need.
+   to build PHP and/or your web server. If you are unfamiliar with
+   building and compiling your own software, it is worth checking to see
+   whether somebody has already built a packaged version of PHP with the
+   features you need.
 
    Prerequisite knowledge and software for compiling:
 
@@ -139,8 +140,8 @@ Chapter 2. Installation on Unix systems
      * Any module specific components (such as gd, pdf libs, etc.)
 
    The initial PHP setup and configuration process is controlled by the
-   use of the commandline options of the configure script. You could get a
-   list of all available options along with short explanations running
+   use of the command line options of the configure script. You could get
+   a list of all available options along with short explanations running
    ./configure --help. Our manual documents the different options
    separately. You will find the core options in the appendix, while the
    different extension specific options are descibed on the reference
@@ -345,7 +346,7 @@ stop and start:
    will mean that you can compile apache separately, and don't have to
    recompile everything as you add to, or change, PHP. Building PHP into
    apache (static method) means that PHP will load and run faster. For
-   more information, see the Apache webpage on DSO support.
+   more information, see the Apache web page on DSO support.
 
      Note: Apache's default httpd.conf currently ships with a section
      that looks like this:
@@ -562,13 +563,13 @@ Sun, iPlanet and Netscape servers on Sun
    From PHP 4.3.3 on you can use PHP scripts with the NSAPI module to
    generate custom directory listings and error pages. Additional
    functions for Apache compatibility are also available. For support in
-   current webservers read the note about subrequests.
+   current web servers read the note about subrequests.
 
    You can find more information about setting up PHP for the Netscape
    Enterprise Server (NES) here:
    http://benoit.noss.free.fr/php/install-php4.html
 
-   To build PHP with Sun JSWS/Sun ONE WS/iPlanet/Netscape webservers,
+   To build PHP with Sun JSWS/Sun ONE WS/iPlanet/Netscape web servers,
    enter the proper install directory for the --with-nsapi=[DIR] option.
    The default directory is usually /opt/netscape/suitespot/. Please also
    read /php-xxx-version/sapi/nsapi/nsapi-readme.txt.
@@ -610,7 +611,7 @@ Sun, iPlanet and Netscape servers on Sun
    Configuration Instructions for Sun/iPlanet/Netscape. Firstly you may
    need to add some paths to the LD_LIBRARY_PATH environment for the
    server to find all the shared libs. This can best done in the start
-   script for your webserver. The start script is often located in:
+   script for your web server. The start script is often located in:
    /path/to/server/https-servername/start. You may also need to edit the
    configuration files that are located in:
    /path/to/server/https-servername/config/.
@@ -631,7 +632,7 @@ Init fn="php4_init" LateInit="yes" error
 ini="/path/to/php.ini"]
 
        (PHP >= 4.3.3) The php_ini parameter is optional but with it you
-       can place your php.ini in your webserver config directory.
+       can place your php.ini in your web server config directory.
     3. Configure the default object in obj.conf (for virtual server
        classes [version 6.0+] in their vserver.obj.conf):
 
@@ -684,8 +685,8 @@ AuthTrans fn=php4_auth_trans
 </Object>
 
      Note: The stacksize that PHP uses depends on the configuration of
-     the webserver. If you get crashes with very large PHP scripts, it is
-     recommended to raise it with the Admin Server (in the section
+     the web server. If you get crashes with very large PHP scripts, it
+     is recommended to raise it with the Admin Server (in the section
      "MAGNUS EDITOR").
      __________________________________________________________________
 
@@ -693,22 +694,21 @@ CGI environment and recommended modifica
 
    Important when writing PHP scripts is the fact that Sun JSWS/Sun ONE
    WS/iPlanet/Netscape is a multithreaded web server. Because of that all
-   requests are running in the same process space (the space of the
-   webserver itself) and this space has only one environment. If you want
-   to get CGI variables like PATH_INFO, HTTP_HOST etc. it is not the
-   correct way to try this in the old PHP 3.x way with getenv() or a
-   similar way (register globals to environment, $_ENV). You would only
-   get the environment of the running webserver without any valid CGI
-   variables!
+   requests are running in the same process space (the space of the web
+   server itself) and this space has only one environment. If you want to
+   get CGI variables like PATH_INFO, HTTP_HOST etc. it is not the correct
+   way to try this in the old PHP 3.x way with getenv() or a similar way
+   (register globals to environment, $_ENV). You would only get the
+   environment of the running web server without any valid CGI variables!
 
      Note: Why are there (invalid) CGI variables in the environment?
 
-     Answer: This is because you started the webserver process from the
-     admin server which runs the startup script of the webserver, you
+     Answer: This is because you started the web server process from the
+     admin server which runs the startup script of the web server, you
      wanted to start, as a CGI script (a CGI script inside of the admin
-     server!). This is why the environment of the started webserver has
+     server!). This is why the environment of the started web server has
      some CGI environment variables in it. You can test this by starting
-     the webserver not from the administration server. Use the command
+     the web server not from the administration server. Use the command
      line as root user and start it manually - you will see there are no
      CGI-like environment variables.
 
@@ -749,8 +749,8 @@ pt.php" [inikey=value inikey=value...]
 Note about nsapi_virtual() and subrequests (PHP >= 4.3.3)
 
    The NSAPI module now supports the nsapi_virtual() function (alias:
-   virtual()) to make subrequests on the webserver and insert the result
-   in the webpage. This function uses some undocumented features from the
+   virtual()) to make subrequests on the web server and insert the result
+   in the web page. This function uses some undocumented features from the
    NSAPI library. On Unix the module automatically looks for the needed
    functions and uses them if available. If not, nsapi_virtual() is
    disabled.
@@ -758,10 +758,10 @@ Note about nsapi_virtual() and subreques
      Note: But be warned: Support for nsapi_virtual() is EXPERIMENTAL!!!
      __________________________________________________________________
 
-CGI and commandline setups
+CGI and command line setups
 
-   The default is to build PHP as a CGI program. This creates a
-   commandline interpreter, which can be used for CGI processing, or for
+   The default is to build PHP as a CGI program. This creates a command
+   line interpreter, which can be used for CGI processing, or for
    non-web-related PHP scripting. If you are running a web server PHP has
    module support for, you should generally go for that solution for
    performance reasons. However, the CGI version enables users to run
@@ -816,62 +816,18 @@ Using Variables
 HP-UX specific installation notes
 
    This section contains notes and hints specific to installing PHP on
-   HP-UX systems. (Contributed by paul_mckay at clearwater-it dot co dot
-   uk).
-
-     Note: These tips were written for PHP 4.0.4 and Apache 1.3.9.
-
-    1. You need gzip, download a binary distribution from
-       http://hpux.connect.org.uk/ftp/hpux/Gnu/gzip-1.2.4a/gzip-1.2.4a-sd-
-       10.20.depot.Z uncompress the file and install using swinstall.
-    2. You need gcc, download a binary distribution from
-       http://gatekeep.cs.utah.edu/ftp/hpux/Gnu/gcc-2.95.2/gcc-2.95.2-sd-1
-       0.20.depot.gz. uncompress this file and install gcc using
-       swinstall.
-    3. You need the GNU binutils, you can download a binary distribution
-       from
-       http://hpux.connect.org.uk/ftp/hpux/Gnu/binutils-2.9.1/binutils-2.9
-       .1-sd-10.20.depot.gz. uncompress this file and install binutils
-       using swinstall.
-    4. You now need bison, you can download a binary distribution from
-       http://hpux.connect.org.uk/ftp/hpux/Gnu/bison-1.28/bison-1.28-sd-10
-       .20.depot.gz, install as above.
-    5. You now need flex, you need to download the source from one of the
-       http://www.gnu.org mirrors. It is in the non-gnu directory of the
-       ftp site. Download the file, gunzip, then tar -xvf it. Go into the
-       newly created flex directory and run ./configure, followed by make,
-       and then make install.
-       If you have errors here, it's probably because gcc etc. are not in
-       your PATH so add them to your PATH.
-    6. Download the PHP and apache sources.
-    7. gunzip and tar -xvf them. We need to hack a couple of files so that
-       they can compile OK.
-    8. Firstly the configure file needs to be hacked because it seems to
-       lose track of the fact that you are a hpux machine, there will be a
-       better way of doing this but a cheap and cheerful hack is to put
-       lt_target=hpux10.20 on line 47286 of the configure script.
-    9. Next, the Apache GuessOS file needs to be hacked. Under
-       apache_1.3.9/src/helpers change line 89 from echo
-       "hp${HPUXMACH}-hpux${HPUXVER}"; exit 0 to: echo
-       "hp${HPUXMACH}-hp-hpux${HPUXVER}"; exit 0
-   10. You cannot install PHP as a shared object under HP-UX so you must
-       compile it as a static, just follow the instructions at the Apache
-       page.
-   11. PHP and Apache should have compiled OK, but Apache won't start. you
-       need to create a new user for Apache, e.g. www, or apache. You then
-       change lines 252 and 253 of the conf/httpd.conf in Apache so that
-       instead of
-
-User nobody
-Group nogroup
+   HP-UX systems.
 
-       you have something like
+   There are two main options for installing PHP on HP-UX systems. Either
+   compile it, or install a pre-compiled binary.
 
-User www
-Group sys
+   Official pre-compiled packages are located here:
+   http://software.hp.com/
 
-       This is because you can't run Apache as nobody under hp-ux. Apache
-       and PHP should then work.
+   Until this manual section is rewritten, the documentation about
+   compiling PHP (and related extensions) on HP-UX systems has been
+   removed. For now, consider reading the following external resource:
+   Building Apache and PHP on HP-UX 11.11
      __________________________________________________________________
 
 OpenBSD installation notes
@@ -1128,6 +1084,104 @@ Using Packages
      * Fink: http://fink.sourceforge.net/
      __________________________________________________________________
 
+Using the bundled PHP
+
+   PHP has come standard with Macs since OS X version 10.0.0. Enabling PHP
+   with the default web server requires uncommenting a few lines in the
+   Apache configuration file httpd.conf whereas the CGI and/or CLI are
+   enabled by default (easily accessible via the Terminal program).
+
+   Enabling PHP using the instructions below is meant for quickly setting
+   up a local development environment. It's highly recommended to always
+   upgrade PHP to the newest version. Like most live software, newer
+   versions are created to fix bugs and add features and PHP being is no
+   different. See the appropriate MAC OS X installation documentation for
+   further details. The following instructions are geared towards a
+   beginner with details provided for getting a default setup to work. All
+   users are encouraged to compile, or install a new packaged version.
+
+   The standard installation type is using mod_php, and enabling the
+   bundled mod_php on Mac OS X for the Apache web server (the default web
+   server, that is accessible via System Preferences) involves the
+   following steps:
+
+    1. Locate and open the Apache configuration file. By default, the
+       location is as follows: /etc/httpd/httpd.conf
+       Using Finder or Spotlight to find this file may prove difficult as
+       by default it's private and owned by the root user.
+
+     Note: One way to open this is by using a Unix based text editor in
+     the Terminal, for example nano, and because the file is owned by
+     root we'll use the sudo command to open it (as root) so for example
+     type the following into the Terminal Application (after, it will
+     prompt for a password): sudo nano /etc/httpd/httpd.conf
+     Noteworthy nano commands: ^w (search), ^o (save), and ^x (exit)
+     where ^ represents the Ctrl key.
+    2. With a text editor, uncomment the lines (by removing the #) that
+       look similar to the following (these two lines are often not
+       together, locate them both in the file):
+
+# LoadModule php4_module libexec/httpd/libphp4.so
+
+# AddModule mod_php4.c
+
+       Notice the location/path. When building PHP in the future, the
+       above files should be replaced or commented out.
+    3. Be sure the desired extensions will parse as PHP (examples: .php
+       .html and .inc)
+       Due to the following statement already existing in httpd.conf (as
+       of Mac Panther), once PHP is enabled the .php files will
+       automatically parse as PHP.
+
+<IfModule mod_php4.c>
+    # If php is turned on, we respect .php and .phps files.
+    AddType application/x-httpd-php .php
+    AddType application/x-httpd-php-source .phps
+
+    # Since most users will want index.php to work we
+    # also automatically enable index.php
+    <IfModule mod_dir.c>
+        DirectoryIndex index.html index.php
+    </IfModule>
+</IfModule>
+
+    4. Be sure the DirectoryIndex loads the desired default index file
+       This is also set in httpd.conf. Typically index.php and index.html
+       are used. By default index.php is enabled because it's also in the
+       PHP check shown above. Adjust accordingly.
+    5. Set the php.ini location or use the default
+       A typical default location on Mac OS X is /usr/local/php/php.ini
+       and a call to phpinfo() will reveal this information. If a php.ini
+       is not used, PHP will use all default values. See also the related
+       FAQ on finding php.ini.
+    6. Locate or set the DocumentRoot
+       This is the root directory for all the web files. Files in this
+       directory are served from the web server so the PHP files will
+       parse as PHP before outputting them to the browser. A typical
+       default path is /Library/WebServer/Documents but this can be set to
+       anything in httpd.conf. Alternatively, the default DocumentRoot for
+       individual users is /Users/yourusername/Sites
+    7. Create a phpinfo() file
+       The phpinfo() function will display information about PHP. Consider
+       creating a file in the DocumentRoot with the following PHP code:
+
+<?php phpinfo(); ?>
+
+    8. Restart Apache, and load the PHP file created above
+       To restart, either execute sudo apachectl graceful in the shell or
+       stop/start the "Personal Web Server" option in the OS X System
+       Preferences. By default, loading local files in the browser will
+       have an URL like so: http://localhost/info.php Or using the
+       DocumentRoot in the user directory is another option and would end
+       up looking like: http://localhost/~yourusername/info.php
+
+   The CLI (or CGI in older versions) is appropriately named php and
+   likely exists as /usr/bin/php. Open up the terminal, read the command
+   line section of the PHP manual, and execute php -v to check the PHP
+   version of this PHP binary. A call to phpinfo() will also reveal this
+   information.
+     __________________________________________________________________
+
 Compiling for OS X Server
 
    Mac OS X Server install.
@@ -1238,7 +1292,8 @@ Introduction to PECL Installations
    These instructions assume /your/phpsrcdir/ is the path to the PHP
    source distribution, and that extname is the name of the PECL
    extension. Adjust accordingly. These instructions also assume a
-   familiarity with the pear command.
+   familiarity with the pear command. The information in the PEAR manual
+   for the pear command also applies to the pecl command.
 
    To be useful, a shared extension must be built, installed, and loaded.
    The methods described below provide you with various instructions on
@@ -1263,7 +1318,7 @@ Downloading PECL extensions
        requirements and other similar details.
      * pecl download extname
        PECL extensions that have releases listed on the PECL web site are
-       available for download and installation using the pear command.
+       available for download and installation using the pecl command.
        Specific revisions may also be specified.
      * CVS
        Most PECL extensions also reside in CVS. A web-based view may be
@@ -1276,9 +1331,9 @@ $ cvs -d:pserver:cvsread@cvs.php.net:/re
 
      * Windows downloads
        Windows users may find compiled PECL binaries by downloading the
-       Collection of PECL modules from the PHP Downloads page, and by
-       retrieving a PECL Snapshot. To compile PHP under Windows, read the
-       appropriate chapter.
+       Collection of PECL modules from the PHP Downloads page, or by
+       retrieving a PECL Snapshot or an extension DLL on PECL4WIN. To
+       compile PHP under Windows, read the appropriate chapter.
      __________________________________________________________________
 
 PECL for Windows users
@@ -1293,9 +1348,9 @@ PECL for Windows users
    After doing this, restart the web server.
      __________________________________________________________________
 
-Compiling shared PECL extensions with PEAR
+Compiling shared PECL extensions with the pecl command
 
-   PEAR makes it easy to create shared PHP extensions. Using the pear
+   PECL makes it easy to create shared PHP extensions. Using the pecl
    command, do the following:
 
    $ pecl install extname
@@ -1304,7 +1359,7 @@ Compiling shared PECL extensions with PE
    extname.so into your extension_dir. extname.so may then be loaded via
    php.ini
 
-   By default, the pear command will not install packages that are marked
+   By default, the pecl command will not install packages that are marked
    with the alpha or beta state. If no stable packages are available, you
    may install a beta package using the following command:
 
@@ -1317,9 +1372,9 @@ Compiling shared PECL extensions with PE
 
 Compiling shared PECL extensions with phpize
 
-   Sometimes, using the pear installer is not an option. This could be
+   Sometimes, using the pecl installer is not an option. This could be
    because you're behind a firewall, or it could be because the extension
-   you want to install is not available as a PEAR compatible package, such
+   you want to install is not available as a PECL compatible package, such
    as unreleased extensions from CVS. If you need to build such an
    extension, you can use the lower-level build tools to perform the build
    manually.
@@ -1355,7 +1410,7 @@ Compiling PECL extensions statically int
    regenerate its configure script.
 
 $ cd /your/phpsrcdir/ext
-$ pear download extname
+$ pecl download extname
 $ gzip -d < extname.tgz | tar -xvf -
 $ mv extname-x.x.x extname
 
@@ -1441,9 +1496,9 @@ The configuration file
      * The PHPRC environment variable. Before PHP 5.2.0 this was checked
        after the registry key mentioned below.
      * As of PHP 5.2.0, the following registry locations are searched in
-       order: HKEY_LOCAL_MACHINE\SOFTWARE\PHP\IniFilePath\x.y.z,
-       HKEY_LOCAL_MACHINE\SOFTWARE\PHP\IniFilePath\x.y and
-       HKEY_LOCAL_MACHINE\SOFTWARE\PHP\IniFilePath\x, where x, y and z
+       order: HKEY_LOCAL_MACHINE\SOFTWARE\PHP\x.y.z\IniFilePath,
+       HKEY_LOCAL_MACHINE\SOFTWARE\PHP\x.y\IniFilePath and
+       HKEY_LOCAL_MACHINE\SOFTWARE\PHP\x\IniFilePath, where x, y and z
        mean the PHP major, minor and release versions.
      * HKEY_LOCAL_MACHINE\SOFTWARE\PHP\IniFilePath (Windows Registry
        location)
Index: Makefile.global
===================================================================
RCS file: /repository/php-src/Makefile.global,v
retrieving revision 1.57.2.5.2.1
retrieving revision 1.57.2.5.2.2
diff -u -p -d -r1.57.2.5.2.1 -r1.57.2.5.2.2
--- Makefile.global	26 Feb 2007 14:51:44 -0000	1.57.2.5.2.1
+++ Makefile.global	11 Apr 2007 16:03:06 -0000	1.57.2.5.2.2
@@ -9,7 +9,6 @@ all: $(all_targets) 
 	@echo
 	@echo "Build complete."
 	@echo "Don't forget to run 'make test'."
-	@echo "(It is safe to ignore warnings about tempnam and tmpnam)."
 	@echo
 	
 build-modules: $(PHP_MODULES)
Index: NEWS
===================================================================
RCS file: /repository/php-src/NEWS,v
retrieving revision 1.2027.2.547.2.636
retrieving revision 1.2027.2.547.2.655
diff -u -p -d -r1.2027.2.547.2.636 -r1.2027.2.547.2.655
--- NEWS	10 Apr 2007 22:31:15 -0000	1.2027.2.547.2.636
+++ NEWS	19 Apr 2007 23:21:21 -0000	1.2027.2.547.2.655
@@ -1,20 +1,53 @@
 PHP                                                                        NEWS
 |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
+?? Apr 2007, PHP 5.2.2RC2
+- Upgraded SQLite 3 to version 3.3.16 (Ilia)
+- Fixed bug #41121 (range() overflow handling for large numbers on 32bit
+  machines). (Ilia)
+- Fixed bug #41109 (recursiveiterator.inc says "implements" Iterator instead of
+  "extends"). (Marcus)
+- Fixed bug #41093 (magic_quotes_gpc ignores first arrays keys). (Arpad, Ilia)
+- Fixed bug #41083 (mysql_ping() requires MYSQL_OPT_RECONNECT to be set since 
+  MySQL 5.0.13). (xiaojb at gmail dot com, Tony)
+- Fixed bug #41075 (memleak when creating default object caused exception). 
+  (Dmitry)
+- Fixed bug #41067 (json_encode() problem with UTF-16 input). (jp at df5ea
+  dot net. Ilia)
+- Fixed bug #41063 (chdir doesn't like root paths). (Dmitry)
+- Fixed bug #41061 ("visibility error" in ReflectionFunction::export()).
+  (Johannes)
+- Fixed bug #41034 (json_encode() ignores null byte started keys in arrays).
+  (Ilia)
+- Fixed bug #40935 (pdo_mysql does not raise an exception on empty
+  fetchAll()). (Ilia)
+- Fixed bug #40861 (strtotime() doesn't handle double negative relative time
+  units correctly). (Derick)
+- Fixed bug #40290 (strtotime() returns unexpected result with particular
+  timezone offset). (Derick)
+- Fixed bug #39965 (Latitude and longitude are backwards in date_sun_info()).
+  (Derick)
+- Fixed bug #39416 (Milliseconds in date()). (Derick)
+- Updated timezone database to version 2007.5. (Derick)
+
+
 10 Apr 2007, PHP 5.2.2RC1
 - Improved bundled GD
   . Sync to 2.0.35
+  . Added imagegrabwindow and imagegrabscreen, capture a screen or a 
+	window using its handle (Pierre)
   . colors allocated henceforth from the resulting image overwrite the palette 
 	  colors (Rob Leslie)
   . Improved thread safety of the gif support (Roman Nemecek, Nuno, Pierre)
 	. Use the dimension of the GIF frame to create the destination image (Pierre)
-	. Load only once the local color map (Pierre)
+	. Load only once the local color map from a GIF data (Pierre)
   . Improved thread safety of the freetype cache (Scott MacVicar, Nuno, Pierre)
+	. imagearc huge CPU usage with large angles, libgd bug #74 (Pierre)
+
 - Upgraded libraries bundled in the Windows distribution. (Edin)
   . c-client (imap) to version 2006e
   . libpq (PostgreSQL) to version 8.2.3
   . libmysql (MySQL) to version 5.0.37
   . openssl to version 0.9.8e
-- Upgraded SQLite 3 to version 3.3.15 (Ilia)
 - Upgraded PCRE to version 7.0 (Nuno)
 - Updated timezone database to version 2007.3. (Derick)
 - Improved FastCGI SAPI to support external pipe and socket servers on win32.
Index: configure.in
===================================================================
RCS file: /repository/php-src/configure.in,v
retrieving revision 1.579.2.52.2.45
retrieving revision 1.579.2.52.2.46
diff -u -p -d -r1.579.2.52.2.45 -r1.579.2.52.2.46
--- configure.in	10 Apr 2007 22:31:15 -0000	1.579.2.52.2.45
+++ configure.in	10 Apr 2007 22:38:47 -0000	1.579.2.52.2.46
@@ -44,7 +44,7 @@ AC_CONFIG_HEADER(main/php_config.h)
 MAJOR_VERSION=5
 MINOR_VERSION=2
 RELEASE_VERSION=2
-EXTRA_VERSION="RC1"
+EXTRA_VERSION="RC2-dev"
 PHP_VERSION="$MAJOR_VERSION.$MINOR_VERSION.$RELEASE_VERSION$EXTRA_VERSION"
 PHP_VERSION_ID=`expr [$]MAJOR_VERSION \* 10000 + [$]MINOR_VERSION \* 100 + [$]RELEASE_VERSION`
 
Index: php.ini-dist
===================================================================
RCS file: /repository/php-src/php.ini-dist,v
retrieving revision 1.231.2.10.2.15
retrieving revision 1.231.2.10.2.17
diff -u -p -d -r1.231.2.10.2.15 -r1.231.2.10.2.17
--- php.ini-dist	21 Dec 2006 13:05:27 -0000	1.231.2.10.2.15
+++ php.ini-dist	12 Apr 2007 12:31:39 -0000	1.231.2.10.2.17
@@ -660,9 +660,15 @@ default_socket_timeout = 60
 ;xmlrpc_errors = 0
 
 [Pcre]
-;pcre.recursion_limit=100000
+;PCRE library backtracking limit.
 ;pcre.backtrack_limit=100000
 
+;PCRE library recursion limit. 
+;Please note that if you set this value to a high number you may consume all 
+;the available process stack and eventually crash PHP (due to reaching the 
+;stack size limit imposed by the Operating System).
+;pcre.recursion_limit=100000
+
 [Syslog]
 ; Whether or not to define the various syslog variables (e.g. $LOG_PID,
 ; $LOG_CRON, etc.).  Turning it off is a good idea performance-wise.  In
Index: php.ini-recommended
===================================================================
RCS file: /repository/php-src/php.ini-recommended,v
retrieving revision 1.179.2.11.2.15
retrieving revision 1.179.2.11.2.17
diff -u -p -d -r1.179.2.11.2.15 -r1.179.2.11.2.17
--- php.ini-recommended	21 Dec 2006 13:05:27 -0000	1.179.2.11.2.15
+++ php.ini-recommended	12 Apr 2007 12:31:39 -0000	1.179.2.11.2.17
@@ -705,9 +705,15 @@ default_socket_timeout = 60
 ;xmlrpc_errors = 0
 
 [Pcre]
-;pcre.recursion_limit=100000
+;PCRE library backtracking limit.
 ;pcre.backtrack_limit=100000
 
+;PCRE library recursion limit. 
+;Please note that if you set this value to a high number you may consume all 
+;the available process stack and eventually crash PHP (due to reaching the 
+;stack size limit imposed by the Operating System).
+;pcre.recursion_limit=100000
+
 [Syslog]
 ; Whether or not to define the various syslog variables (e.g. $LOG_PID,
 ; $LOG_CRON, etc.).  Turning it off is a good idea performance-wise.  In
Index: run-tests.php
===================================================================
RCS file: /repository/php-src/run-tests.php,v
retrieving revision 1.226.2.37.2.24
retrieving revision 1.226.2.37.2.25
diff -u -p -d -r1.226.2.37.2.24 -r1.226.2.37.2.25
--- run-tests.php	27 Mar 2007 20:28:06 -0000	1.226.2.37.2.24
+++ run-tests.php	17 Apr 2007 19:49:26 -0000	1.226.2.37.2.25
@@ -534,7 +534,7 @@ $exts_skipped = 0;
 $ignored_by_ext = 0;
 sort($exts_to_test);
 $test_dirs = array();
-$optionals = array('tests', 'ext', 'Zend', 'ZendEngine2', 'sapi/cli');
+$optionals = array('tests', 'ext', 'Zend', 'ZendEngine2', 'sapi/cli', 'sapi/cgi');
 foreach($optionals as $dir) {
 	if (@filetype($dir) == 'dir') {
 		$test_dirs[] = $dir;
Index: TSRM/TSRM.h
===================================================================
RCS file: /repository/TSRM/TSRM.h,v
retrieving revision 1.50.2.2.2.2
retrieving revision 1.50.2.2.2.4
diff -u -p -d -r1.50.2.2.2.2 -r1.50.2.2.2.4
--- TSRM/TSRM.h	15 Feb 2007 19:11:48 -0000	1.50.2.2.2.2
+++ TSRM/TSRM.h	17 Apr 2007 06:26:32 -0000	1.50.2.2.2.4
@@ -30,6 +30,14 @@
 #	define TSRM_API
 #endif
 
+#ifdef _WIN64
+typedef __int64 tsrm_intptr_t;
+typedef unsigned __int64 tsrm_uintptr_t;
+#else
+typedef long tsrm_intptr_t;
+typedef unsigned long tsrm_uintptr_t;
+#endif
+
 /* Only compile multi-threading functions if we're in ZTS mode */
 #ifdef ZTS
 
Index: TSRM/tsrm_virtual_cwd.c
===================================================================
RCS file: /repository/TSRM/tsrm_virtual_cwd.c,v
retrieving revision 1.74.2.9.2.25
retrieving revision 1.74.2.9.2.26
diff -u -p -d -r1.74.2.9.2.25 -r1.74.2.9.2.26
--- TSRM/tsrm_virtual_cwd.c	3 Apr 2007 20:20:56 -0000	1.74.2.9.2.25
+++ TSRM/tsrm_virtual_cwd.c	12 Apr 2007 15:28:58 -0000	1.74.2.9.2.26
@@ -568,6 +568,7 @@ no_realpath:
 		CWD_STATE_COPY(&old_state, state);
 
 #ifdef TSRM_WIN32
+		ret = 0;
 		is_unc = 0;
 		if (path_length >= 2 && path[1] == ':') {			
 			state->cwd = (char *) realloc(state->cwd, 2 + 1);
Index: TSRM/tsrm_win32.c
===================================================================
RCS file: /repository/TSRM/tsrm_win32.c,v
retrieving revision 1.27.2.1.2.6
retrieving revision 1.27.2.1.2.7
diff -u -p -d -r1.27.2.1.2.6 -r1.27.2.1.2.7
--- TSRM/tsrm_win32.c	2 Apr 2007 20:42:44 -0000	1.27.2.1.2.6
+++ TSRM/tsrm_win32.c	16 Apr 2007 08:09:54 -0000	1.27.2.1.2.7
@@ -228,10 +228,10 @@ TSRM_API FILE *popen_ex(const char *comm
 	proc = process_get(NULL TSRMLS_CC);
 
 	if (read) {
-		fno = _open_osfhandle((long)in, _O_RDONLY | mode);
+		fno = _open_osfhandle((tsrm_intptr_t)in, _O_RDONLY | mode);
 		CloseHandle(out);
 	} else {
-		fno = _open_osfhandle((long)out, _O_WRONLY | mode);
+		fno = _open_osfhandle((tsrm_intptr_t)out, _O_WRONLY | mode);
 		CloseHandle(in);
 	}
 
Index: Zend/zend_API.c
===================================================================
RCS file: /repository/ZendEngine2/zend_API.c,v
retrieving revision 1.296.2.27.2.27
retrieving revision 1.296.2.27.2.28
diff -u -p -d -r1.296.2.27.2.27 -r1.296.2.27.2.28
--- Zend/zend_API.c	9 Apr 2007 07:30:09 -0000	1.296.2.27.2.27
+++ Zend/zend_API.c	16 Apr 2007 08:09:54 -0000	1.296.2.27.2.28
@@ -44,7 +44,7 @@ ZEND_API int zend_get_parameters(int ht,
 	TSRMLS_FETCH();
 
 	p = EG(argument_stack).top_element-2;
-	arg_count = (ulong) *p;
+	arg_count = (int)(zend_uintptr_t) *p;
 
 	if (param_count>arg_count) {
 		return FAILURE;
@@ -82,7 +82,7 @@ ZEND_API int _zend_get_parameters_array(
 	zval *param_ptr;
 
 	p = EG(argument_stack).top_element-2;
-	arg_count = (ulong) *p;
+	arg_count = (int)(zend_uintptr_t) *p;
 
 	if (param_count>arg_count) {
 		return FAILURE;
@@ -122,7 +122,7 @@ ZEND_API int zend_get_parameters_ex(int 
 	TSRMLS_FETCH();
 
 	p = EG(argument_stack).top_element-2;
-	arg_count = (ulong) *p;
+	arg_count = (int)(zend_uintptr_t) *p;
 
 	if (param_count>arg_count) {
 		return FAILURE;
@@ -145,7 +145,7 @@ ZEND_API int _zend_get_parameters_array_
 	int arg_count;
 
 	p = EG(argument_stack).top_element-2;
-	arg_count = (ulong) *p;
+	arg_count = (int)(zend_uintptr_t) *p;
 
 	if (param_count>arg_count) {
 		return FAILURE;
@@ -187,7 +187,7 @@ ZEND_API int zend_copy_parameters_array(
 	int arg_count;
 
 	p = EG(argument_stack).top_element-2;
-	arg_count = (ulong) *p;
+	arg_count = (int)(zend_uintptr_t) *p;
 
 	if (param_count>arg_count) {
 		return FAILURE;
@@ -698,7 +698,7 @@ static int zend_parse_va_args(int num_ar
 	}
 
 	p = EG(argument_stack).top_element-2;
-	arg_count = (ulong) *p;
+	arg_count = (int)(zend_uintptr_t) *p;
 
 	if (num_args > arg_count) {
 		zend_error(E_WARNING, "%s(): could not obtain parameters for parsing",
@@ -878,7 +878,7 @@ ZEND_API void zend_update_class_constant
 				zend_update_class_constants(class_type->parent TSRMLS_CC);
 			}
 #if ZTS
-			ALLOC_HASHTABLE(CG(static_members)[(long)(class_type->static_members)]);
+			ALLOC_HASHTABLE(CG(static_members)[(zend_intptr_t)(class_type->static_members)]);
 #else
 			ALLOC_HASHTABLE(class_type->static_members);
 #endif
Index: Zend/zend_API.h
===================================================================
RCS file: /repository/ZendEngine2/zend_API.h,v
retrieving revision 1.207.2.8.2.7
retrieving revision 1.207.2.8.2.8
diff -u -p -d -r1.207.2.8.2.7 -r1.207.2.8.2.8
--- Zend/zend_API.h	1 Jan 2007 09:35:45 -0000	1.207.2.8.2.7
+++ Zend/zend_API.h	16 Apr 2007 08:09:54 -0000	1.207.2.8.2.8
@@ -160,7 +160,7 @@ typedef struct _zend_function_entry {
 	INIT_OVERLOADED_CLASS_ENTRY_EX(class_container, class_name, functions, handle_fcall, handle_propget, handle_propset, NULL, NULL)
 
 #ifdef ZTS
-#	define CE_STATIC_MEMBERS(ce) (((ce)->type==ZEND_USER_CLASS)?(ce)->static_members:CG(static_members)[(long)(ce)->static_members])
+#	define CE_STATIC_MEMBERS(ce) (((ce)->type==ZEND_USER_CLASS)?(ce)->static_members:CG(static_members)[(zend_intptr_t)(ce)->static_members])
 #else
 #	define CE_STATIC_MEMBERS(ce) ((ce)->static_members)
 #endif
Index: Zend/zend_alloc.c
===================================================================
RCS file: /repository/ZendEngine2/zend_alloc.c,v
retrieving revision 1.144.2.3.2.40
retrieving revision 1.144.2.3.2.41
diff -u -p -d -r1.144.2.3.2.40 -r1.144.2.3.2.41
--- Zend/zend_alloc.c	9 Apr 2007 15:30:20 -0000	1.144.2.3.2.40
+++ Zend/zend_alloc.c	16 Apr 2007 08:09:54 -0000	1.144.2.3.2.41
@@ -50,6 +50,16 @@
 # define ZEND_MM_COOKIES ZEND_DEBUG
 #endif
 
+#ifdef _WIN64
+# define PTR_FMT "0x%0.16I64x"
+/*
+#elif sizeof(long) == 8
+# define PTR_FMT "0x%0.16lx"
+*/
+#else
+# define PTR_FMT "0x%0.8lx"
+#endif
+
 #if ZEND_DEBUG
 void zend_debug_alloc_output(char *format, ...)
 {
@@ -1180,7 +1190,7 @@ static void zend_mm_check_leaks(zend_mm_
 				repeated = zend_mm_find_leaks(segment, p);
 				total += 1 + repeated;
 				if (repeated) {
-					zend_message_dispatcher(ZMSG_MEMORY_LEAK_REPEATED, (void *)repeated);
+					zend_message_dispatcher(ZMSG_MEMORY_LEAK_REPEATED, (void *)(zend_uintptr_t)repeated);
 				}
 #if ZEND_MM_CACHE
 			} else if (p->magic == MEM_BLOCK_CACHED) {
@@ -1221,7 +1231,7 @@ static int zend_mm_check_ptr(zend_mm_hea
 	if (!silent) {
 		zend_message_dispatcher(ZMSG_LOG_SCRIPT_NAME, NULL);
 		zend_debug_alloc_output("---------------------------------------\n");
-		zend_debug_alloc_output("%s(%d) : Block 0x%0.8lX status:\n" ZEND_FILE_LINE_RELAY_CC, (long) ptr);
+		zend_debug_alloc_output("%s(%d) : Block "PTR_FMT" status:\n" ZEND_FILE_LINE_RELAY_CC, ptr);
 		if (__zend_orig_filename) {
 			zend_debug_alloc_output("%s(%d) : Actual location (location was relayed)\n" ZEND_FILE_LINE_ORIG_RELAY_CC);
 		}
@@ -1253,7 +1263,7 @@ static int zend_mm_check_ptr(zend_mm_hea
 
 	if (p->info._size != ZEND_MM_NEXT_BLOCK(p)->info._prev) {
 		if (!silent) {
-			zend_debug_alloc_output("Invalid pointer: ((size=0x%0.8X) != (next.prev=0x%0.8X))\n", p->info._size, ZEND_MM_NEXT_BLOCK(p)->info._prev);
+			zend_debug_alloc_output("Invalid pointer: ((size="PTR_FMT") != (next.prev="PTR_FMT"))\n", p->info._size, ZEND_MM_NEXT_BLOCK(p)->info._prev);
 			had_problems = 1;
 		} else {
 			return zend_mm_check_ptr(heap, ptr, 0 ZEND_FILE_LINE_RELAY_CC ZEND_FILE_LINE_ORIG_RELAY_CC);
@@ -1262,7 +1272,7 @@ static int zend_mm_check_ptr(zend_mm_hea
 	if (p->info._prev != ZEND_MM_GUARD_BLOCK &&
 	    ZEND_MM_PREV_BLOCK(p)->info._size != p->info._prev) {
 		if (!silent) {
-			zend_debug_alloc_output("Invalid pointer: ((prev=0x%0.8X) != (prev.size=0x%0.8X))\n", p->info._prev, ZEND_MM_PREV_BLOCK(p)->info._size);
+			zend_debug_alloc_output("Invalid pointer: ((prev="PTR_FMT") != (prev.size="PTR_FMT"))\n", p->info._prev, ZEND_MM_PREV_BLOCK(p)->info._size);
 			had_problems = 1;
 		} else {
 			return zend_mm_check_ptr(heap, ptr, 0 ZEND_FILE_LINE_RELAY_CC ZEND_FILE_LINE_ORIG_RELAY_CC);
Index: Zend/zend_builtin_functions.c
===================================================================
RCS file: /repository/ZendEngine2/zend_builtin_functions.c,v
retrieving revision 1.277.2.12.2.16
retrieving revision 1.277.2.12.2.17
diff -u -p -d -r1.277.2.12.2.16 -r1.277.2.12.2.17
--- Zend/zend_builtin_functions.c	24 Feb 2007 02:17:23 -0000	1.277.2.12.2.16
+++ Zend/zend_builtin_functions.c	16 Apr 2007 08:09:54 -0000	1.277.2.12.2.17
@@ -172,14 +172,14 @@ ZEND_FUNCTION(func_num_args)
 	int arg_count;
 
 	p = EG(argument_stack).top_element-1-1;
-	arg_count = (ulong) *p;		/* this is the amount of arguments passed to func_num_args(); */
+	arg_count = (int)(zend_uintptr_t) *p;		/* this is the amount of arguments passed to func_num_args(); */
 	p -= 1+arg_count;
 	if (*p) {
 		zend_error(E_ERROR, "func_num_args(): Can't be used as a function parameter");
 	}
 	--p;
 	if (p>=EG(argument_stack).elements) {
-		RETURN_LONG((ulong) *p);
+		RETURN_LONG((long)(zend_uintptr_t) *p);
 	} else {
 		zend_error(E_WARNING, "func_num_args():  Called from the global scope - no function context");
 		RETURN_LONG(-1);
@@ -210,7 +210,7 @@ ZEND_FUNCTION(func_get_arg)
 	}
 
 	p = EG(argument_stack).top_element-1-1;
-	arg_count = (ulong) *p;		/* this is the amount of arguments passed to func_get_arg(); */
+	arg_count = (int)(zend_uintptr_t) *p;		/* this is the amount of arguments passed to func_get_arg(); */
 	p -= 1+arg_count;
 	if (*p) {
 		zend_error(E_ERROR, "func_get_arg(): Can't be used as a function parameter");
@@ -220,7 +220,7 @@ ZEND_FUNCTION(func_get_arg)
 		zend_error(E_WARNING, "func_get_arg():  Called from the global scope - no function context");
 		RETURN_FALSE;
 	}
-	arg_count = (ulong) *p;
+	arg_count = (int)(zend_uintptr_t) *p;
 
 	if (requested_offset>=arg_count) {
 		zend_error(E_WARNING, "func_get_arg():  Argument %ld not passed to function", requested_offset);
@@ -244,7 +244,7 @@ ZEND_FUNCTION(func_get_args)
 	int i;
 
 	p = EG(argument_stack).top_element-1-1;
-	arg_count = (ulong) *p;		/* this is the amount of arguments passed to func_get_args(); */
+	arg_count = (int)(zend_uintptr_t) *p;		/* this is the amount of arguments passed to func_get_args(); */
 	p -= 1+arg_count;
 	if (*p) {
 		zend_error(E_ERROR, "func_get_args(): Can't be used as a function parameter");
@@ -255,7 +255,7 @@ ZEND_FUNCTION(func_get_args)
 		zend_error(E_WARNING, "func_get_args():  Called from the global scope - no function context");
 		RETURN_FALSE;
 	}
-	arg_count = (ulong) *p;
+	arg_count = (int)(zend_uintptr_t) *p;
 
 
 	array_init(return_value);
@@ -1655,7 +1655,7 @@ static zval *debug_backtrace_get_args(vo
 {
 	void **p = *curpos - 2;
 	zval *arg_array, **arg;
-	int arg_count = (ulong) *p;
+	int arg_count = (int)(zend_uintptr_t) *p;
 
 	*curpos -= (arg_count+2);
 
Index: Zend/zend_compile.c
===================================================================
RCS file: /repository/ZendEngine2/zend_compile.c,v
retrieving revision 1.647.2.27.2.34
retrieving revision 1.647.2.27.2.35
diff -u -p -d -r1.647.2.27.2.34 -r1.647.2.27.2.35
--- Zend/zend_compile.c	4 Apr 2007 00:42:42 -0000	1.647.2.27.2.34
+++ Zend/zend_compile.c	16 Apr 2007 08:09:54 -0000	1.647.2.27.2.35
@@ -4189,7 +4189,7 @@ ZEND_API void zend_initialize_class_data
 			CG(static_members) = realloc(CG(static_members), (n+1)*sizeof(HashTable*));
 			CG(static_members)[n] = NULL;
 		}
-		ce->static_members = (HashTable*)n;
+		ce->static_members = (HashTable*)(zend_intptr_t)n;
 #else
 		ce->static_members = NULL;
 #endif
Index: Zend/zend_execute.c
===================================================================
RCS file: /repository/ZendEngine2/zend_execute.c,v
retrieving revision 1.716.2.12.2.17
retrieving revision 1.716.2.12.2.19
diff -u -p -d -r1.716.2.12.2.17 -r1.716.2.12.2.19
--- Zend/zend_execute.c	10 Jan 2007 15:58:07 -0000	1.716.2.12.2.17
+++ Zend/zend_execute.c	16 Apr 2007 08:09:54 -0000	1.716.2.12.2.19
@@ -104,15 +104,15 @@ static inline void zend_pzval_unlock_fre
 
 #define FREE_OP(should_free) \
 	if (should_free.var) { \
-		if ((long)should_free.var & 1L) { \
-			zval_dtor((zval*)((long)should_free.var & ~1L)); \
+		if ((zend_uintptr_t)should_free.var & 1L) { \
+			zval_dtor((zval*)((zend_uintptr_t)should_free.var & ~1L)); \
 		} else { \
 			zval_ptr_dtor(&should_free.var); \
 		} \
 	}
 
 #define FREE_OP_IF_VAR(should_free) \
-	if (should_free.var != NULL && (((long)should_free.var & 1L) == 0)) { \
+	if (should_free.var != NULL && (((zend_uintptr_t)should_free.var & 1L) == 0)) { \
 		zval_ptr_dtor(&should_free.var); \
 	}
 
@@ -121,9 +121,9 @@ static inline void zend_pzval_unlock_fre
 		zval_ptr_dtor(&should_free.var); \
 	}
 
-#define TMP_FREE(z) (zval*)(((long)(z)) | 1L)
+#define TMP_FREE(z) (zval*)(((zend_uintptr_t)(z)) | 1L)
 
-#define IS_TMP_FREE(should_free) ((long)should_free.var & 1L)
+#define IS_TMP_FREE(should_free) ((zend_uintptr_t)should_free.var & 1L)
 
 #define INIT_PZVAL_COPY(z,v) \
 	(z)->value = (v)->value; \
@@ -611,7 +611,7 @@ static inline void zend_assign_to_object
 		Z_OBJ_HT_P(object)->write_dimension(object, property_name, value TSRMLS_CC);
 	}
 
-	if (result && !RETURN_VALUE_UNUSED(result)) {
+	if (result && !RETURN_VALUE_UNUSED(result) && !EG(exception)) {
 		T(result->u.var).var.ptr = value;
 		T(result->u.var).var.ptr_ptr = &T(result->u.var).var.ptr; /* this is so that we could use it in FETCH_DIM_R, etc. - see bug #27876 */
 		PZVAL_LOCK(value);
Index: Zend/zend_execute.h
===================================================================
RCS file: /repository/ZendEngine2/zend_execute.h,v
retrieving revision 1.84.2.4.2.6
retrieving revision 1.84.2.4.2.7
diff -u -p -d -r1.84.2.4.2.6 -r1.84.2.4.2.7
--- Zend/zend_execute.h	10 Jan 2007 15:58:07 -0000	1.84.2.4.2.6
+++ Zend/zend_execute.h	16 Apr 2007 08:09:54 -0000	1.84.2.4.2.7
@@ -146,7 +146,7 @@ ZEND_API int zval_update_constant_ex(zva
 static inline void zend_ptr_stack_clear_multiple(TSRMLS_D)
 {
 	void **p = EG(argument_stack).top_element-2;
-	int delete_count = (ulong) *p;
+	int delete_count = (int)(zend_uintptr_t) *p;
 
 	EG(argument_stack).top -= (delete_count+2);
 	while (--delete_count>=0) {
@@ -160,7 +160,7 @@ static inline void zend_ptr_stack_clear_
 static inline int zend_ptr_stack_get_arg(int requested_arg, void **data TSRMLS_DC)
 {
 	void **p = EG(argument_stack).top_element-2;
-	int arg_count = (ulong) *p;
+	int arg_count = (int)(zend_uintptr_t) *p;
 
 	if (requested_arg>arg_count) {
 		return FAILURE;
Index: Zend/zend_execute_API.c
===================================================================
RCS file: /repository/ZendEngine2/zend_execute_API.c,v
retrieving revision 1.331.2.20.2.17
retrieving revision 1.331.2.20.2.18
diff -u -p -d -r1.331.2.20.2.17 -r1.331.2.20.2.18
--- Zend/zend_execute_API.c	15 Mar 2007 16:44:12 -0000	1.331.2.20.2.17
+++ Zend/zend_execute_API.c	16 Apr 2007 08:09:54 -0000	1.331.2.20.2.18
@@ -451,7 +451,7 @@ ZEND_API int zend_is_true(zval *op)
 ZEND_API int zval_update_constant_ex(zval **pp, void *arg, zend_class_entry *scope TSRMLS_DC)
 {
 	zval *p = *pp;
-	zend_bool inline_change = (zend_bool) (unsigned long) arg;
+	zend_bool inline_change = (zend_bool) (zend_uintptr_t) arg;
 	zval const_value;
 
 	if (Z_TYPE_P(p) == IS_CONSTANT) {
@@ -867,7 +867,7 @@ int zend_call_function(zend_fcall_info *
 				if (fci->no_separation) {
 					if(i) {
 						/* hack to clean up the stack */
-						zend_ptr_stack_n_push(&EG(argument_stack), 2, (void *) (long) i, NULL);
+						zend_ptr_stack_n_push(&EG(argument_stack), 2, (void *) (zend_uintptr_t) i, NULL);
 						zend_ptr_stack_clear_multiple(TSRMLS_C);
 					}
 
@@ -908,7 +908,7 @@ int zend_call_function(zend_fcall_info *
 		fci->param_count = 2;
 	}
 
-	zend_ptr_stack_2_push(&EG(argument_stack), (void *) (long) fci->param_count, NULL);
+	zend_ptr_stack_2_push(&EG(argument_stack), (void *) (zend_uintptr_t) fci->param_count, NULL);
 
 	original_function_state_ptr = EG(function_state_ptr);
 	EG(function_state_ptr) = &EX(function_state);
Index: Zend/zend_ini.c
===================================================================
RCS file: /repository/ZendEngine2/zend_ini.c,v
retrieving revision 1.39.2.2.2.7
retrieving revision 1.39.2.2.2.8
diff -u -p -d -r1.39.2.2.2.7 -r1.39.2.2.2.8
--- Zend/zend_ini.c	6 Mar 2007 21:08:05 -0000	1.39.2.2.2.7
+++ Zend/zend_ini.c	16 Apr 2007 08:09:54 -0000	1.39.2.2.2.8
@@ -225,7 +225,7 @@ static int zend_ini_refresh_cache(zend_i
 
 ZEND_API void zend_ini_refresh_caches(int stage TSRMLS_DC)
 {
-	zend_hash_apply_with_argument(EG(ini_directives), (apply_func_arg_t) zend_ini_refresh_cache, (void *)(long) stage TSRMLS_CC);
+	zend_hash_apply_with_argument(EG(ini_directives), (apply_func_arg_t) zend_ini_refresh_cache, (void *)(zend_intptr_t) stage TSRMLS_CC);
 }
 #endif
 
Index: Zend/zend_opcode.c
===================================================================
RCS file: /repository/ZendEngine2/zend_opcode.c,v
retrieving revision 1.110.2.6.2.2
retrieving revision 1.110.2.6.2.3
diff -u -p -d -r1.110.2.6.2.2 -r1.110.2.6.2.3
--- Zend/zend_opcode.c	15 Feb 2007 10:38:28 -0000	1.110.2.6.2.2
+++ Zend/zend_opcode.c	16 Apr 2007 08:09:55 -0000	1.110.2.6.2.3
@@ -160,7 +160,7 @@ ZEND_API int zend_cleanup_class_data(zen
 		zend_hash_destroy(CE_STATIC_MEMBERS(*pce));
 		FREE_HASHTABLE(CE_STATIC_MEMBERS(*pce));
 #ifdef ZTS
-		CG(static_members)[(long)((*pce)->static_members)] = NULL;
+		CG(static_members)[(zend_intptr_t)((*pce)->static_members)] = NULL;
 #else
 		(*pce)->static_members = NULL;
 #endif
Index: Zend/zend_strtod.c
===================================================================
RCS file: /repository/ZendEngine2/zend_strtod.c,v
retrieving revision 1.17.2.2.2.7
retrieving revision 1.17.2.2.2.8
diff -u -p -d -r1.17.2.2.2.7 -r1.17.2.2.2.8
--- Zend/zend_strtod.c	6 Mar 2007 03:15:41 -0000	1.17.2.2.2.7
+++ Zend/zend_strtod.c	19 Apr 2007 09:30:49 -0000	1.17.2.2.2.8
@@ -1707,7 +1707,14 @@ ZEND_API char * zend_dtoa(double _d, int
 					if (value(d) > 0.5 + value(eps))
 						goto bump_up;
 					else if (value(d) < 0.5 - value(eps)) {
-						while(*--s == '0');
+						/* cut ALL traling zeros only if the number of chars is greater than precision 
+						 * otherwise cut only extra zeros
+						 */
+						if (k < ndigits) {
+							while(*--s == '0' && (s - s0) > k);
+						} else {
+							while(*--s == '0');
+						}
 						s++;
 						goto ret1;
 					}
Index: Zend/zend_types.h
===================================================================
RCS file: /repository/ZendEngine2/zend_types.h,v
retrieving revision 1.6.2.2.2.1
retrieving revision 1.6.2.2.2.3
diff -u -p -d -r1.6.2.2.2.1 -r1.6.2.2.2.3
--- Zend/zend_types.h	1 Jan 2007 09:35:47 -0000	1.6.2.2.2.1
+++ Zend/zend_types.h	17 Apr 2007 06:26:31 -0000	1.6.2.2.2.3
@@ -28,6 +28,14 @@ typedef unsigned int zend_uint;
 typedef unsigned long zend_ulong;
 typedef unsigned short zend_ushort;
 
+#ifdef _WIN64
+typedef __int64 zend_intptr_t;
+typedef unsigned __int64 zend_uintptr_t;
+#else
+typedef long zend_intptr_t;
+typedef unsigned long zend_uintptr_t;
+#endif
+
 typedef unsigned int zend_object_handle;
 typedef struct _zend_object_handlers zend_object_handlers;
 
Index: Zend/zend_vm_def.h
===================================================================
RCS file: /repository/ZendEngine2/zend_vm_def.h,v
retrieving revision 1.59.2.29.2.42
retrieving revision 1.59.2.29.2.43
diff -u -p -d -r1.59.2.29.2.42 -r1.59.2.29.2.43
--- Zend/zend_vm_def.h	5 Apr 2007 23:48:42 -0000	1.59.2.29.2.42
+++ Zend/zend_vm_def.h	16 Apr 2007 08:09:55 -0000	1.59.2.29.2.43
@@ -1857,7 +1857,7 @@ ZEND_VM_HELPER(zend_do_fcall_common_help
 		}
 	}
 
-	zend_ptr_stack_2_push(&EG(argument_stack), (void *) opline->extended_value, NULL);
+	zend_ptr_stack_2_push(&EG(argument_stack), (void *)(zend_uintptr_t)opline->extended_value, NULL);
 
 	EX_T(opline->result.u.var).var.ptr_ptr = &EX_T(opline->result.u.var).var.ptr;
 
@@ -1900,7 +1900,7 @@ ZEND_VM_HELPER(zend_do_fcall_common_help
 			ulong arg_count;
 
 			p = (zval **) EG(argument_stack).top_element-2;
-			arg_count = (ulong) *p;
+			arg_count = (ulong)(zend_uintptr_t) *p;
 
 			while (arg_count>0) {
 				zend_verify_arg_type(EX(function_state).function, ++i, *(p-arg_count) TSRMLS_CC);
Index: Zend/zend_vm_execute.h
===================================================================
RCS file: /repository/ZendEngine2/zend_vm_execute.h,v
retrieving revision 1.62.2.30.2.42
retrieving revision 1.62.2.30.2.43
diff -u -p -d -r1.62.2.30.2.42 -r1.62.2.30.2.43
--- Zend/zend_vm_execute.h	5 Apr 2007 23:48:42 -0000	1.62.2.30.2.42
+++ Zend/zend_vm_execute.h	16 Apr 2007 08:09:55 -0000	1.62.2.30.2.43
@@ -145,7 +145,7 @@ static int zend_do_fcall_common_helper_S
 		}
 	}
 
-	zend_ptr_stack_2_push(&EG(argument_stack), (void *) opline->extended_value, NULL);
+	zend_ptr_stack_2_push(&EG(argument_stack), (void *)(zend_uintptr_t)opline->extended_value, NULL);
 
 	EX_T(opline->result.u.var).var.ptr_ptr = &EX_T(opline->result.u.var).var.ptr;
 
@@ -188,7 +188,7 @@ static int zend_do_fcall_common_helper_S
 			ulong arg_count;
 
 			p = (zval **) EG(argument_stack).top_element-2;
-			arg_count = (ulong) *p;
+			arg_count = (ulong)(zend_uintptr_t) *p;
 
 			while (arg_count>0) {
 				zend_verify_arg_type(EX(function_state).function, ++i, *(p-arg_count) TSRMLS_CC);
Index: Zend/tests/bug40770.phpt
===================================================================
RCS file: /repository/ZendEngine2/tests/bug40770.phpt,v
retrieving revision 1.1.2.1
retrieving revision 1.1.2.2
diff -u -p -d -r1.1.2.1 -r1.1.2.2
--- Zend/tests/bug40770.phpt	12 Mar 2007 16:59:52 -0000	1.1.2.1
+++ Zend/tests/bug40770.phpt	11 Apr 2007 22:32:15 -0000	1.1.2.2
@@ -1,7 +1,7 @@
 --TEST--
 Bug #40770 Apache child exits when PHP memory limit reached 
 --INI--
-memory_limit=64M
+memory_limit=8M
 --FILE--
 <?php
 ini_set('display_errors',true);
@@ -12,4 +12,4 @@ for ($i=0; $i<=$mb; $i++) {
 }
 ?>
 --EXPECTF--
-Fatal error: Allowed memory size of 67108864 bytes exhausted%s(tried to allocate %d bytes) in %sbug40770.php on line 6
+Fatal error: Allowed memory size of 8388608 bytes exhausted%s(tried to allocate %d bytes) in %s on line %d
Index: build/shtool
===================================================================
RCS file: /repository/php-src/build/shtool,v
retrieving revision 1.6
retrieving revision 1.6.4.1
diff -u -p -d -r1.6 -r1.6.4.1
--- build/shtool	18 Jun 2005 18:54:40 -0000	1.6
+++ build/shtool	16 Apr 2007 20:49:33 -0000	1.6.4.1
@@ -1,13 +1,13 @@
 #!/bin/sh
 ##
 ##  GNU shtool -- The GNU Portable Shell Tool
-##  Copyright (c) 1994-2005 Ralf S. Engelschall <rse@engelschall.com>
+##  Copyright (c) 1994-2006 Ralf S. Engelschall <rse@engelschall.com>
 ##
 ##  See http://www.gnu.org/software/shtool/ for more information.
 ##  See ftp://ftp.gnu.org/gnu/shtool/ for latest version.
 ##
-##  Version:  2.0.2 (15-Jun-2005)
-##  Contents: 4/19 available modules
+##  Version:  2.0.6 (19-Apr-2006)
+##  Contents: 5/19 available modules
 ##
 
 ##
@@ -41,6 +41,7 @@
 ##    echo       Print string with optional construct expansion
 ##    install    Install a program, script or datafile
 ##    mkdir      Make one or more directories
+##    platform   Platform Identification Utility
 ##    path       Deal with program paths
 ##
 ##  Not available commands (because module was not built-in):
@@ -54,24 +55,48 @@
 ##    rotate     Logfile rotation
 ##    tarball    Roll distribution tarballs
 ##    subst      Apply sed(1) substitution operations
-##    platform   Platform Identification Utility
 ##    arx        Extended archive command
 ##    slo        Separate linker options by library class
 ##    scpp       Sharing C Pre-Processor
 ##    version    Maintain a version information file
 ##
 
+#   maximum Bourne-Shell compatibility
+if [ ".$ZSH_VERSION" != . ] && (emulate sh) >/dev/null 2>&1; then
+    #   reconfigure zsh(1)
+    emulate sh
+    NULLCMD=:
+    alias -g '${1+"$@"}'='"$@"'
+elif [ ".$BASH_VERSION" != . ] && (set -o posix) >/dev/null 2>&1; then
+    #   reconfigure bash(1)
+    set -o posix
+fi
+
+#   maximum independence of NLS nuisances
+for var in \
+    LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
+    LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
+    LC_TELEPHONE LC_TIME
+do
+    if (set +x; test -z "`(eval $var=C; export $var) 2>&1`"); then
+        eval $var=C; export $var
+    else
+        unset $var
+    fi
+done
+
+#   initial command line handling
 if [ $# -eq 0 ]; then
     echo "$0:Error: invalid command line" 1>&2
     echo "$0:Hint:  run \`$0 -h' for usage" 1>&2
     exit 1
 fi
 if [ ".$1" = ".-h" ] || [ ".$1" = ".--help" ]; then
-    echo "This is GNU shtool, version 2.0.2 (15-Jun-2005)"
-    echo "Copyright (c) 1994-2005 Ralf S. Engelschall <rse@engelschall.com>"
-    echo "Report bugs to <bug-shtool@gnu.org>"
+    echo "This is GNU shtool, version 2.0.6 (19-Apr-2006)"
+    echo 'Copyright (c) 1994-2006 Ralf S. Engelschall <rse@engelschall.com>'
+    echo 'Report bugs to <bug-shtool@gnu.org>'
     echo ''
-    echo "Usage: shtool [<options>] [<cmd-name> [<cmd-options>] [<cmd-args>]]"
+    echo 'Usage: shtool [<options>] [<cmd-name> [<cmd-options>] [<cmd-args>]]'
     echo ''
     echo 'Available global <options>:'
     echo '  -v, --version   display shtool version information'
@@ -88,6 +113,10 @@ if [ ".$1" = ".-h" ] || [ ".$1" = ".--he
     echo '  mkdir    [-t|--trace] [-f|--force] [-p|--parents] [-m|--mode'
     echo '           <mode>] [-o|--owner <owner>] [-g|--group <group>] <dir>'
     echo '           [<dir> ...]'
+    echo '  platform [-F|--format <format>] [-S|--sep <string>] [-C|--conc'
+    echo '           <string>] [-L|--lower] [-U|--upper] [-v|--verbose]'
+    echo '           [-c|--concise] [-n|--no-newline] [-t|--type <type>]'
+    echo '           [-V|--version] [-h|--help]'
     echo '  path     [-s|--suppress] [-r|--reverse] [-d|--dirname] [-b|--basename]'
     echo '           [-m|--magic] [-p|--path <path>] <str> [<str> ...]'
     echo ''
@@ -117,10 +146,6 @@ if [ ".$1" = ".-h" ] || [ ".$1" = ".--he
     echo '           [-q|--quiet] [-s|--stealth] [-i|--interactive] [-b|--backup'
     echo '           <ext>] [-e|--exec <cmd>] [-f|--file <cmd-file>] [<file>]'
     echo '           [...]'
-    echo '  platform [-F|--format <format>] [-S|--sep <string>] [-C|--conc'
-    echo '           <string>] [-L|--lower] [-U|--upper] [-v|--verbose]'
-    echo '           [-c|--concise] [-n|--no-newline] [-t|--type <type>]'
-    echo '           [-V|--version] [-h|--help]'
     echo '  arx      [-t|--trace] [-C|--command <cmd>] <op> <archive> [<file>'
     echo '           ...]'
     echo '  slo      [-p|--prefix <str>] -- -L<dir> -l<lib> [-L<dir> -l<lib>'
@@ -136,11 +161,11 @@ if [ ".$1" = ".-h" ] || [ ".$1" = ".--he
     exit 0
 fi
 if [ ".$1" = ".-v" ] || [ ".$1" = ".--version" ]; then
-    echo "GNU shtool 2.0.2 (15-Jun-2005)"
+    echo "GNU shtool 2.0.6 (19-Apr-2006)"
     exit 0
 fi
 if [ ".$1" = ".-r" ] || [ ".$1" = ".--recreate" ]; then
-    shtoolize -oshtool echo install mkdir path
+    shtoolize -oshtool echo install mkdir platform path
     exit 0
 fi
 if [ ".$1" = ".-d" ] || [ ".$1" = ".--debug" ]; then
@@ -149,7 +174,7 @@ if [ ".$1" = ".-d" ] || [ ".$1" = ".--de
 fi
 name=`echo "$0" | sed -e 's;.*/\([^/]*\)$;\1;' -e 's;-sh$;;' -e 's;\.sh$;;'`
 case "$name" in
-    echo|install|mkdir|path )
+    echo|install|mkdir|platform|path )
         #   implicit tool command selection
         tool="$name"
         ;;
@@ -207,6 +232,24 @@ case $tool in
         opt_o=""
         opt_g=""
         ;;
+    platform )
+        str_tool="platform"
+        str_usage="[-F|--format <format>] [-S|--sep <string>] [-C|--conc <string>] [-L|--lower] [-U|--upper] [-v|--verbose] [-c|--concise] [-n|--no-newline] [-t|--type <type>] [-V|--version] [-h|--help]"
+        arg_spec="0="
+        opt_spec="F:S:C:L.U.v.c.n.t:d.V.h."
+        opt_alias="F:format,S:sep,C:conc,L:lower,U:upper,v:verbose,c:consise,t:type,n:no-newline,V:version,h:help"
+        opt_F="%{sp} (%{ap})"
+        opt_S=" "
+        opt_C="/"
+        opt_L=no
+        opt_U=no
+        opt_t=""
+        opt_v=no
+        opt_c=no
+        opt_n=no
+        opt_V=no
+        opt_h=no
+        ;;
     path )
         str_tool="path"
         str_usage="[-s|--suppress] [-r|--reverse] [-d|--dirname] [-b|--basename] [-m|--magic] [-p|--path <path>] <str> [<str> ...]"
@@ -430,7 +473,7 @@ case $tool in
 echo )
     ##
     ##  echo -- Print string with optional construct expansion
-    ##  Copyright (c) 1998-2005 Ralf S. Engelschall <rse@engelschall.com>
+    ##  Copyright (c) 1998-2006 Ralf S. Engelschall <rse@engelschall.com>
     ##
 
     text="$*"
@@ -728,7 +771,7 @@ echo )
 install )
     ##
     ##  install -- Install a program, script or datafile
-    ##  Copyright (c) 1997-2005 Ralf S. Engelschall <rse@engelschall.com>
+    ##  Copyright (c) 1997-2006 Ralf S. Engelschall <rse@engelschall.com>
     ##
 
     #   special case: "shtool install -d <dir> [...]" internally
@@ -891,7 +934,7 @@ install )
 mkdir )
     ##
     ##  mkdir -- Make one or more directories
-    ##  Copyright (c) 1996-2005 Ralf S. Engelschall <rse@engelschall.com>
+    ##  Copyright (c) 1996-2006 Ralf S. Engelschall <rse@engelschall.com>
     ##
 
     errstatus=0
@@ -976,10 +1019,563 @@ mkdir )
     shtool_exit $errstatus
     ;;
 
+platform )
+    ##
+    ##  platform -- Platform Identification Utility
+    ##  Copyright (c) 2003-2006 Ralf S. Engelschall <rse@engelschall.com>
+    ##
+
+    #   option post-processing
+    if [ ".$opt_t" != . ]; then
+        case "$opt_t" in
+            binary )
+                #   binary package id (OpenPKG RPM)
+                opt_F="%<ap>-%<sp>"
+                opt_L=yes
+                opt_S=""
+                opt_C="+"
+                ;;
+            build )
+                #   build time checking (OpenPKG RPM)
+                opt_F="%<at>-%<st>"
+                opt_L=yes
+                opt_S=""
+                opt_C="+"
+                ;;
+            gnu )
+                #   GNU config.guess style <arch>-<vendor>-<os><osversion>
+                opt_F="%<at>-unknown-%<st>"
+                opt_L=yes
+                opt_S=""
+                opt_C="+"
+                ;;
+            web )
+                #   non-whitespace HTTP Server-header id
+                opt_F="%<sp>-%<ap>"
+                opt_S="/"
+                opt_C="+"
+                ;;
+            summary)
+                #   human readable verbose summary information
+                opt_F="Class:      %[sc] (%[ac])\\nProduct:    %[sp] (%[ap])\\nTechnology: %[st] (%[at])"
+                opt_S=" "
+                opt_C="/"
+                ;;
+            all-in-one )
+                #   full-table all-in-one information
+                opt_F=""
+                opt_F="${opt_F}concise architecture class:      %<ac>\\n"
+                opt_F="${opt_F}regular architecture class:      %{ac}\\n"
+                opt_F="${opt_F}verbose architecture class:      %[ac]\\n"
+                opt_F="${opt_F}concise architecture product:    %<ap>\\n"
+                opt_F="${opt_F}regular architecture product:    %{ap}\\n"
+                opt_F="${opt_F}verbose architecture product:    %[ap]\\n"
+                opt_F="${opt_F}concise architecture technology: %<at>\\n"
+                opt_F="${opt_F}regular architecture technology: %{at}\\n"
+                opt_F="${opt_F}verbose architecture technology: %[at]\\n"
+                opt_F="${opt_F}concise system class:            %<sc>\\n"
+                opt_F="${opt_F}regular system class:            %{sc}\\n"
+                opt_F="${opt_F}verbose system class:            %[sc]\\n"
+                opt_F="${opt_F}concise system product:          %<sp>\\n"
+                opt_F="${opt_F}regular system product:          %{sp}\\n"
+                opt_F="${opt_F}verbose system product:          %[sp]\\n"
+                opt_F="${opt_F}concise system technology:       %<st>\\n"
+                opt_F="${opt_F}regular system technology:       %{st}\\n"
+                opt_F="${opt_F}verbose system technology:       %[st]"
+                ;;
+            * )
+                echo "$msgprefix:Error: invalid type \`$opt_t'" 1>&2
+                exit 1
+                ;;
+        esac
+    fi
+
+    #   assemble initial platform information
+    UNAME_MACHINE=`(uname -m) 2>/dev/null` ||\
+    UNAME_MACHINE=`(uname -p) 2>/dev/null` ||\
+    UNAME_MACHINE='unknown'
+    UNAME_SYSTEM=`(uname -s) 2>/dev/null`  ||\
+    UNAME_SYSTEM='unknown'
+    UNAME_RELEASE=`(uname -r) 2>/dev/null` ||\
+    UNAME_RELEASE=`(uname -v) 2>/dev/null` ||\
+    UNAME_RELEASE='unknown'
+
+    UNAME="${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}"
+
+    AC=""; AP=""; AT=""
+    SC=""; SP=""; ST=""
+
+    #    dispatch into platform specific sections
+    case "${UNAME}" in
+
+        #   FreeBSD
+        *:FreeBSD:* )
+            #   determine architecture
+            AC="${UNAME_MACHINE}"
+            case "${AC}" in
+                i386 ) AC="iX86" ;;
+            esac
+            AP="${AC}"
+            AT="${AP}"
+            if [ ".${AT}" = ".iX86" ]; then
+                case "`(/sbin/sysctl -n hw.model) 2>&1`" in
+                    *"Xeon"* | *"Pentium Pro"* | *"Cyrix 6x86MX"* | *"Pentium II"* | *"Pentium III"* | *"Pentium 4"* | *"Celeron"* ) AT="i686" ;;
+                    *"Pentium"* ) AT="i586" ;; *"i486[SD]X"* | *"Cyrix 486"* | *"Cyrix [56]x86"* | *"Blue Lightning" | *"Cyrix 486S/DX" ) AT="i486" ;;
+                    *"i386[SD]X"* | *"NexGen 586"* ) AT="i386" ;;
+                esac
+            fi
+            #   determine system
+            r=`echo "${UNAME_RELEASE}" |\
+               sed -e 's;[()];;' -e 's/\(-.*\)$/[\1]/'`
+            ST="FreeBSD ${r}"
+            SP="${ST}"
+            case "${r}" in
+                1.* ) SC="4.3BSD" ;;
+                *   ) SC="4.4BSD" ;;
+            esac
+            ;;
+
+        #   NetBSD
+        *:NetBSD:* )
+            #   determine architecture
+            AT="${UNAME_MACHINE}"
+            AP="${AT}"
+            case "${AP}" in
+                i[3-6]86 ) AP="iX86" ;;
+            esac
+            AC="${AP}"
+            #   determine system
+            r=`echo "${UNAME_RELEASE}" | sed -e 's/\([-_].*\)$/[\1]/'`
+            ST="NetBSD ${r}"
+            SP="${ST}"
+            case "${r}" in
+                0.* ) SC="4.3BSD" ;;
+                *   ) SC="4.4BSD" ;;
+            esac
+            ;;
+
+        #   OpenBSD
+        *:OpenBSD:* )
+            #   determine architecture
+            AT="${UNAME_MACHINE}"
+            AP="${AT}"
+            case "${AP}" in
+                i[3-6]86 ) AP="iX86" ;;
+            esac
+            AC="${AP}"
+            #   determine system
+            r=`echo "${UNAME_RELEASE}" | sed -e 's/\([-_].*\)$/[\1]/'`
+            ST="OpenBSD ${r}"
+            SP="${ST}"
+            SC="4.4BSD"
+            ;;
+
+        #   GNU/Linux
+        *:Linux:* )
+            #   determine architecture
+            AT="${UNAME_MACHINE}"
+            case "${AT}" in
+               ia64     ) AT="IA64"   ;;
+               x86_64   ) AT='AMD64'  ;;
+               parisc   ) AT="HPPA32" ;;
+               parisc64 ) AT="HPPA64" ;;
+            esac
+            AP="${AT}"
+            case "${AP}" in
+               i[3-6]86 ) AP='iX86' ;;
+            esac
+            AC="${AP}"
+            #   determine system
+            v_kern=`echo "${UNAME_RELEASE}" |\
+                sed -e 's/^\([0-9][0-9]*\.[0-9][0-9]*\).*/\1/'`
+            v_libc=`(strings /lib/libc.so.* | grep '^GLIBC_' | sed -e 's/^GLIBC_//' |\
+                env -i sort -n | sed -n -e '$p' | sed -e 's/^\([0-9][0-9]*\.[0-9][0-9]*\).*/\1/') 2>/dev/null`
+            ST="GNU/<Linux >${v_libc}/<${v_kern}>"
+            if [ -f /etc/lsb-release ]; then
+                eval `( . /etc/lsb-release
+                    echo "SC=\"LSB${LSB_VERSION}\""
+                    if [ ".${DISTRIB_ID}" != . -a ".${DISTRIB_RELEASE}" != . ]; then
+                        echo "SP=\"${DISTRIB_ID} ${DISTRIB_RELEASE}\""
+                    fi
+                ) 2>/dev/null`
+            fi
+            if [ ".$SP" = . ]; then
+                for tagfile in x \
+                    `cd /etc && \
+                    /bin/ls *[_-]release *[_-]version 2>/dev/null | env -i sort | \
+                    sed -e '/^redhat-release$/d' -e '/^lsb-release$/d'; \
+                    echo redhat-release lsb-release`
+                do
+                    [ ".${tagfile}" = .x ] && continue
+                    [ ! -f "/etc/${tagfile}" ] && continue
+                    n=`echo ${tagfile} | sed -e 's/[_-]release$//' -e 's/[_-]version$//'`
+                    v=`(grep VERSION /etc/${tagfile}; cat /etc/${tagfile}) | grep '[0-9]' | sed -e 'q' |\
+                       sed -e 's/^/#/' \
+                           -e 's/^#[^0-9]*\([0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\).*$/\1/' \
+                           -e 's/^#[^0-9]*\([0-9][0-9]*\.[0-9][0-9]*\).*$/\1/' \
+                           -e 's/^#[^0-9]*\([0-9][0-9]*\).*$/\1/' \
+                           -e 's/^#.*$//'`
+                    case "`util_lower ${n}`" in
+                        redhat )
+                            if [ ".`grep 'Red Hat Enterprise Linux' /etc/${tagfile}`" != . ]; then
+                                n="<R>ed <H>at <E>nterprise <L>inux"
+                            else
+                                n="<R>ed <H>at <L>inux"
+                            fi
+                            ;;
+                        debian             ) n="Debian[ GNU/Linux]"        ;;
+                        ubuntu             ) n="Ubuntu[ GNU/Linux]"        ;;
+                        fedora             ) n="<Fedora> Core[ GNU/Linux]" ;;
+                        suse               ) n="SuSE[ Linux]"              ;;
+                        mandrake*|mandriva ) n="Mandriva[ Linux]"          ;;
+                        gentoo             ) n="Gentoo[ GNU/Linux]"        ;;
+                        slackware          ) n="Slackware[ Linux]"         ;;
+                        turbolinux         ) n="TurboLinux"                ;;
+                        unitedlinux        ) n="UnitedLinux"               ;;
+                        *                  ) n="${n}[ GNU/Linux]"          ;;
+                    esac
+                    case "$n" in
+                        *"<"*">"* ) SP="$n <$v>" ;;
+                        *         ) SP="$n $v"   ;;
+                    esac
+                    break
+                done
+            fi
+            [ ".$SP" = . ] && SP="${ST}"
+            [ ".$SC" = . ] && SC="LSB"
+            ;;
+
+        #   Sun Solaris
+        *:SunOS:* )
+            #   determine architecture
+            AT="${UNAME_MACHINE}"
+            case "${AT}" in
+                i86pc )
+                    AT="iX86"
+                    case "`(/bin/isainfo -k) 2>&1`" in
+                        amd64 ) AT="AMD64" ;;
+                    esac
+                    ;;
+            esac
+            AP="${AT}"
+            case "${AP}" in
+                sun4[cdm] ) AP="SPARC32" ;;
+                sun4[uv]  ) AP="SPARC64" ;;
+                sun4*     ) AP="SPARC"   ;;
+            esac
+            AC="${AP}"
+            case "${AC}" in
+                SPARC* ) AC="SPARC" ;;
+            esac
+            #   determine system
+            ST="[Sun ]SunOS ${UNAME_RELEASE}"
+            v=`echo "${UNAME_RELEASE}" |\
+               sed -e 's;^4\.;1.;' \
+                   -e 's;^5\.\([0-6]\)[^0-9]*$;2.\1;' \
+                   -e 's;^5\.\([0-9][0-9]*\).*;\1;'`
+            SP="[Sun ]Solaris $v"
+            case "${UNAME_RELEASE}" in
+                4.* ) SC="4.3BSD" ;;
+                5.* ) SC="SVR4"   ;;
+            esac
+            ;;
+
+        #   SCO UnixWare
+        *:UnixWare:* )
+            #   determine architecture
+            AT="${UNAME_MACHINE}"
+            case "${AT}" in
+                i[3-6]86 | ix86at ) AT="iX86" ;;
+            esac
+            AP="${AT}"
+            #   determine system
+            v=`/sbin/uname -v`
+            ST="[SCO ]UnixWare ${v}"
+            SP="${ST}"
+            SC="SVR${UNAME_RELEASE}"
+            ;;
+
+        #   QNX
+        *:QNX:* )
+            #   determine architecture
+            AT="${UNAME_MACHINE}"
+            case "${AT}" in
+                x86pc ) AT="iX86" ;;
+            esac
+            AP="${AT}"
+            #   determine system
+            v="${UNAME_RELEASE}"
+            ST="QNX[ Neutrino RTOS] ${v}"
+            v=`echo "${v}" | sed -e 's;^\([0-9][0-9]*\.[0-9][0-9]*\).*$;\1;'`
+            SP="QNX[ Neutrino RTOS] ${v}"
+            SC="QNX"
+            ;;
+
+        #   SGI IRIX
+        *:IRIX*:* )
+            #   determine architecture
+            AT="${UNAME_MACHINE}"
+            AP="${AT}"
+            case "${AP}:${UNAME_SYSTEM}" in
+                IP*:IRIX64 ) AP="MIPS64" ;;
+                IP*:*      ) AP="MIPS"   ;;
+            esac
+            AC="${AP}"
+            #   determine system
+            v=`(/bin/uname -R || /bin/uname -r) 2>/dev/null | sed -e 's;[0-9.]* ;;'`
+            ST="[SGI ]IRIX ${v}"
+            v="${UNAME_RELEASE}"
+            SP="[SGI ]IRIX ${v}"
+            SC="4.2BSD/SVR3"
+            ;;
+
+        #   HP HP-UX
+        *:HP-UX:* )
+            #   determine architecture
+            AT="${UNAME_MACHINE}"
+            case "${AT}" in
+                ia64 ) AT="IA64" ;;
+                9000/[34]?? ) AT=M68K ;;
+                9000/[678][0-9][0-9])
+                    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`
+                    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`
+                    case "${sc_cpu_version}" in
+                        523 ) AT="HPPA1.0" ;;
+                        528 ) AT="HPPA1.1" ;;
+                        532 ) AT="HPPA2.0"
+                            case "${sc_kernel_bits}" in
+                                32 ) AT="${AT}n" ;;
+                                64 ) AT="${AT}w" ;;
+                            esac
+                            ;;
+                    esac
+                    ;;
+            esac
+            AP="${AT}"
+            case "${AP}" in
+                HPPA* ) AP="HPPA" ;;
+            esac
+            AC="${AP}"
+            #   determine system
+            v=`echo "${UNAME_RELEASE}" | sed -e 's;^[^0-9]*;;'`
+            ST="[HP ]<HP>-<UX ${v}>"
+            SP="${ST}"
+            case "${v}" in
+                10.*   ) SC="SVR4.2" ;;
+                [7-9]* ) SC="SVR4"   ;;
+            esac
+            ;;
+
+        #   HP Tru64 (OSF1)
+        *:OSF1:* )
+            #   determine architecture
+            AP="${UNAME_MACHINE}"
+            case "${AP}" in
+                alpha ) AP="Alpha" ;;
+            esac
+            alpha_type=`(/usr/sbin/psrinfo -v) 2>/dev/null |\
+                sed -n -e 's/^.*The alpha \([^ ][^ ]*\).*processor.*$/\1/p' | sed -e 'q'`
+            AT="${AP}${alpha_type}"
+            AC="${AP}"
+            #   determine system
+            v=`echo "${UNAME_RELEASE}" | sed -e 's;^[VTX];;'`
+            ST="[HP ]Tru64 ${v}"
+            SP="${ST}"
+            SC="OSF1"
+            ;;
+
+        #   IBM AIX
+        *:AIX:* )
+            cpu_arch=rs6000
+            if [ -x /usr/sbin/lsdev -a -x /usr/sbin/lsattr ]; then
+                cpu_id=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`
+                if [ ".`/usr/sbin/lsattr -El ${cpu_id} | grep -i powerpc`" != . ]; then
+                    cpu_arch=powerpc
+                fi
+            elif [ -d /QOpenSys ]; then
+                #   IBM i5/OS (aka OS/400) with PASE (Portable Application Solutions Environment)
+                cpu_arch=powerpc
+            fi
+            if [ -x /usr/bin/oslevel ]; then
+                os_level=`/usr/bin/oslevel`
+            else
+                os_level="`uname -v`.`uname -r`"
+            fi
+            os_level=`echo "${os_level}" |\
+                      sed -e 's;^\([0-9][0-9]*\.[0-9][0-9]*\)\(\.[0-9][0-9]*\)\(.*\)$;<\1>\2[\3];' \
+                          -e 's;^\([0-9][0-9]*\.[0-9][0-9]*\)\(.*\)$;<\1>\2;'`
+            AT="${cpu_arch}"
+            AP="${AT}"
+            AC="${AP}"
+            ST="[IBM ]<AIX >${os_level}"
+            SP="${ST}"
+            case "${os_level}" in
+                [12]* ) SC="SVR2" ;;
+                *     ) SC="SVR4" ;;
+            esac
+            ;;
+
+        #   Apple MacOS X Darwin
+        *:Darwin:* )
+            AT=`uname -p`
+            case "${AT}" in
+                powerpc ) AT="PPC" ;;
+            esac
+            AP="${AT}"
+            AC="${AP}"
+            case "${AC}" in
+                i?86 ) AC="iX86" ;;
+            esac
+            ST="[Apple ]${UNAME_SYSTEM} ${UNAME_RELEASE}"
+            SP="${ST}"
+            SC="4.4BSD/Mach3"
+            ;;
+
+        #   TODO ...ADD YOUR NEW PLATFORM CHECK HERE... TODO
+        # *:XXX:* )
+        #   ...
+        #   ;;
+
+        #   ...A STILL UNKNOWN PLATFORM...
+        * )
+            AT=`echo "${UNAME_MACHINE}" | sed -e "s; ;${opt_C};g"`
+            AP="${AT}"
+            AC="${AP}"
+            v=`echo "${UNAME_RELEASE}" |\
+               sed -e 's/^/#/' \
+                   -e 's/^#[^0-9]*\([0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\).*$/\1/' \
+                   -e 's/^#[^0-9]*\([0-9][0-9]*\.[0-9][0-9]*\).*$/\1/' \
+                   -e 's/^#[^0-9]*\([0-9][0-9]*\).*$/\1/' \
+                   -e 's/^#.*$/?/'`
+            ST="${UNAME_SYSTEM} ${v}"
+            SP="${ST}"
+            SC="${SP}"
+            ;;
+
+    esac
+
+    #   provide fallback values
+    [ ".$AT" = . ] && AT="${AP:-${AC}}"
+    [ ".$AP" = . ] && AP="${AT:-${AC}}"
+    [ ".$AC" = . ] && AC="${AP:-${AT}}"
+    [ ".$ST" = . ] && ST="${SP:-${SC}}"
+    [ ".$SP" = . ] && SP="${ST:-${SC}}"
+    [ ".$SC" = . ] && SC="${SP:-${ST}}"
+
+    #   support explicit enforced verbose/concise output
+    if [ ".$opt_v" = .yes ]; then
+        opt_F=`echo ":$opt_F" | sed -e 's/^://' -e 's/%\([as][cpt]\)/%[\1]/g'`
+    elif [ ".$opt_c" = .yes ]; then
+        opt_F=`echo ":$opt_F" | sed -e 's/^://' -e 's/%\([as][cpt]\)/%<\1>/g'`
+    fi
+
+    #   provide verbose and concise variants
+    AC_V=""; AC_N=""; AC_C=""
+    AP_V=""; AP_N=""; AP_C=""
+    AT_V=""; AT_N=""; AT_C=""
+    SC_V=""; SC_N=""; SC_C=""
+    SP_V=""; SP_N=""; SP_C=""
+    ST_V=""; ST_N=""; ST_C=""
+    for var_lc in at ap ac st sp sc; do
+        case "$opt_F" in
+            *"%[${val_lc}]"* | *"%{${val_lc}}"* | *"%${val_lc}"* | *"%<${val_lc}>"* )
+            var_uc=`util_upper "$var_lc"`
+            eval "val=\"\$${var_uc}\""
+            val_V=""; val_N=""; val_C=""
+            case "$opt_F" in
+                *"%[${var_lc}]"* )
+                    val_V=`echo ":$val" | \
+                           sed -e 's/^://' \
+                               -e 's;\[\([^]]*\)\];\1;g' \
+                               -e 's;<\([^>]*\)>;\1;g' \
+                               -e "s; ;§§;g" \
+                               -e "s;/;%%;g" \
+                               -e "s;§§;${opt_S};g" \
+                               -e "s;%%;${opt_C};g"`
+                    eval "${var_uc}_V=\"\${val_V}\""
+                    ;;
+            esac
+            case "$opt_F" in
+                *"%{${var_lc}}"* | *"%${var_lc}"* )
+                    val_N=`echo ":$val" | \
+                           sed -e 's/^://' \
+                               -e 's;\[\([^]]*\)\];;g' \
+                               -e 's;<\([^>]*\)>;\1;g' \
+                               -e "s; ;§§;g" \
+                               -e "s;/;%%;g" \
+                               -e "s;§§;${opt_S};g" \
+                               -e "s;%%;${opt_C};g"`
+                    eval "${var_uc}_N=\"\${val_N}\""
+                    ;;
+            esac
+            case "$opt_F" in
+                *"%<${var_lc}>"* )
+                    val_C=`echo ":$val" | \
+                           sed -e 's/^://' \
+                               -e 's;\[\([^]]*\)\];;g' \
+                               -e 's;[^<]*<\([^>]*\)>[^<]*;\1;g' \
+                               -e "s; ;§§;g" \
+                               -e "s;/;%%;g" \
+                               -e "s;§§;${opt_S};g" \
+                               -e "s;%%;${opt_C};g"`
+                    eval "${var_uc}_C=\"\${val_C}\""
+                    ;;
+            esac
+            ;;
+        esac
+    done
+
+    #   create output string
+    output=`echo ":$opt_F" |\
+            sed -e "s/^://" \
+                -e "s;%\\[ac\\];${AC_V};g" \
+                -e "s;%{ac};${AC_N};g" \
+                -e "s;%ac;${AC_N};g" \
+                -e "s;%<ac>;${AC_C};g" \
+                -e "s;%\\[ap\\];${AP_V};g" \
+                -e "s;%{ap};${AP_N};g" \
+                -e "s;%ap;${AP_N};g" \
+                -e "s;%<ap>;${AP_C};g" \
+                -e "s;%\\[at\\];${AT_V};g" \
+                -e "s;%{at};${AT_N};g" \
+                -e "s;%at;${AT_N};g" \
+                -e "s;%<at>;${AT_C};g" \
+                -e "s;%\\[sc\\];${SC_V};g" \
+                -e "s;%{sc};${SC_N};g" \
+                -e "s;%sc;${SC_N};g" \
+                -e "s;%<sc>;${SC_C};g" \
+                -e "s;%\\[sp\\];${SP_V};g" \
+                -e "s;%{sp};${SP_N};g" \
+                -e "s;%sp;${SP_N};g" \
+                -e "s;%<sp>;${SP_C};g" \
+                -e "s;%\\[st\\];${ST_V};g" \
+                -e "s;%{st};${ST_N};g" \
+                -e "s;%st;${ST_N};g" \
+                -e "s;%<st>;${ST_C};g" \
+                -e 's/\\\\n/^/g' |\
+             tr '^' '\012'`
+
+    #   support lower/upper-case mapping
+    if [ ".$opt_L" = .yes ]; then
+        output=`util_lower "$output"`
+    elif [ ".$opt_U" = .yes ]; then
+        output=`util_upper "$output"`
+    fi
+
+    #   display output string
+    if [ ".$opt_n" = .yes ]; then
+        echo . | awk '{ printf("%s", output); }' output="$output"
+    else
+        echo "$output"
+    fi
+
+    shtool_exit 0
+    ;;
+
 path )
     ##
     ##  path -- Deal with program paths
-    ##  Copyright (c) 1998-2005 Ralf S. Engelschall <rse@engelschall.com>
+    ##  Copyright (c) 1998-2006 Ralf S. Engelschall <rse@engelschall.com>
     ##
 
     namelist="$*"
Index: ext/date/php_date.c
===================================================================
RCS file: /repository/php-src/ext/date/php_date.c,v
retrieving revision 1.43.2.45.2.43
retrieving revision 1.43.2.45.2.45
diff -u -p -d -r1.43.2.45.2.43 -r1.43.2.45.2.45
--- ext/date/php_date.c	5 Mar 2007 14:10:18 -0000	1.43.2.45.2.43
+++ ext/date/php_date.c	13 Apr 2007 14:09:20 -0000	1.43.2.45.2.45
@@ -25,6 +25,7 @@
 #include "php_ini.h"
 #include "ext/standard/info.h"
 #include "ext/standard/php_versioning.h"
+#include "ext/standard/php_math.h"
 #include "php_date.h"
 #include "lib/timelib.h"
 #include <time.h>
@@ -792,6 +793,7 @@ static char *date_format(char *format, i
 			case 'H': length = slprintf(buffer, 32, "%02d", (int) t->h); break;
 			case 'i': length = slprintf(buffer, 32, "%02d", (int) t->i); break;
 			case 's': length = slprintf(buffer, 32, "%02d", (int) t->s); break;
+			case 'u': length = slprintf(buffer, 32, "%06d", (int) floor(t->f * 1000000)); break;
 
 			/* timezone */
 			case 'I': length = slprintf(buffer, 32, "%d", localtime ? offset->is_dst : 0); break;
@@ -2387,7 +2389,7 @@ PHP_FUNCTION(date_sun_info)
 	array_init(return_value);
 	
 	/* Get sun up/down and transit */
-	rs = timelib_astro_rise_set_altitude(t, latitude, longitude, -35.0/60, 1, &ddummy, &ddummy, &rise, &set, &transit);
+	rs = timelib_astro_rise_set_altitude(t, longitude, latitude, -35.0/60, 1, &ddummy, &ddummy, &rise, &set, &transit);
 	switch (rs) {
 		case -1: /* always below */
 			add_assoc_bool(return_value, "sunrise", 0);
@@ -2407,7 +2409,7 @@ PHP_FUNCTION(date_sun_info)
 	add_assoc_long(return_value, "transit", timelib_date_to_int(t2, &dummy));
 
 	/* Get civil twilight */
-	rs = timelib_astro_rise_set_altitude(t, latitude, longitude, -6.0, 0, &ddummy, &ddummy, &rise, &set, &transit);
+	rs = timelib_astro_rise_set_altitude(t, longitude, latitude, -6.0, 0, &ddummy, &ddummy, &rise, &set, &transit);
 	switch (rs) {
 		case -1: /* always below */
 			add_assoc_bool(return_value, "civil_twilight_begin", 0);
@@ -2425,7 +2427,7 @@ PHP_FUNCTION(date_sun_info)
 	}
 
 	/* Get nautical twilight */
-	rs = timelib_astro_rise_set_altitude(t, latitude, longitude, -12.0, 0, &ddummy, &ddummy, &rise, &set, &transit);
+	rs = timelib_astro_rise_set_altitude(t, longitude, latitude, -12.0, 0, &ddummy, &ddummy, &rise, &set, &transit);
 	switch (rs) {
 		case -1: /* always below */
 			add_assoc_bool(return_value, "nautical_twilight_begin", 0);
@@ -2443,7 +2445,7 @@ PHP_FUNCTION(date_sun_info)
 	}
 
 	/* Get astronomical twilight */
-	rs = timelib_astro_rise_set_altitude(t, latitude, longitude, -18.0, 0, &ddummy, &ddummy, &rise, &set, &transit);
+	rs = timelib_astro_rise_set_altitude(t, longitude, latitude, -18.0, 0, &ddummy, &ddummy, &rise, &set, &transit);
 	switch (rs) {
 		case -1: /* always below */
 			add_assoc_bool(return_value, "astronomical_twilight_begin", 0);
Index: ext/date/lib/parse_date.c
===================================================================
RCS file: /repository/php-src/ext/date/lib/parse_date.c,v
retrieving revision 1.29.2.30.2.11
retrieving revision 1.29.2.30.2.13
diff -u -p -d -r1.29.2.30.2.11 -r1.29.2.30.2.13
--- ext/date/lib/parse_date.c	21 Mar 2007 09:40:21 -0000	1.29.2.30.2.11
+++ ext/date/lib/parse_date.c	13 Apr 2007 08:10:55 -0000	1.29.2.30.2.13
@@ -1,4 +1,4 @@
-/* Generated by re2c 0.11.0 on Wed Mar 21 10:37:04 2007 */
+/* Generated by re2c 0.11.0 on Fri Apr 13 10:06:46 2007 */
 #line 1 "ext/date/lib/parse_date.re"
 /*
    +----------------------------------------------------------------------+
@@ -450,10 +450,12 @@ static timelib_ull timelib_get_unsigned_
 		}
 		++*ptr;
 	}
-	if (**ptr == '+') {
-		++*ptr;
-	} else if (**ptr == '-') {
-		dir = -1;
+
+	while (**ptr == '+' || **ptr == '-')
+	{
+		if (**ptr == '-') {
+			dir *= -1;
+		}
 		++*ptr;
 	}
 	return dir * timelib_get_nr(ptr, max_length);
@@ -768,27 +770,27 @@ static int scan(Scanner *s)
 std:
 	s->tok = cursor;
 	s->len = 0;
-#line 882 "ext/date/lib/parse_date.re"
+#line 884 "ext/date/lib/parse_date.re"
 
 
 {
 	static unsigned char yybm[] = {
 		  0,   0,   0,   0,   0,   0,   0,   0, 
-		  0, 208,   0,   0,   0,   0,   0,   0, 
+		  0, 200,   0,   0,   0,   0,   0,   0, 
 		  0,   0,   0,   0,   0,   0,   0,   0, 
 		  0,   0,   0,   0,   0,   0,   0,   0, 
-		208,   0,   0,   0,   0,   0,   0,   0, 
-		  0,   0,   0,   0, 128,  64, 192,   0, 
-		  8,   8,   8,   8,   8,   8,   8,   8, 
-		  8,   8,   0,   0,   0,   0,   0,   0, 
+		200,   0,   0,   0,   0,   0,   0,   0, 
+		  0,   0,   0,  32, 128,  96, 192,   0, 
+		  4,   4,   4,   4,   4,   4,   4,   4, 
+		  4,   4,   0,   0,   0,   0,   0,   0, 
 		  0,   0,   0,   0,   0,   0,   0,   0, 
 		  0,   0,   0,   0,   0,   0,   0,   0, 
 		  0,   0,   0,   0,   0,   0,   0,   0, 
 		  0,   0,   0,   0,   0,   0,   0,   0, 
-		  0,  32,  32,  32, 160,  32,  32,  32, 
-		160,  32,  32,  32,  32,  32, 160,  32, 
-		 32,  32, 160, 160, 160,  32,  32,  32, 
-		 32,  32,  32,   0,   0,   0,   0,   0, 
+		  0,  16,  16,  16, 144,  16,  16,  16, 
+		144,  16,  16,  16,  16,  16, 144,  16, 
+		 16,  16, 144, 144, 144,  16,  16,  16, 
+		 16,  16,  16,   0,   0,   0,   0,   0, 
 		  0,   0,   0,   0,   0,   0,   0,   0, 
 		  0,   0,   0,   0,   0,   0,   0,   0, 
 		  0,   0,   0,   0,   0,   0,   0,   0, 
@@ -807,7 +809,7 @@ std:
 		  0,   0,   0,   0,   0,   0,   0,   0, 
 	};
 
-#line 811 "ext/date/lib/parse_date.c"
+#line 813 "ext/date/lib/parse_date.c"
 	{
 		YYCTYPE yych;
 		unsigned int yyaccept = 0;
@@ -900,20 +902,20 @@ yy2:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy137;
-				goto yy1373;
+				goto yy1375;
 			}
 		} else {
 			if(yych <= 'd') {
 				if(yych <= 'Z') goto yy137;
 				if(yych >= 'a') goto yy142;
 			} else {
-				if(yych <= 'e') goto yy1382;
+				if(yych <= 'e') goto yy1384;
 				if(yych <= 'z') goto yy142;
 			}
 		}
 yy3:
 		YYDEBUG(3, *YYCURSOR);
-#line 1411 "ext/date/lib/parse_date.re"
+#line 1413 "ext/date/lib/parse_date.re"
 		{
 		int tz_not_found;
 		DEBUG_OUTPUT("tzcorrection | tz");
@@ -926,7 +928,7 @@ yy3:
 		TIMELIB_DEINIT;
 		return TIMELIB_TIMEZONE;
 	}
-#line 930 "ext/date/lib/parse_date.c"
+#line 932 "ext/date/lib/parse_date.c"
 yy4:
 		YYDEBUG(4, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -937,7 +939,7 @@ yy4:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy137;
-				goto yy1373;
+				goto yy1375;
 			}
 		} else {
 			if(yych <= 'd') {
@@ -945,7 +947,7 @@ yy4:
 				if(yych <= '`') goto yy3;
 				goto yy137;
 			} else {
-				if(yych <= 'e') goto yy1373;
+				if(yych <= 'e') goto yy1375;
 				if(yych <= 'z') goto yy137;
 				goto yy3;
 			}
@@ -960,12 +962,12 @@ yy5:
 				goto yy137;
 			} else {
 				if(yych <= 'H') {
-					if(yych <= 'E') goto yy1344;
+					if(yych <= 'E') goto yy1346;
 					goto yy137;
 				} else {
-					if(yych <= 'I') goto yy1345;
+					if(yych <= 'I') goto yy1347;
 					if(yych <= 'N') goto yy137;
-					goto yy1343;
+					goto yy1345;
 				}
 			}
 		} else {
@@ -974,15 +976,15 @@ yy5:
 					if(yych <= 'Z') goto yy137;
 					goto yy3;
 				} else {
-					if(yych == 'e') goto yy1360;
+					if(yych == 'e') goto yy1362;
 					goto yy142;
 				}
 			} else {
 				if(yych <= 'n') {
-					if(yych <= 'i') goto yy1361;
+					if(yych <= 'i') goto yy1363;
 					goto yy142;
 				} else {
-					if(yych <= 'o') goto yy1359;
+					if(yych <= 'o') goto yy1361;
 					if(yych <= 'z') goto yy142;
 					goto yy3;
 				}
@@ -998,12 +1000,12 @@ yy6:
 				goto yy137;
 			} else {
 				if(yych <= 'H') {
-					if(yych <= 'E') goto yy1344;
+					if(yych <= 'E') goto yy1346;
 					goto yy137;
 				} else {
-					if(yych <= 'I') goto yy1345;
+					if(yych <= 'I') goto yy1347;
 					if(yych <= 'N') goto yy137;
-					goto yy1343;
+					goto yy1345;
 				}
 			}
 		} else {
@@ -1012,15 +1014,15 @@ yy6:
 					if(yych <= 'Z') goto yy137;
 					goto yy3;
 				} else {
-					if(yych == 'e') goto yy1344;
+					if(yych == 'e') goto yy1346;
 					goto yy137;
 				}
 			} else {
 				if(yych <= 'n') {
-					if(yych <= 'i') goto yy1345;
+					if(yych <= 'i') goto yy1347;
 					goto yy137;
 				} else {
-					if(yych <= 'o') goto yy1343;
+					if(yych <= 'o') goto yy1345;
 					if(yych <= 'z') goto yy137;
 					goto yy3;
 				}
@@ -1033,24 +1035,24 @@ yy7:
 			if(yych <= 'A') {
 				if(yych == ')') goto yy136;
 				if(yych <= '@') goto yy3;
-				goto yy1313;
+				goto yy1315;
 			} else {
-				if(yych == 'I') goto yy1314;
+				if(yych == 'I') goto yy1316;
 				if(yych <= 'N') goto yy137;
-				goto yy1315;
+				goto yy1317;
 			}
 		} else {
 			if(yych <= 'h') {
 				if(yych <= 'Z') goto yy137;
 				if(yych <= '`') goto yy3;
-				if(yych <= 'a') goto yy1328;
+				if(yych <= 'a') goto yy1330;
 				goto yy142;
 			} else {
 				if(yych <= 'n') {
-					if(yych <= 'i') goto yy1329;
+					if(yych <= 'i') goto yy1331;
 					goto yy142;
 				} else {
-					if(yych <= 'o') goto yy1330;
+					if(yych <= 'o') goto yy1332;
 					if(yych <= 'z') goto yy142;
 					goto yy3;
 				}
@@ -1063,24 +1065,24 @@ yy8:
 			if(yych <= 'A') {
 				if(yych == ')') goto yy136;
 				if(yych <= '@') goto yy3;
-				goto yy1313;
+				goto yy1315;
 			} else {
-				if(yych == 'I') goto yy1314;
+				if(yych == 'I') goto yy1316;
 				if(yych <= 'N') goto yy137;
-				goto yy1315;
+				goto yy1317;
 			}
 		} else {
 			if(yych <= 'h') {
 				if(yych <= 'Z') goto yy137;
 				if(yych <= '`') goto yy3;
-				if(yych <= 'a') goto yy1313;
+				if(yych <= 'a') goto yy1315;
 				goto yy137;
 			} else {
 				if(yych <= 'n') {
-					if(yych <= 'i') goto yy1314;
+					if(yych <= 'i') goto yy1316;
 					goto yy137;
 				} else {
-					if(yych <= 'o') goto yy1315;
+					if(yych <= 'o') goto yy1317;
 					if(yych <= 'z') goto yy137;
 					goto yy3;
 				}
@@ -1094,15 +1096,15 @@ yy9:
 		switch(yych) {
 		case ')':	goto yy136;
 		case '0':
-		case '1':	goto yy1245;
-		case '2':	goto yy1246;
+		case '1':	goto yy1247;
+		case '2':	goto yy1248;
 		case '3':
 		case '4':
 		case '5':
 		case '6':
 		case '7':
 		case '8':
-		case '9':	goto yy1247;
+		case '9':	goto yy1249;
 		case 'A':
 		case 'B':
 		case 'C':
@@ -1124,11 +1126,11 @@ yy9:
 		case 'X':
 		case 'Y':
 		case 'Z':	goto yy137;
-		case 'E':	goto yy1240;
-		case 'H':	goto yy1241;
-		case 'O':	goto yy1242;
-		case 'U':	goto yy1243;
-		case 'W':	goto yy1244;
+		case 'E':	goto yy1242;
+		case 'H':	goto yy1243;
+		case 'O':	goto yy1244;
+		case 'U':	goto yy1245;
+		case 'W':	goto yy1246;
 		case 'a':
 		case 'b':
 		case 'c':
@@ -1150,11 +1152,11 @@ yy9:
 		case 'x':
 		case 'y':
 		case 'z':	goto yy142;
-		case 'e':	goto yy1282;
-		case 'h':	goto yy1283;
-		case 'o':	goto yy1284;
-		case 'u':	goto yy1285;
-		case 'w':	goto yy1286;
+		case 'e':	goto yy1284;
+		case 'h':	goto yy1285;
+		case 'o':	goto yy1286;
+		case 'u':	goto yy1287;
+		case 'w':	goto yy1288;
 		default:	goto yy3;
 		}
 yy10:
@@ -1165,15 +1167,15 @@ yy10:
 		switch(yych) {
 		case ')':	goto yy136;
 		case '0':
-		case '1':	goto yy1245;
-		case '2':	goto yy1246;
+		case '1':	goto yy1247;
+		case '2':	goto yy1248;
 		case '3':
 		case '4':
 		case '5':
 		case '6':
 		case '7':
 		case '8':
-		case '9':	goto yy1247;
+		case '9':	goto yy1249;
 		case 'A':
 		case 'B':
 		case 'C':
@@ -1217,39 +1219,39 @@ yy10:
 		case 'y':
 		case 'z':	goto yy137;
 		case 'E':
-		case 'e':	goto yy1240;
+		case 'e':	goto yy1242;
 		case 'H':
-		case 'h':	goto yy1241;
+		case 'h':	goto yy1243;
 		case 'O':
-		case 'o':	goto yy1242;
+		case 'o':	goto yy1244;
 		case 'U':
-		case 'u':	goto yy1243;
+		case 'u':	goto yy1245;
 		case 'W':
-		case 'w':	goto yy1244;
+		case 'w':	goto yy1246;
 		default:	goto yy3;
 		}
 yy11:
 		YYDEBUG(11, *YYCURSOR);
 		yyaccept = 1;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '-') goto yy1236;
+		if(yych == '-') goto yy1238;
 		if(yych <= '/') goto yy12;
-		if(yych <= '9') goto yy1237;
+		if(yych <= '9') goto yy1239;
 yy12:
 		YYDEBUG(12, *YYCURSOR);
-#line 1506 "ext/date/lib/parse_date.re"
+#line 1508 "ext/date/lib/parse_date.re"
 		{
 		add_error(s, "Unexpected character");
 		goto std;
 	}
-#line 1246 "ext/date/lib/parse_date.c"
+#line 1248 "ext/date/lib/parse_date.c"
 yy13:
 		YYDEBUG(13, *YYCURSOR);
 		yyaccept = 1;
 		yych = *(YYMARKER = ++YYCURSOR);
 		YYDEBUG(-1, yych);
 		switch(yych) {
-		case 0x09:	goto yy1198;
+		case 0x09:	goto yy1200;
 		case ' ':
 		case 'A':
 		case 'D':
@@ -1274,11 +1276,11 @@ yy13:
 		case 'm':
 		case 'o':
 		case 'w':
-		case 'y':	goto yy1200;
-		case '-':	goto yy660;
-		case '.':	goto yy1202;
-		case '/':	goto yy659;
-		case '0':	goto yy1235;
+		case 'y':	goto yy1202;
+		case '-':	goto yy662;
+		case '.':	goto yy1204;
+		case '/':	goto yy661;
+		case '0':	goto yy1237;
 		case '1':
 		case '2':
 		case '3':
@@ -1287,12 +1289,12 @@ yy13:
 		case '6':
 		case '7':
 		case '8':
-		case '9':	goto yy1234;
-		case ':':	goto yy1203;
-		case 'n':	goto yy657;
-		case 'r':	goto yy658;
-		case 's':	goto yy651;
-		case 't':	goto yy655;
+		case '9':	goto yy1236;
+		case ':':	goto yy1205;
+		case 'n':	goto yy659;
+		case 'r':	goto yy660;
+		case 's':	goto yy653;
+		case 't':	goto yy657;
 		default:	goto yy12;
 		}
 yy14:
@@ -1301,7 +1303,7 @@ yy14:
 		yych = *(YYMARKER = ++YYCURSOR);
 		YYDEBUG(-1, yych);
 		switch(yych) {
-		case 0x09:	goto yy647;
+		case 0x09:	goto yy649;
 		case ' ':
 		case 'A':
 		case 'D':
@@ -1328,25 +1330,25 @@ yy14:
 		case 'o':
 		case 'p':
 		case 'w':
-		case 'y':	goto yy649;
-		case '-':	goto yy660;
-		case '.':	goto yy661;
-		case '/':	goto yy659;
+		case 'y':	goto yy651;
+		case '-':	goto yy662;
+		case '.':	goto yy663;
+		case '/':	goto yy661;
 		case '0':
 		case '1':
-		case '2':	goto yy1234;
+		case '2':	goto yy1236;
 		case '3':
 		case '4':
 		case '5':
 		case '6':
 		case '7':
 		case '8':
-		case '9':	goto yy1201;
-		case ':':	goto yy670;
-		case 'n':	goto yy657;
-		case 'r':	goto yy658;
-		case 's':	goto yy651;
-		case 't':	goto yy655;
+		case '9':	goto yy1203;
+		case ':':	goto yy672;
+		case 'n':	goto yy659;
+		case 'r':	goto yy660;
+		case 's':	goto yy653;
+		case 't':	goto yy657;
 		default:	goto yy12;
 		}
 yy15:
@@ -1355,7 +1357,7 @@ yy15:
 		yych = *(YYMARKER = ++YYCURSOR);
 		YYDEBUG(-1, yych);
 		switch(yych) {
-		case 0x09:	goto yy647;
+		case 0x09:	goto yy649;
 		case ' ':
 		case 'A':
 		case 'D':
@@ -1382,25 +1384,25 @@ yy15:
 		case 'o':
 		case 'p':
 		case 'w':
-		case 'y':	goto yy649;
-		case '-':	goto yy660;
-		case '.':	goto yy661;
-		case '/':	goto yy659;
+		case 'y':	goto yy651;
+		case '-':	goto yy662;
+		case '.':	goto yy663;
+		case '/':	goto yy661;
 		case '0':
 		case '1':
 		case '2':
-		case '3':	goto yy1201;
+		case '3':	goto yy1203;
 		case '4':
 		case '5':
 		case '6':
 		case '7':
 		case '8':
-		case '9':	goto yy1197;
-		case ':':	goto yy670;
-		case 'n':	goto yy657;
-		case 'r':	goto yy658;
-		case 's':	goto yy651;
-		case 't':	goto yy655;
+		case '9':	goto yy1199;
+		case ':':	goto yy672;
+		case 'n':	goto yy659;
+		case 'r':	goto yy660;
+		case 's':	goto yy653;
+		case 't':	goto yy657;
 		default:	goto yy12;
 		}
 yy16:
@@ -1409,7 +1411,7 @@ yy16:
 		yych = *(YYMARKER = ++YYCURSOR);
 		YYDEBUG(-1, yych);
 		switch(yych) {
-		case 0x09:	goto yy647;
+		case 0x09:	goto yy649;
 		case ' ':
 		case 'A':
 		case 'D':
@@ -1436,12 +1438,12 @@ yy16:
 		case 'o':
 		case 'p':
 		case 'w':
-		case 'y':	goto yy649;
-		case '-':	goto yy660;
-		case '.':	goto yy661;
-		case '/':	goto yy659;
+		case 'y':	goto yy651;
+		case '-':	goto yy662;
+		case '.':	goto yy663;
+		case '/':	goto yy661;
 		case '0':
-		case '1':	goto yy1197;
+		case '1':	goto yy1199;
 		case '2':
 		case '3':
 		case '4':
@@ -1449,12 +1451,12 @@ yy16:
 		case '6':
 		case '7':
 		case '8':
-		case '9':	goto yy656;
-		case ':':	goto yy670;
-		case 'n':	goto yy657;
-		case 'r':	goto yy658;
-		case 's':	goto yy651;
-		case 't':	goto yy655;
+		case '9':	goto yy658;
+		case ':':	goto yy672;
+		case 'n':	goto yy659;
+		case 'r':	goto yy660;
+		case 's':	goto yy653;
+		case 't':	goto yy657;
 		default:	goto yy12;
 		}
 yy17:
@@ -1463,7 +1465,7 @@ yy17:
 		yych = *(YYMARKER = ++YYCURSOR);
 		YYDEBUG(-1, yych);
 		switch(yych) {
-		case 0x09:	goto yy647;
+		case 0x09:	goto yy649;
 		case ' ':
 		case 'A':
 		case 'D':
@@ -1490,10 +1492,10 @@ yy17:
 		case 'o':
 		case 'p':
 		case 'w':
-		case 'y':	goto yy649;
-		case '-':	goto yy660;
-		case '.':	goto yy661;
-		case '/':	goto yy659;
+		case 'y':	goto yy651;
+		case '-':	goto yy662;
+		case '.':	goto yy663;
+		case '/':	goto yy661;
 		case '0':
 		case '1':
 		case '2':
@@ -1503,12 +1505,12 @@ yy17:
 		case '6':
 		case '7':
 		case '8':
-		case '9':	goto yy656;
-		case ':':	goto yy670;
-		case 'n':	goto yy657;
-		case 'r':	goto yy658;
-		case 's':	goto yy651;
-		case 't':	goto yy655;
+		case '9':	goto yy658;
+		case ':':	goto yy672;
+		case 'n':	goto yy659;
+		case 'r':	goto yy660;
+		case 's':	goto yy653;
+		case 't':	goto yy657;
 		default:	goto yy12;
 		}
 yy18:
@@ -1519,9 +1521,9 @@ yy18:
 			if(yych <= '(') {
 				if(yych <= 0x09) {
 					if(yych <= 0x08) goto yy3;
-					goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
+					if(yych == ' ') goto yy314;
 					goto yy3;
 				}
 			} else {
@@ -1530,7 +1532,7 @@ yy18:
 					goto yy3;
 				} else {
 					if(yych == '/') goto yy3;
-					goto yy312;
+					goto yy314;
 				}
 			}
 		} else {
@@ -1539,13 +1541,13 @@ yy18:
 					if(yych <= '@') goto yy3;
 					goto yy137;
 				} else {
-					if(yych <= 'I') goto yy646;
+					if(yych <= 'I') goto yy648;
 					if(yych <= 'U') goto yy137;
-					goto yy645;
+					goto yy647;
 				}
 			} else {
 				if(yych <= 'Z') {
-					if(yych == 'X') goto yy645;
+					if(yych == 'X') goto yy647;
 					goto yy137;
 				} else {
 					if(yych <= '`') goto yy3;
@@ -1560,23 +1562,23 @@ yy19:
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy312;
+				if(yych == 0x09) goto yy314;
 				if(yych <= 0x1F) goto yy3;
-				goto yy312;
+				goto yy314;
 			} else {
 				if(yych == ')') goto yy136;
 				if(yych <= ',') goto yy3;
-				goto yy312;
+				goto yy314;
 			}
 		} else {
 			if(yych <= 'H') {
 				if(yych <= '/') goto yy3;
-				if(yych <= '9') goto yy312;
+				if(yych <= '9') goto yy314;
 				if(yych <= '@') goto yy3;
 				goto yy137;
 			} else {
 				if(yych <= 'Z') {
-					if(yych <= 'I') goto yy642;
+					if(yych <= 'I') goto yy644;
 					goto yy137;
 				} else {
 					if(yych <= '`') goto yy3;
@@ -1591,23 +1593,23 @@ yy20:
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy312;
+				if(yych == 0x09) goto yy314;
 				if(yych <= 0x1F) goto yy3;
-				goto yy312;
+				goto yy314;
 			} else {
 				if(yych == ')') goto yy136;
 				if(yych <= ',') goto yy3;
-				goto yy312;
+				goto yy314;
 			}
 		} else {
 			if(yych <= 'H') {
 				if(yych <= '/') goto yy3;
-				if(yych <= '9') goto yy312;
+				if(yych <= '9') goto yy314;
 				if(yych <= '@') goto yy3;
 				goto yy137;
 			} else {
 				if(yych <= 'Z') {
-					if(yych <= 'I') goto yy640;
+					if(yych <= 'I') goto yy642;
 					goto yy137;
 				} else {
 					if(yych <= '`') goto yy3;
@@ -1624,17 +1626,17 @@ yy21:
 				if(yych == ')') goto yy136;
 				goto yy3;
 			} else {
-				if(yych <= 'A') goto yy623;
+				if(yych <= 'A') goto yy625;
 				if(yych <= 'T') goto yy137;
-				goto yy622;
+				goto yy624;
 			}
 		} else {
 			if(yych <= 'a') {
 				if(yych <= 'Z') goto yy137;
 				if(yych <= '`') goto yy3;
-				goto yy632;
+				goto yy634;
 			} else {
-				if(yych == 'u') goto yy631;
+				if(yych == 'u') goto yy633;
 				if(yych <= 'z') goto yy142;
 				goto yy3;
 			}
@@ -1647,17 +1649,17 @@ yy22:
 				if(yych == ')') goto yy136;
 				goto yy3;
 			} else {
-				if(yych <= 'A') goto yy623;
+				if(yych <= 'A') goto yy625;
 				if(yych <= 'T') goto yy137;
-				goto yy622;
+				goto yy624;
 			}
 		} else {
 			if(yych <= 'a') {
 				if(yych <= 'Z') goto yy137;
 				if(yych <= '`') goto yy3;
-				goto yy623;
+				goto yy625;
 			} else {
-				if(yych == 'u') goto yy622;
+				if(yych == 'u') goto yy624;
 				if(yych <= 'z') goto yy137;
 				goto yy3;
 			}
@@ -1673,16 +1675,16 @@ yy23:
 				} else {
 					if(yych <= '@') goto yy3;
 					if(yych <= 'D') goto yy137;
-					goto yy584;
+					goto yy586;
 				}
 			} else {
 				if(yych <= 'N') {
-					if(yych == 'I') goto yy585;
+					if(yych == 'I') goto yy587;
 					goto yy137;
 				} else {
-					if(yych <= 'O') goto yy586;
+					if(yych <= 'O') goto yy588;
 					if(yych <= 'Q') goto yy137;
-					goto yy587;
+					goto yy589;
 				}
 			}
 		} else {
@@ -1692,16 +1694,16 @@ yy23:
 					if(yych <= '`') goto yy3;
 					goto yy142;
 				} else {
-					if(yych <= 'e') goto yy603;
+					if(yych <= 'e') goto yy605;
 					if(yych <= 'h') goto yy142;
-					goto yy604;
+					goto yy606;
 				}
 			} else {
 				if(yych <= 'q') {
-					if(yych == 'o') goto yy605;
+					if(yych == 'o') goto yy607;
 					goto yy142;
 				} else {
-					if(yych <= 'r') goto yy606;
+					if(yych <= 'r') goto yy608;
 					if(yych <= 'z') goto yy142;
 					goto yy3;
 				}
@@ -1718,16 +1720,16 @@ yy24:
 				} else {
 					if(yych <= '@') goto yy3;
 					if(yych <= 'D') goto yy137;
-					goto yy584;
+					goto yy586;
 				}
 			} else {
 				if(yych <= 'N') {
-					if(yych == 'I') goto yy585;
+					if(yych == 'I') goto yy587;
 					goto yy137;
 				} else {
-					if(yych <= 'O') goto yy586;
+					if(yych <= 'O') goto yy588;
 					if(yych <= 'Q') goto yy137;
-					goto yy587;
+					goto yy589;
 				}
 			}
 		} else {
@@ -1737,16 +1739,16 @@ yy24:
 					if(yych <= '`') goto yy3;
 					goto yy137;
 				} else {
-					if(yych <= 'e') goto yy584;
+					if(yych <= 'e') goto yy586;
 					if(yych <= 'h') goto yy137;
-					goto yy585;
+					goto yy587;
 				}
 			} else {
 				if(yych <= 'q') {
-					if(yych == 'o') goto yy586;
+					if(yych == 'o') goto yy588;
 					goto yy137;
 				} else {
-					if(yych <= 'r') goto yy587;
+					if(yych <= 'r') goto yy589;
 					if(yych <= 'z') goto yy137;
 					goto yy3;
 				}
@@ -1762,12 +1764,12 @@ yy25:
 				goto yy137;
 			} else {
 				if(yych <= 'O') {
-					if(yych <= 'G') goto yy563;
+					if(yych <= 'G') goto yy565;
 					goto yy137;
 				} else {
-					if(yych <= 'P') goto yy562;
+					if(yych <= 'P') goto yy564;
 					if(yych <= 'T') goto yy137;
-					goto yy561;
+					goto yy563;
 				}
 			}
 		} else {
@@ -1776,15 +1778,15 @@ yy25:
 					if(yych <= 'Z') goto yy137;
 					goto yy3;
 				} else {
-					if(yych == 'g') goto yy575;
+					if(yych == 'g') goto yy577;
 					goto yy142;
 				}
 			} else {
 				if(yych <= 't') {
-					if(yych <= 'p') goto yy574;
+					if(yych <= 'p') goto yy576;
 					goto yy142;
 				} else {
-					if(yych <= 'u') goto yy573;
+					if(yych <= 'u') goto yy575;
 					if(yych <= 'z') goto yy142;
 					goto yy3;
 				}
@@ -1800,12 +1802,12 @@ yy26:
 				goto yy137;
 			} else {
 				if(yych <= 'O') {
-					if(yych <= 'G') goto yy563;
+					if(yych <= 'G') goto yy565;
 					goto yy137;
 				} else {
-					if(yych <= 'P') goto yy562;
+					if(yych <= 'P') goto yy564;
 					if(yych <= 'T') goto yy137;
-					goto yy561;
+					goto yy563;
 				}
 			}
 		} else {
@@ -1814,15 +1816,15 @@ yy26:
 					if(yych <= 'Z') goto yy137;
 					goto yy3;
 				} else {
-					if(yych == 'g') goto yy563;
+					if(yych == 'g') goto yy565;
 					goto yy137;
 				}
 			} else {
 				if(yych <= 't') {
-					if(yych <= 'p') goto yy562;
+					if(yych <= 'p') goto yy564;
 					goto yy137;
 				} else {
-					if(yych <= 'u') goto yy561;
+					if(yych <= 'u') goto yy563;
 					if(yych <= 'z') goto yy137;
 					goto yy3;
 				}
@@ -1838,17 +1840,17 @@ yy27:
 					goto yy136;
 				} else {
 					if(yych <= '@') goto yy3;
-					if(yych <= 'A') goto yy504;
+					if(yych <= 'A') goto yy506;
 					goto yy137;
 				}
 			} else {
 				if(yych <= 'H') {
-					if(yych <= 'E') goto yy503;
+					if(yych <= 'E') goto yy505;
 					goto yy137;
 				} else {
-					if(yych <= 'I') goto yy505;
+					if(yych <= 'I') goto yy507;
 					if(yych <= 'T') goto yy137;
-					goto yy506;
+					goto yy508;
 				}
 			}
 		} else {
@@ -1857,16 +1859,16 @@ yy27:
 					if(yych <= 'Z') goto yy137;
 					goto yy3;
 				} else {
-					if(yych <= 'a') goto yy533;
+					if(yych <= 'a') goto yy535;
 					if(yych <= 'd') goto yy142;
-					goto yy532;
+					goto yy534;
 				}
 			} else {
 				if(yych <= 't') {
-					if(yych == 'i') goto yy534;
+					if(yych == 'i') goto yy536;
 					goto yy142;
 				} else {
-					if(yych <= 'u') goto yy535;
+					if(yych <= 'u') goto yy537;
 					if(yych <= 'z') goto yy142;
 					goto yy3;
 				}
@@ -1882,17 +1884,17 @@ yy28:
 					goto yy136;
 				} else {
 					if(yych <= '@') goto yy3;
-					if(yych <= 'A') goto yy504;
+					if(yych <= 'A') goto yy506;
 					goto yy137;
 				}
 			} else {
 				if(yych <= 'H') {
-					if(yych <= 'E') goto yy503;
+					if(yych <= 'E') goto yy505;
 					goto yy137;
 				} else {
-					if(yych <= 'I') goto yy505;
+					if(yych <= 'I') goto yy507;
 					if(yych <= 'T') goto yy137;
-					goto yy506;
+					goto yy508;
 				}
 			}
 		} else {
@@ -1901,16 +1903,16 @@ yy28:
 					if(yych <= 'Z') goto yy137;
 					goto yy3;
 				} else {
-					if(yych <= 'a') goto yy504;
+					if(yych <= 'a') goto yy506;
 					if(yych <= 'd') goto yy137;
-					goto yy503;
+					goto yy505;
 				}
 			} else {
 				if(yych <= 't') {
-					if(yych == 'i') goto yy505;
+					if(yych == 'i') goto yy507;
 					goto yy137;
 				} else {
-					if(yych <= 'u') goto yy506;
+					if(yych <= 'u') goto yy508;
 					if(yych <= 'z') goto yy137;
 					goto yy3;
 				}
@@ -1926,7 +1928,7 @@ yy29:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'B') goto yy137;
-				goto yy493;
+				goto yy495;
 			}
 		} else {
 			if(yych <= 'b') {
@@ -1934,7 +1936,7 @@ yy29:
 				if(yych <= '`') goto yy3;
 				goto yy142;
 			} else {
-				if(yych <= 'c') goto yy498;
+				if(yych <= 'c') goto yy500;
 				if(yych <= 'z') goto yy142;
 				goto yy3;
 			}
@@ -1949,7 +1951,7 @@ yy30:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'B') goto yy137;
-				goto yy493;
+				goto yy495;
 			}
 		} else {
 			if(yych <= 'b') {
@@ -1957,7 +1959,7 @@ yy30:
 				if(yych <= '`') goto yy3;
 				goto yy137;
 			} else {
-				if(yych <= 'c') goto yy493;
+				if(yych <= 'c') goto yy495;
 				if(yych <= 'z') goto yy137;
 				goto yy3;
 			}
@@ -1972,7 +1974,7 @@ yy31:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy137;
-				goto yy308;
+				goto yy310;
 			}
 		} else {
 			if(yych <= 'd') {
@@ -1980,7 +1982,7 @@ yy31:
 				if(yych <= '`') goto yy3;
 				goto yy142;
 			} else {
-				if(yych <= 'e') goto yy486;
+				if(yych <= 'e') goto yy488;
 				if(yych <= 'z') goto yy142;
 				goto yy3;
 			}
@@ -1995,7 +1997,7 @@ yy32:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy137;
-				goto yy308;
+				goto yy310;
 			}
 		} else {
 			if(yych <= 'd') {
@@ -2003,7 +2005,7 @@ yy32:
 				if(yych <= '`') goto yy3;
 				goto yy137;
 			} else {
-				if(yych <= 'e') goto yy308;
+				if(yych <= 'e') goto yy310;
 				if(yych <= 'z') goto yy137;
 				goto yy3;
 			}
@@ -2018,7 +2020,7 @@ yy33:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy137;
-				goto yy281;
+				goto yy283;
 			}
 		} else {
 			if(yych <= 'd') {
@@ -2026,7 +2028,7 @@ yy33:
 				if(yych <= '`') goto yy3;
 				goto yy142;
 			} else {
-				if(yych <= 'e') goto yy295;
+				if(yych <= 'e') goto yy297;
 				if(yych <= 'z') goto yy142;
 				goto yy3;
 			}
@@ -2041,7 +2043,7 @@ yy34:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy137;
-				goto yy281;
+				goto yy283;
 			}
 		} else {
 			if(yych <= 'd') {
@@ -2049,7 +2051,7 @@ yy34:
 				if(yych <= '`') goto yy3;
 				goto yy137;
 			} else {
-				if(yych <= 'e') goto yy281;
+				if(yych <= 'e') goto yy283;
 				if(yych <= 'z') goto yy137;
 				goto yy3;
 			}
@@ -2062,18 +2064,18 @@ yy35:
 				if(yych == ')') goto yy136;
 				goto yy3;
 			} else {
-				if(yych == 'I') goto yy261;
+				if(yych == 'I') goto yy263;
 				if(yych <= 'K') goto yy137;
-				goto yy262;
+				goto yy264;
 			}
 		} else {
 			if(yych <= 'i') {
 				if(yych <= 'Z') goto yy137;
 				if(yych <= '`') goto yy3;
 				if(yych <= 'h') goto yy142;
-				goto yy271;
+				goto yy273;
 			} else {
-				if(yych == 'l') goto yy272;
+				if(yych == 'l') goto yy274;
 				if(yych <= 'z') goto yy142;
 				goto yy3;
 			}
@@ -2086,18 +2088,18 @@ yy36:
 				if(yych == ')') goto yy136;
 				goto yy3;
 			} else {
-				if(yych == 'I') goto yy261;
+				if(yych == 'I') goto yy263;
 				if(yych <= 'K') goto yy137;
-				goto yy262;
+				goto yy264;
 			}
 		} else {
 			if(yych <= 'i') {
 				if(yych <= 'Z') goto yy137;
 				if(yych <= '`') goto yy3;
 				if(yych <= 'h') goto yy137;
-				goto yy261;
+				goto yy263;
 			} else {
-				if(yych == 'l') goto yy262;
+				if(yych == 'l') goto yy264;
 				if(yych <= 'z') goto yy137;
 				goto yy3;
 			}
@@ -2108,13 +2110,13 @@ yy37:
 		if(yych <= 'A') {
 			if(yych == ')') goto yy136;
 			if(yych <= '@') goto yy3;
-			goto yy255;
+			goto yy257;
 		} else {
 			if(yych <= '`') {
 				if(yych <= 'Z') goto yy137;
 				goto yy3;
 			} else {
-				if(yych <= 'a') goto yy258;
+				if(yych <= 'a') goto yy260;
 				if(yych <= 'z') goto yy142;
 				goto yy3;
 			}
@@ -2125,13 +2127,13 @@ yy38:
 		if(yych <= 'A') {
 			if(yych == ')') goto yy136;
 			if(yych <= '@') goto yy3;
-			goto yy255;
+			goto yy257;
 		} else {
 			if(yych <= '`') {
 				if(yych <= 'Z') goto yy137;
 				goto yy3;
 			} else {
-				if(yych <= 'a') goto yy255;
+				if(yych <= 'a') goto yy257;
 				if(yych <= 'z') goto yy137;
 				goto yy3;
 			}
@@ -2146,7 +2148,7 @@ yy39:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'Q') goto yy137;
-				goto yy161;
+				goto yy163;
 			}
 		} else {
 			if(yych <= 'q') {
@@ -2154,7 +2156,7 @@ yy39:
 				if(yych <= '`') goto yy3;
 				goto yy142;
 			} else {
-				if(yych <= 'r') goto yy248;
+				if(yych <= 'r') goto yy250;
 				if(yych <= 'z') goto yy142;
 				goto yy3;
 			}
@@ -2169,7 +2171,7 @@ yy40:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'Q') goto yy137;
-				goto yy161;
+				goto yy163;
 			}
 		} else {
 			if(yych <= 'q') {
@@ -2177,7 +2179,7 @@ yy40:
 				if(yych <= '`') goto yy3;
 				goto yy137;
 			} else {
-				if(yych <= 'r') goto yy161;
+				if(yych <= 'r') goto yy163;
 				if(yych <= 'z') goto yy137;
 				goto yy3;
 			}
@@ -2186,14 +2188,25 @@ yy41:
 		YYDEBUG(41, *YYCURSOR);
 		yyaccept = 1;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yybm[0+yych] & 16) {
+		if(yybm[0+yych] & 8) {
 			goto yy54;
 		}
-		if(yych <= '/') goto yy12;
-		if(yych <= '1') goto yy154;
-		if(yych <= '2') goto yy155;
-		if(yych <= '9') goto yy156;
-		goto yy12;
+		YYDEBUG(-1, yych);
+		switch(yych) {
+		case '+':
+		case '-':	goto yy157;
+		case '0':
+		case '1':	goto yy154;
+		case '2':	goto yy155;
+		case '3':
+		case '4':
+		case '5':
+		case '6':
+		case '7':
+		case '8':
+		case '9':	goto yy156;
+		default:	goto yy12;
+		}
 yy42:
 		YYDEBUG(42, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -2230,18 +2243,18 @@ yy45:
 		YYDEBUG(45, *YYCURSOR);
 		yyaccept = 2;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yybm[0+yych] & 16) {
+		if(yybm[0+yych] & 8) {
 			goto yy54;
 		}
 		if(yych <= '/') goto yy46;
 		if(yych <= '9') goto yy51;
 yy46:
 		YYDEBUG(46, *YYCURSOR);
-#line 1495 "ext/date/lib/parse_date.re"
+#line 1497 "ext/date/lib/parse_date.re"
 		{
 		goto std;
 	}
-#line 2245 "ext/date/lib/parse_date.c"
+#line 2258 "ext/date/lib/parse_date.c"
 yy47:
 		YYDEBUG(47, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -2250,12 +2263,12 @@ yy48:
 		YYDEBUG(48, *YYCURSOR);
 		++YYCURSOR;
 		YYDEBUG(49, *YYCURSOR);
-#line 1500 "ext/date/lib/parse_date.re"
+#line 1502 "ext/date/lib/parse_date.re"
 		{
 		s->pos = cursor; s->line++;
 		goto std;
 	}
-#line 2259 "ext/date/lib/parse_date.c"
+#line 2272 "ext/date/lib/parse_date.c"
 yy50:
 		YYDEBUG(50, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -2266,7 +2279,7 @@ yy51:
 		if((YYLIMIT - YYCURSOR) < 11) YYFILL(11);
 		yych = *YYCURSOR;
 		YYDEBUG(52, *YYCURSOR);
-		if(yybm[0+yych] & 8) {
+		if(yybm[0+yych] & 4) {
 			goto yy51;
 		}
 		if(yych <= 'W') {
@@ -2340,15 +2353,15 @@ yy53:
 				} else {
 					if(yyaccept <= 5) {
 						if(yyaccept <= 4) {
-							goto yy181;
+							goto yy183;
 						} else {
-							goto yy283;
+							goto yy285;
 						}
 					} else {
 						if(yyaccept <= 6) {
-							goto yy310;
+							goto yy312;
 						} else {
-							goto yy315;
+							goto yy317;
 						}
 					}
 				}
@@ -2356,26 +2369,26 @@ yy53:
 				if(yyaccept <= 11) {
 					if(yyaccept <= 9) {
 						if(yyaccept <= 8) {
-							goto yy339;
+							goto yy341;
 						} else {
-							goto yy409;
+							goto yy411;
 						}
 					} else {
 						if(yyaccept <= 10) {
-							goto yy565;
+							goto yy567;
 						} else {
-							goto yy663;
+							goto yy665;
 						}
 					}
 				} else {
 					if(yyaccept <= 13) {
 						if(yyaccept <= 12) {
-							goto yy678;
+							goto yy680;
 						} else {
-							goto yy825;
+							goto yy827;
 						}
 					} else {
-						goto yy835;
+						goto yy837;
 					}
 				}
 			}
@@ -2384,29 +2397,29 @@ yy53:
 				if(yyaccept <= 18) {
 					if(yyaccept <= 16) {
 						if(yyaccept <= 15) {
-							goto yy936;
+							goto yy938;
 						} else {
-							goto yy964;
+							goto yy966;
 						}
 					} else {
 						if(yyaccept <= 17) {
-							goto yy971;
+							goto yy973;
 						} else {
-							goto yy998;
+							goto yy1000;
 						}
 					}
 				} else {
 					if(yyaccept <= 20) {
 						if(yyaccept <= 19) {
-							goto yy943;
+							goto yy945;
 						} else {
-							goto yy1100;
+							goto yy1102;
 						}
 					} else {
 						if(yyaccept <= 21) {
-							goto yy1124;
+							goto yy1126;
 						} else {
-							goto yy992;
+							goto yy994;
 						}
 					}
 				}
@@ -2414,26 +2427,26 @@ yy53:
 				if(yyaccept <= 26) {
 					if(yyaccept <= 24) {
 						if(yyaccept <= 23) {
-							goto yy1206;
+							goto yy1208;
 						} else {
-							goto yy1214;
+							goto yy1216;
 						}
 					} else {
 						if(yyaccept <= 25) {
-							goto yy1269;
+							goto yy1271;
 						} else {
-							goto yy1272;
+							goto yy1274;
 						}
 					}
 				} else {
 					if(yyaccept <= 28) {
 						if(yyaccept <= 27) {
-							goto yy1350;
+							goto yy1352;
 						} else {
-							goto yy1358;
+							goto yy1360;
 						}
 					} else {
-						goto yy1381;
+						goto yy1383;
 					}
 				}
 			}
@@ -2444,7 +2457,7 @@ yy54:
 		if(YYLIMIT == YYCURSOR) YYFILL(1);
 		yych = *YYCURSOR;
 		YYDEBUG(55, *YYCURSOR);
-		if(yybm[0+yych] & 16) {
+		if(yybm[0+yych] & 8) {
 			goto yy54;
 		}
 		if(yych <= '/') goto yy53;
@@ -2626,7 +2639,7 @@ yy68:
 		if(yych == 's') goto yy70;
 yy69:
 		YYDEBUG(69, *YYCURSOR);
-#line 1479 "ext/date/lib/parse_date.re"
+#line 1481 "ext/date/lib/parse_date.re"
 		{
 		timelib_ull i;
 		DEBUG_OUTPUT("relative");
@@ -2641,7 +2654,7 @@ yy69:
 		TIMELIB_DEINIT;
 		return TIMELIB_RELATIVE;
 	}
-#line 2645 "ext/date/lib/parse_date.c"
+#line 2658 "ext/date/lib/parse_date.c"
 yy70:
 		YYDEBUG(70, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -3160,7 +3173,7 @@ yy144:
 		++YYCURSOR;
 		if(YYLIMIT == YYCURSOR) YYFILL(1);
 		yych = *YYCURSOR;
-		if(yybm[0+yych] & 32) {
+		if(yybm[0+yych] & 16) {
 			goto yy146;
 		}
 		goto yy53;
@@ -3171,7 +3184,7 @@ yy146:
 		if(YYLIMIT == YYCURSOR) YYFILL(1);
 		yych = *YYCURSOR;
 		YYDEBUG(147, *YYCURSOR);
-		if(yybm[0+yych] & 32) {
+		if(yybm[0+yych] & 16) {
 			goto yy146;
 		}
 		if(yych == '/') goto yy144;
@@ -3281,7 +3294,7 @@ yy154:
 						if(yych <= '/') goto yy3;
 						goto yy156;
 					} else {
-						if(yych <= ':') goto yy157;
+						if(yych <= ':') goto yy159;
 						if(yych <= 'C') goto yy3;
 						goto yy57;
 					}
@@ -3347,9 +3360,9 @@ yy155:
 					if(yych <= '3') {
 						if(yych <= '/') goto yy3;
 					} else {
-						if(yych <= '5') goto yy158;
-						if(yych <= '9') goto yy159;
-						goto yy157;
+						if(yych <= '5') goto yy160;
+						if(yych <= '9') goto yy161;
+						goto yy159;
 					}
 				}
 			} else {
@@ -3421,10 +3434,11 @@ yy156:
 				} else {
 					if(yych <= '5') {
 						if(yych <= '/') goto yy3;
-						goto yy158;
+						goto yy160;
 					} else {
-						if(yych <= '9') goto yy159;
-						if(yych >= ';') goto yy3;
+						if(yych <= '9') goto yy161;
+						if(yych <= ':') goto yy159;
+						goto yy3;
 					}
 				}
 			} else {
@@ -3481,13 +3495,31 @@ yy156:
 		}
 yy157:
 		YYDEBUG(157, *YYCURSOR);
+		++YYCURSOR;
+		if(YYLIMIT == YYCURSOR) YYFILL(1);
+		yych = *YYCURSOR;
+		YYDEBUG(158, *YYCURSOR);
+		if(yybm[0+yych] & 8) {
+			goto yy54;
+		}
+		if(yych <= ',') {
+			if(yych == '+') goto yy157;
+			goto yy53;
+		} else {
+			if(yych <= '-') goto yy157;
+			if(yych <= '/') goto yy53;
+			if(yych <= '9') goto yy51;
+			goto yy53;
+		}
+yy159:
+		YYDEBUG(159, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy3;
-		if(yych <= '5') goto yy160;
+		if(yych <= '5') goto yy162;
 		if(yych <= '9') goto yy136;
 		goto yy3;
-yy158:
-		YYDEBUG(158, *YYCURSOR);
+yy160:
+		YYDEBUG(160, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'V') {
@@ -3498,7 +3530,7 @@ yy158:
 					goto yy57;
 				} else {
 					if(yych <= '/') goto yy3;
-					if(yych <= '9') goto yy159;
+					if(yych <= '9') goto yy161;
 					if(yych <= 'C') goto yy3;
 					goto yy57;
 				}
@@ -3549,11 +3581,11 @@ yy158:
 				}
 			}
 		}
-yy159:
-		YYDEBUG(159, *YYCURSOR);
+yy161:
+		YYDEBUG(161, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yybm[0+yych] & 8) {
+		if(yybm[0+yych] & 4) {
 			goto yy51;
 		}
 		if(yych <= 'W') {
@@ -3606,14 +3638,14 @@ yy159:
 				}
 			}
 		}
-yy160:
-		YYDEBUG(160, *YYCURSOR);
+yy162:
+		YYDEBUG(162, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy3;
 		if(yych <= '9') goto yy136;
 		goto yy3;
-yy161:
-		YYDEBUG(161, *YYCURSOR);
+yy163:
+		YYDEBUG(163, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'E') {
 			if(yych <= ')') {
@@ -3629,13 +3661,13 @@ yy161:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'e') goto yy162;
+				if(yych <= 'e') goto yy164;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy162:
-		YYDEBUG(162, *YYCURSOR);
+yy164:
+		YYDEBUG(164, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'V') {
 			if(yych <= ')') {
@@ -3651,13 +3683,13 @@ yy162:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 'v') goto yy163;
+				if(yych <= 'v') goto yy165;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy163:
-		YYDEBUG(163, *YYCURSOR);
+yy165:
+		YYDEBUG(165, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'I') {
 			if(yych <= ')') {
@@ -3673,13 +3705,13 @@ yy163:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'i') goto yy164;
+				if(yych <= 'i') goto yy166;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy164:
-		YYDEBUG(164, *YYCURSOR);
+yy166:
+		YYDEBUG(166, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'O') {
 			if(yych <= ')') {
@@ -3695,207 +3727,207 @@ yy164:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'o') goto yy165;
+				if(yych <= 'o') goto yy167;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy165:
-		YYDEBUG(165, *YYCURSOR);
+yy167:
+		YYDEBUG(167, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'U') goto yy166;
+			if(yych <= 'U') goto yy168;
 			if(yych != 'u') goto yy3;
 		}
-yy166:
-		YYDEBUG(166, *YYCURSOR);
+yy168:
+		YYDEBUG(168, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'S') goto yy167;
+		if(yych == 'S') goto yy169;
 		if(yych != 's') goto yy53;
-yy167:
-		YYDEBUG(167, *YYCURSOR);
+yy169:
+		YYDEBUG(169, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 0x09) goto yy168;
+		if(yych == 0x09) goto yy170;
 		if(yych != ' ') goto yy53;
-yy168:
-		YYDEBUG(168, *YYCURSOR);
+yy170:
+		YYDEBUG(170, *YYCURSOR);
 		++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 11) YYFILL(11);
 		yych = *YYCURSOR;
-		YYDEBUG(169, *YYCURSOR);
+		YYDEBUG(171, *YYCURSOR);
 		if(yych <= 'W') {
 			if(yych <= 'F') {
 				if(yych <= ' ') {
-					if(yych == 0x09) goto yy168;
+					if(yych == 0x09) goto yy170;
 					if(yych <= 0x1F) goto yy53;
-					goto yy168;
+					goto yy170;
 				} else {
-					if(yych == 'D') goto yy173;
+					if(yych == 'D') goto yy175;
 					if(yych <= 'E') goto yy53;
-					goto yy175;
+					goto yy177;
 				}
 			} else {
 				if(yych <= 'M') {
-					if(yych == 'H') goto yy172;
+					if(yych == 'H') goto yy174;
 					if(yych <= 'L') goto yy53;
-					goto yy171;
+					goto yy173;
 				} else {
 					if(yych <= 'S') {
 						if(yych <= 'R') goto yy53;
 					} else {
-						if(yych <= 'T') goto yy177;
+						if(yych <= 'T') goto yy179;
 						if(yych <= 'V') goto yy53;
-						goto yy174;
+						goto yy176;
 					}
 				}
 			}
 		} else {
 			if(yych <= 'l') {
 				if(yych <= 'd') {
-					if(yych == 'Y') goto yy176;
+					if(yych == 'Y') goto yy178;
 					if(yych <= 'c') goto yy53;
-					goto yy173;
+					goto yy175;
 				} else {
 					if(yych <= 'f') {
 						if(yych <= 'e') goto yy53;
-						goto yy175;
+						goto yy177;
 					} else {
-						if(yych == 'h') goto yy172;
+						if(yych == 'h') goto yy174;
 						goto yy53;
 					}
 				}
 			} else {
 				if(yych <= 't') {
-					if(yych <= 'm') goto yy171;
+					if(yych <= 'm') goto yy173;
 					if(yych <= 'r') goto yy53;
-					if(yych >= 't') goto yy177;
+					if(yych >= 't') goto yy179;
 				} else {
 					if(yych <= 'w') {
 						if(yych <= 'v') goto yy53;
-						goto yy174;
+						goto yy176;
 					} else {
-						if(yych == 'y') goto yy176;
+						if(yych == 'y') goto yy178;
 						goto yy53;
 					}
 				}
 			}
 		}
-		YYDEBUG(170, *YYCURSOR);
+		YYDEBUG(172, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
 			if(yych <= 'D') {
-				if(yych == 'A') goto yy235;
+				if(yych == 'A') goto yy237;
 				goto yy53;
 			} else {
-				if(yych <= 'E') goto yy236;
+				if(yych <= 'E') goto yy238;
 				if(yych <= 'T') goto yy53;
-				goto yy234;
+				goto yy236;
 			}
 		} else {
 			if(yych <= 'd') {
-				if(yych == 'a') goto yy235;
+				if(yych == 'a') goto yy237;
 				goto yy53;
 			} else {
-				if(yych <= 'e') goto yy236;
-				if(yych == 'u') goto yy234;
+				if(yych <= 'e') goto yy238;
+				if(yych == 'u') goto yy236;
 				goto yy53;
 			}
 		}
-yy171:
-		YYDEBUG(171, *YYCURSOR);
+yy173:
+		YYDEBUG(173, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'O') {
-			if(yych == 'I') goto yy226;
+			if(yych == 'I') goto yy228;
 			if(yych <= 'N') goto yy53;
-			goto yy225;
+			goto yy227;
 		} else {
 			if(yych <= 'i') {
 				if(yych <= 'h') goto yy53;
-				goto yy226;
+				goto yy228;
 			} else {
-				if(yych == 'o') goto yy225;
+				if(yych == 'o') goto yy227;
 				goto yy53;
 			}
 		}
-yy172:
-		YYDEBUG(172, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'O') goto yy223;
-		if(yych == 'o') goto yy223;
-		goto yy53;
-yy173:
-		YYDEBUG(173, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy222;
-		if(yych == 'a') goto yy222;
-		goto yy53;
 yy174:
 		YYDEBUG(174, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy210;
-		if(yych == 'e') goto yy210;
+		if(yych == 'O') goto yy225;
+		if(yych == 'o') goto yy225;
 		goto yy53;
 yy175:
 		YYDEBUG(175, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if(yych == 'A') goto yy224;
+		if(yych == 'a') goto yy224;
+		goto yy53;
+yy176:
+		YYDEBUG(176, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'E') goto yy212;
+		if(yych == 'e') goto yy212;
+		goto yy53;
+yy177:
+		YYDEBUG(177, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if(yych <= 'R') {
-			if(yych == 'O') goto yy195;
+			if(yych == 'O') goto yy197;
 			if(yych <= 'Q') goto yy53;
-			goto yy194;
+			goto yy196;
 		} else {
 			if(yych <= 'o') {
 				if(yych <= 'n') goto yy53;
-				goto yy195;
+				goto yy197;
 			} else {
-				if(yych == 'r') goto yy194;
+				if(yych == 'r') goto yy196;
 				goto yy53;
 			}
 		}
-yy176:
-		YYDEBUG(176, *YYCURSOR);
+yy178:
+		YYDEBUG(178, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy191;
-		if(yych == 'e') goto yy191;
+		if(yych == 'E') goto yy193;
+		if(yych == 'e') goto yy193;
 		goto yy53;
-yy177:
-		YYDEBUG(177, *YYCURSOR);
+yy179:
+		YYDEBUG(179, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
-			if(yych == 'H') goto yy178;
+			if(yych == 'H') goto yy180;
 			if(yych <= 'T') goto yy53;
-			goto yy179;
+			goto yy181;
 		} else {
 			if(yych <= 'h') {
 				if(yych <= 'g') goto yy53;
 			} else {
-				if(yych == 'u') goto yy179;
+				if(yych == 'u') goto yy181;
 				goto yy53;
 			}
 		}
-yy178:
-		YYDEBUG(178, *YYCURSOR);
+yy180:
+		YYDEBUG(180, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'U') goto yy186;
-		if(yych == 'u') goto yy186;
+		if(yych == 'U') goto yy188;
+		if(yych == 'u') goto yy188;
 		goto yy53;
-yy179:
-		YYDEBUG(179, *YYCURSOR);
+yy181:
+		YYDEBUG(181, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy180;
+		if(yych == 'E') goto yy182;
 		if(yych != 'e') goto yy53;
-yy180:
-		YYDEBUG(180, *YYCURSOR);
+yy182:
+		YYDEBUG(182, *YYCURSOR);
 		yyaccept = 4;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == 'S') goto yy182;
-		if(yych == 's') goto yy182;
-yy181:
-		YYDEBUG(181, *YYCURSOR);
-#line 1384 "ext/date/lib/parse_date.re"
+		if(yych == 'S') goto yy184;
+		if(yych == 's') goto yy184;
+yy183:
+		YYDEBUG(183, *YYCURSOR);
+#line 1386 "ext/date/lib/parse_date.re"
 		{
 		timelib_sll i;
 		int         behavior = 0;
@@ -3911,53 +3943,42 @@ yy181:
 		TIMELIB_DEINIT;
 		return TIMELIB_RELATIVE;
 	}
-#line 3915 "ext/date/lib/parse_date.c"
-yy182:
-		YYDEBUG(182, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'D') goto yy183;
-		if(yych != 'd') goto yy53;
-yy183:
-		YYDEBUG(183, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy184;
-		if(yych != 'a') goto yy53;
+#line 3947 "ext/date/lib/parse_date.c"
 yy184:
 		YYDEBUG(184, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy185;
-		if(yych != 'y') goto yy53;
+		if(yych == 'D') goto yy185;
+		if(yych != 'd') goto yy53;
 yy185:
 		YYDEBUG(185, *YYCURSOR);
 		yych = *++YYCURSOR;
-		goto yy181;
+		if(yych == 'A') goto yy186;
+		if(yych != 'a') goto yy53;
 yy186:
 		YYDEBUG(186, *YYCURSOR);
-		yyaccept = 4;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == 'R') goto yy187;
-		if(yych != 'r') goto yy181;
+		yych = *++YYCURSOR;
+		if(yych == 'Y') goto yy187;
+		if(yych != 'y') goto yy53;
 yy187:
 		YYDEBUG(187, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'S') goto yy188;
-		if(yych != 's') goto yy53;
+		goto yy183;
 yy188:
 		YYDEBUG(188, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'D') goto yy189;
-		if(yych != 'd') goto yy53;
+		yyaccept = 4;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == 'R') goto yy189;
+		if(yych != 'r') goto yy183;
 yy189:
 		YYDEBUG(189, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy190;
-		if(yych != 'a') goto yy53;
+		if(yych == 'S') goto yy190;
+		if(yych != 's') goto yy53;
 yy190:
 		YYDEBUG(190, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy185;
-		if(yych == 'y') goto yy185;
-		goto yy53;
+		if(yych == 'D') goto yy191;
+		if(yych != 'd') goto yy53;
 yy191:
 		YYDEBUG(191, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -3966,365 +3987,376 @@ yy191:
 yy192:
 		YYDEBUG(192, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy193;
-		if(yych != 'r') goto yy53;
+		if(yych == 'Y') goto yy187;
+		if(yych == 'y') goto yy187;
+		goto yy53;
 yy193:
 		YYDEBUG(193, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'S') goto yy185;
-		if(yych == 's') goto yy185;
-		goto yy181;
+		if(yych == 'A') goto yy194;
+		if(yych != 'a') goto yy53;
 yy194:
 		YYDEBUG(194, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'I') goto yy207;
-		if(yych == 'i') goto yy207;
-		goto yy53;
+		if(yych == 'R') goto yy195;
+		if(yych != 'r') goto yy53;
 yy195:
 		YYDEBUG(195, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy196;
-		if(yych != 'r') goto yy53;
+		if(yych == 'S') goto yy187;
+		if(yych == 's') goto yy187;
+		goto yy183;
 yy196:
 		YYDEBUG(196, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'T') goto yy197;
-		if(yych != 't') goto yy53;
+		if(yych == 'I') goto yy209;
+		if(yych == 'i') goto yy209;
+		goto yy53;
 yy197:
 		YYDEBUG(197, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if(yych == 'R') goto yy198;
+		if(yych != 'r') goto yy53;
+yy198:
+		YYDEBUG(198, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'T') goto yy199;
+		if(yych != 't') goto yy53;
+yy199:
+		YYDEBUG(199, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if(yych <= 'N') {
-			if(yych == 'H') goto yy199;
+			if(yych == 'H') goto yy201;
 			if(yych <= 'M') goto yy53;
 		} else {
 			if(yych <= 'h') {
 				if(yych <= 'g') goto yy53;
-				goto yy199;
+				goto yy201;
 			} else {
 				if(yych != 'n') goto yy53;
 			}
 		}
-		YYDEBUG(198, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'I') goto yy204;
-		if(yych == 'i') goto yy204;
-		goto yy53;
-yy199:
-		YYDEBUG(199, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'N') goto yy200;
-		if(yych != 'n') goto yy53;
-yy200:
 		YYDEBUG(200, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'I') goto yy201;
-		if(yych != 'i') goto yy53;
+		if(yych == 'I') goto yy206;
+		if(yych == 'i') goto yy206;
+		goto yy53;
 yy201:
 		YYDEBUG(201, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'G') goto yy202;
-		if(yych != 'g') goto yy53;
+		if(yych == 'N') goto yy202;
+		if(yych != 'n') goto yy53;
 yy202:
 		YYDEBUG(202, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'H') goto yy203;
-		if(yych != 'h') goto yy53;
+		if(yych == 'I') goto yy203;
+		if(yych != 'i') goto yy53;
 yy203:
 		YYDEBUG(203, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'T') goto yy193;
-		if(yych == 't') goto yy193;
-		goto yy53;
+		if(yych == 'G') goto yy204;
+		if(yych != 'g') goto yy53;
 yy204:
 		YYDEBUG(204, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'G') goto yy205;
-		if(yych != 'g') goto yy53;
+		if(yych == 'H') goto yy205;
+		if(yych != 'h') goto yy53;
 yy205:
 		YYDEBUG(205, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'H') goto yy206;
-		if(yych != 'h') goto yy53;
+		if(yych == 'T') goto yy195;
+		if(yych == 't') goto yy195;
+		goto yy53;
 yy206:
 		YYDEBUG(206, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'T') goto yy193;
-		if(yych == 't') goto yy193;
-		goto yy53;
+		if(yych == 'G') goto yy207;
+		if(yych != 'g') goto yy53;
 yy207:
 		YYDEBUG(207, *YYCURSOR);
-		yyaccept = 4;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == 'D') goto yy208;
-		if(yych != 'd') goto yy181;
+		yych = *++YYCURSOR;
+		if(yych == 'H') goto yy208;
+		if(yych != 'h') goto yy53;
 yy208:
 		YYDEBUG(208, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy209;
-		if(yych != 'a') goto yy53;
+		if(yych == 'T') goto yy195;
+		if(yych == 't') goto yy195;
+		goto yy53;
 yy209:
 		YYDEBUG(209, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy185;
-		if(yych == 'y') goto yy185;
-		goto yy53;
+		yyaccept = 4;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == 'D') goto yy210;
+		if(yych != 'd') goto yy183;
 yy210:
 		YYDEBUG(210, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if(yych == 'A') goto yy211;
+		if(yych != 'a') goto yy53;
+yy211:
+		YYDEBUG(211, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'Y') goto yy187;
+		if(yych == 'y') goto yy187;
+		goto yy53;
+yy212:
+		YYDEBUG(212, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if(yych <= 'E') {
 			if(yych <= 'C') goto yy53;
-			if(yych <= 'D') goto yy212;
+			if(yych <= 'D') goto yy214;
 		} else {
 			if(yych <= 'c') goto yy53;
-			if(yych <= 'd') goto yy212;
+			if(yych <= 'd') goto yy214;
 			if(yych >= 'f') goto yy53;
 		}
-		YYDEBUG(211, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'K') goto yy218;
-		if(yych == 'k') goto yy218;
-		goto yy53;
-yy212:
-		YYDEBUG(212, *YYCURSOR);
-		yyaccept = 4;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == 'N') goto yy213;
-		if(yych != 'n') goto yy181;
-yy213:
 		YYDEBUG(213, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy214;
-		if(yych != 'e') goto yy53;
+		if(yych == 'K') goto yy220;
+		if(yych == 'k') goto yy220;
+		goto yy53;
 yy214:
 		YYDEBUG(214, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'S') goto yy215;
-		if(yych != 's') goto yy53;
+		yyaccept = 4;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == 'N') goto yy215;
+		if(yych != 'n') goto yy183;
 yy215:
 		YYDEBUG(215, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'D') goto yy216;
-		if(yych != 'd') goto yy53;
+		if(yych == 'E') goto yy216;
+		if(yych != 'e') goto yy53;
 yy216:
 		YYDEBUG(216, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy217;
-		if(yych != 'a') goto yy53;
+		if(yych == 'S') goto yy217;
+		if(yych != 's') goto yy53;
 yy217:
 		YYDEBUG(217, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy185;
-		if(yych == 'y') goto yy185;
-		goto yy53;
+		if(yych == 'D') goto yy218;
+		if(yych != 'd') goto yy53;
 yy218:
 		YYDEBUG(218, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'A') goto yy219;
+		if(yych != 'a') goto yy53;
+yy219:
+		YYDEBUG(219, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'Y') goto yy187;
+		if(yych == 'y') goto yy187;
+		goto yy53;
+yy220:
+		YYDEBUG(220, *YYCURSOR);
 		yyaccept = 4;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'S') {
-			if(yych == 'D') goto yy219;
-			if(yych <= 'R') goto yy181;
-			goto yy185;
+			if(yych == 'D') goto yy221;
+			if(yych <= 'R') goto yy183;
+			goto yy187;
 		} else {
 			if(yych <= 'd') {
-				if(yych <= 'c') goto yy181;
+				if(yych <= 'c') goto yy183;
 			} else {
-				if(yych == 's') goto yy185;
-				goto yy181;
+				if(yych == 's') goto yy187;
+				goto yy183;
 			}
 		}
-yy219:
-		YYDEBUG(219, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy220;
-		if(yych != 'a') goto yy53;
-yy220:
-		YYDEBUG(220, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy221;
-		if(yych != 'y') goto yy53;
 yy221:
 		YYDEBUG(221, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'S') goto yy185;
-		if(yych == 's') goto yy185;
-		goto yy181;
+		if(yych == 'A') goto yy222;
+		if(yych != 'a') goto yy53;
 yy222:
 		YYDEBUG(222, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy193;
-		if(yych == 'y') goto yy193;
-		goto yy53;
+		if(yych == 'Y') goto yy223;
+		if(yych != 'y') goto yy53;
 yy223:
 		YYDEBUG(223, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'U') goto yy224;
-		if(yych != 'u') goto yy53;
+		if(yych == 'S') goto yy187;
+		if(yych == 's') goto yy187;
+		goto yy183;
 yy224:
 		YYDEBUG(224, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy193;
-		if(yych == 'r') goto yy193;
+		if(yych == 'Y') goto yy195;
+		if(yych == 'y') goto yy195;
 		goto yy53;
 yy225:
 		YYDEBUG(225, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'N') goto yy230;
-		if(yych == 'n') goto yy230;
-		goto yy53;
+		if(yych == 'U') goto yy226;
+		if(yych != 'u') goto yy53;
 yy226:
 		YYDEBUG(226, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'N') goto yy227;
-		if(yych != 'n') goto yy53;
+		if(yych == 'R') goto yy195;
+		if(yych == 'r') goto yy195;
+		goto yy53;
 yy227:
 		YYDEBUG(227, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'N') goto yy232;
+		if(yych == 'n') goto yy232;
+		goto yy53;
+yy228:
+		YYDEBUG(228, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'N') goto yy229;
+		if(yych != 'n') goto yy53;
+yy229:
+		YYDEBUG(229, *YYCURSOR);
 		yyaccept = 4;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'U') {
-			if(yych == 'S') goto yy185;
-			if(yych <= 'T') goto yy181;
+			if(yych == 'S') goto yy187;
+			if(yych <= 'T') goto yy183;
 		} else {
 			if(yych <= 's') {
-				if(yych <= 'r') goto yy181;
-				goto yy185;
+				if(yych <= 'r') goto yy183;
+				goto yy187;
 			} else {
-				if(yych != 'u') goto yy181;
+				if(yych != 'u') goto yy183;
 			}
 		}
-		YYDEBUG(228, *YYCURSOR);
+		YYDEBUG(230, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'T') goto yy229;
+		if(yych == 'T') goto yy231;
 		if(yych != 't') goto yy53;
-yy229:
-		YYDEBUG(229, *YYCURSOR);
+yy231:
+		YYDEBUG(231, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy193;
-		if(yych == 'e') goto yy193;
+		if(yych == 'E') goto yy195;
+		if(yych == 'e') goto yy195;
 		goto yy53;
-yy230:
-		YYDEBUG(230, *YYCURSOR);
+yy232:
+		YYDEBUG(232, *YYCURSOR);
 		yyaccept = 4;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
-			if(yych == 'D') goto yy231;
-			if(yych <= 'S') goto yy181;
-			goto yy232;
+			if(yych == 'D') goto yy233;
+			if(yych <= 'S') goto yy183;
+			goto yy234;
 		} else {
 			if(yych <= 'd') {
-				if(yych <= 'c') goto yy181;
+				if(yych <= 'c') goto yy183;
 			} else {
-				if(yych == 't') goto yy232;
-				goto yy181;
+				if(yych == 't') goto yy234;
+				goto yy183;
 			}
 		}
-yy231:
-		YYDEBUG(231, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy233;
-		if(yych == 'a') goto yy233;
-		goto yy53;
-yy232:
-		YYDEBUG(232, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'H') goto yy193;
-		if(yych == 'h') goto yy193;
-		goto yy53;
 yy233:
 		YYDEBUG(233, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy185;
-		if(yych == 'y') goto yy185;
+		if(yych == 'A') goto yy235;
+		if(yych == 'a') goto yy235;
 		goto yy53;
 yy234:
 		YYDEBUG(234, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'N') goto yy245;
-		if(yych == 'n') goto yy245;
+		if(yych == 'H') goto yy195;
+		if(yych == 'h') goto yy195;
 		goto yy53;
 yy235:
 		YYDEBUG(235, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'T') goto yy240;
-		if(yych == 't') goto yy240;
+		if(yych == 'Y') goto yy187;
+		if(yych == 'y') goto yy187;
 		goto yy53;
 yy236:
 		YYDEBUG(236, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'C') goto yy237;
-		if(yych != 'c') goto yy53;
+		if(yych == 'N') goto yy247;
+		if(yych == 'n') goto yy247;
+		goto yy53;
 yy237:
 		YYDEBUG(237, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'T') goto yy242;
+		if(yych == 't') goto yy242;
+		goto yy53;
+yy238:
+		YYDEBUG(238, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'C') goto yy239;
+		if(yych != 'c') goto yy53;
+yy239:
+		YYDEBUG(239, *YYCURSOR);
 		yyaccept = 4;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'S') {
-			if(yych == 'O') goto yy238;
-			if(yych <= 'R') goto yy181;
-			goto yy185;
+			if(yych == 'O') goto yy240;
+			if(yych <= 'R') goto yy183;
+			goto yy187;
 		} else {
 			if(yych <= 'o') {
-				if(yych <= 'n') goto yy181;
+				if(yych <= 'n') goto yy183;
 			} else {
-				if(yych == 's') goto yy185;
-				goto yy181;
+				if(yych == 's') goto yy187;
+				goto yy183;
 			}
 		}
-yy238:
-		YYDEBUG(238, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'N') goto yy239;
-		if(yych != 'n') goto yy53;
-yy239:
-		YYDEBUG(239, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'D') goto yy193;
-		if(yych == 'd') goto yy193;
-		goto yy53;
 yy240:
 		YYDEBUG(240, *YYCURSOR);
-		yyaccept = 4;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == 'U') goto yy241;
-		if(yych != 'u') goto yy181;
+		yych = *++YYCURSOR;
+		if(yych == 'N') goto yy241;
+		if(yych != 'n') goto yy53;
 yy241:
 		YYDEBUG(241, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy242;
-		if(yych != 'r') goto yy53;
+		if(yych == 'D') goto yy195;
+		if(yych == 'd') goto yy195;
+		goto yy53;
 yy242:
 		YYDEBUG(242, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'D') goto yy243;
-		if(yych != 'd') goto yy53;
+		yyaccept = 4;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == 'U') goto yy243;
+		if(yych != 'u') goto yy183;
 yy243:
 		YYDEBUG(243, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy244;
-		if(yych != 'a') goto yy53;
+		if(yych == 'R') goto yy244;
+		if(yych != 'r') goto yy53;
 yy244:
 		YYDEBUG(244, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy185;
-		if(yych == 'y') goto yy185;
-		goto yy53;
+		if(yych == 'D') goto yy245;
+		if(yych != 'd') goto yy53;
 yy245:
 		YYDEBUG(245, *YYCURSOR);
-		yyaccept = 4;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == 'D') goto yy246;
-		if(yych != 'd') goto yy181;
+		yych = *++YYCURSOR;
+		if(yych == 'A') goto yy246;
+		if(yych != 'a') goto yy53;
 yy246:
 		YYDEBUG(246, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy247;
-		if(yych != 'a') goto yy53;
+		if(yych == 'Y') goto yy187;
+		if(yych == 'y') goto yy187;
+		goto yy53;
 yy247:
 		YYDEBUG(247, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy185;
-		if(yych == 'y') goto yy185;
-		goto yy53;
+		yyaccept = 4;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == 'D') goto yy248;
+		if(yych != 'd') goto yy183;
 yy248:
 		YYDEBUG(248, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'A') goto yy249;
+		if(yych != 'a') goto yy53;
+yy249:
+		YYDEBUG(249, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'Y') goto yy187;
+		if(yych == 'y') goto yy187;
+		goto yy53;
+yy250:
+		YYDEBUG(250, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'E') {
@@ -4335,7 +4367,7 @@ yy248:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy138;
-				goto yy162;
+				goto yy164;
 			}
 		} else {
 			if(yych <= '`') {
@@ -4343,13 +4375,13 @@ yy248:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'e') goto yy249;
+				if(yych == 'e') goto yy251;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy249:
-		YYDEBUG(249, *YYCURSOR);
+yy251:
+		YYDEBUG(251, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'V') {
@@ -4360,7 +4392,7 @@ yy249:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'U') goto yy139;
-				goto yy163;
+				goto yy165;
 			}
 		} else {
 			if(yych <= '`') {
@@ -4368,13 +4400,13 @@ yy249:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'v') goto yy250;
+				if(yych == 'v') goto yy252;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy250:
-		YYDEBUG(250, *YYCURSOR);
+yy252:
+		YYDEBUG(252, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'I') {
@@ -4385,7 +4417,7 @@ yy250:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'H') goto yy140;
-				goto yy164;
+				goto yy166;
 			}
 		} else {
 			if(yych <= '`') {
@@ -4393,13 +4425,13 @@ yy250:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'i') goto yy251;
+				if(yych == 'i') goto yy253;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy251:
-		YYDEBUG(251, *YYCURSOR);
+yy253:
+		YYDEBUG(253, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'O') {
@@ -4410,7 +4442,7 @@ yy251:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'N') goto yy141;
-				goto yy165;
+				goto yy167;
 			}
 		} else {
 			if(yych <= '`') {
@@ -4418,13 +4450,13 @@ yy251:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'o') goto yy252;
+				if(yych == 'o') goto yy254;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy252:
-		YYDEBUG(252, *YYCURSOR);
+yy254:
+		YYDEBUG(254, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'U') {
@@ -4434,32 +4466,32 @@ yy252:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= 'T') goto yy3;
-				goto yy166;
+				goto yy168;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'u') goto yy253;
+				if(yych == 'u') goto yy255;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy253:
-		YYDEBUG(253, *YYCURSOR);
+yy255:
+		YYDEBUG(255, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'S') goto yy167;
+		if(yych == 'S') goto yy169;
 		if(yych != 's') goto yy152;
-yy254:
-		YYDEBUG(254, *YYCURSOR);
+yy256:
+		YYDEBUG(256, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '.') {
 			if(yych <= 0x09) {
 				if(yych <= 0x08) goto yy53;
-				goto yy168;
+				goto yy170;
 			} else {
-				if(yych == ' ') goto yy168;
+				if(yych == ' ') goto yy170;
 				goto yy53;
 			}
 		} else {
@@ -4473,8 +4505,8 @@ yy254:
 				goto yy53;
 			}
 		}
-yy255:
-		YYDEBUG(255, *YYCURSOR);
+yy257:
+		YYDEBUG(257, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'S') {
 			if(yych <= ')') {
@@ -4490,13 +4522,13 @@ yy255:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 's') goto yy256;
+				if(yych <= 's') goto yy258;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy256:
-		YYDEBUG(256, *YYCURSOR);
+yy258:
+		YYDEBUG(258, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'T') {
 			if(yych <= ')') {
@@ -4512,21 +4544,21 @@ yy256:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 't') goto yy257;
+				if(yych <= 't') goto yy259;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy257:
-		YYDEBUG(257, *YYCURSOR);
+yy259:
+		YYDEBUG(259, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '(') {
 			if(yych <= 0x09) {
 				if(yych <= 0x08) goto yy3;
-				goto yy168;
+				goto yy170;
 			} else {
-				if(yych == ' ') goto yy168;
+				if(yych == ' ') goto yy170;
 				goto yy3;
 			}
 		} else {
@@ -4540,8 +4572,8 @@ yy257:
 				goto yy3;
 			}
 		}
-yy258:
-		YYDEBUG(258, *YYCURSOR);
+yy260:
+		YYDEBUG(260, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'S') {
@@ -4552,7 +4584,7 @@ yy258:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'R') goto yy138;
-				goto yy256;
+				goto yy258;
 			}
 		} else {
 			if(yych <= '`') {
@@ -4560,13 +4592,13 @@ yy258:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 's') goto yy259;
+				if(yych == 's') goto yy261;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy259:
-		YYDEBUG(259, *YYCURSOR);
+yy261:
+		YYDEBUG(261, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
@@ -4577,7 +4609,7 @@ yy259:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy139;
-				goto yy257;
+				goto yy259;
 			}
 		} else {
 			if(yych <= '`') {
@@ -4585,21 +4617,21 @@ yy259:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 't') goto yy260;
+				if(yych == 't') goto yy262;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy260:
-		YYDEBUG(260, *YYCURSOR);
+yy262:
+		YYDEBUG(262, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy168;
+				if(yych == 0x09) goto yy170;
 				goto yy3;
 			} else {
-				if(yych <= ' ') goto yy168;
+				if(yych <= ' ') goto yy170;
 				if(yych == ')') goto yy136;
 				goto yy3;
 			}
@@ -4616,8 +4648,8 @@ yy260:
 				goto yy3;
 			}
 		}
-yy261:
-		YYDEBUG(261, *YYCURSOR);
+yy263:
+		YYDEBUG(263, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'G') {
 			if(yych <= ')') {
@@ -4626,7 +4658,7 @@ yy261:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'F') goto yy138;
-				goto yy268;
+				goto yy270;
 			}
 		} else {
 			if(yych <= 'f') {
@@ -4634,13 +4666,13 @@ yy261:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'g') goto yy268;
+				if(yych <= 'g') goto yy270;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy262:
-		YYDEBUG(262, *YYCURSOR);
+yy264:
+		YYDEBUG(264, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'E') {
 			if(yych <= ')') {
@@ -4656,13 +4688,13 @@ yy262:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'e') goto yy263;
+				if(yych <= 'e') goto yy265;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy263:
-		YYDEBUG(263, *YYCURSOR);
+yy265:
+		YYDEBUG(265, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'V') {
 			if(yych <= ')') {
@@ -4678,13 +4710,13 @@ yy263:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 'v') goto yy264;
+				if(yych <= 'v') goto yy266;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy264:
-		YYDEBUG(264, *YYCURSOR);
+yy266:
+		YYDEBUG(266, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'E') {
 			if(yych <= ')') {
@@ -4700,13 +4732,13 @@ yy264:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'e') goto yy265;
+				if(yych <= 'e') goto yy267;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy265:
-		YYDEBUG(265, *YYCURSOR);
+yy267:
+		YYDEBUG(267, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'N') {
 			if(yych <= ')') {
@@ -4722,30 +4754,30 @@ yy265:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'n') goto yy266;
+				if(yych <= 'n') goto yy268;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy266:
-		YYDEBUG(266, *YYCURSOR);
+yy268:
+		YYDEBUG(268, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'S') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'T') goto yy267;
+			if(yych <= 'T') goto yy269;
 			if(yych != 't') goto yy3;
 		}
-yy267:
-		YYDEBUG(267, *YYCURSOR);
+yy269:
+		YYDEBUG(269, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'H') goto yy167;
-		if(yych == 'h') goto yy167;
+		if(yych == 'H') goto yy169;
+		if(yych == 'h') goto yy169;
 		goto yy53;
-yy268:
-		YYDEBUG(268, *YYCURSOR);
+yy270:
+		YYDEBUG(270, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'H') {
 			if(yych <= ')') {
@@ -4761,13 +4793,13 @@ yy268:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 'h') goto yy269;
+				if(yych <= 'h') goto yy271;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy269:
-		YYDEBUG(269, *YYCURSOR);
+yy271:
+		YYDEBUG(271, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'T') {
 			if(yych <= ')') {
@@ -4783,21 +4815,21 @@ yy269:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 't') goto yy270;
+				if(yych <= 't') goto yy272;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy270:
-		YYDEBUG(270, *YYCURSOR);
+yy272:
+		YYDEBUG(272, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '(') {
 			if(yych <= 0x09) {
 				if(yych <= 0x08) goto yy3;
-				goto yy168;
+				goto yy170;
 			} else {
-				if(yych == ' ') goto yy168;
+				if(yych == ' ') goto yy170;
 				goto yy3;
 			}
 		} else {
@@ -4811,8 +4843,8 @@ yy270:
 				goto yy3;
 			}
 		}
-yy271:
-		YYDEBUG(271, *YYCURSOR);
+yy273:
+		YYDEBUG(273, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'G') {
@@ -4823,7 +4855,7 @@ yy271:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'F') goto yy138;
-				goto yy268;
+				goto yy270;
 			}
 		} else {
 			if(yych <= '`') {
@@ -4831,13 +4863,13 @@ yy271:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'g') goto yy278;
+				if(yych == 'g') goto yy280;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy272:
-		YYDEBUG(272, *YYCURSOR);
+yy274:
+		YYDEBUG(274, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'E') {
@@ -4848,7 +4880,7 @@ yy272:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy138;
-				goto yy263;
+				goto yy265;
 			}
 		} else {
 			if(yych <= '`') {
@@ -4856,13 +4888,13 @@ yy272:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'e') goto yy273;
+				if(yych == 'e') goto yy275;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy273:
-		YYDEBUG(273, *YYCURSOR);
+yy275:
+		YYDEBUG(275, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'V') {
@@ -4873,7 +4905,7 @@ yy273:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'U') goto yy139;
-				goto yy264;
+				goto yy266;
 			}
 		} else {
 			if(yych <= '`') {
@@ -4881,13 +4913,13 @@ yy273:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'v') goto yy274;
+				if(yych == 'v') goto yy276;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy274:
-		YYDEBUG(274, *YYCURSOR);
+yy276:
+		YYDEBUG(276, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'E') {
@@ -4898,7 +4930,7 @@ yy274:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy140;
-				goto yy265;
+				goto yy267;
 			}
 		} else {
 			if(yych <= '`') {
@@ -4906,13 +4938,13 @@ yy274:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'e') goto yy275;
+				if(yych == 'e') goto yy277;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy275:
-		YYDEBUG(275, *YYCURSOR);
+yy277:
+		YYDEBUG(277, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'N') {
@@ -4923,7 +4955,7 @@ yy275:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'M') goto yy141;
-				goto yy266;
+				goto yy268;
 			}
 		} else {
 			if(yych <= '`') {
@@ -4931,13 +4963,13 @@ yy275:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'n') goto yy276;
+				if(yych == 'n') goto yy278;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy276:
-		YYDEBUG(276, *YYCURSOR);
+yy278:
+		YYDEBUG(278, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
@@ -4947,26 +4979,26 @@ yy276:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= 'S') goto yy3;
-				goto yy267;
+				goto yy269;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 't') goto yy277;
+				if(yych == 't') goto yy279;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy277:
-		YYDEBUG(277, *YYCURSOR);
+yy279:
+		YYDEBUG(279, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'H') goto yy167;
-		if(yych == 'h') goto yy254;
+		if(yych == 'H') goto yy169;
+		if(yych == 'h') goto yy256;
 		goto yy152;
-yy278:
-		YYDEBUG(278, *YYCURSOR);
+yy280:
+		YYDEBUG(280, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'H') {
@@ -4977,7 +5009,7 @@ yy278:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'G') goto yy139;
-				goto yy269;
+				goto yy271;
 			}
 		} else {
 			if(yych <= '`') {
@@ -4985,13 +5017,13 @@ yy278:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'h') goto yy279;
+				if(yych == 'h') goto yy281;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy279:
-		YYDEBUG(279, *YYCURSOR);
+yy281:
+		YYDEBUG(281, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
@@ -5002,7 +5034,7 @@ yy279:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy140;
-				goto yy270;
+				goto yy272;
 			}
 		} else {
 			if(yych <= '`') {
@@ -5010,21 +5042,21 @@ yy279:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 't') goto yy280;
+				if(yych == 't') goto yy282;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy280:
-		YYDEBUG(280, *YYCURSOR);
+yy282:
+		YYDEBUG(282, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy168;
+				if(yych == 0x09) goto yy170;
 				goto yy3;
 			} else {
-				if(yych <= ' ') goto yy168;
+				if(yych <= ' ') goto yy170;
 				if(yych == ')') goto yy136;
 				goto yy3;
 			}
@@ -5041,8 +5073,8 @@ yy280:
 				goto yy3;
 			}
 		}
-yy281:
-		YYDEBUG(281, *YYCURSOR);
+yy283:
+		YYDEBUG(283, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'E') {
 			if(yych <= '@') {
@@ -5050,7 +5082,7 @@ yy281:
 				goto yy3;
 			} else {
 				if(yych <= 'C') goto yy138;
-				if(yych >= 'E') goto yy284;
+				if(yych >= 'E') goto yy286;
 			}
 		} else {
 			if(yych <= 'c') {
@@ -5058,35 +5090,35 @@ yy281:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'd') goto yy282;
-				if(yych <= 'e') goto yy284;
+				if(yych <= 'd') goto yy284;
+				if(yych <= 'e') goto yy286;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy282:
-		YYDEBUG(282, *YYCURSOR);
+yy284:
+		YYDEBUG(284, *YYCURSOR);
 		++YYCURSOR;
 		if((yych = *YYCURSOR) <= 'N') {
 			if(yych <= ')') {
 				if(yych >= ')') goto yy136;
 			} else {
-				if(yych <= '@') goto yy283;
+				if(yych <= '@') goto yy285;
 				if(yych <= 'M') goto yy139;
-				goto yy290;
+				goto yy292;
 			}
 		} else {
 			if(yych <= 'm') {
 				if(yych <= 'Z') goto yy139;
 				if(yych >= 'a') goto yy139;
 			} else {
-				if(yych <= 'n') goto yy290;
+				if(yych <= 'n') goto yy292;
 				if(yych <= 'z') goto yy139;
 			}
 		}
-yy283:
-		YYDEBUG(283, *YYCURSOR);
-#line 1368 "ext/date/lib/parse_date.re"
+yy285:
+		YYDEBUG(285, *YYCURSOR);
+#line 1370 "ext/date/lib/parse_date.re"
 		{
 		const timelib_relunit* relunit;
 		DEBUG_OUTPUT("daytext");
@@ -5101,9 +5133,9 @@ yy283:
 		TIMELIB_DEINIT;
 		return TIMELIB_WEEKDAY;
 	}
-#line 5105 "ext/date/lib/parse_date.c"
-yy284:
-		YYDEBUG(284, *YYCURSOR);
+#line 5137 "ext/date/lib/parse_date.c"
+yy286:
+		YYDEBUG(286, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'K') {
 			if(yych <= ')') {
@@ -5119,13 +5151,13 @@ yy284:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 'k') goto yy285;
+				if(yych <= 'k') goto yy287;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy285:
-		YYDEBUG(285, *YYCURSOR);
+yy287:
+		YYDEBUG(287, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'D') {
 			if(yych <= ')') {
@@ -5141,13 +5173,13 @@ yy285:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'd') goto yy286;
+				if(yych <= 'd') goto yy288;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy286:
-		YYDEBUG(286, *YYCURSOR);
+yy288:
+		YYDEBUG(288, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'A') {
 			if(yych == ')') goto yy136;
@@ -5157,33 +5189,33 @@ yy286:
 				if(yych <= 'Z') goto yy141;
 				goto yy3;
 			} else {
-				if(yych <= 'a') goto yy287;
+				if(yych <= 'a') goto yy289;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy287:
-		YYDEBUG(287, *YYCURSOR);
+yy289:
+		YYDEBUG(289, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'X') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'Y') goto yy288;
+			if(yych <= 'Y') goto yy290;
 			if(yych != 'y') goto yy3;
 		}
-yy288:
-		YYDEBUG(288, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'S') goto yy289;
-		if(yych != 's') goto yy283;
-yy289:
-		YYDEBUG(289, *YYCURSOR);
-		yych = *++YYCURSOR;
-		goto yy283;
 yy290:
 		YYDEBUG(290, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if(yych == 'S') goto yy291;
+		if(yych != 's') goto yy285;
+yy291:
+		YYDEBUG(291, *YYCURSOR);
+		yych = *++YYCURSOR;
+		goto yy285;
+yy292:
+		YYDEBUG(292, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if(yych <= 'E') {
 			if(yych <= ')') {
 				if(yych <= '(') goto yy3;
@@ -5198,13 +5230,13 @@ yy290:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'e') goto yy291;
+				if(yych <= 'e') goto yy293;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy291:
-		YYDEBUG(291, *YYCURSOR);
+yy293:
+		YYDEBUG(293, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'S') {
 			if(yych <= ')') {
@@ -5220,35 +5252,35 @@ yy291:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 's') goto yy292;
+				if(yych <= 's') goto yy294;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy292:
-		YYDEBUG(292, *YYCURSOR);
+yy294:
+		YYDEBUG(294, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'C') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'D') goto yy293;
+			if(yych <= 'D') goto yy295;
 			if(yych != 'd') goto yy3;
 		}
-yy293:
-		YYDEBUG(293, *YYCURSOR);
+yy295:
+		YYDEBUG(295, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy294;
+		if(yych == 'A') goto yy296;
 		if(yych != 'a') goto yy53;
-yy294:
-		YYDEBUG(294, *YYCURSOR);
+yy296:
+		YYDEBUG(296, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy289;
-		if(yych == 'y') goto yy289;
+		if(yych == 'Y') goto yy291;
+		if(yych == 'y') goto yy291;
 		goto yy53;
-yy295:
-		YYDEBUG(295, *YYCURSOR);
+yy297:
+		YYDEBUG(297, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'E') {
@@ -5259,8 +5291,8 @@ yy295:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'C') goto yy138;
-				if(yych <= 'D') goto yy282;
-				goto yy284;
+				if(yych <= 'D') goto yy284;
+				goto yy286;
 			}
 		} else {
 			if(yych <= '`') {
@@ -5271,38 +5303,38 @@ yy295:
 				if(yych <= 'd') {
 					if(yych <= 'c') goto yy143;
 				} else {
-					if(yych <= 'e') goto yy297;
+					if(yych <= 'e') goto yy299;
 					if(yych <= 'z') goto yy143;
 					goto yy3;
 				}
 			}
 		}
-		YYDEBUG(296, *YYCURSOR);
+		YYDEBUG(298, *YYCURSOR);
 		yyaccept = 5;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'N') {
 			if(yych <= '.') {
 				if(yych == ')') goto yy136;
-				goto yy283;
+				goto yy285;
 			} else {
 				if(yych <= '/') goto yy144;
-				if(yych <= '@') goto yy283;
+				if(yych <= '@') goto yy285;
 				if(yych <= 'M') goto yy139;
-				goto yy290;
+				goto yy292;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych <= 'Z') goto yy139;
 				if(yych == '_') goto yy144;
-				goto yy283;
+				goto yy285;
 			} else {
-				if(yych == 'n') goto yy303;
+				if(yych == 'n') goto yy305;
 				if(yych <= 'z') goto yy148;
-				goto yy283;
+				goto yy285;
 			}
 		}
-yy297:
-		YYDEBUG(297, *YYCURSOR);
+yy299:
+		YYDEBUG(299, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'K') {
@@ -5313,7 +5345,7 @@ yy297:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'J') goto yy139;
-				goto yy285;
+				goto yy287;
 			}
 		} else {
 			if(yych <= '`') {
@@ -5321,13 +5353,13 @@ yy297:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'k') goto yy298;
+				if(yych == 'k') goto yy300;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy298:
-		YYDEBUG(298, *YYCURSOR);
+yy300:
+		YYDEBUG(300, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
@@ -5338,7 +5370,7 @@ yy298:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'C') goto yy140;
-				goto yy286;
+				goto yy288;
 			}
 		} else {
 			if(yych <= '`') {
@@ -5346,13 +5378,13 @@ yy298:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'd') goto yy299;
+				if(yych == 'd') goto yy301;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy299:
-		YYDEBUG(299, *YYCURSOR);
+yy301:
+		YYDEBUG(301, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'A') {
@@ -5362,7 +5394,7 @@ yy299:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
-				goto yy287;
+				goto yy289;
 			}
 		} else {
 			if(yych <= '_') {
@@ -5371,13 +5403,13 @@ yy299:
 				goto yy144;
 			} else {
 				if(yych <= '`') goto yy3;
-				if(yych <= 'a') goto yy300;
+				if(yych <= 'a') goto yy302;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy300:
-		YYDEBUG(300, *YYCURSOR);
+yy302:
+		YYDEBUG(302, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'Y') {
@@ -5387,56 +5419,56 @@ yy300:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= 'X') goto yy3;
-				goto yy288;
+				goto yy290;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'y') goto yy301;
+				if(yych == 'y') goto yy303;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy301:
-		YYDEBUG(301, *YYCURSOR);
+yy303:
+		YYDEBUG(303, *YYCURSOR);
 		yyaccept = 5;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '^') {
 			if(yych <= '/') {
-				if(yych <= '.') goto yy283;
+				if(yych <= '.') goto yy285;
 				goto yy144;
 			} else {
-				if(yych == 'S') goto yy289;
-				goto yy283;
+				if(yych == 'S') goto yy291;
+				goto yy285;
 			}
 		} else {
 			if(yych <= 'r') {
 				if(yych <= '_') goto yy144;
-				if(yych <= '`') goto yy283;
+				if(yych <= '`') goto yy285;
 				goto yy151;
 			} else {
-				if(yych <= 's') goto yy302;
+				if(yych <= 's') goto yy304;
 				if(yych <= 'z') goto yy151;
-				goto yy283;
+				goto yy285;
 			}
 		}
-yy302:
-		YYDEBUG(302, *YYCURSOR);
+yy304:
+		YYDEBUG(304, *YYCURSOR);
 		yyaccept = 5;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '^') {
 			if(yych == '/') goto yy144;
-			goto yy283;
+			goto yy285;
 		} else {
 			if(yych <= '_') goto yy144;
-			if(yych <= '`') goto yy283;
+			if(yych <= '`') goto yy285;
 			if(yych <= 'z') goto yy151;
-			goto yy283;
+			goto yy285;
 		}
-yy303:
-		YYDEBUG(303, *YYCURSOR);
+yy305:
+		YYDEBUG(305, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'E') {
@@ -5447,7 +5479,7 @@ yy303:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy140;
-				goto yy291;
+				goto yy293;
 			}
 		} else {
 			if(yych <= '`') {
@@ -5455,13 +5487,13 @@ yy303:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'e') goto yy304;
+				if(yych == 'e') goto yy306;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy304:
-		YYDEBUG(304, *YYCURSOR);
+yy306:
+		YYDEBUG(306, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'S') {
@@ -5472,7 +5504,7 @@ yy304:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'R') goto yy141;
-				goto yy292;
+				goto yy294;
 			}
 		} else {
 			if(yych <= '`') {
@@ -5480,13 +5512,13 @@ yy304:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 's') goto yy305;
+				if(yych == 's') goto yy307;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy305:
-		YYDEBUG(305, *YYCURSOR);
+yy307:
+		YYDEBUG(307, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
@@ -5496,30 +5528,30 @@ yy305:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= 'C') goto yy3;
-				goto yy293;
+				goto yy295;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'd') goto yy306;
+				if(yych == 'd') goto yy308;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy306:
-		YYDEBUG(306, *YYCURSOR);
+yy308:
+		YYDEBUG(308, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy294;
+		if(yych == 'A') goto yy296;
 		if(yych != 'a') goto yy152;
-		YYDEBUG(307, *YYCURSOR);
+		YYDEBUG(309, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy289;
-		if(yych == 'y') goto yy302;
+		if(yych == 'Y') goto yy291;
+		if(yych == 'y') goto yy304;
 		goto yy152;
-yy308:
-		YYDEBUG(308, *YYCURSOR);
+yy310:
+		YYDEBUG(310, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'C') {
 			if(yych <= ')') {
@@ -5535,50 +5567,50 @@ yy308:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'c') goto yy309;
+				if(yych <= 'c') goto yy311;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy309:
-		YYDEBUG(309, *YYCURSOR);
+yy311:
+		YYDEBUG(311, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych >= 0x09) goto yy312;
+					if(yych >= 0x09) goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
+					if(yych == ' ') goto yy314;
 				}
 			} else {
 				if(yych <= ',') {
 					if(yych <= ')') goto yy136;
 				} else {
-					if(yych <= '-') goto yy313;
-					if(yych <= '.') goto yy312;
+					if(yych <= '-') goto yy315;
+					if(yych <= '.') goto yy314;
 				}
 			}
 		} else {
 			if(yych <= 'Z') {
 				if(yych <= '@') {
-					if(yych <= '9') goto yy312;
+					if(yych <= '9') goto yy314;
 				} else {
-					if(yych == 'E') goto yy318;
+					if(yych == 'E') goto yy320;
 					goto yy139;
 				}
 			} else {
 				if(yych <= 'd') {
 					if(yych >= 'a') goto yy139;
 				} else {
-					if(yych <= 'e') goto yy318;
+					if(yych <= 'e') goto yy320;
 					if(yych <= 'z') goto yy139;
 				}
 			}
 		}
-yy310:
-		YYDEBUG(310, *YYCURSOR);
-#line 1401 "ext/date/lib/parse_date.re"
+yy312:
+		YYDEBUG(312, *YYCURSOR);
+#line 1403 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("monthtext");
 		TIMELIB_INIT;
@@ -5587,58 +5619,58 @@ yy310:
 		TIMELIB_DEINIT;
 		return TIMELIB_DATE_TEXT;
 	}
-#line 5591 "ext/date/lib/parse_date.c"
-yy311:
-		YYDEBUG(311, *YYCURSOR);
+#line 5623 "ext/date/lib/parse_date.c"
+yy313:
+		YYDEBUG(313, *YYCURSOR);
 		++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 20) YYFILL(20);
 		yych = *YYCURSOR;
-yy312:
-		YYDEBUG(312, *YYCURSOR);
+yy314:
+		YYDEBUG(314, *YYCURSOR);
 		if(yybm[0+yych] & 64) {
-			goto yy311;
+			goto yy313;
 		}
 		if(yych <= '/') goto yy53;
-		if(yych <= '2') goto yy314;
-		if(yych <= '3') goto yy316;
-		if(yych <= '9') goto yy317;
+		if(yych <= '2') goto yy316;
+		if(yych <= '3') goto yy318;
+		if(yych <= '9') goto yy319;
 		goto yy53;
-yy313:
-		YYDEBUG(313, *YYCURSOR);
+yy315:
+		YYDEBUG(315, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy312;
-		if(yych <= '0') goto yy473;
-		if(yych <= '2') goto yy474;
-		if(yych <= '3') goto yy475;
-		goto yy312;
-yy314:
-		YYDEBUG(314, *YYCURSOR);
+		if(yych <= '/') goto yy314;
+		if(yych <= '0') goto yy475;
+		if(yych <= '2') goto yy476;
+		if(yych <= '3') goto yy477;
+		goto yy314;
+yy316:
+		YYDEBUG(316, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'm') {
 			if(yych <= '1') {
-				if(yych <= '/') goto yy332;
-				if(yych <= '0') goto yy412;
-				goto yy413;
+				if(yych <= '/') goto yy334;
+				if(yych <= '0') goto yy414;
+				goto yy415;
 			} else {
-				if(yych <= '2') goto yy471;
-				if(yych <= '9') goto yy472;
-				goto yy332;
+				if(yych <= '2') goto yy473;
+				if(yych <= '9') goto yy474;
+				goto yy334;
 			}
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'n') goto yy328;
-				if(yych <= 'q') goto yy332;
-				goto yy329;
+				if(yych <= 'n') goto yy330;
+				if(yych <= 'q') goto yy334;
+				goto yy331;
 			} else {
-				if(yych <= 's') goto yy327;
-				if(yych <= 't') goto yy330;
-				goto yy332;
+				if(yych <= 's') goto yy329;
+				if(yych <= 't') goto yy332;
+				goto yy334;
 			}
 		}
-yy315:
-		YYDEBUG(315, *YYCURSOR);
-#line 1180 "ext/date/lib/parse_date.re"
+yy317:
+		YYDEBUG(317, *YYCURSOR);
+#line 1182 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("datetextual | datenoyear");
 		TIMELIB_INIT;
@@ -5650,59 +5682,59 @@ yy315:
 		TIMELIB_DEINIT;
 		return TIMELIB_DATE_TEXT;
 	}
-#line 5654 "ext/date/lib/parse_date.c"
-yy316:
-		YYDEBUG(316, *YYCURSOR);
+#line 5686 "ext/date/lib/parse_date.c"
+yy318:
+		YYDEBUG(318, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'm') {
 			if(yych <= '1') {
-				if(yych <= '/') goto yy332;
-				if(yych <= '0') goto yy412;
-				goto yy413;
+				if(yych <= '/') goto yy334;
+				if(yych <= '0') goto yy414;
+				goto yy415;
 			} else {
-				if(yych <= '2') goto yy325;
-				if(yych <= '9') goto yy326;
-				goto yy332;
+				if(yych <= '2') goto yy327;
+				if(yych <= '9') goto yy328;
+				goto yy334;
 			}
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'n') goto yy328;
-				if(yych <= 'q') goto yy332;
-				goto yy329;
+				if(yych <= 'n') goto yy330;
+				if(yych <= 'q') goto yy334;
+				goto yy331;
 			} else {
-				if(yych <= 's') goto yy327;
-				if(yych <= 't') goto yy330;
-				goto yy332;
+				if(yych <= 's') goto yy329;
+				if(yych <= 't') goto yy332;
+				goto yy334;
 			}
 		}
-yy317:
-		YYDEBUG(317, *YYCURSOR);
+yy319:
+		YYDEBUG(319, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'm') {
 			if(yych <= '1') {
-				if(yych <= '/') goto yy332;
-				if(yych <= '0') goto yy323;
-				goto yy324;
+				if(yych <= '/') goto yy334;
+				if(yych <= '0') goto yy325;
+				goto yy326;
 			} else {
-				if(yych <= '2') goto yy325;
-				if(yych <= '9') goto yy326;
-				goto yy332;
+				if(yych <= '2') goto yy327;
+				if(yych <= '9') goto yy328;
+				goto yy334;
 			}
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'n') goto yy328;
-				if(yych <= 'q') goto yy332;
-				goto yy329;
+				if(yych <= 'n') goto yy330;
+				if(yych <= 'q') goto yy334;
+				goto yy331;
 			} else {
-				if(yych <= 's') goto yy327;
-				if(yych <= 't') goto yy330;
-				goto yy332;
+				if(yych <= 's') goto yy329;
+				if(yych <= 't') goto yy332;
+				goto yy334;
 			}
 		}
-yy318:
-		YYDEBUG(318, *YYCURSOR);
+yy320:
+		YYDEBUG(320, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'M') {
 			if(yych <= ')') {
@@ -5718,13 +5750,13 @@ yy318:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'm') goto yy319;
+				if(yych <= 'm') goto yy321;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy319:
-		YYDEBUG(319, *YYCURSOR);
+yy321:
+		YYDEBUG(321, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'B') {
 			if(yych <= ')') {
@@ -5740,190 +5772,190 @@ yy319:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'b') goto yy320;
+				if(yych <= 'b') goto yy322;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy320:
-		YYDEBUG(320, *YYCURSOR);
+yy322:
+		YYDEBUG(322, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'E') goto yy321;
+			if(yych <= 'E') goto yy323;
 			if(yych != 'e') goto yy3;
 		}
-yy321:
-		YYDEBUG(321, *YYCURSOR);
+yy323:
+		YYDEBUG(323, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy322;
+		if(yych == 'R') goto yy324;
 		if(yych != 'r') goto yy53;
-yy322:
-		YYDEBUG(322, *YYCURSOR);
+yy324:
+		YYDEBUG(324, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ' ') {
-			if(yych == 0x09) goto yy312;
-			if(yych <= 0x1F) goto yy310;
-			goto yy312;
+			if(yych == 0x09) goto yy314;
+			if(yych <= 0x1F) goto yy312;
+			goto yy314;
 		} else {
 			if(yych <= '.') {
-				if(yych <= ',') goto yy310;
-				goto yy312;
+				if(yych <= ',') goto yy312;
+				goto yy314;
 			} else {
-				if(yych <= '/') goto yy310;
-				if(yych <= '9') goto yy312;
-				goto yy310;
+				if(yych <= '/') goto yy312;
+				if(yych <= '9') goto yy314;
+				goto yy312;
 			}
 		}
-yy323:
-		YYDEBUG(323, *YYCURSOR);
-		yyaccept = 7;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= '/') {
-			if(yych == '.') goto yy337;
-			goto yy315;
-		} else {
-			if(yych <= '0') goto yy410;
-			if(yych <= '9') goto yy411;
-			if(yych <= ':') goto yy337;
-			goto yy315;
-		}
-yy324:
-		YYDEBUG(324, *YYCURSOR);
-		yyaccept = 7;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= '/') {
-			if(yych == '.') goto yy378;
-			goto yy315;
-		} else {
-			if(yych <= '2') goto yy411;
-			if(yych <= '9') goto yy410;
-			if(yych <= ':') goto yy378;
-			goto yy315;
-		}
 yy325:
 		YYDEBUG(325, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy378;
-			goto yy315;
+			if(yych == '.') goto yy339;
+			goto yy317;
 		} else {
-			if(yych <= '3') goto yy410;
-			if(yych <= '9') goto yy407;
-			if(yych <= ':') goto yy378;
-			goto yy315;
+			if(yych <= '0') goto yy412;
+			if(yych <= '9') goto yy413;
+			if(yych <= ':') goto yy339;
+			goto yy317;
 		}
 yy326:
 		YYDEBUG(326, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy378;
-			goto yy315;
+			if(yych == '.') goto yy380;
+			goto yy317;
 		} else {
-			if(yych <= '9') goto yy407;
-			if(yych <= ':') goto yy378;
-			goto yy315;
+			if(yych <= '2') goto yy413;
+			if(yych <= '9') goto yy412;
+			if(yych <= ':') goto yy380;
+			goto yy317;
 		}
 yy327:
 		YYDEBUG(327, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
-		goto yy332;
+		if(yych <= '/') {
+			if(yych == '.') goto yy380;
+			goto yy317;
+		} else {
+			if(yych <= '3') goto yy412;
+			if(yych <= '9') goto yy409;
+			if(yych <= ':') goto yy380;
+			goto yy317;
+		}
 yy328:
 		YYDEBUG(328, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
-		goto yy332;
+		if(yych <= '/') {
+			if(yych == '.') goto yy380;
+			goto yy317;
+		} else {
+			if(yych <= '9') goto yy409;
+			if(yych <= ':') goto yy380;
+			goto yy317;
+		}
 yy329:
 		YYDEBUG(329, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
-		goto yy332;
+		goto yy334;
 yy330:
 		YYDEBUG(330, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
-		goto yy332;
+		goto yy334;
 yy331:
 		YYDEBUG(331, *YYCURSOR);
 		yyaccept = 7;
+		yych = *(YYMARKER = ++YYCURSOR);
+		goto yy334;
+yy332:
+		YYDEBUG(332, *YYCURSOR);
+		yyaccept = 7;
+		yych = *(YYMARKER = ++YYCURSOR);
+		goto yy334;
+yy333:
+		YYDEBUG(333, *YYCURSOR);
+		yyaccept = 7;
 		YYMARKER = ++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 17) YYFILL(17);
 		yych = *YYCURSOR;
-yy332:
-		YYDEBUG(332, *YYCURSOR);
+yy334:
+		YYDEBUG(334, *YYCURSOR);
 		if(yybm[0+yych] & 128) {
-			goto yy331;
+			goto yy333;
 		}
 		if(yych <= '2') {
-			if(yych <= '/') goto yy315;
-			if(yych <= '0') goto yy373;
-			if(yych <= '1') goto yy374;
-			goto yy375;
+			if(yych <= '/') goto yy317;
+			if(yych <= '0') goto yy375;
+			if(yych <= '1') goto yy376;
+			goto yy377;
 		} else {
-			if(yych <= '9') goto yy376;
-			if(yych != 'T') goto yy315;
+			if(yych <= '9') goto yy378;
+			if(yych != 'T') goto yy317;
 		}
-		YYDEBUG(333, *YYCURSOR);
+		YYDEBUG(335, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '1') goto yy334;
-		if(yych <= '2') goto yy335;
-		if(yych <= '9') goto yy336;
+		if(yych <= '1') goto yy336;
+		if(yych <= '2') goto yy337;
+		if(yych <= '9') goto yy338;
 		goto yy53;
-yy334:
-		YYDEBUG(334, *YYCURSOR);
+yy336:
+		YYDEBUG(336, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') {
-			if(yych == '.') goto yy337;
+			if(yych == '.') goto yy339;
 			goto yy53;
 		} else {
-			if(yych <= '9') goto yy336;
-			if(yych <= ':') goto yy337;
+			if(yych <= '9') goto yy338;
+			if(yych <= ':') goto yy339;
 			goto yy53;
 		}
-yy335:
-		YYDEBUG(335, *YYCURSOR);
+yy337:
+		YYDEBUG(337, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') {
-			if(yych == '.') goto yy337;
+			if(yych == '.') goto yy339;
 			goto yy53;
 		} else {
-			if(yych <= '3') goto yy336;
-			if(yych == ':') goto yy337;
+			if(yych <= '3') goto yy338;
+			if(yych == ':') goto yy339;
 			goto yy53;
 		}
-yy336:
-		YYDEBUG(336, *YYCURSOR);
+yy338:
+		YYDEBUG(338, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == '.') goto yy337;
+		if(yych == '.') goto yy339;
 		if(yych != ':') goto yy53;
-yy337:
-		YYDEBUG(337, *YYCURSOR);
+yy339:
+		YYDEBUG(339, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy338;
-		if(yych <= '9') goto yy340;
+		if(yych <= '5') goto yy340;
+		if(yych <= '9') goto yy342;
 		goto yy53;
-yy338:
-		YYDEBUG(338, *YYCURSOR);
+yy340:
+		YYDEBUG(340, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy341;
+			if(yych == '.') goto yy343;
 		} else {
-			if(yych <= '9') goto yy340;
-			if(yych <= ':') goto yy341;
+			if(yych <= '9') goto yy342;
+			if(yych <= ':') goto yy343;
 		}
-yy339:
-		YYDEBUG(339, *YYCURSOR);
-#line 1449 "ext/date/lib/parse_date.re"
+yy341:
+		YYDEBUG(341, *YYCURSOR);
+#line 1451 "ext/date/lib/parse_date.re"
 		{
 		int tz_not_found;
 		DEBUG_OUTPUT("dateshortwithtimeshort | dateshortwithtimelong | dateshortwithtimelongtz");
@@ -5952,73 +5984,73 @@ yy339:
 		TIMELIB_DEINIT;
 		return TIMELIB_SHORTDATE_WITH_TIME;
 	}
-#line 5956 "ext/date/lib/parse_date.c"
-yy340:
-		YYDEBUG(340, *YYCURSOR);
-		yyaccept = 8;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '.') goto yy341;
-		if(yych != ':') goto yy339;
-yy341:
-		YYDEBUG(341, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy342;
-		if(yych <= '6') goto yy343;
-		if(yych <= '9') goto yy344;
-		goto yy53;
+#line 5988 "ext/date/lib/parse_date.c"
 yy342:
 		YYDEBUG(342, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy339;
-		if(yych <= '9') goto yy345;
-		goto yy339;
+		yyaccept = 8;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == '.') goto yy343;
+		if(yych != ':') goto yy341;
 yy343:
 		YYDEBUG(343, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == '0') goto yy345;
-		goto yy339;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy344;
+		if(yych <= '6') goto yy345;
+		if(yych <= '9') goto yy346;
+		goto yy53;
 yy344:
 		YYDEBUG(344, *YYCURSOR);
 		yych = *++YYCURSOR;
-		goto yy339;
+		if(yych <= '/') goto yy341;
+		if(yych <= '9') goto yy347;
+		goto yy341;
 yy345:
 		YYDEBUG(345, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == '0') goto yy347;
+		goto yy341;
+yy346:
+		YYDEBUG(346, *YYCURSOR);
+		yych = *++YYCURSOR;
+		goto yy341;
+yy347:
+		YYDEBUG(347, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '*') {
 			if(yych <= 0x1F) {
-				if(yych != 0x09) goto yy339;
+				if(yych != 0x09) goto yy341;
 			} else {
-				if(yych <= ' ') goto yy346;
-				if(yych == '(') goto yy349;
-				goto yy339;
+				if(yych <= ' ') goto yy348;
+				if(yych == '(') goto yy351;
+				goto yy341;
 			}
 		} else {
 			if(yych <= '@') {
-				if(yych == ',') goto yy339;
-				if(yych <= '-') goto yy348;
-				goto yy339;
+				if(yych == ',') goto yy341;
+				if(yych <= '-') goto yy350;
+				goto yy341;
 			} else {
-				if(yych <= 'Z') goto yy350;
-				if(yych <= '`') goto yy339;
-				if(yych <= 'z') goto yy351;
-				goto yy339;
+				if(yych <= 'Z') goto yy352;
+				if(yych <= '`') goto yy341;
+				if(yych <= 'z') goto yy353;
+				goto yy341;
 			}
 		}
-yy346:
-		YYDEBUG(346, *YYCURSOR);
+yy348:
+		YYDEBUG(348, *YYCURSOR);
 		++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 8) YYFILL(8);
 		yych = *YYCURSOR;
-		YYDEBUG(347, *YYCURSOR);
+		YYDEBUG(349, *YYCURSOR);
 		if(yych <= '*') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy346;
+				if(yych == 0x09) goto yy348;
 				goto yy53;
 			} else {
-				if(yych <= ' ') goto yy346;
-				if(yych == '(') goto yy349;
+				if(yych <= ' ') goto yy348;
+				if(yych == '(') goto yy351;
 				goto yy53;
 			}
 		} else {
@@ -6026,432 +6058,432 @@ yy346:
 				if(yych == ',') goto yy53;
 				if(yych >= '.') goto yy53;
 			} else {
-				if(yych <= 'Z') goto yy350;
+				if(yych <= 'Z') goto yy352;
 				if(yych <= '`') goto yy53;
-				if(yych <= 'z') goto yy351;
+				if(yych <= 'z') goto yy353;
 				goto yy53;
 			}
 		}
-yy348:
-		YYDEBUG(348, *YYCURSOR);
+yy350:
+		YYDEBUG(350, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '1') goto yy368;
-		if(yych <= '2') goto yy369;
-		if(yych <= '9') goto yy370;
+		if(yych <= '1') goto yy370;
+		if(yych <= '2') goto yy371;
+		if(yych <= '9') goto yy372;
 		goto yy53;
-yy349:
-		YYDEBUG(349, *YYCURSOR);
+yy351:
+		YYDEBUG(351, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '@') goto yy53;
-		if(yych <= 'Z') goto yy351;
+		if(yych <= 'Z') goto yy353;
 		if(yych <= '`') goto yy53;
-		if(yych <= 'z') goto yy351;
+		if(yych <= 'z') goto yy353;
 		goto yy53;
-yy350:
-		YYDEBUG(350, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '@') {
-			if(yych == ')') goto yy344;
-			goto yy339;
-		} else {
-			if(yych <= 'Z') goto yy352;
-			if(yych <= '`') goto yy339;
-			if(yych <= 'z') goto yy357;
-			goto yy339;
-		}
-yy351:
-		YYDEBUG(351, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '@') {
-			if(yych == ')') goto yy344;
-			goto yy339;
-		} else {
-			if(yych <= 'Z') goto yy352;
-			if(yych <= '`') goto yy339;
-			if(yych >= '{') goto yy339;
-		}
 yy352:
 		YYDEBUG(352, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '@') {
-			if(yych == ')') goto yy344;
-			goto yy339;
+			if(yych == ')') goto yy346;
+			goto yy341;
 		} else {
-			if(yych <= 'Z') goto yy353;
-			if(yych <= '`') goto yy339;
-			if(yych >= '{') goto yy339;
+			if(yych <= 'Z') goto yy354;
+			if(yych <= '`') goto yy341;
+			if(yych <= 'z') goto yy359;
+			goto yy341;
 		}
 yy353:
 		YYDEBUG(353, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '@') {
-			if(yych == ')') goto yy344;
-			goto yy339;
+			if(yych == ')') goto yy346;
+			goto yy341;
 		} else {
 			if(yych <= 'Z') goto yy354;
-			if(yych <= '`') goto yy339;
-			if(yych >= '{') goto yy339;
+			if(yych <= '`') goto yy341;
+			if(yych >= '{') goto yy341;
 		}
 yy354:
 		YYDEBUG(354, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '@') {
-			if(yych == ')') goto yy344;
-			goto yy339;
+			if(yych == ')') goto yy346;
+			goto yy341;
 		} else {
 			if(yych <= 'Z') goto yy355;
-			if(yych <= '`') goto yy339;
-			if(yych >= '{') goto yy339;
+			if(yych <= '`') goto yy341;
+			if(yych >= '{') goto yy341;
 		}
 yy355:
 		YYDEBUG(355, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '@') {
-			if(yych == ')') goto yy344;
-			goto yy339;
+			if(yych == ')') goto yy346;
+			goto yy341;
 		} else {
 			if(yych <= 'Z') goto yy356;
-			if(yych <= '`') goto yy339;
-			if(yych >= '{') goto yy339;
+			if(yych <= '`') goto yy341;
+			if(yych >= '{') goto yy341;
 		}
 yy356:
 		YYDEBUG(356, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == ')') goto yy344;
-		goto yy339;
+		if(yych <= '@') {
+			if(yych == ')') goto yy346;
+			goto yy341;
+		} else {
+			if(yych <= 'Z') goto yy357;
+			if(yych <= '`') goto yy341;
+			if(yych >= '{') goto yy341;
+		}
 yy357:
 		YYDEBUG(357, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '@') {
+			if(yych == ')') goto yy346;
+			goto yy341;
+		} else {
+			if(yych <= 'Z') goto yy358;
+			if(yych <= '`') goto yy341;
+			if(yych >= '{') goto yy341;
+		}
+yy358:
+		YYDEBUG(358, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == ')') goto yy346;
+		goto yy341;
+yy359:
+		YYDEBUG(359, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '@') {
 			if(yych <= ')') {
-				if(yych <= '(') goto yy339;
-				goto yy344;
+				if(yych <= '(') goto yy341;
+				goto yy346;
 			} else {
-				if(yych == '/') goto yy359;
-				goto yy339;
+				if(yych == '/') goto yy361;
+				goto yy341;
 			}
 		} else {
 			if(yych <= '_') {
-				if(yych <= 'Z') goto yy353;
-				if(yych <= '^') goto yy339;
-				goto yy359;
+				if(yych <= 'Z') goto yy355;
+				if(yych <= '^') goto yy341;
+				goto yy361;
 			} else {
-				if(yych <= '`') goto yy339;
-				if(yych >= '{') goto yy339;
+				if(yych <= '`') goto yy341;
+				if(yych >= '{') goto yy341;
 			}
 		}
-yy358:
-		YYDEBUG(358, *YYCURSOR);
+yy360:
+		YYDEBUG(360, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '@') {
 			if(yych <= ')') {
-				if(yych <= '(') goto yy339;
-				goto yy344;
+				if(yych <= '(') goto yy341;
+				goto yy346;
 			} else {
-				if(yych != '/') goto yy339;
+				if(yych != '/') goto yy341;
 			}
 		} else {
 			if(yych <= '_') {
-				if(yych <= 'Z') goto yy354;
-				if(yych <= '^') goto yy339;
+				if(yych <= 'Z') goto yy356;
+				if(yych <= '^') goto yy341;
 			} else {
-				if(yych <= '`') goto yy339;
-				if(yych <= 'z') goto yy363;
-				goto yy339;
+				if(yych <= '`') goto yy341;
+				if(yych <= 'z') goto yy365;
+				goto yy341;
 			}
 		}
-yy359:
-		YYDEBUG(359, *YYCURSOR);
+yy361:
+		YYDEBUG(361, *YYCURSOR);
 		++YYCURSOR;
 		if(YYLIMIT == YYCURSOR) YYFILL(1);
 		yych = *YYCURSOR;
 		if(yych <= '@') goto yy53;
 		if(yych >= '[') goto yy53;
-		YYDEBUG(360, *YYCURSOR);
+		YYDEBUG(362, *YYCURSOR);
 		++YYCURSOR;
 		if(YYLIMIT == YYCURSOR) YYFILL(1);
 		yych = *YYCURSOR;
 		if(yych <= '`') goto yy53;
 		if(yych >= '{') goto yy53;
-yy361:
-		YYDEBUG(361, *YYCURSOR);
+yy363:
+		YYDEBUG(363, *YYCURSOR);
 		yyaccept = 8;
 		YYMARKER = ++YYCURSOR;
 		if(YYLIMIT == YYCURSOR) YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(362, *YYCURSOR);
+		YYDEBUG(364, *YYCURSOR);
 		if(yych <= '^') {
-			if(yych == '/') goto yy359;
-			goto yy339;
+			if(yych == '/') goto yy361;
+			goto yy341;
 		} else {
-			if(yych <= '_') goto yy359;
-			if(yych <= '`') goto yy339;
-			if(yych <= 'z') goto yy361;
-			goto yy339;
+			if(yych <= '_') goto yy361;
+			if(yych <= '`') goto yy341;
+			if(yych <= 'z') goto yy363;
+			goto yy341;
 		}
-yy363:
-		YYDEBUG(363, *YYCURSOR);
+yy365:
+		YYDEBUG(365, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '@') {
 			if(yych <= ')') {
-				if(yych <= '(') goto yy339;
-				goto yy344;
+				if(yych <= '(') goto yy341;
+				goto yy346;
 			} else {
-				if(yych == '/') goto yy359;
-				goto yy339;
+				if(yych == '/') goto yy361;
+				goto yy341;
 			}
 		} else {
 			if(yych <= '_') {
-				if(yych <= 'Z') goto yy355;
-				if(yych <= '^') goto yy339;
-				goto yy359;
+				if(yych <= 'Z') goto yy357;
+				if(yych <= '^') goto yy341;
+				goto yy361;
 			} else {
-				if(yych <= '`') goto yy339;
-				if(yych >= '{') goto yy339;
+				if(yych <= '`') goto yy341;
+				if(yych >= '{') goto yy341;
 			}
 		}
-		YYDEBUG(364, *YYCURSOR);
+		YYDEBUG(366, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '@') {
 			if(yych <= ')') {
-				if(yych <= '(') goto yy339;
-				goto yy344;
+				if(yych <= '(') goto yy341;
+				goto yy346;
 			} else {
-				if(yych == '/') goto yy359;
-				goto yy339;
+				if(yych == '/') goto yy361;
+				goto yy341;
 			}
 		} else {
 			if(yych <= '_') {
-				if(yych <= 'Z') goto yy356;
-				if(yych <= '^') goto yy339;
-				goto yy359;
+				if(yych <= 'Z') goto yy358;
+				if(yych <= '^') goto yy341;
+				goto yy361;
 			} else {
-				if(yych <= '`') goto yy339;
-				if(yych >= '{') goto yy339;
+				if(yych <= '`') goto yy341;
+				if(yych >= '{') goto yy341;
 			}
 		}
-		YYDEBUG(365, *YYCURSOR);
+		YYDEBUG(367, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == ')') goto yy344;
-			if(yych <= '.') goto yy339;
-			goto yy359;
+			if(yych == ')') goto yy346;
+			if(yych <= '.') goto yy341;
+			goto yy361;
 		} else {
 			if(yych <= '_') {
-				if(yych <= '^') goto yy339;
-				goto yy359;
+				if(yych <= '^') goto yy341;
+				goto yy361;
 			} else {
-				if(yych <= '`') goto yy339;
-				if(yych >= '{') goto yy339;
+				if(yych <= '`') goto yy341;
+				if(yych >= '{') goto yy341;
 			}
 		}
-yy366:
-		YYDEBUG(366, *YYCURSOR);
+yy368:
+		YYDEBUG(368, *YYCURSOR);
 		++YYCURSOR;
 		if(YYLIMIT == YYCURSOR) YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(367, *YYCURSOR);
+		YYDEBUG(369, *YYCURSOR);
 		if(yych <= '^') {
-			if(yych == '/') goto yy359;
+			if(yych == '/') goto yy361;
 			goto yy53;
 		} else {
-			if(yych <= '_') goto yy359;
+			if(yych <= '_') goto yy361;
 			if(yych <= '`') goto yy53;
-			if(yych <= 'z') goto yy366;
+			if(yych <= 'z') goto yy368;
 			goto yy53;
 		}
-yy368:
-		YYDEBUG(368, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy339;
-		if(yych <= '9') goto yy370;
-		if(yych <= ':') goto yy371;
-		goto yy339;
-yy369:
-		YYDEBUG(369, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '5') {
-			if(yych <= '/') goto yy339;
-			if(yych >= '4') goto yy372;
-		} else {
-			if(yych <= '9') goto yy344;
-			if(yych <= ':') goto yy371;
-			goto yy339;
-		}
 yy370:
 		YYDEBUG(370, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy339;
-		if(yych <= '5') goto yy372;
-		if(yych <= '9') goto yy344;
-		if(yych >= ';') goto yy339;
+		if(yych <= '/') goto yy341;
+		if(yych <= '9') goto yy372;
+		if(yych <= ':') goto yy373;
+		goto yy341;
 yy371:
 		YYDEBUG(371, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy339;
-		if(yych <= '5') goto yy372;
-		if(yych <= '9') goto yy344;
-		goto yy339;
+		if(yych <= '5') {
+			if(yych <= '/') goto yy341;
+			if(yych >= '4') goto yy374;
+		} else {
+			if(yych <= '9') goto yy346;
+			if(yych <= ':') goto yy373;
+			goto yy341;
+		}
 yy372:
 		YYDEBUG(372, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy339;
-		if(yych <= '9') goto yy344;
-		goto yy339;
+		if(yych <= '/') goto yy341;
+		if(yych <= '5') goto yy374;
+		if(yych <= '9') goto yy346;
+		if(yych >= ';') goto yy341;
 yy373:
 		YYDEBUG(373, *YYCURSOR);
-		yyaccept = 7;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= '/') {
-			if(yych == '.') goto yy337;
-			goto yy315;
-		} else {
-			if(yych <= '0') goto yy405;
-			if(yych <= '9') goto yy406;
-			if(yych <= ':') goto yy337;
-			goto yy315;
-		}
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy341;
+		if(yych <= '5') goto yy374;
+		if(yych <= '9') goto yy346;
+		goto yy341;
 yy374:
 		YYDEBUG(374, *YYCURSOR);
-		yyaccept = 7;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= '/') {
-			if(yych == '.') goto yy378;
-			goto yy315;
-		} else {
-			if(yych <= '2') goto yy406;
-			if(yych <= '9') goto yy405;
-			if(yych <= ':') goto yy378;
-			goto yy315;
-		}
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy341;
+		if(yych <= '9') goto yy346;
+		goto yy341;
 yy375:
 		YYDEBUG(375, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy378;
-			goto yy315;
+			if(yych == '.') goto yy339;
+			goto yy317;
 		} else {
-			if(yych <= '3') goto yy405;
-			if(yych <= '9') goto yy377;
-			if(yych <= ':') goto yy378;
-			goto yy315;
+			if(yych <= '0') goto yy407;
+			if(yych <= '9') goto yy408;
+			if(yych <= ':') goto yy339;
+			goto yy317;
 		}
 yy376:
 		YYDEBUG(376, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy378;
-			goto yy315;
+			if(yych == '.') goto yy380;
+			goto yy317;
 		} else {
-			if(yych <= '9') goto yy377;
-			if(yych <= ':') goto yy378;
-			goto yy315;
+			if(yych <= '2') goto yy408;
+			if(yych <= '9') goto yy407;
+			if(yych <= ':') goto yy380;
+			goto yy317;
 		}
 yy377:
 		YYDEBUG(377, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy315;
-		if(yych <= '9') goto yy403;
-		goto yy315;
+		yyaccept = 7;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych <= '/') {
+			if(yych == '.') goto yy380;
+			goto yy317;
+		} else {
+			if(yych <= '3') goto yy407;
+			if(yych <= '9') goto yy379;
+			if(yych <= ':') goto yy380;
+			goto yy317;
+		}
 yy378:
 		YYDEBUG(378, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy379;
-		if(yych <= '9') goto yy380;
-		goto yy53;
-yy379:
-		YYDEBUG(379, *YYCURSOR);
-		yyaccept = 8;
+		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy381;
-			goto yy339;
+			if(yych == '.') goto yy380;
+			goto yy317;
 		} else {
-			if(yych <= '9') goto yy396;
-			if(yych <= ':') goto yy381;
-			goto yy339;
+			if(yych <= '9') goto yy379;
+			if(yych <= ':') goto yy380;
+			goto yy317;
 		}
+yy379:
+		YYDEBUG(379, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy317;
+		if(yych <= '9') goto yy405;
+		goto yy317;
 yy380:
 		YYDEBUG(380, *YYCURSOR);
-		yyaccept = 8;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '.') goto yy381;
-		if(yych != ':') goto yy339;
-yy381:
-		YYDEBUG(381, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy382;
-		if(yych <= '6') goto yy383;
-		if(yych <= '9') goto yy344;
+		if(yych <= '5') goto yy381;
+		if(yych <= '9') goto yy382;
 		goto yy53;
+yy381:
+		YYDEBUG(381, *YYCURSOR);
+		yyaccept = 8;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych <= '/') {
+			if(yych == '.') goto yy383;
+			goto yy341;
+		} else {
+			if(yych <= '9') goto yy398;
+			if(yych <= ':') goto yy383;
+			goto yy341;
+		}
 yy382:
 		YYDEBUG(382, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy339;
-		if(yych <= '9') goto yy384;
-		goto yy339;
+		yyaccept = 8;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == '.') goto yy383;
+		if(yych != ':') goto yy341;
 yy383:
 		YYDEBUG(383, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != '0') goto yy339;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy384;
+		if(yych <= '6') goto yy385;
+		if(yych <= '9') goto yy346;
+		goto yy53;
 yy384:
 		YYDEBUG(384, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy341;
+		if(yych <= '9') goto yy386;
+		goto yy341;
+yy385:
+		YYDEBUG(385, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych != '0') goto yy341;
+yy386:
+		YYDEBUG(386, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '*') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy386;
-				goto yy339;
+				if(yych == 0x09) goto yy388;
+				goto yy341;
 			} else {
-				if(yych <= ' ') goto yy386;
-				if(yych == '(') goto yy386;
-				goto yy339;
+				if(yych <= ' ') goto yy388;
+				if(yych == '(') goto yy388;
+				goto yy341;
 			}
 		} else {
 			if(yych <= '@') {
-				if(yych == ',') goto yy339;
-				if(yych <= '-') goto yy386;
-				goto yy339;
+				if(yych == ',') goto yy341;
+				if(yych <= '-') goto yy388;
+				goto yy341;
 			} else {
-				if(yych <= 'Z') goto yy386;
-				if(yych <= '`') goto yy339;
-				if(yych <= 'z') goto yy386;
-				goto yy339;
+				if(yych <= 'Z') goto yy388;
+				if(yych <= '`') goto yy341;
+				if(yych <= 'z') goto yy388;
+				goto yy341;
 			}
 		}
-yy385:
-		YYDEBUG(385, *YYCURSOR);
+yy387:
+		YYDEBUG(387, *YYCURSOR);
 		++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 8) YYFILL(8);
 		yych = *YYCURSOR;
-yy386:
-		YYDEBUG(386, *YYCURSOR);
+yy388:
+		YYDEBUG(388, *YYCURSOR);
 		if(yych <= '-') {
 			if(yych <= '\'') {
 				if(yych <= 0x09) {
 					if(yych <= 0x08) goto yy53;
-					goto yy385;
+					goto yy387;
 				} else {
-					if(yych == ' ') goto yy385;
+					if(yych == ' ') goto yy387;
 					goto yy53;
 				}
 			} else {
 				if(yych <= '*') {
-					if(yych <= '(') goto yy349;
+					if(yych <= '(') goto yy351;
 					goto yy53;
 				} else {
 					if(yych == ',') goto yy53;
-					goto yy348;
+					goto yy350;
 				}
 			}
 		} else {
@@ -6459,111 +6491,111 @@ yy386:
 				if(yych <= 'A') {
 					if(yych <= '@') goto yy53;
 				} else {
-					if(yych != 'P') goto yy350;
+					if(yych != 'P') goto yy352;
 				}
 			} else {
 				if(yych <= 'o') {
 					if(yych <= '`') goto yy53;
-					if(yych <= 'a') goto yy388;
-					goto yy351;
+					if(yych <= 'a') goto yy390;
+					goto yy353;
 				} else {
-					if(yych <= 'p') goto yy388;
-					if(yych <= 'z') goto yy351;
+					if(yych <= 'p') goto yy390;
+					if(yych <= 'z') goto yy353;
 					goto yy53;
 				}
 			}
 		}
-		YYDEBUG(387, *YYCURSOR);
+		YYDEBUG(389, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'L') {
 			if(yych <= '-') {
-				if(yych == ')') goto yy344;
-				goto yy339;
+				if(yych == ')') goto yy346;
+				goto yy341;
 			} else {
-				if(yych <= '.') goto yy389;
-				if(yych <= '@') goto yy339;
-				goto yy352;
+				if(yych <= '.') goto yy391;
+				if(yych <= '@') goto yy341;
+				goto yy354;
 			}
 		} else {
 			if(yych <= '`') {
-				if(yych <= 'M') goto yy390;
-				if(yych <= 'Z') goto yy352;
-				goto yy339;
+				if(yych <= 'M') goto yy392;
+				if(yych <= 'Z') goto yy354;
+				goto yy341;
 			} else {
-				if(yych == 'm') goto yy395;
-				if(yych <= 'z') goto yy357;
-				goto yy339;
+				if(yych == 'm') goto yy397;
+				if(yych <= 'z') goto yy359;
+				goto yy341;
 			}
 		}
-yy388:
-		YYDEBUG(388, *YYCURSOR);
+yy390:
+		YYDEBUG(390, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'L') {
 			if(yych <= '-') {
-				if(yych == ')') goto yy344;
-				goto yy339;
+				if(yych == ')') goto yy346;
+				goto yy341;
 			} else {
-				if(yych <= '.') goto yy389;
-				if(yych <= '@') goto yy339;
-				goto yy352;
+				if(yych <= '.') goto yy391;
+				if(yych <= '@') goto yy341;
+				goto yy354;
 			}
 		} else {
 			if(yych <= '`') {
-				if(yych <= 'M') goto yy390;
-				if(yych <= 'Z') goto yy352;
-				goto yy339;
+				if(yych <= 'M') goto yy392;
+				if(yych <= 'Z') goto yy354;
+				goto yy341;
 			} else {
-				if(yych == 'm') goto yy390;
-				if(yych <= 'z') goto yy352;
-				goto yy339;
+				if(yych == 'm') goto yy392;
+				if(yych <= 'z') goto yy354;
+				goto yy341;
 			}
 		}
-yy389:
-		YYDEBUG(389, *YYCURSOR);
+yy391:
+		YYDEBUG(391, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'M') goto yy394;
-		if(yych == 'm') goto yy394;
+		if(yych == 'M') goto yy396;
+		if(yych == 'm') goto yy396;
 		goto yy53;
-yy390:
-		YYDEBUG(390, *YYCURSOR);
+yy392:
+		YYDEBUG(392, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ')') {
 			if(yych <= 0x09) {
-				if(yych <= 0x00) goto yy392;
-				if(yych <= 0x08) goto yy339;
-				goto yy392;
+				if(yych <= 0x00) goto yy394;
+				if(yych <= 0x08) goto yy341;
+				goto yy394;
 			} else {
-				if(yych == ' ') goto yy392;
-				if(yych <= '(') goto yy339;
-				goto yy344;
+				if(yych == ' ') goto yy394;
+				if(yych <= '(') goto yy341;
+				goto yy346;
 			}
 		} else {
 			if(yych <= '@') {
-				if(yych != '.') goto yy339;
+				if(yych != '.') goto yy341;
 			} else {
-				if(yych <= 'Z') goto yy353;
-				if(yych <= '`') goto yy339;
-				if(yych <= 'z') goto yy353;
-				goto yy339;
+				if(yych <= 'Z') goto yy355;
+				if(yych <= '`') goto yy341;
+				if(yych <= 'z') goto yy355;
+				goto yy341;
 			}
 		}
-yy391:
-		YYDEBUG(391, *YYCURSOR);
+yy393:
+		YYDEBUG(393, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 0x09) {
-			if(yych <= 0x00) goto yy392;
+			if(yych <= 0x00) goto yy394;
 			if(yych <= 0x08) goto yy53;
 		} else {
 			if(yych != ' ') goto yy53;
 		}
-yy392:
-		YYDEBUG(392, *YYCURSOR);
+yy394:
+		YYDEBUG(394, *YYCURSOR);
 		++YYCURSOR;
-		YYDEBUG(393, *YYCURSOR);
-#line 1425 "ext/date/lib/parse_date.re"
+		YYDEBUG(395, *YYCURSOR);
+#line 1427 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("dateshortwithtimeshort12 | dateshortwithtimelong12");
 		TIMELIB_INIT;
@@ -6586,183 +6618,183 @@ yy392:
 		TIMELIB_DEINIT;
 		return TIMELIB_SHORTDATE_WITH_TIME;
 	}
-#line 6590 "ext/date/lib/parse_date.c"
-yy394:
-		YYDEBUG(394, *YYCURSOR);
+#line 6622 "ext/date/lib/parse_date.c"
+yy396:
+		YYDEBUG(396, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 0x1F) {
-			if(yych <= 0x00) goto yy392;
-			if(yych == 0x09) goto yy392;
+			if(yych <= 0x00) goto yy394;
+			if(yych == 0x09) goto yy394;
 			goto yy53;
 		} else {
-			if(yych <= ' ') goto yy392;
-			if(yych == '.') goto yy391;
+			if(yych <= ' ') goto yy394;
+			if(yych == '.') goto yy393;
 			goto yy53;
 		}
-yy395:
-		YYDEBUG(395, *YYCURSOR);
+yy397:
+		YYDEBUG(397, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '-') {
 			if(yych <= 0x1F) {
-				if(yych <= 0x00) goto yy392;
-				if(yych == 0x09) goto yy392;
-				goto yy339;
+				if(yych <= 0x00) goto yy394;
+				if(yych == 0x09) goto yy394;
+				goto yy341;
 			} else {
-				if(yych <= ' ') goto yy392;
-				if(yych == ')') goto yy344;
-				goto yy339;
+				if(yych <= ' ') goto yy394;
+				if(yych == ')') goto yy346;
+				goto yy341;
 			}
 		} else {
 			if(yych <= 'Z') {
-				if(yych <= '.') goto yy391;
-				if(yych <= '/') goto yy359;
-				if(yych <= '@') goto yy339;
-				goto yy353;
+				if(yych <= '.') goto yy393;
+				if(yych <= '/') goto yy361;
+				if(yych <= '@') goto yy341;
+				goto yy355;
 			} else {
 				if(yych <= '_') {
-					if(yych <= '^') goto yy339;
-					goto yy359;
+					if(yych <= '^') goto yy341;
+					goto yy361;
 				} else {
-					if(yych <= '`') goto yy339;
-					if(yych <= 'z') goto yy358;
-					goto yy339;
+					if(yych <= '`') goto yy341;
+					if(yych <= 'z') goto yy360;
+					goto yy341;
 				}
 			}
 		}
-yy396:
-		YYDEBUG(396, *YYCURSOR);
+yy398:
+		YYDEBUG(398, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ':') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy397;
-				if(yych <= 0x1F) goto yy339;
+				if(yych == 0x09) goto yy399;
+				if(yych <= 0x1F) goto yy341;
 			} else {
-				if(yych == '.') goto yy381;
-				if(yych <= '9') goto yy339;
-				goto yy381;
+				if(yych == '.') goto yy383;
+				if(yych <= '9') goto yy341;
+				goto yy383;
 			}
 		} else {
 			if(yych <= 'P') {
-				if(yych == 'A') goto yy399;
-				if(yych <= 'O') goto yy339;
-				goto yy399;
+				if(yych == 'A') goto yy401;
+				if(yych <= 'O') goto yy341;
+				goto yy401;
 			} else {
 				if(yych <= 'a') {
-					if(yych <= '`') goto yy339;
-					goto yy399;
+					if(yych <= '`') goto yy341;
+					goto yy401;
 				} else {
-					if(yych == 'p') goto yy399;
-					goto yy339;
+					if(yych == 'p') goto yy401;
+					goto yy341;
 				}
 			}
 		}
-yy397:
-		YYDEBUG(397, *YYCURSOR);
+yy399:
+		YYDEBUG(399, *YYCURSOR);
 		++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
 		yych = *YYCURSOR;
-		YYDEBUG(398, *YYCURSOR);
+		YYDEBUG(400, *YYCURSOR);
 		if(yych <= 'A') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy397;
+				if(yych == 0x09) goto yy399;
 				goto yy53;
 			} else {
-				if(yych <= ' ') goto yy397;
+				if(yych <= ' ') goto yy399;
 				if(yych <= '@') goto yy53;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych != 'P') goto yy53;
 			} else {
-				if(yych <= 'a') goto yy399;
+				if(yych <= 'a') goto yy401;
 				if(yych != 'p') goto yy53;
 			}
 		}
-yy399:
-		YYDEBUG(399, *YYCURSOR);
+yy401:
+		YYDEBUG(401, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'L') {
 			if(yych != '.') goto yy53;
 		} else {
-			if(yych <= 'M') goto yy401;
-			if(yych == 'm') goto yy401;
+			if(yych <= 'M') goto yy403;
+			if(yych == 'm') goto yy403;
 			goto yy53;
 		}
-yy400:
-		YYDEBUG(400, *YYCURSOR);
+yy402:
+		YYDEBUG(402, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'M') goto yy401;
+		if(yych == 'M') goto yy403;
 		if(yych != 'm') goto yy53;
-yy401:
-		YYDEBUG(401, *YYCURSOR);
+yy403:
+		YYDEBUG(403, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 0x1F) {
-			if(yych <= 0x00) goto yy392;
-			if(yych == 0x09) goto yy392;
+			if(yych <= 0x00) goto yy394;
+			if(yych == 0x09) goto yy394;
 			goto yy53;
 		} else {
-			if(yych <= ' ') goto yy392;
+			if(yych <= ' ') goto yy394;
 			if(yych != '.') goto yy53;
 		}
-yy402:
-		YYDEBUG(402, *YYCURSOR);
+yy404:
+		YYDEBUG(404, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 0x09) {
-			if(yych <= 0x00) goto yy392;
+			if(yych <= 0x00) goto yy394;
 			if(yych <= 0x08) goto yy53;
-			goto yy392;
+			goto yy394;
 		} else {
-			if(yych == ' ') goto yy392;
+			if(yych == ' ') goto yy394;
 			goto yy53;
 		}
-yy403:
-		YYDEBUG(403, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy315;
-		if(yych >= ':') goto yy315;
-yy404:
-		YYDEBUG(404, *YYCURSOR);
-		yych = *++YYCURSOR;
-		goto yy315;
 yy405:
 		YYDEBUG(405, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy317;
+		if(yych >= ':') goto yy317;
+yy406:
+		YYDEBUG(406, *YYCURSOR);
+		yych = *++YYCURSOR;
+		goto yy317;
+yy407:
+		YYDEBUG(407, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy337;
-			goto yy315;
+			if(yych == '.') goto yy339;
+			goto yy317;
 		} else {
-			if(yych <= '9') goto yy403;
-			if(yych <= ':') goto yy337;
-			goto yy315;
+			if(yych <= '9') goto yy405;
+			if(yych <= ':') goto yy339;
+			goto yy317;
 		}
-yy406:
-		YYDEBUG(406, *YYCURSOR);
+yy408:
+		YYDEBUG(408, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy378;
-			goto yy315;
+			if(yych == '.') goto yy380;
+			goto yy317;
 		} else {
-			if(yych <= '9') goto yy403;
-			if(yych <= ':') goto yy378;
-			goto yy315;
+			if(yych <= '9') goto yy405;
+			if(yych <= ':') goto yy380;
+			goto yy317;
 		}
-yy407:
-		YYDEBUG(407, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy315;
-		if(yych >= ':') goto yy315;
-yy408:
-		YYDEBUG(408, *YYCURSOR);
-		++YYCURSOR;
-		if((yych = *YYCURSOR) <= '/') goto yy409;
-		if(yych <= '9') goto yy404;
 yy409:
 		YYDEBUG(409, *YYCURSOR);
-#line 1154 "ext/date/lib/parse_date.re"
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy317;
+		if(yych >= ':') goto yy317;
+yy410:
+		YYDEBUG(410, *YYCURSOR);
+		++YYCURSOR;
+		if((yych = *YYCURSOR) <= '/') goto yy411;
+		if(yych <= '9') goto yy406;
+yy411:
+		YYDEBUG(411, *YYCURSOR);
+#line 1156 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("datenoday");
 		TIMELIB_INIT;
@@ -6774,328 +6806,328 @@ yy409:
 		TIMELIB_DEINIT;
 		return TIMELIB_DATE_NO_DAY;
 	}
-#line 6778 "ext/date/lib/parse_date.c"
-yy410:
-		YYDEBUG(410, *YYCURSOR);
+#line 6810 "ext/date/lib/parse_date.c"
+yy412:
+		YYDEBUG(412, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy337;
-			goto yy315;
+			if(yych == '.') goto yy339;
+			goto yy317;
 		} else {
-			if(yych <= '9') goto yy408;
-			if(yych <= ':') goto yy337;
-			goto yy315;
+			if(yych <= '9') goto yy410;
+			if(yych <= ':') goto yy339;
+			goto yy317;
 		}
-yy411:
-		YYDEBUG(411, *YYCURSOR);
+yy413:
+		YYDEBUG(413, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy378;
-			goto yy315;
+			if(yych == '.') goto yy380;
+			goto yy317;
 		} else {
-			if(yych <= '9') goto yy408;
-			if(yych <= ':') goto yy378;
-			goto yy315;
+			if(yych <= '9') goto yy410;
+			if(yych <= ':') goto yy380;
+			goto yy317;
 		}
-yy412:
-		YYDEBUG(412, *YYCURSOR);
+yy414:
+		YYDEBUG(414, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '/') {
-				if(yych == '.') goto yy447;
-				goto yy332;
+				if(yych == '.') goto yy449;
+				goto yy334;
 			} else {
-				if(yych <= '0') goto yy448;
-				if(yych <= '1') goto yy416;
-				if(yych <= '2') goto yy417;
-				goto yy418;
+				if(yych <= '0') goto yy450;
+				if(yych <= '1') goto yy418;
+				if(yych <= '2') goto yy419;
+				goto yy420;
 			}
 		} else {
 			if(yych <= 'q') {
-				if(yych <= ':') goto yy337;
-				if(yych == 'n') goto yy328;
-				goto yy332;
+				if(yych <= ':') goto yy339;
+				if(yych == 'n') goto yy330;
+				goto yy334;
 			} else {
-				if(yych <= 'r') goto yy329;
-				if(yych <= 's') goto yy327;
-				if(yych <= 't') goto yy330;
-				goto yy332;
+				if(yych <= 'r') goto yy331;
+				if(yych <= 's') goto yy329;
+				if(yych <= 't') goto yy332;
+				goto yy334;
 			}
 		}
-yy413:
-		YYDEBUG(413, *YYCURSOR);
+yy415:
+		YYDEBUG(415, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '/') {
-				if(yych != '.') goto yy332;
+				if(yych != '.') goto yy334;
 			} else {
-				if(yych <= '0') goto yy415;
-				if(yych <= '1') goto yy416;
-				if(yych <= '2') goto yy417;
-				goto yy418;
+				if(yych <= '0') goto yy417;
+				if(yych <= '1') goto yy418;
+				if(yych <= '2') goto yy419;
+				goto yy420;
 			}
 		} else {
 			if(yych <= 'q') {
-				if(yych <= ':') goto yy378;
-				if(yych == 'n') goto yy328;
-				goto yy332;
+				if(yych <= ':') goto yy380;
+				if(yych == 'n') goto yy330;
+				goto yy334;
 			} else {
-				if(yych <= 'r') goto yy329;
-				if(yych <= 's') goto yy327;
-				if(yych <= 't') goto yy330;
-				goto yy332;
+				if(yych <= 'r') goto yy331;
+				if(yych <= 's') goto yy329;
+				if(yych <= 't') goto yy332;
+				goto yy334;
 			}
 		}
-yy414:
-		YYDEBUG(414, *YYCURSOR);
-		yyaccept = 7;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= '1') {
-			if(yych <= '/') goto yy332;
-			if(yych <= '0') goto yy422;
-			goto yy423;
-		} else {
-			if(yych <= '2') goto yy424;
-			if(yych <= '5') goto yy425;
-			if(yych <= '9') goto yy426;
-			goto yy332;
-		}
-yy415:
-		YYDEBUG(415, *YYCURSOR);
-		yyaccept = 7;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= '/') {
-			if(yych == '.') goto yy378;
-			goto yy315;
-		} else {
-			if(yych <= '0') goto yy420;
-			if(yych <= '9') goto yy421;
-			if(yych <= ':') goto yy378;
-			goto yy315;
-		}
 yy416:
 		YYDEBUG(416, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= '/') {
-			if(yych == '.') goto yy378;
-			goto yy315;
+		if(yych <= '1') {
+			if(yych <= '/') goto yy334;
+			if(yych <= '0') goto yy424;
+			goto yy425;
 		} else {
-			if(yych <= '2') goto yy421;
-			if(yych <= '9') goto yy420;
-			if(yych <= ':') goto yy378;
-			goto yy315;
+			if(yych <= '2') goto yy426;
+			if(yych <= '5') goto yy427;
+			if(yych <= '9') goto yy428;
+			goto yy334;
 		}
 yy417:
 		YYDEBUG(417, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy378;
-			goto yy315;
+			if(yych == '.') goto yy380;
+			goto yy317;
 		} else {
-			if(yych <= '3') goto yy420;
-			if(yych <= '9') goto yy419;
-			if(yych <= ':') goto yy378;
-			goto yy315;
+			if(yych <= '0') goto yy422;
+			if(yych <= '9') goto yy423;
+			if(yych <= ':') goto yy380;
+			goto yy317;
 		}
 yy418:
 		YYDEBUG(418, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy378;
-			goto yy315;
+			if(yych == '.') goto yy380;
+			goto yy317;
 		} else {
-			if(yych <= '9') goto yy419;
-			if(yych <= ':') goto yy378;
-			goto yy315;
+			if(yych <= '2') goto yy423;
+			if(yych <= '9') goto yy422;
+			if(yych <= ':') goto yy380;
+			goto yy317;
 		}
 yy419:
 		YYDEBUG(419, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy409;
-		if(yych <= '9') goto yy403;
-		goto yy409;
-yy420:
-		YYDEBUG(420, *YYCURSOR);
-		yyaccept = 9;
+		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy337;
-			goto yy409;
+			if(yych == '.') goto yy380;
+			goto yy317;
 		} else {
-			if(yych <= '9') goto yy403;
-			if(yych <= ':') goto yy337;
-			goto yy409;
+			if(yych <= '3') goto yy422;
+			if(yych <= '9') goto yy421;
+			if(yych <= ':') goto yy380;
+			goto yy317;
 		}
-yy421:
-		YYDEBUG(421, *YYCURSOR);
-		yyaccept = 9;
+yy420:
+		YYDEBUG(420, *YYCURSOR);
+		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy378;
-			goto yy409;
+			if(yych == '.') goto yy380;
+			goto yy317;
 		} else {
-			if(yych <= '9') goto yy403;
-			if(yych <= ':') goto yy378;
-			goto yy409;
+			if(yych <= '9') goto yy421;
+			if(yych <= ':') goto yy380;
+			goto yy317;
 		}
+yy421:
+		YYDEBUG(421, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy411;
+		if(yych <= '9') goto yy405;
+		goto yy411;
 yy422:
 		YYDEBUG(422, *YYCURSOR);
-		yyaccept = 7;
+		yyaccept = 9;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy442;
-			goto yy315;
+			if(yych == '.') goto yy339;
+			goto yy411;
 		} else {
-			if(yych <= '0') goto yy441;
-			if(yych <= '9') goto yy446;
-			if(yych <= ':') goto yy442;
-			goto yy315;
+			if(yych <= '9') goto yy405;
+			if(yych <= ':') goto yy339;
+			goto yy411;
 		}
 yy423:
 		YYDEBUG(423, *YYCURSOR);
-		yyaccept = 7;
+		yyaccept = 9;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy427;
-			goto yy315;
+			if(yych == '.') goto yy380;
+			goto yy411;
 		} else {
-			if(yych <= '2') goto yy446;
-			if(yych <= '9') goto yy441;
-			if(yych <= ':') goto yy427;
-			goto yy315;
+			if(yych <= '9') goto yy405;
+			if(yych <= ':') goto yy380;
+			goto yy411;
 		}
 yy424:
 		YYDEBUG(424, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy427;
-			goto yy315;
+			if(yych == '.') goto yy444;
+			goto yy317;
 		} else {
-			if(yych <= '3') goto yy441;
-			if(yych <= '9') goto yy440;
-			if(yych <= ':') goto yy427;
-			goto yy315;
+			if(yych <= '0') goto yy443;
+			if(yych <= '9') goto yy448;
+			if(yych <= ':') goto yy444;
+			goto yy317;
 		}
 yy425:
 		YYDEBUG(425, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy427;
-			goto yy315;
+			if(yych == '.') goto yy429;
+			goto yy317;
 		} else {
-			if(yych <= '9') goto yy440;
-			if(yych <= ':') goto yy427;
-			goto yy315;
+			if(yych <= '2') goto yy448;
+			if(yych <= '9') goto yy443;
+			if(yych <= ':') goto yy429;
+			goto yy317;
 		}
 yy426:
 		YYDEBUG(426, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych != '.') goto yy315;
+			if(yych == '.') goto yy429;
+			goto yy317;
 		} else {
-			if(yych <= '9') goto yy377;
-			if(yych >= ';') goto yy315;
+			if(yych <= '3') goto yy443;
+			if(yych <= '9') goto yy442;
+			if(yych <= ':') goto yy429;
+			goto yy317;
 		}
 yy427:
 		YYDEBUG(427, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy428;
-		if(yych <= '6') goto yy429;
-		if(yych <= '9') goto yy380;
-		goto yy53;
+		yyaccept = 7;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych <= '/') {
+			if(yych == '.') goto yy429;
+			goto yy317;
+		} else {
+			if(yych <= '9') goto yy442;
+			if(yych <= ':') goto yy429;
+			goto yy317;
+		}
 yy428:
 		YYDEBUG(428, *YYCURSOR);
-		yyaccept = 8;
+		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy381;
-			goto yy339;
+			if(yych != '.') goto yy317;
 		} else {
-			if(yych <= '9') goto yy430;
-			if(yych <= ':') goto yy381;
-			goto yy339;
+			if(yych <= '9') goto yy379;
+			if(yych >= ';') goto yy317;
 		}
 yy429:
 		YYDEBUG(429, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy430;
+		if(yych <= '6') goto yy431;
+		if(yych <= '9') goto yy382;
+		goto yy53;
+yy430:
+		YYDEBUG(430, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy381;
-			goto yy339;
+			if(yych == '.') goto yy383;
+			goto yy341;
 		} else {
-			if(yych <= '0') goto yy384;
-			if(yych == ':') goto yy381;
-			goto yy339;
+			if(yych <= '9') goto yy432;
+			if(yych <= ':') goto yy383;
+			goto yy341;
 		}
-yy430:
-		YYDEBUG(430, *YYCURSOR);
+yy431:
+		YYDEBUG(431, *YYCURSOR);
+		yyaccept = 8;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych <= '/') {
+			if(yych == '.') goto yy383;
+			goto yy341;
+		} else {
+			if(yych <= '0') goto yy386;
+			if(yych == ':') goto yy383;
+			goto yy341;
+		}
+yy432:
+		YYDEBUG(432, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy432;
-				if(yych <= 0x1F) goto yy339;
-				goto yy432;
+				if(yych == 0x09) goto yy434;
+				if(yych <= 0x1F) goto yy341;
+				goto yy434;
 			} else {
 				if(yych <= '(') {
-					if(yych <= '\'') goto yy339;
-					goto yy432;
+					if(yych <= '\'') goto yy341;
+					goto yy434;
 				} else {
-					if(yych == '+') goto yy432;
-					goto yy339;
+					if(yych == '+') goto yy434;
+					goto yy341;
 				}
 			}
 		} else {
 			if(yych <= ':') {
-				if(yych <= '-') goto yy432;
-				if(yych <= '.') goto yy381;
-				if(yych <= '9') goto yy339;
-				goto yy381;
+				if(yych <= '-') goto yy434;
+				if(yych <= '.') goto yy383;
+				if(yych <= '9') goto yy341;
+				goto yy383;
 			} else {
 				if(yych <= 'Z') {
-					if(yych <= '@') goto yy339;
-					goto yy432;
+					if(yych <= '@') goto yy341;
+					goto yy434;
 				} else {
-					if(yych <= '`') goto yy339;
-					if(yych <= 'z') goto yy432;
-					goto yy339;
+					if(yych <= '`') goto yy341;
+					if(yych <= 'z') goto yy434;
+					goto yy341;
 				}
 			}
 		}
-yy431:
-		YYDEBUG(431, *YYCURSOR);
+yy433:
+		YYDEBUG(433, *YYCURSOR);
 		++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 8) YYFILL(8);
 		yych = *YYCURSOR;
-yy432:
-		YYDEBUG(432, *YYCURSOR);
+yy434:
+		YYDEBUG(434, *YYCURSOR);
 		if(yych <= '-') {
 			if(yych <= '\'') {
 				if(yych <= 0x09) {
 					if(yych <= 0x08) goto yy53;
-					goto yy431;
+					goto yy433;
 				} else {
-					if(yych == ' ') goto yy431;
+					if(yych == ' ') goto yy433;
 					goto yy53;
 				}
 			} else {
 				if(yych <= '*') {
-					if(yych <= '(') goto yy349;
+					if(yych <= '(') goto yy351;
 					goto yy53;
 				} else {
 					if(yych == ',') goto yy53;
-					goto yy348;
+					goto yy350;
 				}
 			}
 		} else {
@@ -7103,495 +7135,495 @@ yy432:
 				if(yych <= 'A') {
 					if(yych <= '@') goto yy53;
 				} else {
-					if(yych != 'P') goto yy350;
+					if(yych != 'P') goto yy352;
 				}
 			} else {
 				if(yych <= 'o') {
 					if(yych <= '`') goto yy53;
-					if(yych <= 'a') goto yy434;
-					goto yy351;
+					if(yych <= 'a') goto yy436;
+					goto yy353;
 				} else {
-					if(yych <= 'p') goto yy434;
-					if(yych <= 'z') goto yy351;
+					if(yych <= 'p') goto yy436;
+					if(yych <= 'z') goto yy353;
 					goto yy53;
 				}
 			}
 		}
-		YYDEBUG(433, *YYCURSOR);
+		YYDEBUG(435, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'L') {
 			if(yych <= '-') {
-				if(yych == ')') goto yy344;
-				goto yy339;
+				if(yych == ')') goto yy346;
+				goto yy341;
 			} else {
-				if(yych <= '.') goto yy436;
-				if(yych <= '@') goto yy339;
-				goto yy352;
+				if(yych <= '.') goto yy438;
+				if(yych <= '@') goto yy341;
+				goto yy354;
 			}
 		} else {
 			if(yych <= '`') {
-				if(yych <= 'M') goto yy435;
-				if(yych <= 'Z') goto yy352;
-				goto yy339;
+				if(yych <= 'M') goto yy437;
+				if(yych <= 'Z') goto yy354;
+				goto yy341;
 			} else {
-				if(yych == 'm') goto yy439;
-				if(yych <= 'z') goto yy357;
-				goto yy339;
+				if(yych == 'm') goto yy441;
+				if(yych <= 'z') goto yy359;
+				goto yy341;
 			}
 		}
-yy434:
-		YYDEBUG(434, *YYCURSOR);
+yy436:
+		YYDEBUG(436, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'L') {
 			if(yych <= '-') {
-				if(yych == ')') goto yy344;
-				goto yy339;
+				if(yych == ')') goto yy346;
+				goto yy341;
 			} else {
-				if(yych <= '.') goto yy436;
-				if(yych <= '@') goto yy339;
-				goto yy352;
+				if(yych <= '.') goto yy438;
+				if(yych <= '@') goto yy341;
+				goto yy354;
 			}
 		} else {
 			if(yych <= '`') {
-				if(yych <= 'M') goto yy435;
-				if(yych <= 'Z') goto yy352;
-				goto yy339;
+				if(yych <= 'M') goto yy437;
+				if(yych <= 'Z') goto yy354;
+				goto yy341;
 			} else {
-				if(yych == 'm') goto yy435;
-				if(yych <= 'z') goto yy352;
-				goto yy339;
+				if(yych == 'm') goto yy437;
+				if(yych <= 'z') goto yy354;
+				goto yy341;
 			}
 		}
-yy435:
-		YYDEBUG(435, *YYCURSOR);
+yy437:
+		YYDEBUG(437, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ')') {
 			if(yych <= 0x09) {
-				if(yych <= 0x00) goto yy392;
-				if(yych <= 0x08) goto yy339;
-				goto yy392;
+				if(yych <= 0x00) goto yy394;
+				if(yych <= 0x08) goto yy341;
+				goto yy394;
 			} else {
-				if(yych == ' ') goto yy392;
-				if(yych <= '(') goto yy339;
-				goto yy344;
+				if(yych == ' ') goto yy394;
+				if(yych <= '(') goto yy341;
+				goto yy346;
 			}
 		} else {
 			if(yych <= '@') {
-				if(yych == '.') goto yy438;
-				goto yy339;
+				if(yych == '.') goto yy440;
+				goto yy341;
 			} else {
-				if(yych <= 'Z') goto yy353;
-				if(yych <= '`') goto yy339;
-				if(yych <= 'z') goto yy353;
-				goto yy339;
+				if(yych <= 'Z') goto yy355;
+				if(yych <= '`') goto yy341;
+				if(yych <= 'z') goto yy355;
+				goto yy341;
 			}
 		}
-yy436:
-		YYDEBUG(436, *YYCURSOR);
+yy438:
+		YYDEBUG(438, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'M') goto yy437;
+		if(yych == 'M') goto yy439;
 		if(yych != 'm') goto yy53;
-yy437:
-		YYDEBUG(437, *YYCURSOR);
+yy439:
+		YYDEBUG(439, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 0x1F) {
-			if(yych <= 0x00) goto yy392;
-			if(yych == 0x09) goto yy392;
+			if(yych <= 0x00) goto yy394;
+			if(yych == 0x09) goto yy394;
 			goto yy53;
 		} else {
-			if(yych <= ' ') goto yy392;
+			if(yych <= ' ') goto yy394;
 			if(yych != '.') goto yy53;
 		}
-yy438:
-		YYDEBUG(438, *YYCURSOR);
+yy440:
+		YYDEBUG(440, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 0x09) {
-			if(yych <= 0x00) goto yy392;
+			if(yych <= 0x00) goto yy394;
 			if(yych <= 0x08) goto yy53;
-			goto yy392;
+			goto yy394;
 		} else {
-			if(yych == ' ') goto yy392;
+			if(yych == ' ') goto yy394;
 			goto yy53;
 		}
-yy439:
-		YYDEBUG(439, *YYCURSOR);
+yy441:
+		YYDEBUG(441, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '-') {
 			if(yych <= 0x1F) {
-				if(yych <= 0x00) goto yy392;
-				if(yych == 0x09) goto yy392;
-				goto yy339;
+				if(yych <= 0x00) goto yy394;
+				if(yych == 0x09) goto yy394;
+				goto yy341;
 			} else {
-				if(yych <= ' ') goto yy392;
-				if(yych == ')') goto yy344;
-				goto yy339;
+				if(yych <= ' ') goto yy394;
+				if(yych == ')') goto yy346;
+				goto yy341;
 			}
 		} else {
 			if(yych <= 'Z') {
-				if(yych <= '.') goto yy438;
-				if(yych <= '/') goto yy359;
-				if(yych <= '@') goto yy339;
-				goto yy353;
+				if(yych <= '.') goto yy440;
+				if(yych <= '/') goto yy361;
+				if(yych <= '@') goto yy341;
+				goto yy355;
 			} else {
 				if(yych <= '_') {
-					if(yych <= '^') goto yy339;
-					goto yy359;
+					if(yych <= '^') goto yy341;
+					goto yy361;
 				} else {
-					if(yych <= '`') goto yy339;
-					if(yych <= 'z') goto yy358;
-					goto yy339;
+					if(yych <= '`') goto yy341;
+					if(yych <= 'z') goto yy360;
+					goto yy341;
 				}
 			}
 		}
-yy440:
-		YYDEBUG(440, *YYCURSOR);
+yy442:
+		YYDEBUG(442, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ':') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy397;
-				if(yych <= 0x1F) goto yy315;
-				goto yy397;
+				if(yych == 0x09) goto yy399;
+				if(yych <= 0x1F) goto yy317;
+				goto yy399;
 			} else {
 				if(yych <= '.') {
-					if(yych <= '-') goto yy315;
-					goto yy381;
+					if(yych <= '-') goto yy317;
+					goto yy383;
 				} else {
-					if(yych <= '/') goto yy315;
-					if(yych <= '9') goto yy403;
-					goto yy381;
+					if(yych <= '/') goto yy317;
+					if(yych <= '9') goto yy405;
+					goto yy383;
 				}
 			}
 		} else {
 			if(yych <= 'P') {
-				if(yych == 'A') goto yy399;
-				if(yych <= 'O') goto yy315;
-				goto yy399;
+				if(yych == 'A') goto yy401;
+				if(yych <= 'O') goto yy317;
+				goto yy401;
 			} else {
 				if(yych <= 'a') {
-					if(yych <= '`') goto yy315;
-					goto yy399;
+					if(yych <= '`') goto yy317;
+					goto yy401;
 				} else {
-					if(yych == 'p') goto yy399;
-					goto yy315;
+					if(yych == 'p') goto yy401;
+					goto yy317;
 				}
 			}
 		}
-yy441:
-		YYDEBUG(441, *YYCURSOR);
+yy443:
+		YYDEBUG(443, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ':') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy397;
-				if(yych <= 0x1F) goto yy315;
-				goto yy397;
+				if(yych == 0x09) goto yy399;
+				if(yych <= 0x1F) goto yy317;
+				goto yy399;
 			} else {
 				if(yych <= '.') {
-					if(yych <= '-') goto yy315;
+					if(yych <= '-') goto yy317;
 				} else {
-					if(yych <= '/') goto yy315;
-					if(yych <= '9') goto yy403;
+					if(yych <= '/') goto yy317;
+					if(yych <= '9') goto yy405;
 				}
 			}
 		} else {
 			if(yych <= 'P') {
-				if(yych == 'A') goto yy399;
-				if(yych <= 'O') goto yy315;
-				goto yy399;
+				if(yych == 'A') goto yy401;
+				if(yych <= 'O') goto yy317;
+				goto yy401;
 			} else {
 				if(yych <= 'a') {
-					if(yych <= '`') goto yy315;
-					goto yy399;
+					if(yych <= '`') goto yy317;
+					goto yy401;
 				} else {
-					if(yych == 'p') goto yy399;
-					goto yy315;
+					if(yych == 'p') goto yy401;
+					goto yy317;
 				}
 			}
 		}
-yy442:
-		YYDEBUG(442, *YYCURSOR);
+yy444:
+		YYDEBUG(444, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy443;
-		if(yych <= '6') goto yy444;
-		if(yych <= '9') goto yy340;
+		if(yych <= '5') goto yy445;
+		if(yych <= '6') goto yy446;
+		if(yych <= '9') goto yy342;
 		goto yy53;
-yy443:
-		YYDEBUG(443, *YYCURSOR);
+yy445:
+		YYDEBUG(445, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy341;
-			goto yy339;
+			if(yych == '.') goto yy343;
+			goto yy341;
 		} else {
-			if(yych <= '9') goto yy445;
-			if(yych <= ':') goto yy341;
-			goto yy339;
+			if(yych <= '9') goto yy447;
+			if(yych <= ':') goto yy343;
+			goto yy341;
 		}
-yy444:
-		YYDEBUG(444, *YYCURSOR);
+yy446:
+		YYDEBUG(446, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy341;
-			goto yy339;
+			if(yych == '.') goto yy343;
+			goto yy341;
 		} else {
-			if(yych <= '0') goto yy384;
-			if(yych == ':') goto yy341;
-			goto yy339;
+			if(yych <= '0') goto yy386;
+			if(yych == ':') goto yy343;
+			goto yy341;
 		}
-yy445:
-		YYDEBUG(445, *YYCURSOR);
+yy447:
+		YYDEBUG(447, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy386;
-				if(yych <= 0x1F) goto yy339;
-				goto yy386;
+				if(yych == 0x09) goto yy388;
+				if(yych <= 0x1F) goto yy341;
+				goto yy388;
 			} else {
 				if(yych <= '(') {
-					if(yych <= '\'') goto yy339;
-					goto yy386;
+					if(yych <= '\'') goto yy341;
+					goto yy388;
 				} else {
-					if(yych == '+') goto yy386;
-					goto yy339;
+					if(yych == '+') goto yy388;
+					goto yy341;
 				}
 			}
 		} else {
 			if(yych <= ':') {
-				if(yych <= '-') goto yy386;
-				if(yych <= '.') goto yy341;
-				if(yych <= '9') goto yy339;
-				goto yy341;
+				if(yych <= '-') goto yy388;
+				if(yych <= '.') goto yy343;
+				if(yych <= '9') goto yy341;
+				goto yy343;
 			} else {
 				if(yych <= 'Z') {
-					if(yych <= '@') goto yy339;
-					goto yy386;
+					if(yych <= '@') goto yy341;
+					goto yy388;
 				} else {
-					if(yych <= '`') goto yy339;
-					if(yych <= 'z') goto yy386;
-					goto yy339;
+					if(yych <= '`') goto yy341;
+					if(yych <= 'z') goto yy388;
+					goto yy341;
 				}
 			}
 		}
-yy446:
-		YYDEBUG(446, *YYCURSOR);
+yy448:
+		YYDEBUG(448, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ':') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy397;
-				if(yych <= 0x1F) goto yy315;
-				goto yy397;
+				if(yych == 0x09) goto yy399;
+				if(yych <= 0x1F) goto yy317;
+				goto yy399;
 			} else {
 				if(yych <= '.') {
-					if(yych <= '-') goto yy315;
-					goto yy427;
+					if(yych <= '-') goto yy317;
+					goto yy429;
 				} else {
-					if(yych <= '/') goto yy315;
-					if(yych <= '9') goto yy403;
-					goto yy427;
+					if(yych <= '/') goto yy317;
+					if(yych <= '9') goto yy405;
+					goto yy429;
 				}
 			}
 		} else {
 			if(yych <= 'P') {
-				if(yych == 'A') goto yy399;
-				if(yych <= 'O') goto yy315;
-				goto yy399;
+				if(yych == 'A') goto yy401;
+				if(yych <= 'O') goto yy317;
+				goto yy401;
 			} else {
 				if(yych <= 'a') {
-					if(yych <= '`') goto yy315;
-					goto yy399;
+					if(yych <= '`') goto yy317;
+					goto yy401;
 				} else {
-					if(yych == 'p') goto yy399;
-					goto yy315;
+					if(yych == 'p') goto yy401;
+					goto yy317;
 				}
 			}
 		}
-yy447:
-		YYDEBUG(447, *YYCURSOR);
-		yyaccept = 7;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= '1') {
-			if(yych <= '/') goto yy332;
-			if(yych <= '0') goto yy449;
-			goto yy450;
-		} else {
-			if(yych <= '2') goto yy451;
-			if(yych <= '5') goto yy452;
-			if(yych <= '9') goto yy453;
-			goto yy332;
-		}
-yy448:
-		YYDEBUG(448, *YYCURSOR);
-		yyaccept = 7;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= '/') {
-			if(yych == '.') goto yy337;
-			goto yy315;
-		} else {
-			if(yych <= '0') goto yy420;
-			if(yych <= '9') goto yy421;
-			if(yych <= ':') goto yy337;
-			goto yy315;
-		}
 yy449:
 		YYDEBUG(449, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= '/') {
-			if(yych == '.') goto yy466;
-			goto yy315;
+		if(yych <= '1') {
+			if(yych <= '/') goto yy334;
+			if(yych <= '0') goto yy451;
+			goto yy452;
 		} else {
-			if(yych <= '0') goto yy465;
-			if(yych <= '9') goto yy470;
-			if(yych <= ':') goto yy466;
-			goto yy315;
+			if(yych <= '2') goto yy453;
+			if(yych <= '5') goto yy454;
+			if(yych <= '9') goto yy455;
+			goto yy334;
 		}
 yy450:
 		YYDEBUG(450, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy454;
-			goto yy315;
+			if(yych == '.') goto yy339;
+			goto yy317;
 		} else {
-			if(yych <= '2') goto yy470;
-			if(yych <= '9') goto yy465;
-			if(yych <= ':') goto yy454;
-			goto yy315;
+			if(yych <= '0') goto yy422;
+			if(yych <= '9') goto yy423;
+			if(yych <= ':') goto yy339;
+			goto yy317;
 		}
 yy451:
 		YYDEBUG(451, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy454;
-			goto yy315;
+			if(yych == '.') goto yy468;
+			goto yy317;
 		} else {
-			if(yych <= '3') goto yy465;
-			if(yych <= '9') goto yy464;
-			if(yych <= ':') goto yy454;
-			goto yy315;
+			if(yych <= '0') goto yy467;
+			if(yych <= '9') goto yy472;
+			if(yych <= ':') goto yy468;
+			goto yy317;
 		}
 yy452:
 		YYDEBUG(452, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy454;
-			goto yy315;
+			if(yych == '.') goto yy456;
+			goto yy317;
 		} else {
-			if(yych <= '9') goto yy464;
-			if(yych <= ':') goto yy454;
-			goto yy315;
+			if(yych <= '2') goto yy472;
+			if(yych <= '9') goto yy467;
+			if(yych <= ':') goto yy456;
+			goto yy317;
 		}
 yy453:
 		YYDEBUG(453, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych != '.') goto yy315;
+			if(yych == '.') goto yy456;
+			goto yy317;
 		} else {
-			if(yych <= '9') goto yy377;
-			if(yych >= ';') goto yy315;
+			if(yych <= '3') goto yy467;
+			if(yych <= '9') goto yy466;
+			if(yych <= ':') goto yy456;
+			goto yy317;
 		}
 yy454:
 		YYDEBUG(454, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy455;
-		if(yych <= '6') goto yy456;
-		if(yych <= '9') goto yy380;
-		goto yy53;
+		yyaccept = 7;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych <= '/') {
+			if(yych == '.') goto yy456;
+			goto yy317;
+		} else {
+			if(yych <= '9') goto yy466;
+			if(yych <= ':') goto yy456;
+			goto yy317;
+		}
 yy455:
 		YYDEBUG(455, *YYCURSOR);
-		yyaccept = 8;
+		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy381;
-			goto yy339;
+			if(yych != '.') goto yy317;
 		} else {
-			if(yych <= '9') goto yy457;
-			if(yych <= ':') goto yy381;
-			goto yy339;
+			if(yych <= '9') goto yy379;
+			if(yych >= ';') goto yy317;
 		}
 yy456:
 		YYDEBUG(456, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy457;
+		if(yych <= '6') goto yy458;
+		if(yych <= '9') goto yy382;
+		goto yy53;
+yy457:
+		YYDEBUG(457, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy381;
-			goto yy339;
+			if(yych == '.') goto yy383;
+			goto yy341;
 		} else {
-			if(yych <= '0') goto yy345;
-			if(yych == ':') goto yy381;
-			goto yy339;
+			if(yych <= '9') goto yy459;
+			if(yych <= ':') goto yy383;
+			goto yy341;
 		}
-yy457:
-		YYDEBUG(457, *YYCURSOR);
+yy458:
+		YYDEBUG(458, *YYCURSOR);
+		yyaccept = 8;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych <= '/') {
+			if(yych == '.') goto yy383;
+			goto yy341;
+		} else {
+			if(yych <= '0') goto yy347;
+			if(yych == ':') goto yy383;
+			goto yy341;
+		}
+yy459:
+		YYDEBUG(459, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy459;
-				if(yych <= 0x1F) goto yy339;
-				goto yy459;
+				if(yych == 0x09) goto yy461;
+				if(yych <= 0x1F) goto yy341;
+				goto yy461;
 			} else {
 				if(yych <= '(') {
-					if(yych <= '\'') goto yy339;
-					goto yy459;
+					if(yych <= '\'') goto yy341;
+					goto yy461;
 				} else {
-					if(yych == '+') goto yy459;
-					goto yy339;
+					if(yych == '+') goto yy461;
+					goto yy341;
 				}
 			}
 		} else {
 			if(yych <= ':') {
-				if(yych <= '-') goto yy459;
-				if(yych <= '.') goto yy381;
-				if(yych <= '9') goto yy339;
-				goto yy381;
+				if(yych <= '-') goto yy461;
+				if(yych <= '.') goto yy383;
+				if(yych <= '9') goto yy341;
+				goto yy383;
 			} else {
 				if(yych <= 'Z') {
-					if(yych <= '@') goto yy339;
-					goto yy459;
+					if(yych <= '@') goto yy341;
+					goto yy461;
 				} else {
-					if(yych <= '`') goto yy339;
-					if(yych <= 'z') goto yy459;
-					goto yy339;
+					if(yych <= '`') goto yy341;
+					if(yych <= 'z') goto yy461;
+					goto yy341;
 				}
 			}
 		}
-yy458:
-		YYDEBUG(458, *YYCURSOR);
+yy460:
+		YYDEBUG(460, *YYCURSOR);
 		++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 8) YYFILL(8);
 		yych = *YYCURSOR;
-yy459:
-		YYDEBUG(459, *YYCURSOR);
+yy461:
+		YYDEBUG(461, *YYCURSOR);
 		if(yych <= '-') {
 			if(yych <= '\'') {
 				if(yych <= 0x09) {
 					if(yych <= 0x08) goto yy53;
-					goto yy458;
+					goto yy460;
 				} else {
-					if(yych == ' ') goto yy458;
+					if(yych == ' ') goto yy460;
 					goto yy53;
 				}
 			} else {
 				if(yych <= '*') {
-					if(yych <= '(') goto yy349;
+					if(yych <= '(') goto yy351;
 					goto yy53;
 				} else {
 					if(yych == ',') goto yy53;
-					goto yy348;
+					goto yy350;
 				}
 			}
 		} else {
@@ -7599,418 +7631,418 @@ yy459:
 				if(yych <= 'A') {
 					if(yych <= '@') goto yy53;
 				} else {
-					if(yych != 'P') goto yy350;
+					if(yych != 'P') goto yy352;
 				}
 			} else {
 				if(yych <= 'o') {
 					if(yych <= '`') goto yy53;
-					if(yych <= 'a') goto yy461;
-					goto yy351;
+					if(yych <= 'a') goto yy463;
+					goto yy353;
 				} else {
-					if(yych <= 'p') goto yy461;
-					if(yych <= 'z') goto yy351;
+					if(yych <= 'p') goto yy463;
+					if(yych <= 'z') goto yy353;
 					goto yy53;
 				}
 			}
 		}
-		YYDEBUG(460, *YYCURSOR);
+		YYDEBUG(462, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'L') {
 			if(yych <= '-') {
-				if(yych == ')') goto yy344;
-				goto yy339;
+				if(yych == ')') goto yy346;
+				goto yy341;
 			} else {
-				if(yych <= '.') goto yy400;
-				if(yych <= '@') goto yy339;
-				goto yy352;
+				if(yych <= '.') goto yy402;
+				if(yych <= '@') goto yy341;
+				goto yy354;
 			}
 		} else {
 			if(yych <= '`') {
-				if(yych <= 'M') goto yy462;
-				if(yych <= 'Z') goto yy352;
-				goto yy339;
+				if(yych <= 'M') goto yy464;
+				if(yych <= 'Z') goto yy354;
+				goto yy341;
 			} else {
-				if(yych == 'm') goto yy463;
-				if(yych <= 'z') goto yy357;
-				goto yy339;
+				if(yych == 'm') goto yy465;
+				if(yych <= 'z') goto yy359;
+				goto yy341;
 			}
 		}
-yy461:
-		YYDEBUG(461, *YYCURSOR);
+yy463:
+		YYDEBUG(463, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'L') {
 			if(yych <= '-') {
-				if(yych == ')') goto yy344;
-				goto yy339;
+				if(yych == ')') goto yy346;
+				goto yy341;
 			} else {
-				if(yych <= '.') goto yy400;
-				if(yych <= '@') goto yy339;
-				goto yy352;
+				if(yych <= '.') goto yy402;
+				if(yych <= '@') goto yy341;
+				goto yy354;
 			}
 		} else {
 			if(yych <= '`') {
-				if(yych <= 'M') goto yy462;
-				if(yych <= 'Z') goto yy352;
-				goto yy339;
+				if(yych <= 'M') goto yy464;
+				if(yych <= 'Z') goto yy354;
+				goto yy341;
 			} else {
-				if(yych == 'm') goto yy462;
-				if(yych <= 'z') goto yy352;
-				goto yy339;
+				if(yych == 'm') goto yy464;
+				if(yych <= 'z') goto yy354;
+				goto yy341;
 			}
 		}
-yy462:
-		YYDEBUG(462, *YYCURSOR);
+yy464:
+		YYDEBUG(464, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ')') {
 			if(yych <= 0x09) {
-				if(yych <= 0x00) goto yy392;
-				if(yych <= 0x08) goto yy339;
-				goto yy392;
+				if(yych <= 0x00) goto yy394;
+				if(yych <= 0x08) goto yy341;
+				goto yy394;
 			} else {
-				if(yych == ' ') goto yy392;
-				if(yych <= '(') goto yy339;
-				goto yy344;
+				if(yych == ' ') goto yy394;
+				if(yych <= '(') goto yy341;
+				goto yy346;
 			}
 		} else {
 			if(yych <= '@') {
-				if(yych == '.') goto yy402;
-				goto yy339;
+				if(yych == '.') goto yy404;
+				goto yy341;
 			} else {
-				if(yych <= 'Z') goto yy353;
-				if(yych <= '`') goto yy339;
-				if(yych <= 'z') goto yy353;
-				goto yy339;
+				if(yych <= 'Z') goto yy355;
+				if(yych <= '`') goto yy341;
+				if(yych <= 'z') goto yy355;
+				goto yy341;
 			}
 		}
-yy463:
-		YYDEBUG(463, *YYCURSOR);
+yy465:
+		YYDEBUG(465, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '-') {
 			if(yych <= 0x1F) {
-				if(yych <= 0x00) goto yy392;
-				if(yych == 0x09) goto yy392;
-				goto yy339;
+				if(yych <= 0x00) goto yy394;
+				if(yych == 0x09) goto yy394;
+				goto yy341;
 			} else {
-				if(yych <= ' ') goto yy392;
-				if(yych == ')') goto yy344;
-				goto yy339;
+				if(yych <= ' ') goto yy394;
+				if(yych == ')') goto yy346;
+				goto yy341;
 			}
 		} else {
 			if(yych <= 'Z') {
-				if(yych <= '.') goto yy402;
-				if(yych <= '/') goto yy359;
-				if(yych <= '@') goto yy339;
-				goto yy353;
+				if(yych <= '.') goto yy404;
+				if(yych <= '/') goto yy361;
+				if(yych <= '@') goto yy341;
+				goto yy355;
 			} else {
 				if(yych <= '_') {
-					if(yych <= '^') goto yy339;
-					goto yy359;
+					if(yych <= '^') goto yy341;
+					goto yy361;
 				} else {
-					if(yych <= '`') goto yy339;
-					if(yych <= 'z') goto yy358;
-					goto yy339;
+					if(yych <= '`') goto yy341;
+					if(yych <= 'z') goto yy360;
+					goto yy341;
 				}
 			}
 		}
-yy464:
-		YYDEBUG(464, *YYCURSOR);
+yy466:
+		YYDEBUG(466, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy341;
-			goto yy315;
+			if(yych == '.') goto yy343;
+			goto yy317;
 		} else {
-			if(yych <= '9') goto yy403;
-			if(yych <= ':') goto yy341;
-			goto yy315;
+			if(yych <= '9') goto yy405;
+			if(yych <= ':') goto yy343;
+			goto yy317;
 		}
-yy465:
-		YYDEBUG(465, *YYCURSOR);
+yy467:
+		YYDEBUG(467, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych != '.') goto yy315;
+			if(yych != '.') goto yy317;
 		} else {
-			if(yych <= '9') goto yy403;
-			if(yych >= ';') goto yy315;
+			if(yych <= '9') goto yy405;
+			if(yych >= ';') goto yy317;
 		}
-yy466:
-		YYDEBUG(466, *YYCURSOR);
+yy468:
+		YYDEBUG(468, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy467;
-		if(yych <= '6') goto yy468;
-		if(yych <= '9') goto yy340;
+		if(yych <= '5') goto yy469;
+		if(yych <= '6') goto yy470;
+		if(yych <= '9') goto yy342;
 		goto yy53;
-yy467:
-		YYDEBUG(467, *YYCURSOR);
+yy469:
+		YYDEBUG(469, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy341;
-			goto yy339;
+			if(yych == '.') goto yy343;
+			goto yy341;
 		} else {
-			if(yych <= '9') goto yy469;
-			if(yych <= ':') goto yy341;
-			goto yy339;
+			if(yych <= '9') goto yy471;
+			if(yych <= ':') goto yy343;
+			goto yy341;
 		}
-yy468:
-		YYDEBUG(468, *YYCURSOR);
+yy470:
+		YYDEBUG(470, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy341;
-			goto yy339;
+			if(yych == '.') goto yy343;
+			goto yy341;
 		} else {
-			if(yych <= '0') goto yy345;
-			if(yych == ':') goto yy341;
-			goto yy339;
+			if(yych <= '0') goto yy347;
+			if(yych == ':') goto yy343;
+			goto yy341;
 		}
-yy469:
-		YYDEBUG(469, *YYCURSOR);
+yy471:
+		YYDEBUG(471, *YYCURSOR);
 		yyaccept = 8;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy346;
-				if(yych <= 0x1F) goto yy339;
-				goto yy346;
+				if(yych == 0x09) goto yy348;
+				if(yych <= 0x1F) goto yy341;
+				goto yy348;
 			} else {
 				if(yych <= '(') {
-					if(yych <= '\'') goto yy339;
-					goto yy349;
+					if(yych <= '\'') goto yy341;
+					goto yy351;
 				} else {
-					if(yych == '+') goto yy348;
-					goto yy339;
+					if(yych == '+') goto yy350;
+					goto yy341;
 				}
 			}
 		} else {
 			if(yych <= ':') {
-				if(yych <= '-') goto yy348;
-				if(yych <= '.') goto yy341;
-				if(yych <= '9') goto yy339;
-				goto yy341;
+				if(yych <= '-') goto yy350;
+				if(yych <= '.') goto yy343;
+				if(yych <= '9') goto yy341;
+				goto yy343;
 			} else {
 				if(yych <= 'Z') {
-					if(yych <= '@') goto yy339;
-					goto yy350;
+					if(yych <= '@') goto yy341;
+					goto yy352;
 				} else {
-					if(yych <= '`') goto yy339;
-					if(yych <= 'z') goto yy351;
-					goto yy339;
+					if(yych <= '`') goto yy341;
+					if(yych <= 'z') goto yy353;
+					goto yy341;
 				}
 			}
 		}
-yy470:
-		YYDEBUG(470, *YYCURSOR);
+yy472:
+		YYDEBUG(472, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy454;
-			goto yy315;
+			if(yych == '.') goto yy456;
+			goto yy317;
 		} else {
-			if(yych <= '9') goto yy403;
-			if(yych <= ':') goto yy454;
-			goto yy315;
+			if(yych <= '9') goto yy405;
+			if(yych <= ':') goto yy456;
+			goto yy317;
 		}
-yy471:
-		YYDEBUG(471, *YYCURSOR);
+yy473:
+		YYDEBUG(473, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '/') {
-				if(yych == '.') goto yy414;
-				goto yy332;
+				if(yych == '.') goto yy416;
+				goto yy334;
 			} else {
-				if(yych <= '0') goto yy448;
-				if(yych <= '1') goto yy416;
-				if(yych <= '2') goto yy417;
-				goto yy418;
+				if(yych <= '0') goto yy450;
+				if(yych <= '1') goto yy418;
+				if(yych <= '2') goto yy419;
+				goto yy420;
 			}
 		} else {
 			if(yych <= 'q') {
-				if(yych <= ':') goto yy378;
-				if(yych == 'n') goto yy328;
-				goto yy332;
+				if(yych <= ':') goto yy380;
+				if(yych == 'n') goto yy330;
+				goto yy334;
 			} else {
-				if(yych <= 'r') goto yy329;
-				if(yych <= 's') goto yy327;
-				if(yych <= 't') goto yy330;
-				goto yy332;
+				if(yych <= 'r') goto yy331;
+				if(yych <= 's') goto yy329;
+				if(yych <= 't') goto yy332;
+				goto yy334;
 			}
 		}
-yy472:
-		YYDEBUG(472, *YYCURSOR);
+yy474:
+		YYDEBUG(474, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '/') {
-				if(yych == '.') goto yy414;
-				goto yy332;
+				if(yych == '.') goto yy416;
+				goto yy334;
 			} else {
-				if(yych <= '0') goto yy448;
-				if(yych <= '1') goto yy416;
-				if(yych <= '2') goto yy417;
-				goto yy418;
+				if(yych <= '0') goto yy450;
+				if(yych <= '1') goto yy418;
+				if(yych <= '2') goto yy419;
+				goto yy420;
 			}
 		} else {
 			if(yych <= 'q') {
-				if(yych <= ':') goto yy378;
-				if(yych == 'n') goto yy328;
-				goto yy332;
+				if(yych <= ':') goto yy380;
+				if(yych == 'n') goto yy330;
+				goto yy334;
 			} else {
-				if(yych <= 'r') goto yy329;
-				if(yych <= 's') goto yy327;
-				if(yych <= 't') goto yy330;
-				goto yy332;
+				if(yych <= 'r') goto yy331;
+				if(yych <= 's') goto yy329;
+				if(yych <= 't') goto yy332;
+				goto yy334;
 			}
 		}
-yy473:
-		YYDEBUG(473, *YYCURSOR);
+yy475:
+		YYDEBUG(475, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'm') {
 			if(yych <= '1') {
-				if(yych <= '/') goto yy332;
-				if(yych <= '0') goto yy412;
-				goto yy477;
+				if(yych <= '/') goto yy334;
+				if(yych <= '0') goto yy414;
+				goto yy479;
 			} else {
-				if(yych <= '2') goto yy484;
-				if(yych <= '9') goto yy485;
-				goto yy332;
+				if(yych <= '2') goto yy486;
+				if(yych <= '9') goto yy487;
+				goto yy334;
 			}
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'n') goto yy328;
-				if(yych <= 'q') goto yy332;
-				goto yy329;
+				if(yych <= 'n') goto yy330;
+				if(yych <= 'q') goto yy334;
+				goto yy331;
 			} else {
-				if(yych <= 's') goto yy327;
-				if(yych <= 't') goto yy330;
-				goto yy332;
+				if(yych <= 's') goto yy329;
+				if(yych <= 't') goto yy332;
+				goto yy334;
 			}
 		}
-yy474:
-		YYDEBUG(474, *YYCURSOR);
+yy476:
+		YYDEBUG(476, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'm') {
 			if(yych <= '1') {
-				if(yych <= '/') goto yy332;
-				if(yych <= '0') goto yy476;
-				goto yy477;
+				if(yych <= '/') goto yy334;
+				if(yych <= '0') goto yy478;
+				goto yy479;
 			} else {
-				if(yych <= '2') goto yy484;
-				if(yych <= '9') goto yy485;
-				goto yy332;
+				if(yych <= '2') goto yy486;
+				if(yych <= '9') goto yy487;
+				goto yy334;
 			}
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'n') goto yy328;
-				if(yych <= 'q') goto yy332;
-				goto yy329;
+				if(yych <= 'n') goto yy330;
+				if(yych <= 'q') goto yy334;
+				goto yy331;
 			} else {
-				if(yych <= 's') goto yy327;
-				if(yych <= 't') goto yy330;
-				goto yy332;
+				if(yych <= 's') goto yy329;
+				if(yych <= 't') goto yy332;
+				goto yy334;
 			}
 		}
-yy475:
-		YYDEBUG(475, *YYCURSOR);
+yy477:
+		YYDEBUG(477, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'm') {
 			if(yych <= '1') {
-				if(yych <= '/') goto yy332;
-				if(yych >= '1') goto yy477;
+				if(yych <= '/') goto yy334;
+				if(yych >= '1') goto yy479;
 			} else {
-				if(yych <= '2') goto yy325;
-				if(yych <= '9') goto yy326;
-				goto yy332;
+				if(yych <= '2') goto yy327;
+				if(yych <= '9') goto yy328;
+				goto yy334;
 			}
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'n') goto yy328;
-				if(yych <= 'q') goto yy332;
-				goto yy329;
+				if(yych <= 'n') goto yy330;
+				if(yych <= 'q') goto yy334;
+				goto yy331;
 			} else {
-				if(yych <= 's') goto yy327;
-				if(yych <= 't') goto yy330;
-				goto yy332;
+				if(yych <= 's') goto yy329;
+				if(yych <= 't') goto yy332;
+				goto yy334;
 			}
 		}
-yy476:
-		YYDEBUG(476, *YYCURSOR);
+yy478:
+		YYDEBUG(478, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '/') {
-				if(yych <= ',') goto yy332;
-				if(yych <= '-') goto yy478;
-				if(yych <= '.') goto yy447;
-				goto yy332;
+				if(yych <= ',') goto yy334;
+				if(yych <= '-') goto yy480;
+				if(yych <= '.') goto yy449;
+				goto yy334;
 			} else {
-				if(yych <= '0') goto yy448;
-				if(yych <= '1') goto yy416;
-				if(yych <= '2') goto yy417;
-				goto yy418;
+				if(yych <= '0') goto yy450;
+				if(yych <= '1') goto yy418;
+				if(yych <= '2') goto yy419;
+				goto yy420;
 			}
 		} else {
 			if(yych <= 'q') {
-				if(yych <= ':') goto yy337;
-				if(yych == 'n') goto yy328;
-				goto yy332;
+				if(yych <= ':') goto yy339;
+				if(yych == 'n') goto yy330;
+				goto yy334;
 			} else {
-				if(yych <= 'r') goto yy329;
-				if(yych <= 's') goto yy327;
-				if(yych <= 't') goto yy330;
-				goto yy332;
+				if(yych <= 'r') goto yy331;
+				if(yych <= 's') goto yy329;
+				if(yych <= 't') goto yy332;
+				goto yy334;
 			}
 		}
-yy477:
-		YYDEBUG(477, *YYCURSOR);
+yy479:
+		YYDEBUG(479, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '/') {
-				if(yych <= ',') goto yy332;
-				if(yych <= '-') goto yy478;
-				if(yych <= '.') goto yy414;
-				goto yy332;
+				if(yych <= ',') goto yy334;
+				if(yych <= '-') goto yy480;
+				if(yych <= '.') goto yy416;
+				goto yy334;
 			} else {
-				if(yych <= '0') goto yy415;
-				if(yych <= '1') goto yy416;
-				if(yych <= '2') goto yy417;
-				goto yy418;
+				if(yych <= '0') goto yy417;
+				if(yych <= '1') goto yy418;
+				if(yych <= '2') goto yy419;
+				goto yy420;
 			}
 		} else {
 			if(yych <= 'q') {
-				if(yych <= ':') goto yy378;
-				if(yych == 'n') goto yy328;
-				goto yy332;
+				if(yych <= ':') goto yy380;
+				if(yych == 'n') goto yy330;
+				goto yy334;
 			} else {
-				if(yych <= 'r') goto yy329;
-				if(yych <= 's') goto yy327;
-				if(yych <= 't') goto yy330;
-				goto yy332;
+				if(yych <= 'r') goto yy331;
+				if(yych <= 's') goto yy329;
+				if(yych <= 't') goto yy332;
+				goto yy334;
 			}
 		}
-yy478:
-		YYDEBUG(478, *YYCURSOR);
+yy480:
+		YYDEBUG(480, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
 		if(yych >= ':') goto yy53;
-		YYDEBUG(479, *YYCURSOR);
+		YYDEBUG(481, *YYCURSOR);
 		++YYCURSOR;
-		if((yych = *YYCURSOR) <= '/') goto yy480;
-		if(yych <= '9') goto yy481;
-yy480:
-		YYDEBUG(480, *YYCURSOR);
-#line 1294 "ext/date/lib/parse_date.re"
+		if((yych = *YYCURSOR) <= '/') goto yy482;
+		if(yych <= '9') goto yy483;
+yy482:
+		YYDEBUG(482, *YYCURSOR);
+#line 1296 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("pgtextshort");
 		TIMELIB_INIT;
@@ -8022,77 +8054,77 @@ yy480:
 		TIMELIB_DEINIT;
 		return TIMELIB_PG_TEXT;
 	}
-#line 8026 "ext/date/lib/parse_date.c"
-yy481:
-		YYDEBUG(481, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy480;
-		if(yych >= ':') goto yy480;
-		YYDEBUG(482, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy480;
-		if(yych >= ':') goto yy480;
+#line 8058 "ext/date/lib/parse_date.c"
+yy483:
 		YYDEBUG(483, *YYCURSOR);
 		yych = *++YYCURSOR;
-		goto yy480;
-yy484:
+		if(yych <= '/') goto yy482;
+		if(yych >= ':') goto yy482;
 		YYDEBUG(484, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy482;
+		if(yych >= ':') goto yy482;
+		YYDEBUG(485, *YYCURSOR);
+		yych = *++YYCURSOR;
+		goto yy482;
+yy486:
+		YYDEBUG(486, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '/') {
-				if(yych <= ',') goto yy332;
-				if(yych <= '-') goto yy478;
-				if(yych <= '.') goto yy414;
-				goto yy332;
+				if(yych <= ',') goto yy334;
+				if(yych <= '-') goto yy480;
+				if(yych <= '.') goto yy416;
+				goto yy334;
 			} else {
-				if(yych <= '0') goto yy448;
-				if(yych <= '1') goto yy416;
-				if(yych <= '2') goto yy417;
-				goto yy418;
+				if(yych <= '0') goto yy450;
+				if(yych <= '1') goto yy418;
+				if(yych <= '2') goto yy419;
+				goto yy420;
 			}
 		} else {
 			if(yych <= 'q') {
-				if(yych <= ':') goto yy378;
-				if(yych == 'n') goto yy328;
-				goto yy332;
+				if(yych <= ':') goto yy380;
+				if(yych == 'n') goto yy330;
+				goto yy334;
 			} else {
-				if(yych <= 'r') goto yy329;
-				if(yych <= 's') goto yy327;
-				if(yych <= 't') goto yy330;
-				goto yy332;
+				if(yych <= 'r') goto yy331;
+				if(yych <= 's') goto yy329;
+				if(yych <= 't') goto yy332;
+				goto yy334;
 			}
 		}
-yy485:
-		YYDEBUG(485, *YYCURSOR);
+yy487:
+		YYDEBUG(487, *YYCURSOR);
 		yyaccept = 7;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '/') {
-				if(yych <= ',') goto yy332;
-				if(yych <= '-') goto yy478;
-				if(yych <= '.') goto yy414;
-				goto yy332;
+				if(yych <= ',') goto yy334;
+				if(yych <= '-') goto yy480;
+				if(yych <= '.') goto yy416;
+				goto yy334;
 			} else {
-				if(yych <= '0') goto yy448;
-				if(yych <= '1') goto yy416;
-				if(yych <= '2') goto yy417;
-				goto yy418;
+				if(yych <= '0') goto yy450;
+				if(yych <= '1') goto yy418;
+				if(yych <= '2') goto yy419;
+				goto yy420;
 			}
 		} else {
 			if(yych <= 'q') {
-				if(yych <= ':') goto yy378;
-				if(yych == 'n') goto yy328;
-				goto yy332;
+				if(yych <= ':') goto yy380;
+				if(yych == 'n') goto yy330;
+				goto yy334;
 			} else {
-				if(yych <= 'r') goto yy329;
-				if(yych <= 's') goto yy327;
-				if(yych <= 't') goto yy330;
-				goto yy332;
+				if(yych <= 'r') goto yy331;
+				if(yych <= 's') goto yy329;
+				if(yych <= 't') goto yy332;
+				goto yy334;
 			}
 		}
-yy486:
-		YYDEBUG(486, *YYCURSOR);
+yy488:
+		YYDEBUG(488, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'C') {
@@ -8103,7 +8135,7 @@ yy486:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'B') goto yy138;
-				goto yy309;
+				goto yy311;
 			}
 		} else {
 			if(yych <= '`') {
@@ -8111,58 +8143,58 @@ yy486:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'c') goto yy487;
+				if(yych == 'c') goto yy489;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy487:
-		YYDEBUG(487, *YYCURSOR);
+yy489:
+		YYDEBUG(489, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= '-') {
 					if(yych <= ')') goto yy136;
-					if(yych <= ',') goto yy310;
-					goto yy313;
+					if(yych <= ',') goto yy312;
+					goto yy315;
 				} else {
 					if(yych == '/') goto yy144;
-					goto yy312;
+					goto yy314;
 				}
 			}
 		} else {
 			if(yych <= '^') {
 				if(yych <= 'D') {
-					if(yych <= '@') goto yy310;
+					if(yych <= '@') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'E') goto yy318;
+					if(yych <= 'E') goto yy320;
 					if(yych <= 'Z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			} else {
 				if(yych <= 'd') {
 					if(yych <= '_') goto yy144;
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy148;
 				} else {
-					if(yych <= 'e') goto yy488;
+					if(yych <= 'e') goto yy490;
 					if(yych <= 'z') goto yy148;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy488:
-		YYDEBUG(488, *YYCURSOR);
+yy490:
+		YYDEBUG(490, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'M') {
@@ -8173,7 +8205,7 @@ yy488:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'L') goto yy140;
-				goto yy319;
+				goto yy321;
 			}
 		} else {
 			if(yych <= '`') {
@@ -8181,13 +8213,13 @@ yy488:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'm') goto yy489;
+				if(yych == 'm') goto yy491;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy489:
-		YYDEBUG(489, *YYCURSOR);
+yy491:
+		YYDEBUG(491, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'B') {
@@ -8198,7 +8230,7 @@ yy489:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'A') goto yy141;
-				goto yy320;
+				goto yy322;
 			}
 		} else {
 			if(yych <= '`') {
@@ -8206,13 +8238,13 @@ yy489:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'b') goto yy490;
+				if(yych == 'b') goto yy492;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy490:
-		YYDEBUG(490, *YYCURSOR);
+yy492:
+		YYDEBUG(492, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'E') {
@@ -8222,50 +8254,50 @@ yy490:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= 'D') goto yy3;
-				goto yy321;
+				goto yy323;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'e') goto yy491;
+				if(yych == 'e') goto yy493;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy491:
-		YYDEBUG(491, *YYCURSOR);
+yy493:
+		YYDEBUG(493, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy322;
+		if(yych == 'R') goto yy324;
 		if(yych != 'r') goto yy152;
-yy492:
-		YYDEBUG(492, *YYCURSOR);
+yy494:
+		YYDEBUG(494, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy312;
-				goto yy310;
-			} else {
-				if(yych <= ' ') goto yy312;
-				if(yych <= ',') goto yy310;
+				if(yych == 0x09) goto yy314;
 				goto yy312;
+			} else {
+				if(yych <= ' ') goto yy314;
+				if(yych <= ',') goto yy312;
+				goto yy314;
 			}
 		} else {
 			if(yych <= '^') {
 				if(yych <= '/') goto yy144;
-				if(yych <= '9') goto yy312;
-				goto yy310;
+				if(yych <= '9') goto yy314;
+				goto yy312;
 			} else {
 				if(yych <= '_') goto yy144;
-				if(yych <= '`') goto yy310;
+				if(yych <= '`') goto yy312;
 				if(yych <= 'z') goto yy151;
-				goto yy310;
+				goto yy312;
 			}
 		}
-yy493:
-		YYDEBUG(493, *YYCURSOR);
+yy495:
+		YYDEBUG(495, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'T') {
 			if(yych <= ')') {
@@ -8281,55 +8313,55 @@ yy493:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 't') goto yy494;
+				if(yych <= 't') goto yy496;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy494:
-		YYDEBUG(494, *YYCURSOR);
+yy496:
+		YYDEBUG(496, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= ',') {
 					if(yych <= ')') goto yy136;
-					goto yy310;
+					goto yy312;
 				} else {
-					if(yych <= '-') goto yy313;
-					if(yych <= '.') goto yy312;
-					goto yy310;
+					if(yych <= '-') goto yy315;
+					if(yych <= '.') goto yy314;
+					goto yy312;
 				}
 			}
 		} else {
 			if(yych <= 'Z') {
 				if(yych <= '@') {
-					if(yych <= '9') goto yy312;
-					goto yy310;
+					if(yych <= '9') goto yy314;
+					goto yy312;
 				} else {
 					if(yych != 'O') goto yy139;
 				}
 			} else {
 				if(yych <= 'n') {
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'o') goto yy495;
+					if(yych <= 'o') goto yy497;
 					if(yych <= 'z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy495:
-		YYDEBUG(495, *YYCURSOR);
+yy497:
+		YYDEBUG(497, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'B') {
 			if(yych <= ')') {
@@ -8345,13 +8377,13 @@ yy495:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'b') goto yy496;
+				if(yych <= 'b') goto yy498;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy496:
-		YYDEBUG(496, *YYCURSOR);
+yy498:
+		YYDEBUG(498, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'E') {
 			if(yych <= ')') {
@@ -8367,24 +8399,24 @@ yy496:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'e') goto yy497;
+				if(yych <= 'e') goto yy499;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy497:
-		YYDEBUG(497, *YYCURSOR);
+yy499:
+		YYDEBUG(499, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'Q') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'R') goto yy322;
-			if(yych == 'r') goto yy322;
+			if(yych <= 'R') goto yy324;
+			if(yych == 'r') goto yy324;
 			goto yy3;
 		}
-yy498:
-		YYDEBUG(498, *YYCURSOR);
+yy500:
+		YYDEBUG(500, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
@@ -8395,7 +8427,7 @@ yy498:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy138;
-				goto yy494;
+				goto yy496;
 			}
 		} else {
 			if(yych <= '`') {
@@ -8403,58 +8435,58 @@ yy498:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 't') goto yy499;
+				if(yych == 't') goto yy501;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy499:
-		YYDEBUG(499, *YYCURSOR);
+yy501:
+		YYDEBUG(501, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= '-') {
 					if(yych <= ')') goto yy136;
-					if(yych <= ',') goto yy310;
-					goto yy313;
+					if(yych <= ',') goto yy312;
+					goto yy315;
 				} else {
 					if(yych == '/') goto yy144;
-					goto yy312;
+					goto yy314;
 				}
 			}
 		} else {
 			if(yych <= '^') {
 				if(yych <= 'N') {
-					if(yych <= '@') goto yy310;
+					if(yych <= '@') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'O') goto yy495;
+					if(yych <= 'O') goto yy497;
 					if(yych <= 'Z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			} else {
 				if(yych <= 'n') {
 					if(yych <= '_') goto yy144;
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy148;
 				} else {
-					if(yych <= 'o') goto yy500;
+					if(yych <= 'o') goto yy502;
 					if(yych <= 'z') goto yy148;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy500:
-		YYDEBUG(500, *YYCURSOR);
+yy502:
+		YYDEBUG(502, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'B') {
@@ -8465,7 +8497,7 @@ yy500:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'A') goto yy140;
-				goto yy496;
+				goto yy498;
 			}
 		} else {
 			if(yych <= '`') {
@@ -8473,13 +8505,13 @@ yy500:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'b') goto yy501;
+				if(yych == 'b') goto yy503;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy501:
-		YYDEBUG(501, *YYCURSOR);
+yy503:
+		YYDEBUG(503, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'E') {
@@ -8490,7 +8522,7 @@ yy501:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy141;
-				goto yy497;
+				goto yy499;
 			}
 		} else {
 			if(yych <= '`') {
@@ -8498,13 +8530,13 @@ yy501:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'e') goto yy502;
+				if(yych == 'e') goto yy504;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy502:
-		YYDEBUG(502, *YYCURSOR);
+yy504:
+		YYDEBUG(504, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'R') {
@@ -8514,20 +8546,20 @@ yy502:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= 'Q') goto yy3;
-				goto yy322;
+				goto yy324;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'r') goto yy492;
+				if(yych == 'r') goto yy494;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy503:
-		YYDEBUG(503, *YYCURSOR);
+yy505:
+		YYDEBUG(505, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'V') {
 			if(yych <= 'B') {
@@ -8536,12 +8568,12 @@ yy503:
 				goto yy138;
 			} else {
 				if(yych <= 'O') {
-					if(yych <= 'C') goto yy519;
+					if(yych <= 'C') goto yy521;
 					goto yy138;
 				} else {
-					if(yych <= 'P') goto yy518;
+					if(yych <= 'P') goto yy520;
 					if(yych <= 'U') goto yy138;
-					goto yy520;
+					goto yy522;
 				}
 			}
 		} else {
@@ -8550,22 +8582,22 @@ yy503:
 					if(yych <= 'Z') goto yy138;
 					goto yy3;
 				} else {
-					if(yych == 'c') goto yy519;
+					if(yych == 'c') goto yy521;
 					goto yy138;
 				}
 			} else {
 				if(yych <= 'u') {
-					if(yych <= 'p') goto yy518;
+					if(yych <= 'p') goto yy520;
 					goto yy138;
 				} else {
-					if(yych <= 'v') goto yy520;
+					if(yych <= 'v') goto yy522;
 					if(yych <= 'z') goto yy138;
 					goto yy3;
 				}
 			}
 		}
-yy504:
-		YYDEBUG(504, *YYCURSOR);
+yy506:
+		YYDEBUG(506, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'T') {
 			if(yych <= ')') {
@@ -8574,7 +8606,7 @@ yy504:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy138;
-				goto yy513;
+				goto yy515;
 			}
 		} else {
 			if(yych <= 's') {
@@ -8582,13 +8614,13 @@ yy504:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 't') goto yy513;
+				if(yych <= 't') goto yy515;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy505:
-		YYDEBUG(505, *YYCURSOR);
+yy507:
+		YYDEBUG(507, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'X') {
 			if(yych <= ')') {
@@ -8597,7 +8629,7 @@ yy505:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'W') goto yy138;
-				goto yy511;
+				goto yy513;
 			}
 		} else {
 			if(yych <= 'w') {
@@ -8605,13 +8637,13 @@ yy505:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'x') goto yy511;
+				if(yych <= 'x') goto yy513;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy506:
-		YYDEBUG(506, *YYCURSOR);
+yy508:
+		YYDEBUG(508, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'N') {
 			if(yych <= ')') {
@@ -8627,35 +8659,35 @@ yy506:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'n') goto yy507;
+				if(yych <= 'n') goto yy509;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy507:
-		YYDEBUG(507, *YYCURSOR);
+yy509:
+		YYDEBUG(509, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'D') {
 			if(yych <= ')') {
-				if(yych <= '(') goto yy283;
+				if(yych <= '(') goto yy285;
 				goto yy136;
 			} else {
-				if(yych <= '@') goto yy283;
+				if(yych <= '@') goto yy285;
 				if(yych <= 'C') goto yy139;
 			}
 		} else {
 			if(yych <= 'c') {
 				if(yych <= 'Z') goto yy139;
-				if(yych <= '`') goto yy283;
+				if(yych <= '`') goto yy285;
 				goto yy139;
 			} else {
-				if(yych <= 'd') goto yy508;
+				if(yych <= 'd') goto yy510;
 				if(yych <= 'z') goto yy139;
-				goto yy283;
+				goto yy285;
 			}
 		}
-yy508:
-		YYDEBUG(508, *YYCURSOR);
+yy510:
+		YYDEBUG(510, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'A') {
 			if(yych == ')') goto yy136;
@@ -8665,13 +8697,13 @@ yy508:
 				if(yych <= 'Z') goto yy140;
 				goto yy3;
 			} else {
-				if(yych <= 'a') goto yy509;
+				if(yych <= 'a') goto yy511;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy509:
-		YYDEBUG(509, *YYCURSOR);
+yy511:
+		YYDEBUG(511, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'Y') {
 			if(yych <= ')') {
@@ -8687,18 +8719,18 @@ yy509:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'y') goto yy510;
+				if(yych <= 'y') goto yy512;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy510:
-		YYDEBUG(510, *YYCURSOR);
+yy512:
+		YYDEBUG(512, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych == ')') goto yy136;
-		goto yy283;
-yy511:
-		YYDEBUG(511, *YYCURSOR);
+		goto yy285;
+yy513:
+		YYDEBUG(513, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'T') {
 			if(yych <= ')') {
@@ -8714,13 +8746,13 @@ yy511:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 't') goto yy512;
+				if(yych <= 't') goto yy514;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy512:
-		YYDEBUG(512, *YYCURSOR);
+yy514:
+		YYDEBUG(514, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'H') {
 			if(yych <= ')') {
@@ -8729,7 +8761,7 @@ yy512:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'G') goto yy140;
-				goto yy270;
+				goto yy272;
 			}
 		} else {
 			if(yych <= 'g') {
@@ -8737,35 +8769,35 @@ yy512:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'h') goto yy270;
+				if(yych <= 'h') goto yy272;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy513:
-		YYDEBUG(513, *YYCURSOR);
+yy515:
+		YYDEBUG(515, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
 			if(yych <= ')') {
-				if(yych <= '(') goto yy283;
+				if(yych <= '(') goto yy285;
 				goto yy136;
 			} else {
-				if(yych <= '@') goto yy283;
+				if(yych <= '@') goto yy285;
 				if(yych <= 'T') goto yy139;
 			}
 		} else {
 			if(yych <= 't') {
 				if(yych <= 'Z') goto yy139;
-				if(yych <= '`') goto yy283;
+				if(yych <= '`') goto yy285;
 				goto yy139;
 			} else {
-				if(yych <= 'u') goto yy514;
+				if(yych <= 'u') goto yy516;
 				if(yych <= 'z') goto yy139;
-				goto yy283;
+				goto yy285;
 			}
 		}
-yy514:
-		YYDEBUG(514, *YYCURSOR);
+yy516:
+		YYDEBUG(516, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'R') {
 			if(yych <= ')') {
@@ -8781,13 +8813,13 @@ yy514:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'r') goto yy515;
+				if(yych <= 'r') goto yy517;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy515:
-		YYDEBUG(515, *YYCURSOR);
+yy517:
+		YYDEBUG(517, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'D') {
 			if(yych <= ')') {
@@ -8803,73 +8835,73 @@ yy515:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'd') goto yy516;
+				if(yych <= 'd') goto yy518;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy516:
-		YYDEBUG(516, *YYCURSOR);
+yy518:
+		YYDEBUG(518, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '@') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'A') goto yy517;
+			if(yych <= 'A') goto yy519;
 			if(yych != 'a') goto yy3;
 		}
-yy517:
-		YYDEBUG(517, *YYCURSOR);
+yy519:
+		YYDEBUG(519, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy289;
-		if(yych == 'y') goto yy289;
+		if(yych == 'Y') goto yy291;
+		if(yych == 'y') goto yy291;
 		goto yy53;
-yy518:
-		YYDEBUG(518, *YYCURSOR);
+yy520:
+		YYDEBUG(520, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= ',') {
 					if(yych <= ')') goto yy136;
-					goto yy310;
+					goto yy312;
 				} else {
-					if(yych <= '-') goto yy313;
-					if(yych <= '.') goto yy312;
-					goto yy310;
+					if(yych <= '-') goto yy315;
+					if(yych <= '.') goto yy314;
+					goto yy312;
 				}
 			}
 		} else {
 			if(yych <= 'Z') {
 				if(yych <= '@') {
-					if(yych <= '9') goto yy312;
-					goto yy310;
+					if(yych <= '9') goto yy314;
+					goto yy312;
 				} else {
-					if(yych == 'T') goto yy527;
+					if(yych == 'T') goto yy529;
 					goto yy139;
 				}
 			} else {
 				if(yych <= 's') {
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 't') goto yy527;
+					if(yych <= 't') goto yy529;
 					if(yych <= 'z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy519:
-		YYDEBUG(519, *YYCURSOR);
+yy521:
+		YYDEBUG(521, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'O') {
 			if(yych <= ')') {
@@ -8878,7 +8910,7 @@ yy519:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'N') goto yy139;
-				goto yy524;
+				goto yy526;
 			}
 		} else {
 			if(yych <= 'n') {
@@ -8886,13 +8918,13 @@ yy519:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 'o') goto yy524;
+				if(yych <= 'o') goto yy526;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy520:
-		YYDEBUG(520, *YYCURSOR);
+yy522:
+		YYDEBUG(522, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'E') {
 			if(yych <= ')') {
@@ -8908,13 +8940,13 @@ yy520:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 'e') goto yy521;
+				if(yych <= 'e') goto yy523;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy521:
-		YYDEBUG(521, *YYCURSOR);
+yy523:
+		YYDEBUG(523, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'N') {
 			if(yych <= ')') {
@@ -8930,13 +8962,13 @@ yy521:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'n') goto yy522;
+				if(yych <= 'n') goto yy524;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy522:
-		YYDEBUG(522, *YYCURSOR);
+yy524:
+		YYDEBUG(524, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'T') {
 			if(yych <= ')') {
@@ -8952,25 +8984,25 @@ yy522:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 't') goto yy523;
+				if(yych <= 't') goto yy525;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy523:
-		YYDEBUG(523, *YYCURSOR);
+yy525:
+		YYDEBUG(525, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'G') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'H') goto yy167;
-			if(yych == 'h') goto yy167;
+			if(yych <= 'H') goto yy169;
+			if(yych == 'h') goto yy169;
 			goto yy3;
 		}
-yy524:
-		YYDEBUG(524, *YYCURSOR);
+yy526:
+		YYDEBUG(526, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'N') {
 			if(yych <= ')') {
@@ -8986,13 +9018,13 @@ yy524:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'n') goto yy525;
+				if(yych <= 'n') goto yy527;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy525:
-		YYDEBUG(525, *YYCURSOR);
+yy527:
+		YYDEBUG(527, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'D') {
 			if(yych <= ')') {
@@ -9008,67 +9040,67 @@ yy525:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'd') goto yy526;
+				if(yych <= 'd') goto yy528;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy526:
-		YYDEBUG(526, *YYCURSOR);
+yy528:
+		YYDEBUG(528, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 0x1F) {
-			if(yych == 0x09) goto yy168;
+			if(yych == 0x09) goto yy170;
 			goto yy3;
 		} else {
-			if(yych <= ' ') goto yy168;
+			if(yych <= ' ') goto yy170;
 			if(yych == ')') goto yy136;
 			goto yy3;
 		}
-yy527:
-		YYDEBUG(527, *YYCURSOR);
+yy529:
+		YYDEBUG(529, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= ',') {
 					if(yych <= ')') goto yy136;
-					goto yy310;
+					goto yy312;
 				} else {
-					if(yych <= '-') goto yy313;
-					if(yych <= '.') goto yy312;
-					goto yy310;
+					if(yych <= '-') goto yy315;
+					if(yych <= '.') goto yy314;
+					goto yy312;
 				}
 			}
 		} else {
 			if(yych <= 'Z') {
 				if(yych <= '@') {
-					if(yych <= '9') goto yy312;
-					goto yy310;
+					if(yych <= '9') goto yy314;
+					goto yy312;
 				} else {
 					if(yych != 'E') goto yy140;
 				}
 			} else {
 				if(yych <= 'd') {
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy140;
 				} else {
-					if(yych <= 'e') goto yy528;
+					if(yych <= 'e') goto yy530;
 					if(yych <= 'z') goto yy140;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy528:
-		YYDEBUG(528, *YYCURSOR);
+yy530:
+		YYDEBUG(530, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'M') {
 			if(yych <= ')') {
@@ -9084,35 +9116,35 @@ yy528:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'm') goto yy529;
+				if(yych <= 'm') goto yy531;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy529:
-		YYDEBUG(529, *YYCURSOR);
+yy531:
+		YYDEBUG(531, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'A') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'B') goto yy530;
+			if(yych <= 'B') goto yy532;
 			if(yych != 'b') goto yy3;
 		}
-yy530:
-		YYDEBUG(530, *YYCURSOR);
+yy532:
+		YYDEBUG(532, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy531;
+		if(yych == 'E') goto yy533;
 		if(yych != 'e') goto yy53;
-yy531:
-		YYDEBUG(531, *YYCURSOR);
+yy533:
+		YYDEBUG(533, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy322;
-		if(yych == 'r') goto yy322;
+		if(yych == 'R') goto yy324;
+		if(yych == 'r') goto yy324;
 		goto yy53;
-yy532:
-		YYDEBUG(532, *YYCURSOR);
+yy534:
+		YYDEBUG(534, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'V') {
@@ -9126,12 +9158,12 @@ yy532:
 				}
 			} else {
 				if(yych <= 'O') {
-					if(yych == 'C') goto yy519;
+					if(yych == 'C') goto yy521;
 					goto yy138;
 				} else {
-					if(yych <= 'P') goto yy518;
+					if(yych <= 'P') goto yy520;
 					if(yych <= 'U') goto yy138;
-					goto yy520;
+					goto yy522;
 				}
 			}
 		} else {
@@ -9143,21 +9175,21 @@ yy532:
 				} else {
 					if(yych <= '`') goto yy3;
 					if(yych <= 'b') goto yy143;
-					goto yy548;
+					goto yy550;
 				}
 			} else {
 				if(yych <= 'u') {
-					if(yych == 'p') goto yy547;
+					if(yych == 'p') goto yy549;
 					goto yy143;
 				} else {
-					if(yych <= 'v') goto yy549;
+					if(yych <= 'v') goto yy551;
 					if(yych <= 'z') goto yy143;
 					goto yy3;
 				}
 			}
 		}
-yy533:
-		YYDEBUG(533, *YYCURSOR);
+yy535:
+		YYDEBUG(535, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
@@ -9168,7 +9200,7 @@ yy533:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy138;
-				goto yy513;
+				goto yy515;
 			}
 		} else {
 			if(yych <= '`') {
@@ -9176,13 +9208,13 @@ yy533:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 't') goto yy542;
+				if(yych == 't') goto yy544;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy534:
-		YYDEBUG(534, *YYCURSOR);
+yy536:
+		YYDEBUG(536, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'X') {
@@ -9193,7 +9225,7 @@ yy534:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'W') goto yy138;
-				goto yy511;
+				goto yy513;
 			}
 		} else {
 			if(yych <= '`') {
@@ -9201,13 +9233,13 @@ yy534:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'x') goto yy540;
+				if(yych == 'x') goto yy542;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy535:
-		YYDEBUG(535, *YYCURSOR);
+yy537:
+		YYDEBUG(537, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'N') {
@@ -9218,7 +9250,7 @@ yy535:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'M') goto yy138;
-				goto yy507;
+				goto yy509;
 			}
 		} else {
 			if(yych <= '`') {
@@ -9226,38 +9258,38 @@ yy535:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'n') goto yy536;
+				if(yych == 'n') goto yy538;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy536:
-		YYDEBUG(536, *YYCURSOR);
+yy538:
+		YYDEBUG(538, *YYCURSOR);
 		yyaccept = 5;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
 			if(yych <= '.') {
 				if(yych == ')') goto yy136;
-				goto yy283;
+				goto yy285;
 			} else {
 				if(yych <= '/') goto yy144;
-				if(yych <= '@') goto yy283;
+				if(yych <= '@') goto yy285;
 				if(yych <= 'C') goto yy139;
-				goto yy508;
+				goto yy510;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych <= 'Z') goto yy139;
 				if(yych == '_') goto yy144;
-				goto yy283;
+				goto yy285;
 			} else {
-				if(yych == 'd') goto yy537;
+				if(yych == 'd') goto yy539;
 				if(yych <= 'z') goto yy148;
-				goto yy283;
+				goto yy285;
 			}
 		}
-yy537:
-		YYDEBUG(537, *YYCURSOR);
+yy539:
+		YYDEBUG(539, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'A') {
@@ -9267,7 +9299,7 @@ yy537:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
-				goto yy509;
+				goto yy511;
 			}
 		} else {
 			if(yych <= '_') {
@@ -9276,13 +9308,13 @@ yy537:
 				goto yy144;
 			} else {
 				if(yych <= '`') goto yy3;
-				if(yych <= 'a') goto yy538;
+				if(yych <= 'a') goto yy540;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy538:
-		YYDEBUG(538, *YYCURSOR);
+yy540:
+		YYDEBUG(540, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'Y') {
@@ -9293,7 +9325,7 @@ yy538:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'X') goto yy141;
-				goto yy510;
+				goto yy512;
 			}
 		} else {
 			if(yych <= '`') {
@@ -9301,31 +9333,31 @@ yy538:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'y') goto yy539;
+				if(yych == 'y') goto yy541;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy539:
-		YYDEBUG(539, *YYCURSOR);
+yy541:
+		YYDEBUG(541, *YYCURSOR);
 		yyaccept = 5;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
 			if(yych == ')') goto yy136;
-			if(yych <= '.') goto yy283;
+			if(yych <= '.') goto yy285;
 			goto yy144;
 		} else {
 			if(yych <= '_') {
-				if(yych <= '^') goto yy283;
+				if(yych <= '^') goto yy285;
 				goto yy144;
 			} else {
-				if(yych <= '`') goto yy283;
+				if(yych <= '`') goto yy285;
 				if(yych <= 'z') goto yy151;
-				goto yy283;
+				goto yy285;
 			}
 		}
-yy540:
-		YYDEBUG(540, *YYCURSOR);
+yy542:
+		YYDEBUG(542, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
@@ -9336,7 +9368,7 @@ yy540:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy139;
-				goto yy512;
+				goto yy514;
 			}
 		} else {
 			if(yych <= '`') {
@@ -9344,13 +9376,13 @@ yy540:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 't') goto yy541;
+				if(yych == 't') goto yy543;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy541:
-		YYDEBUG(541, *YYCURSOR);
+yy543:
+		YYDEBUG(543, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'H') {
@@ -9361,7 +9393,7 @@ yy541:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'G') goto yy140;
-				goto yy270;
+				goto yy272;
 			}
 		} else {
 			if(yych <= '`') {
@@ -9369,38 +9401,38 @@ yy541:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'h') goto yy280;
+				if(yych == 'h') goto yy282;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy542:
-		YYDEBUG(542, *YYCURSOR);
+yy544:
+		YYDEBUG(544, *YYCURSOR);
 		yyaccept = 5;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'U') {
 			if(yych <= '.') {
 				if(yych == ')') goto yy136;
-				goto yy283;
+				goto yy285;
 			} else {
 				if(yych <= '/') goto yy144;
-				if(yych <= '@') goto yy283;
+				if(yych <= '@') goto yy285;
 				if(yych <= 'T') goto yy139;
-				goto yy514;
+				goto yy516;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych <= 'Z') goto yy139;
 				if(yych == '_') goto yy144;
-				goto yy283;
+				goto yy285;
 			} else {
-				if(yych == 'u') goto yy543;
+				if(yych == 'u') goto yy545;
 				if(yych <= 'z') goto yy148;
-				goto yy283;
+				goto yy285;
 			}
 		}
-yy543:
-		YYDEBUG(543, *YYCURSOR);
+yy545:
+		YYDEBUG(545, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'R') {
@@ -9411,7 +9443,7 @@ yy543:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'Q') goto yy140;
-				goto yy515;
+				goto yy517;
 			}
 		} else {
 			if(yych <= '`') {
@@ -9419,13 +9451,13 @@ yy543:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'r') goto yy544;
+				if(yych == 'r') goto yy546;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy544:
-		YYDEBUG(544, *YYCURSOR);
+yy546:
+		YYDEBUG(546, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
@@ -9436,7 +9468,7 @@ yy544:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'C') goto yy141;
-				goto yy516;
+				goto yy518;
 			}
 		} else {
 			if(yych <= '`') {
@@ -9444,13 +9476,13 @@ yy544:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'd') goto yy545;
+				if(yych == 'd') goto yy547;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy545:
-		YYDEBUG(545, *YYCURSOR);
+yy547:
+		YYDEBUG(547, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'A') {
@@ -9460,71 +9492,71 @@ yy545:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
-				goto yy517;
+				goto yy519;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych <= 'a') goto yy546;
+				if(yych <= 'a') goto yy548;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy546:
-		YYDEBUG(546, *YYCURSOR);
+yy548:
+		YYDEBUG(548, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy289;
-		if(yych == 'y') goto yy302;
+		if(yych == 'Y') goto yy291;
+		if(yych == 'y') goto yy304;
 		goto yy152;
-yy547:
-		YYDEBUG(547, *YYCURSOR);
+yy549:
+		YYDEBUG(549, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= '-') {
 					if(yych <= ')') goto yy136;
-					if(yych <= ',') goto yy310;
-					goto yy313;
+					if(yych <= ',') goto yy312;
+					goto yy315;
 				} else {
 					if(yych == '/') goto yy144;
-					goto yy312;
+					goto yy314;
 				}
 			}
 		} else {
 			if(yych <= '^') {
 				if(yych <= 'S') {
-					if(yych <= '@') goto yy310;
+					if(yych <= '@') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'T') goto yy527;
+					if(yych <= 'T') goto yy529;
 					if(yych <= 'Z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			} else {
 				if(yych <= 's') {
 					if(yych <= '_') goto yy144;
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy148;
 				} else {
-					if(yych <= 't') goto yy556;
+					if(yych <= 't') goto yy558;
 					if(yych <= 'z') goto yy148;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy548:
-		YYDEBUG(548, *YYCURSOR);
+yy550:
+		YYDEBUG(550, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'O') {
@@ -9535,7 +9567,7 @@ yy548:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'N') goto yy139;
-				goto yy524;
+				goto yy526;
 			}
 		} else {
 			if(yych <= '`') {
@@ -9543,13 +9575,13 @@ yy548:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'o') goto yy553;
+				if(yych == 'o') goto yy555;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy549:
-		YYDEBUG(549, *YYCURSOR);
+yy551:
+		YYDEBUG(551, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'E') {
@@ -9560,7 +9592,7 @@ yy549:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy139;
-				goto yy521;
+				goto yy523;
 			}
 		} else {
 			if(yych <= '`') {
@@ -9568,13 +9600,13 @@ yy549:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'e') goto yy550;
+				if(yych == 'e') goto yy552;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy550:
-		YYDEBUG(550, *YYCURSOR);
+yy552:
+		YYDEBUG(552, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'N') {
@@ -9585,7 +9617,7 @@ yy550:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'M') goto yy140;
-				goto yy522;
+				goto yy524;
 			}
 		} else {
 			if(yych <= '`') {
@@ -9593,13 +9625,13 @@ yy550:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'n') goto yy551;
+				if(yych == 'n') goto yy553;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy551:
-		YYDEBUG(551, *YYCURSOR);
+yy553:
+		YYDEBUG(553, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
@@ -9610,7 +9642,7 @@ yy551:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy141;
-				goto yy523;
+				goto yy525;
 			}
 		} else {
 			if(yych <= '`') {
@@ -9618,13 +9650,13 @@ yy551:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 't') goto yy552;
+				if(yych == 't') goto yy554;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy552:
-		YYDEBUG(552, *YYCURSOR);
+yy554:
+		YYDEBUG(554, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'H') {
@@ -9634,20 +9666,20 @@ yy552:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= 'G') goto yy3;
-				goto yy167;
+				goto yy169;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'h') goto yy254;
+				if(yych == 'h') goto yy256;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy553:
-		YYDEBUG(553, *YYCURSOR);
+yy555:
+		YYDEBUG(555, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'N') {
@@ -9658,7 +9690,7 @@ yy553:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'M') goto yy140;
-				goto yy525;
+				goto yy527;
 			}
 		} else {
 			if(yych <= '`') {
@@ -9666,13 +9698,13 @@ yy553:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'n') goto yy554;
+				if(yych == 'n') goto yy556;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy554:
-		YYDEBUG(554, *YYCURSOR);
+yy556:
+		YYDEBUG(556, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
@@ -9683,7 +9715,7 @@ yy554:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'C') goto yy141;
-				goto yy526;
+				goto yy528;
 			}
 		} else {
 			if(yych <= '`') {
@@ -9691,21 +9723,21 @@ yy554:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'd') goto yy555;
+				if(yych == 'd') goto yy557;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy555:
-		YYDEBUG(555, *YYCURSOR);
+yy557:
+		YYDEBUG(557, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ')') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy168;
+				if(yych == 0x09) goto yy170;
 				goto yy3;
 			} else {
-				if(yych <= ' ') goto yy168;
+				if(yych <= ' ') goto yy170;
 				if(yych <= '(') goto yy3;
 				goto yy136;
 			}
@@ -9720,53 +9752,53 @@ yy555:
 				goto yy3;
 			}
 		}
-yy556:
-		YYDEBUG(556, *YYCURSOR);
+yy558:
+		YYDEBUG(558, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= '-') {
 					if(yych <= ')') goto yy136;
-					if(yych <= ',') goto yy310;
-					goto yy313;
+					if(yych <= ',') goto yy312;
+					goto yy315;
 				} else {
 					if(yych == '/') goto yy144;
-					goto yy312;
+					goto yy314;
 				}
 			}
 		} else {
 			if(yych <= '^') {
 				if(yych <= 'D') {
-					if(yych <= '@') goto yy310;
+					if(yych <= '@') goto yy312;
 					goto yy140;
 				} else {
-					if(yych <= 'E') goto yy528;
+					if(yych <= 'E') goto yy530;
 					if(yych <= 'Z') goto yy140;
-					goto yy310;
+					goto yy312;
 				}
 			} else {
 				if(yych <= 'd') {
 					if(yych <= '_') goto yy144;
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy149;
 				} else {
-					if(yych <= 'e') goto yy557;
+					if(yych <= 'e') goto yy559;
 					if(yych <= 'z') goto yy149;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy557:
-		YYDEBUG(557, *YYCURSOR);
+yy559:
+		YYDEBUG(559, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'M') {
@@ -9777,7 +9809,7 @@ yy557:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'L') goto yy141;
-				goto yy529;
+				goto yy531;
 			}
 		} else {
 			if(yych <= '`') {
@@ -9785,13 +9817,13 @@ yy557:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'm') goto yy558;
+				if(yych == 'm') goto yy560;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy558:
-		YYDEBUG(558, *YYCURSOR);
+yy560:
+		YYDEBUG(560, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'B') {
@@ -9801,30 +9833,30 @@ yy558:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= 'A') goto yy3;
-				goto yy530;
+				goto yy532;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'b') goto yy559;
+				if(yych == 'b') goto yy561;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy559:
-		YYDEBUG(559, *YYCURSOR);
+yy561:
+		YYDEBUG(561, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy531;
+		if(yych == 'E') goto yy533;
 		if(yych != 'e') goto yy152;
-		YYDEBUG(560, *YYCURSOR);
+		YYDEBUG(562, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy322;
-		if(yych == 'r') goto yy492;
+		if(yych == 'R') goto yy324;
+		if(yych == 'r') goto yy494;
 		goto yy152;
-yy561:
-		YYDEBUG(561, *YYCURSOR);
+yy563:
+		YYDEBUG(563, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'G') {
 			if(yych <= ')') {
@@ -9833,7 +9865,7 @@ yy561:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'F') goto yy138;
-				goto yy569;
+				goto yy571;
 			}
 		} else {
 			if(yych <= 'f') {
@@ -9841,13 +9873,13 @@ yy561:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'g') goto yy569;
+				if(yych <= 'g') goto yy571;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy562:
-		YYDEBUG(562, *YYCURSOR);
+yy564:
+		YYDEBUG(564, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'R') {
 			if(yych <= ')') {
@@ -9856,7 +9888,7 @@ yy562:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'Q') goto yy138;
-				goto yy566;
+				goto yy568;
 			}
 		} else {
 			if(yych <= 'q') {
@@ -9864,13 +9896,13 @@ yy562:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'r') goto yy566;
+				if(yych <= 'r') goto yy568;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy563:
-		YYDEBUG(563, *YYCURSOR);
+yy565:
+		YYDEBUG(565, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'O') {
 			if(yych <= ')') {
@@ -9886,24 +9918,24 @@ yy563:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'o') goto yy564;
+				if(yych <= 'o') goto yy566;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy564:
-		YYDEBUG(564, *YYCURSOR);
+yy566:
+		YYDEBUG(566, *YYCURSOR);
 		++YYCURSOR;
 		if((yych = *YYCURSOR) <= '@') {
 			if(yych == ')') goto yy136;
 		} else {
 			if(yych <= 'Z') goto yy139;
-			if(yych <= '`') goto yy565;
+			if(yych <= '`') goto yy567;
 			if(yych <= 'z') goto yy139;
 		}
-yy565:
-		YYDEBUG(565, *YYCURSOR);
-#line 1350 "ext/date/lib/parse_date.re"
+yy567:
+		YYDEBUG(567, *YYCURSOR);
+#line 1352 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("ago");
 		TIMELIB_INIT;
@@ -9920,51 +9952,51 @@ yy565:
 		TIMELIB_DEINIT;
 		return TIMELIB_AGO;
 	}
-#line 9924 "ext/date/lib/parse_date.c"
-yy566:
-		YYDEBUG(566, *YYCURSOR);
+#line 9956 "ext/date/lib/parse_date.c"
+yy568:
+		YYDEBUG(568, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= ',') {
 					if(yych <= ')') goto yy136;
-					goto yy310;
+					goto yy312;
 				} else {
-					if(yych <= '-') goto yy313;
-					if(yych <= '.') goto yy312;
-					goto yy310;
+					if(yych <= '-') goto yy315;
+					if(yych <= '.') goto yy314;
+					goto yy312;
 				}
 			}
 		} else {
 			if(yych <= 'Z') {
 				if(yych <= '@') {
-					if(yych <= '9') goto yy312;
-					goto yy310;
+					if(yych <= '9') goto yy314;
+					goto yy312;
 				} else {
 					if(yych != 'I') goto yy139;
 				}
 			} else {
 				if(yych <= 'h') {
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'i') goto yy567;
+					if(yych <= 'i') goto yy569;
 					if(yych <= 'z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy567:
-		YYDEBUG(567, *YYCURSOR);
+yy569:
+		YYDEBUG(569, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'L') {
 			if(yych <= ')') {
@@ -9980,80 +10012,80 @@ yy567:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'l') goto yy568;
+				if(yych <= 'l') goto yy570;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy568:
-		YYDEBUG(568, *YYCURSOR);
+yy570:
+		YYDEBUG(570, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy312;
-				goto yy310;
+				if(yych == 0x09) goto yy314;
+				goto yy312;
 			} else {
-				if(yych <= ' ') goto yy312;
+				if(yych <= ' ') goto yy314;
 				if(yych == ')') goto yy136;
-				goto yy310;
+				goto yy312;
 			}
 		} else {
 			if(yych <= '@') {
-				if(yych == '/') goto yy310;
-				if(yych <= '9') goto yy312;
-				goto yy310;
+				if(yych == '/') goto yy312;
+				if(yych <= '9') goto yy314;
+				goto yy312;
 			} else {
 				if(yych <= 'Z') goto yy141;
-				if(yych <= '`') goto yy310;
+				if(yych <= '`') goto yy312;
 				if(yych <= 'z') goto yy141;
-				goto yy310;
+				goto yy312;
 			}
 		}
-yy569:
-		YYDEBUG(569, *YYCURSOR);
+yy571:
+		YYDEBUG(571, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= ',') {
 					if(yych <= ')') goto yy136;
-					goto yy310;
+					goto yy312;
 				} else {
-					if(yych <= '-') goto yy313;
-					if(yych <= '.') goto yy312;
-					goto yy310;
+					if(yych <= '-') goto yy315;
+					if(yych <= '.') goto yy314;
+					goto yy312;
 				}
 			}
 		} else {
 			if(yych <= 'Z') {
 				if(yych <= '@') {
-					if(yych <= '9') goto yy312;
-					goto yy310;
+					if(yych <= '9') goto yy314;
+					goto yy312;
 				} else {
 					if(yych != 'U') goto yy139;
 				}
 			} else {
 				if(yych <= 't') {
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'u') goto yy570;
+					if(yych <= 'u') goto yy572;
 					if(yych <= 'z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy570:
-		YYDEBUG(570, *YYCURSOR);
+yy572:
+		YYDEBUG(572, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'S') {
 			if(yych <= ')') {
@@ -10069,13 +10101,13 @@ yy570:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 's') goto yy571;
+				if(yych <= 's') goto yy573;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy571:
-		YYDEBUG(571, *YYCURSOR);
+yy573:
+		YYDEBUG(573, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'T') {
 			if(yych <= ')') {
@@ -10091,36 +10123,36 @@ yy571:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 't') goto yy572;
+				if(yych <= 't') goto yy574;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy572:
-		YYDEBUG(572, *YYCURSOR);
+yy574:
+		YYDEBUG(574, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '(') {
 			if(yych <= 0x09) {
-				if(yych <= 0x08) goto yy310;
-				goto yy312;
+				if(yych <= 0x08) goto yy312;
+				goto yy314;
 			} else {
-				if(yych == ' ') goto yy312;
-				goto yy310;
+				if(yych == ' ') goto yy314;
+				goto yy312;
 			}
 		} else {
 			if(yych <= '.') {
 				if(yych <= ')') goto yy136;
-				if(yych <= ',') goto yy310;
-				goto yy312;
+				if(yych <= ',') goto yy312;
+				goto yy314;
 			} else {
-				if(yych <= '/') goto yy310;
-				if(yych <= '9') goto yy312;
-				goto yy310;
+				if(yych <= '/') goto yy312;
+				if(yych <= '9') goto yy314;
+				goto yy312;
 			}
 		}
-yy573:
-		YYDEBUG(573, *YYCURSOR);
+yy575:
+		YYDEBUG(575, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'G') {
@@ -10131,7 +10163,7 @@ yy573:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'F') goto yy138;
-				goto yy569;
+				goto yy571;
 			}
 		} else {
 			if(yych <= '`') {
@@ -10139,13 +10171,13 @@ yy573:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'g') goto yy580;
+				if(yych == 'g') goto yy582;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy574:
-		YYDEBUG(574, *YYCURSOR);
+yy576:
+		YYDEBUG(576, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'R') {
@@ -10156,7 +10188,7 @@ yy574:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'Q') goto yy138;
-				goto yy566;
+				goto yy568;
 			}
 		} else {
 			if(yych <= '`') {
@@ -10164,13 +10196,13 @@ yy574:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'r') goto yy577;
+				if(yych == 'r') goto yy579;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy575:
-		YYDEBUG(575, *YYCURSOR);
+yy577:
+		YYDEBUG(577, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'O') {
@@ -10181,7 +10213,7 @@ yy575:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'N') goto yy138;
-				goto yy564;
+				goto yy566;
 			}
 		} else {
 			if(yych <= '`') {
@@ -10189,81 +10221,81 @@ yy575:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'o') goto yy576;
+				if(yych == 'o') goto yy578;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy576:
-		YYDEBUG(576, *YYCURSOR);
+yy578:
+		YYDEBUG(578, *YYCURSOR);
 		yyaccept = 10;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '@') {
 			if(yych <= ')') {
-				if(yych <= '(') goto yy565;
+				if(yych <= '(') goto yy567;
 				goto yy136;
 			} else {
 				if(yych == '/') goto yy144;
-				goto yy565;
+				goto yy567;
 			}
 		} else {
 			if(yych <= '_') {
 				if(yych <= 'Z') goto yy139;
-				if(yych <= '^') goto yy565;
+				if(yych <= '^') goto yy567;
 				goto yy144;
 			} else {
-				if(yych <= '`') goto yy565;
+				if(yych <= '`') goto yy567;
 				if(yych <= 'z') goto yy148;
-				goto yy565;
+				goto yy567;
 			}
 		}
-yy577:
-		YYDEBUG(577, *YYCURSOR);
+yy579:
+		YYDEBUG(579, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= '-') {
 					if(yych <= ')') goto yy136;
-					if(yych <= ',') goto yy310;
-					goto yy313;
+					if(yych <= ',') goto yy312;
+					goto yy315;
 				} else {
 					if(yych == '/') goto yy144;
-					goto yy312;
+					goto yy314;
 				}
 			}
 		} else {
 			if(yych <= '^') {
 				if(yych <= 'H') {
-					if(yych <= '@') goto yy310;
+					if(yych <= '@') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'I') goto yy567;
+					if(yych <= 'I') goto yy569;
 					if(yych <= 'Z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			} else {
 				if(yych <= 'h') {
 					if(yych <= '_') goto yy144;
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy148;
 				} else {
-					if(yych <= 'i') goto yy578;
+					if(yych <= 'i') goto yy580;
 					if(yych <= 'z') goto yy148;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy578:
-		YYDEBUG(578, *YYCURSOR);
+yy580:
+		YYDEBUG(580, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'L') {
@@ -10274,7 +10306,7 @@ yy578:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'K') goto yy140;
-				goto yy568;
+				goto yy570;
 			}
 		} else {
 			if(yych <= '`') {
@@ -10282,89 +10314,89 @@ yy578:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'l') goto yy579;
+				if(yych == 'l') goto yy581;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy579:
-		YYDEBUG(579, *YYCURSOR);
+yy581:
+		YYDEBUG(581, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy312;
-				if(yych <= 0x1F) goto yy310;
-				goto yy312;
+				if(yych == 0x09) goto yy314;
+				if(yych <= 0x1F) goto yy312;
+				goto yy314;
 			} else {
 				if(yych == ')') goto yy136;
-				if(yych <= ',') goto yy310;
-				goto yy312;
+				if(yych <= ',') goto yy312;
+				goto yy314;
 			}
 		} else {
 			if(yych <= 'Z') {
 				if(yych <= '/') goto yy144;
-				if(yych <= '9') goto yy312;
-				if(yych <= '@') goto yy310;
+				if(yych <= '9') goto yy314;
+				if(yych <= '@') goto yy312;
 				goto yy141;
 			} else {
 				if(yych <= '_') {
-					if(yych <= '^') goto yy310;
+					if(yych <= '^') goto yy312;
 					goto yy144;
 				} else {
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					if(yych <= 'z') goto yy150;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy580:
-		YYDEBUG(580, *YYCURSOR);
+yy582:
+		YYDEBUG(582, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= '-') {
 					if(yych <= ')') goto yy136;
-					if(yych <= ',') goto yy310;
-					goto yy313;
+					if(yych <= ',') goto yy312;
+					goto yy315;
 				} else {
 					if(yych == '/') goto yy144;
-					goto yy312;
+					goto yy314;
 				}
 			}
 		} else {
 			if(yych <= '^') {
 				if(yych <= 'T') {
-					if(yych <= '@') goto yy310;
+					if(yych <= '@') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'U') goto yy570;
+					if(yych <= 'U') goto yy572;
 					if(yych <= 'Z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			} else {
 				if(yych <= 't') {
 					if(yych <= '_') goto yy144;
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy148;
 				} else {
-					if(yych <= 'u') goto yy581;
+					if(yych <= 'u') goto yy583;
 					if(yych <= 'z') goto yy148;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy581:
-		YYDEBUG(581, *YYCURSOR);
+yy583:
+		YYDEBUG(583, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'S') {
@@ -10375,7 +10407,7 @@ yy581:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'R') goto yy140;
-				goto yy571;
+				goto yy573;
 			}
 		} else {
 			if(yych <= '`') {
@@ -10383,13 +10415,13 @@ yy581:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 's') goto yy582;
+				if(yych == 's') goto yy584;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy582:
-		YYDEBUG(582, *YYCURSOR);
+yy584:
+		YYDEBUG(584, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
@@ -10400,7 +10432,7 @@ yy582:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy141;
-				goto yy572;
+				goto yy574;
 			}
 		} else {
 			if(yych <= '`') {
@@ -10408,38 +10440,38 @@ yy582:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 't') goto yy583;
+				if(yych == 't') goto yy585;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy583:
-		YYDEBUG(583, *YYCURSOR);
+yy585:
+		YYDEBUG(585, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy312;
-				goto yy310;
+				if(yych == 0x09) goto yy314;
+				goto yy312;
 			} else {
-				if(yych <= ' ') goto yy312;
+				if(yych <= ' ') goto yy314;
 				if(yych == ')') goto yy136;
-				goto yy310;
+				goto yy312;
 			}
 		} else {
 			if(yych <= '^') {
 				if(yych == '/') goto yy144;
-				if(yych <= '9') goto yy312;
-				goto yy310;
+				if(yych <= '9') goto yy314;
+				goto yy312;
 			} else {
 				if(yych <= '_') goto yy144;
-				if(yych <= '`') goto yy310;
+				if(yych <= '`') goto yy312;
 				if(yych <= 'z') goto yy151;
-				goto yy310;
+				goto yy312;
 			}
 		}
-yy584:
-		YYDEBUG(584, *YYCURSOR);
+yy586:
+		YYDEBUG(586, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'B') {
 			if(yych <= ')') {
@@ -10448,7 +10480,7 @@ yy584:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'A') goto yy138;
-				goto yy598;
+				goto yy600;
 			}
 		} else {
 			if(yych <= 'a') {
@@ -10456,37 +10488,37 @@ yy584:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'b') goto yy598;
+				if(yych <= 'b') goto yy600;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy585:
-		YYDEBUG(585, *YYCURSOR);
+yy587:
+		YYDEBUG(587, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'R') {
 			if(yych <= '@') {
 				if(yych == ')') goto yy136;
 				goto yy3;
 			} else {
-				if(yych == 'F') goto yy595;
+				if(yych == 'F') goto yy597;
 				if(yych <= 'Q') goto yy138;
-				goto yy594;
+				goto yy596;
 			}
 		} else {
 			if(yych <= 'f') {
 				if(yych <= 'Z') goto yy138;
 				if(yych <= '`') goto yy3;
 				if(yych <= 'e') goto yy138;
-				goto yy595;
+				goto yy597;
 			} else {
-				if(yych == 'r') goto yy594;
+				if(yych == 'r') goto yy596;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy586:
-		YYDEBUG(586, *YYCURSOR);
+yy588:
+		YYDEBUG(588, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
 			if(yych <= ')') {
@@ -10495,7 +10527,7 @@ yy586:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'T') goto yy138;
-				goto yy591;
+				goto yy593;
 			}
 		} else {
 			if(yych <= 't') {
@@ -10503,13 +10535,13 @@ yy586:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'u') goto yy591;
+				if(yych <= 'u') goto yy593;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy587:
-		YYDEBUG(587, *YYCURSOR);
+yy589:
+		YYDEBUG(589, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'I') {
 			if(yych <= ')') {
@@ -10525,35 +10557,35 @@ yy587:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'i') goto yy588;
+				if(yych <= 'i') goto yy590;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy588:
-		YYDEBUG(588, *YYCURSOR);
+yy590:
+		YYDEBUG(590, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'D') {
 			if(yych <= ')') {
-				if(yych <= '(') goto yy283;
+				if(yych <= '(') goto yy285;
 				goto yy136;
 			} else {
-				if(yych <= '@') goto yy283;
+				if(yych <= '@') goto yy285;
 				if(yych <= 'C') goto yy139;
 			}
 		} else {
 			if(yych <= 'c') {
 				if(yych <= 'Z') goto yy139;
-				if(yych <= '`') goto yy283;
+				if(yych <= '`') goto yy285;
 				goto yy139;
 			} else {
-				if(yych <= 'd') goto yy589;
+				if(yych <= 'd') goto yy591;
 				if(yych <= 'z') goto yy139;
-				goto yy283;
+				goto yy285;
 			}
 		}
-yy589:
-		YYDEBUG(589, *YYCURSOR);
+yy591:
+		YYDEBUG(591, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'A') {
 			if(yych == ')') goto yy136;
@@ -10563,13 +10595,13 @@ yy589:
 				if(yych <= 'Z') goto yy140;
 				goto yy3;
 			} else {
-				if(yych <= 'a') goto yy590;
+				if(yych <= 'a') goto yy592;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy590:
-		YYDEBUG(590, *YYCURSOR);
+yy592:
+		YYDEBUG(592, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'Y') {
 			if(yych <= ')') {
@@ -10578,7 +10610,7 @@ yy590:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'X') goto yy141;
-				goto yy510;
+				goto yy512;
 			}
 		} else {
 			if(yych <= 'x') {
@@ -10586,13 +10618,13 @@ yy590:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'y') goto yy510;
+				if(yych <= 'y') goto yy512;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy591:
-		YYDEBUG(591, *YYCURSOR);
+yy593:
+		YYDEBUG(593, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'R') {
 			if(yych <= ')') {
@@ -10608,13 +10640,13 @@ yy591:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 'r') goto yy592;
+				if(yych <= 'r') goto yy594;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy592:
-		YYDEBUG(592, *YYCURSOR);
+yy594:
+		YYDEBUG(594, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'T') {
 			if(yych <= ')') {
@@ -10630,13 +10662,13 @@ yy592:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 't') goto yy593;
+				if(yych <= 't') goto yy595;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy593:
-		YYDEBUG(593, *YYCURSOR);
+yy595:
+		YYDEBUG(595, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'H') {
 			if(yych <= ')') {
@@ -10645,7 +10677,7 @@ yy593:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'G') goto yy141;
-				goto yy526;
+				goto yy528;
 			}
 		} else {
 			if(yych <= 'g') {
@@ -10653,13 +10685,13 @@ yy593:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'h') goto yy526;
+				if(yych <= 'h') goto yy528;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy594:
-		YYDEBUG(594, *YYCURSOR);
+yy596:
+		YYDEBUG(596, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'S') {
 			if(yych <= ')') {
@@ -10668,7 +10700,7 @@ yy594:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'R') goto yy139;
-				goto yy597;
+				goto yy599;
 			}
 		} else {
 			if(yych <= 'r') {
@@ -10676,13 +10708,13 @@ yy594:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 's') goto yy597;
+				if(yych <= 's') goto yy599;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy595:
-		YYDEBUG(595, *YYCURSOR);
+yy597:
+		YYDEBUG(597, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'T') {
 			if(yych <= ')') {
@@ -10698,13 +10730,13 @@ yy595:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 't') goto yy596;
+				if(yych <= 't') goto yy598;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy596:
-		YYDEBUG(596, *YYCURSOR);
+yy598:
+		YYDEBUG(598, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'H') {
 			if(yych <= ')') {
@@ -10713,7 +10745,7 @@ yy596:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'G') goto yy140;
-				goto yy270;
+				goto yy272;
 			}
 		} else {
 			if(yych <= 'g') {
@@ -10721,13 +10753,13 @@ yy596:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'h') goto yy270;
+				if(yych <= 'h') goto yy272;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy597:
-		YYDEBUG(597, *YYCURSOR);
+yy599:
+		YYDEBUG(599, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'T') {
 			if(yych <= ')') {
@@ -10736,7 +10768,7 @@ yy597:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy140;
-				goto yy270;
+				goto yy272;
 			}
 		} else {
 			if(yych <= 's') {
@@ -10744,55 +10776,55 @@ yy597:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 't') goto yy270;
+				if(yych <= 't') goto yy272;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy598:
-		YYDEBUG(598, *YYCURSOR);
+yy600:
+		YYDEBUG(600, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= ',') {
 					if(yych <= ')') goto yy136;
-					goto yy310;
+					goto yy312;
 				} else {
-					if(yych <= '-') goto yy313;
-					if(yych <= '.') goto yy312;
-					goto yy310;
+					if(yych <= '-') goto yy315;
+					if(yych <= '.') goto yy314;
+					goto yy312;
 				}
 			}
 		} else {
 			if(yych <= 'Z') {
 				if(yych <= '@') {
-					if(yych <= '9') goto yy312;
-					goto yy310;
+					if(yych <= '9') goto yy314;
+					goto yy312;
 				} else {
 					if(yych != 'R') goto yy139;
 				}
 			} else {
 				if(yych <= 'q') {
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'r') goto yy599;
+					if(yych <= 'r') goto yy601;
 					if(yych <= 'z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy599:
-		YYDEBUG(599, *YYCURSOR);
+yy601:
+		YYDEBUG(601, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
 			if(yych <= ')') {
@@ -10808,13 +10840,13 @@ yy599:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'u') goto yy600;
+				if(yych <= 'u') goto yy602;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy600:
-		YYDEBUG(600, *YYCURSOR);
+yy602:
+		YYDEBUG(602, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'A') {
 			if(yych == ')') goto yy136;
@@ -10824,30 +10856,30 @@ yy600:
 				if(yych <= 'Z') goto yy141;
 				goto yy3;
 			} else {
-				if(yych <= 'a') goto yy601;
+				if(yych <= 'a') goto yy603;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy601:
-		YYDEBUG(601, *YYCURSOR);
+yy603:
+		YYDEBUG(603, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'Q') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'R') goto yy602;
+			if(yych <= 'R') goto yy604;
 			if(yych != 'r') goto yy3;
 		}
-yy602:
-		YYDEBUG(602, *YYCURSOR);
+yy604:
+		YYDEBUG(604, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy322;
-		if(yych == 'y') goto yy322;
+		if(yych == 'Y') goto yy324;
+		if(yych == 'y') goto yy324;
 		goto yy53;
-yy603:
-		YYDEBUG(603, *YYCURSOR);
+yy605:
+		YYDEBUG(605, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'B') {
@@ -10858,7 +10890,7 @@ yy603:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'A') goto yy138;
-				goto yy598;
+				goto yy600;
 			}
 		} else {
 			if(yych <= '`') {
@@ -10866,13 +10898,13 @@ yy603:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'b') goto yy617;
+				if(yych == 'b') goto yy619;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy604:
-		YYDEBUG(604, *YYCURSOR);
+yy606:
+		YYDEBUG(606, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'R') {
@@ -10885,9 +10917,9 @@ yy604:
 					if(yych <= '@') goto yy3;
 					goto yy138;
 				} else {
-					if(yych <= 'F') goto yy595;
+					if(yych <= 'F') goto yy597;
 					if(yych <= 'Q') goto yy138;
-					goto yy594;
+					goto yy596;
 				}
 			}
 		} else {
@@ -10902,17 +10934,17 @@ yy604:
 				}
 			} else {
 				if(yych <= 'q') {
-					if(yych <= 'f') goto yy614;
+					if(yych <= 'f') goto yy616;
 					goto yy143;
 				} else {
-					if(yych <= 'r') goto yy613;
+					if(yych <= 'r') goto yy615;
 					if(yych <= 'z') goto yy143;
 					goto yy3;
 				}
 			}
 		}
-yy605:
-		YYDEBUG(605, *YYCURSOR);
+yy607:
+		YYDEBUG(607, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'U') {
@@ -10923,7 +10955,7 @@ yy605:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'T') goto yy138;
-				goto yy591;
+				goto yy593;
 			}
 		} else {
 			if(yych <= '`') {
@@ -10931,13 +10963,13 @@ yy605:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'u') goto yy610;
+				if(yych == 'u') goto yy612;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy606:
-		YYDEBUG(606, *YYCURSOR);
+yy608:
+		YYDEBUG(608, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'I') {
@@ -10948,7 +10980,7 @@ yy606:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'H') goto yy138;
-				goto yy588;
+				goto yy590;
 			}
 		} else {
 			if(yych <= '`') {
@@ -10956,38 +10988,38 @@ yy606:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'i') goto yy607;
+				if(yych == 'i') goto yy609;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy607:
-		YYDEBUG(607, *YYCURSOR);
+yy609:
+		YYDEBUG(609, *YYCURSOR);
 		yyaccept = 5;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
 			if(yych <= '.') {
 				if(yych == ')') goto yy136;
-				goto yy283;
+				goto yy285;
 			} else {
 				if(yych <= '/') goto yy144;
-				if(yych <= '@') goto yy283;
+				if(yych <= '@') goto yy285;
 				if(yych <= 'C') goto yy139;
-				goto yy589;
+				goto yy591;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych <= 'Z') goto yy139;
 				if(yych == '_') goto yy144;
-				goto yy283;
+				goto yy285;
 			} else {
-				if(yych == 'd') goto yy608;
+				if(yych == 'd') goto yy610;
 				if(yych <= 'z') goto yy148;
-				goto yy283;
+				goto yy285;
 			}
 		}
-yy608:
-		YYDEBUG(608, *YYCURSOR);
+yy610:
+		YYDEBUG(610, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'A') {
@@ -10997,7 +11029,7 @@ yy608:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
-				goto yy590;
+				goto yy592;
 			}
 		} else {
 			if(yych <= '_') {
@@ -11006,13 +11038,13 @@ yy608:
 				goto yy144;
 			} else {
 				if(yych <= '`') goto yy3;
-				if(yych <= 'a') goto yy609;
+				if(yych <= 'a') goto yy611;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy609:
-		YYDEBUG(609, *YYCURSOR);
+yy611:
+		YYDEBUG(611, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'Y') {
@@ -11023,7 +11055,7 @@ yy609:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'X') goto yy141;
-				goto yy510;
+				goto yy512;
 			}
 		} else {
 			if(yych <= '`') {
@@ -11031,13 +11063,13 @@ yy609:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'y') goto yy539;
+				if(yych == 'y') goto yy541;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy610:
-		YYDEBUG(610, *YYCURSOR);
+yy612:
+		YYDEBUG(612, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'R') {
@@ -11048,7 +11080,7 @@ yy610:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'Q') goto yy139;
-				goto yy592;
+				goto yy594;
 			}
 		} else {
 			if(yych <= '`') {
@@ -11056,13 +11088,13 @@ yy610:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'r') goto yy611;
+				if(yych == 'r') goto yy613;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy611:
-		YYDEBUG(611, *YYCURSOR);
+yy613:
+		YYDEBUG(613, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
@@ -11073,7 +11105,7 @@ yy611:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy140;
-				goto yy593;
+				goto yy595;
 			}
 		} else {
 			if(yych <= '`') {
@@ -11081,13 +11113,13 @@ yy611:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 't') goto yy612;
+				if(yych == 't') goto yy614;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy612:
-		YYDEBUG(612, *YYCURSOR);
+yy614:
+		YYDEBUG(614, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'H') {
@@ -11098,7 +11130,7 @@ yy612:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'G') goto yy141;
-				goto yy526;
+				goto yy528;
 			}
 		} else {
 			if(yych <= '`') {
@@ -11106,13 +11138,13 @@ yy612:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'h') goto yy555;
+				if(yych == 'h') goto yy557;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy613:
-		YYDEBUG(613, *YYCURSOR);
+yy615:
+		YYDEBUG(615, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'S') {
@@ -11123,7 +11155,7 @@ yy613:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'R') goto yy139;
-				goto yy597;
+				goto yy599;
 			}
 		} else {
 			if(yych <= '`') {
@@ -11131,13 +11163,13 @@ yy613:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 's') goto yy616;
+				if(yych == 's') goto yy618;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy614:
-		YYDEBUG(614, *YYCURSOR);
+yy616:
+		YYDEBUG(616, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
@@ -11148,7 +11180,7 @@ yy614:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy139;
-				goto yy596;
+				goto yy598;
 			}
 		} else {
 			if(yych <= '`') {
@@ -11156,13 +11188,13 @@ yy614:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 't') goto yy615;
+				if(yych == 't') goto yy617;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy615:
-		YYDEBUG(615, *YYCURSOR);
+yy617:
+		YYDEBUG(617, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'H') {
@@ -11173,7 +11205,7 @@ yy615:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'G') goto yy140;
-				goto yy270;
+				goto yy272;
 			}
 		} else {
 			if(yych <= '`') {
@@ -11181,13 +11213,13 @@ yy615:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'h') goto yy280;
+				if(yych == 'h') goto yy282;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy616:
-		YYDEBUG(616, *YYCURSOR);
+yy618:
+		YYDEBUG(618, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
@@ -11198,7 +11230,7 @@ yy616:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy140;
-				goto yy270;
+				goto yy272;
 			}
 		} else {
 			if(yych <= '`') {
@@ -11206,58 +11238,58 @@ yy616:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 't') goto yy280;
+				if(yych == 't') goto yy282;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy617:
-		YYDEBUG(617, *YYCURSOR);
+yy619:
+		YYDEBUG(619, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= '-') {
 					if(yych <= ')') goto yy136;
-					if(yych <= ',') goto yy310;
-					goto yy313;
+					if(yych <= ',') goto yy312;
+					goto yy315;
 				} else {
 					if(yych == '/') goto yy144;
-					goto yy312;
+					goto yy314;
 				}
 			}
 		} else {
 			if(yych <= '^') {
 				if(yych <= 'Q') {
-					if(yych <= '@') goto yy310;
+					if(yych <= '@') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'R') goto yy599;
+					if(yych <= 'R') goto yy601;
 					if(yych <= 'Z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			} else {
 				if(yych <= 'q') {
 					if(yych <= '_') goto yy144;
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy148;
 				} else {
-					if(yych <= 'r') goto yy618;
+					if(yych <= 'r') goto yy620;
 					if(yych <= 'z') goto yy148;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy618:
-		YYDEBUG(618, *YYCURSOR);
+yy620:
+		YYDEBUG(620, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'U') {
@@ -11268,7 +11300,7 @@ yy618:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'T') goto yy140;
-				goto yy600;
+				goto yy602;
 			}
 		} else {
 			if(yych <= '`') {
@@ -11276,13 +11308,13 @@ yy618:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'u') goto yy619;
+				if(yych == 'u') goto yy621;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy619:
-		YYDEBUG(619, *YYCURSOR);
+yy621:
+		YYDEBUG(621, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'A') {
@@ -11292,7 +11324,7 @@ yy619:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
-				goto yy601;
+				goto yy603;
 			}
 		} else {
 			if(yych <= '_') {
@@ -11301,13 +11333,13 @@ yy619:
 				goto yy144;
 			} else {
 				if(yych <= '`') goto yy3;
-				if(yych <= 'a') goto yy620;
+				if(yych <= 'a') goto yy622;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy620:
-		YYDEBUG(620, *YYCURSOR);
+yy622:
+		YYDEBUG(622, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'R') {
@@ -11317,50 +11349,50 @@ yy620:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= 'Q') goto yy3;
-				goto yy602;
+				goto yy604;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'r') goto yy621;
+				if(yych == 'r') goto yy623;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy621:
-		YYDEBUG(621, *YYCURSOR);
+yy623:
+		YYDEBUG(623, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy322;
-		if(yych == 'y') goto yy492;
+		if(yych == 'Y') goto yy324;
+		if(yych == 'y') goto yy494;
 		goto yy152;
-yy622:
-		YYDEBUG(622, *YYCURSOR);
+yy624:
+		YYDEBUG(624, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'N') {
 			if(yych <= '@') {
 				if(yych == ')') goto yy136;
 				goto yy3;
 			} else {
-				if(yych == 'L') goto yy629;
+				if(yych == 'L') goto yy631;
 				if(yych <= 'M') goto yy138;
-				goto yy628;
+				goto yy630;
 			}
 		} else {
 			if(yych <= 'l') {
 				if(yych <= 'Z') goto yy138;
 				if(yych <= '`') goto yy3;
 				if(yych <= 'k') goto yy138;
-				goto yy629;
+				goto yy631;
 			} else {
-				if(yych == 'n') goto yy628;
+				if(yych == 'n') goto yy630;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy623:
-		YYDEBUG(623, *YYCURSOR);
+yy625:
+		YYDEBUG(625, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'N') {
 			if(yych <= ')') {
@@ -11376,55 +11408,55 @@ yy623:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'n') goto yy624;
+				if(yych <= 'n') goto yy626;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy624:
-		YYDEBUG(624, *YYCURSOR);
+yy626:
+		YYDEBUG(626, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= ',') {
 					if(yych <= ')') goto yy136;
-					goto yy310;
+					goto yy312;
 				} else {
-					if(yych <= '-') goto yy313;
-					if(yych <= '.') goto yy312;
-					goto yy310;
+					if(yych <= '-') goto yy315;
+					if(yych <= '.') goto yy314;
+					goto yy312;
 				}
 			}
 		} else {
 			if(yych <= 'Z') {
 				if(yych <= '@') {
-					if(yych <= '9') goto yy312;
-					goto yy310;
+					if(yych <= '9') goto yy314;
+					goto yy312;
 				} else {
 					if(yych != 'U') goto yy139;
 				}
 			} else {
 				if(yych <= 't') {
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'u') goto yy625;
+					if(yych <= 'u') goto yy627;
 					if(yych <= 'z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy625:
-		YYDEBUG(625, *YYCURSOR);
+yy627:
+		YYDEBUG(627, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'A') {
 			if(yych == ')') goto yy136;
@@ -11434,13 +11466,13 @@ yy625:
 				if(yych <= 'Z') goto yy140;
 				goto yy3;
 			} else {
-				if(yych <= 'a') goto yy626;
+				if(yych <= 'a') goto yy628;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy626:
-		YYDEBUG(626, *YYCURSOR);
+yy628:
+		YYDEBUG(628, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'R') {
 			if(yych <= ')') {
@@ -11456,134 +11488,134 @@ yy626:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'r') goto yy627;
+				if(yych <= 'r') goto yy629;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy627:
-		YYDEBUG(627, *YYCURSOR);
+yy629:
+		YYDEBUG(629, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'X') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'Y') goto yy322;
-			if(yych == 'y') goto yy322;
+			if(yych <= 'Y') goto yy324;
+			if(yych == 'y') goto yy324;
 			goto yy3;
 		}
-yy628:
-		YYDEBUG(628, *YYCURSOR);
+yy630:
+		YYDEBUG(630, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= ',') {
 					if(yych <= ')') goto yy136;
-					goto yy310;
+					goto yy312;
 				} else {
-					if(yych <= '-') goto yy313;
-					if(yych <= '.') goto yy312;
-					goto yy310;
+					if(yych <= '-') goto yy315;
+					if(yych <= '.') goto yy314;
+					goto yy312;
 				}
 			}
 		} else {
 			if(yych <= 'Z') {
 				if(yych <= '@') {
-					if(yych <= '9') goto yy312;
-					goto yy310;
+					if(yych <= '9') goto yy314;
+					goto yy312;
 				} else {
-					if(yych == 'E') goto yy630;
+					if(yych == 'E') goto yy632;
 					goto yy139;
 				}
 			} else {
 				if(yych <= 'd') {
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'e') goto yy630;
+					if(yych <= 'e') goto yy632;
 					if(yych <= 'z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy629:
-		YYDEBUG(629, *YYCURSOR);
+yy631:
+		YYDEBUG(631, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= ',') {
 					if(yych <= ')') goto yy136;
-					goto yy310;
+					goto yy312;
 				} else {
-					if(yych <= '-') goto yy313;
-					if(yych <= '.') goto yy312;
-					goto yy310;
+					if(yych <= '-') goto yy315;
+					if(yych <= '.') goto yy314;
+					goto yy312;
 				}
 			}
 		} else {
 			if(yych <= 'Z') {
 				if(yych <= '@') {
-					if(yych <= '9') goto yy312;
-					goto yy310;
+					if(yych <= '9') goto yy314;
+					goto yy312;
 				} else {
 					if(yych != 'Y') goto yy139;
 				}
 			} else {
 				if(yych <= 'x') {
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'y') goto yy630;
+					if(yych <= 'y') goto yy632;
 					if(yych <= 'z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy630:
-		YYDEBUG(630, *YYCURSOR);
+yy632:
+		YYDEBUG(632, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy312;
-				goto yy310;
+				if(yych == 0x09) goto yy314;
+				goto yy312;
 			} else {
-				if(yych <= ' ') goto yy312;
+				if(yych <= ' ') goto yy314;
 				if(yych == ')') goto yy136;
-				goto yy310;
+				goto yy312;
 			}
 		} else {
 			if(yych <= '@') {
-				if(yych == '/') goto yy310;
-				if(yych <= '9') goto yy312;
-				goto yy310;
+				if(yych == '/') goto yy312;
+				if(yych <= '9') goto yy314;
+				goto yy312;
 			} else {
 				if(yych <= 'Z') goto yy140;
-				if(yych <= '`') goto yy310;
+				if(yych <= '`') goto yy312;
 				if(yych <= 'z') goto yy140;
-				goto yy310;
+				goto yy312;
 			}
 		}
-yy631:
-		YYDEBUG(631, *YYCURSOR);
+yy633:
+		YYDEBUG(633, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'N') {
@@ -11596,9 +11628,9 @@ yy631:
 					if(yych <= '@') goto yy3;
 					goto yy138;
 				} else {
-					if(yych <= 'L') goto yy629;
+					if(yych <= 'L') goto yy631;
 					if(yych <= 'M') goto yy138;
-					goto yy628;
+					goto yy630;
 				}
 			}
 		} else {
@@ -11613,17 +11645,17 @@ yy631:
 				}
 			} else {
 				if(yych <= 'm') {
-					if(yych <= 'l') goto yy638;
+					if(yych <= 'l') goto yy640;
 					goto yy143;
 				} else {
-					if(yych <= 'n') goto yy637;
+					if(yych <= 'n') goto yy639;
 					if(yych <= 'z') goto yy143;
 					goto yy3;
 				}
 			}
 		}
-yy632:
-		YYDEBUG(632, *YYCURSOR);
+yy634:
+		YYDEBUG(634, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'N') {
@@ -11634,7 +11666,7 @@ yy632:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'M') goto yy138;
-				goto yy624;
+				goto yy626;
 			}
 		} else {
 			if(yych <= '`') {
@@ -11642,58 +11674,58 @@ yy632:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'n') goto yy633;
+				if(yych == 'n') goto yy635;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy633:
-		YYDEBUG(633, *YYCURSOR);
+yy635:
+		YYDEBUG(635, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= '-') {
 					if(yych <= ')') goto yy136;
-					if(yych <= ',') goto yy310;
-					goto yy313;
+					if(yych <= ',') goto yy312;
+					goto yy315;
 				} else {
 					if(yych == '/') goto yy144;
-					goto yy312;
+					goto yy314;
 				}
 			}
 		} else {
 			if(yych <= '^') {
 				if(yych <= 'T') {
-					if(yych <= '@') goto yy310;
+					if(yych <= '@') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'U') goto yy625;
+					if(yych <= 'U') goto yy627;
 					if(yych <= 'Z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			} else {
 				if(yych <= 't') {
 					if(yych <= '_') goto yy144;
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy148;
 				} else {
-					if(yych <= 'u') goto yy634;
+					if(yych <= 'u') goto yy636;
 					if(yych <= 'z') goto yy148;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy634:
-		YYDEBUG(634, *YYCURSOR);
+yy636:
+		YYDEBUG(636, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'A') {
@@ -11703,7 +11735,7 @@ yy634:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
-				goto yy626;
+				goto yy628;
 			}
 		} else {
 			if(yych <= '_') {
@@ -11712,13 +11744,13 @@ yy634:
 				goto yy144;
 			} else {
 				if(yych <= '`') goto yy3;
-				if(yych <= 'a') goto yy635;
+				if(yych <= 'a') goto yy637;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy635:
-		YYDEBUG(635, *YYCURSOR);
+yy637:
+		YYDEBUG(637, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'R') {
@@ -11729,7 +11761,7 @@ yy635:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'Q') goto yy141;
-				goto yy627;
+				goto yy629;
 			}
 		} else {
 			if(yych <= '`') {
@@ -11737,13 +11769,13 @@ yy635:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'r') goto yy636;
+				if(yych == 'r') goto yy638;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy636:
-		YYDEBUG(636, *YYCURSOR);
+yy638:
+		YYDEBUG(638, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'Y') {
@@ -11753,157 +11785,157 @@ yy636:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= 'X') goto yy3;
-				goto yy322;
+				goto yy324;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'y') goto yy492;
+				if(yych == 'y') goto yy494;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy637:
-		YYDEBUG(637, *YYCURSOR);
+yy639:
+		YYDEBUG(639, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= '-') {
 					if(yych <= ')') goto yy136;
-					if(yych <= ',') goto yy310;
-					goto yy313;
+					if(yych <= ',') goto yy312;
+					goto yy315;
 				} else {
 					if(yych == '/') goto yy144;
-					goto yy312;
+					goto yy314;
 				}
 			}
 		} else {
 			if(yych <= '^') {
 				if(yych <= 'D') {
-					if(yych <= '@') goto yy310;
+					if(yych <= '@') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'E') goto yy630;
+					if(yych <= 'E') goto yy632;
 					if(yych <= 'Z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			} else {
 				if(yych <= 'd') {
 					if(yych <= '_') goto yy144;
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy148;
 				} else {
-					if(yych <= 'e') goto yy639;
+					if(yych <= 'e') goto yy641;
 					if(yych <= 'z') goto yy148;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy638:
-		YYDEBUG(638, *YYCURSOR);
+yy640:
+		YYDEBUG(640, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= '-') {
 					if(yych <= ')') goto yy136;
-					if(yych <= ',') goto yy310;
-					goto yy313;
+					if(yych <= ',') goto yy312;
+					goto yy315;
 				} else {
 					if(yych == '/') goto yy144;
-					goto yy312;
+					goto yy314;
 				}
 			}
 		} else {
 			if(yych <= '^') {
 				if(yych <= 'X') {
-					if(yych <= '@') goto yy310;
+					if(yych <= '@') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'Y') goto yy630;
+					if(yych <= 'Y') goto yy632;
 					if(yych <= 'Z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			} else {
 				if(yych <= 'x') {
 					if(yych <= '_') goto yy144;
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy148;
 				} else {
-					if(yych <= 'y') goto yy639;
+					if(yych <= 'y') goto yy641;
 					if(yych <= 'z') goto yy148;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy639:
-		YYDEBUG(639, *YYCURSOR);
+yy641:
+		YYDEBUG(641, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy312;
-				if(yych <= 0x1F) goto yy310;
-				goto yy312;
+				if(yych == 0x09) goto yy314;
+				if(yych <= 0x1F) goto yy312;
+				goto yy314;
 			} else {
 				if(yych == ')') goto yy136;
-				if(yych <= ',') goto yy310;
-				goto yy312;
+				if(yych <= ',') goto yy312;
+				goto yy314;
 			}
 		} else {
 			if(yych <= 'Z') {
 				if(yych <= '/') goto yy144;
-				if(yych <= '9') goto yy312;
-				if(yych <= '@') goto yy310;
+				if(yych <= '9') goto yy314;
+				if(yych <= '@') goto yy312;
 				goto yy140;
 			} else {
 				if(yych <= '_') {
-					if(yych <= '^') goto yy310;
+					if(yych <= '^') goto yy312;
 					goto yy144;
 				} else {
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					if(yych <= 'z') goto yy149;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy640:
-		YYDEBUG(640, *YYCURSOR);
+yy642:
+		YYDEBUG(642, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy312;
+				if(yych == 0x09) goto yy314;
 				if(yych <= 0x1F) goto yy3;
-				goto yy312;
+				goto yy314;
 			} else {
 				if(yych == ')') goto yy136;
 				if(yych <= ',') goto yy3;
-				goto yy312;
+				goto yy314;
 			}
 		} else {
 			if(yych <= 'H') {
 				if(yych <= '/') goto yy3;
-				if(yych <= '9') goto yy312;
+				if(yych <= '9') goto yy314;
 				if(yych <= '@') goto yy3;
 				goto yy138;
 			} else {
@@ -11916,23 +11948,23 @@ yy640:
 				}
 			}
 		}
-yy641:
-		YYDEBUG(641, *YYCURSOR);
+yy643:
+		YYDEBUG(643, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy312;
+				if(yych == 0x09) goto yy314;
 				goto yy3;
 			} else {
-				if(yych <= ' ') goto yy312;
+				if(yych <= ' ') goto yy314;
 				if(yych == ')') goto yy136;
 				goto yy3;
 			}
 		} else {
 			if(yych <= '@') {
 				if(yych == '/') goto yy3;
-				if(yych <= '9') goto yy312;
+				if(yych <= '9') goto yy314;
 				goto yy3;
 			} else {
 				if(yych <= 'Z') goto yy139;
@@ -11941,24 +11973,24 @@ yy641:
 				goto yy3;
 			}
 		}
-yy642:
-		YYDEBUG(642, *YYCURSOR);
+yy644:
+		YYDEBUG(644, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy312;
+				if(yych == 0x09) goto yy314;
 				if(yych <= 0x1F) goto yy3;
-				goto yy312;
+				goto yy314;
 			} else {
 				if(yych == ')') goto yy136;
 				if(yych <= ',') goto yy3;
-				goto yy312;
+				goto yy314;
 			}
 		} else {
 			if(yych <= 'H') {
 				if(yych <= '/') goto yy3;
-				if(yych <= '9') goto yy312;
+				if(yych <= '9') goto yy314;
 				if(yych <= '@') goto yy3;
 				goto yy138;
 			} else {
@@ -11971,23 +12003,23 @@ yy642:
 				}
 			}
 		}
-		YYDEBUG(643, *YYCURSOR);
+		YYDEBUG(645, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy312;
+				if(yych == 0x09) goto yy314;
 				if(yych <= 0x1F) goto yy3;
-				goto yy312;
+				goto yy314;
 			} else {
 				if(yych == ')') goto yy136;
 				if(yych <= ',') goto yy3;
-				goto yy312;
+				goto yy314;
 			}
 		} else {
 			if(yych <= 'H') {
 				if(yych <= '/') goto yy3;
-				if(yych <= '9') goto yy312;
+				if(yych <= '9') goto yy314;
 				if(yych <= '@') goto yy3;
 				goto yy139;
 			} else {
@@ -12000,22 +12032,22 @@ yy642:
 				}
 			}
 		}
-		YYDEBUG(644, *YYCURSOR);
+		YYDEBUG(646, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy312;
+				if(yych == 0x09) goto yy314;
 				goto yy3;
 			} else {
-				if(yych <= ' ') goto yy312;
+				if(yych <= ' ') goto yy314;
 				if(yych == ')') goto yy136;
 				goto yy3;
 			}
 		} else {
 			if(yych <= '@') {
 				if(yych == '/') goto yy3;
-				if(yych <= '9') goto yy312;
+				if(yych <= '9') goto yy314;
 				goto yy3;
 			} else {
 				if(yych <= 'Z') goto yy140;
@@ -12024,23 +12056,23 @@ yy642:
 				goto yy3;
 			}
 		}
-yy645:
-		YYDEBUG(645, *YYCURSOR);
+yy647:
+		YYDEBUG(647, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy312;
+				if(yych == 0x09) goto yy314;
 				goto yy3;
 			} else {
-				if(yych <= ' ') goto yy312;
+				if(yych <= ' ') goto yy314;
 				if(yych == ')') goto yy136;
 				goto yy3;
 			}
 		} else {
 			if(yych <= '@') {
 				if(yych == '/') goto yy3;
-				if(yych <= '9') goto yy312;
+				if(yych <= '9') goto yy314;
 				goto yy3;
 			} else {
 				if(yych <= 'Z') goto yy138;
@@ -12049,29 +12081,29 @@ yy645:
 				goto yy3;
 			}
 		}
-yy646:
-		YYDEBUG(646, *YYCURSOR);
+yy648:
+		YYDEBUG(648, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy312;
+				if(yych == 0x09) goto yy314;
 				if(yych <= 0x1F) goto yy3;
-				goto yy312;
+				goto yy314;
 			} else {
 				if(yych == ')') goto yy136;
 				if(yych <= ',') goto yy3;
-				goto yy312;
+				goto yy314;
 			}
 		} else {
 			if(yych <= 'H') {
 				if(yych <= '/') goto yy3;
-				if(yych <= '9') goto yy312;
+				if(yych <= '9') goto yy314;
 				if(yych <= '@') goto yy3;
 				goto yy138;
 			} else {
 				if(yych <= 'Z') {
-					if(yych <= 'I') goto yy641;
+					if(yych <= 'I') goto yy643;
 					goto yy138;
 				} else {
 					if(yych <= '`') goto yy3;
@@ -12080,67 +12112,67 @@ yy646:
 				}
 			}
 		}
-yy647:
-		YYDEBUG(647, *YYCURSOR);
+yy649:
+		YYDEBUG(649, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy649;
-		if(yych <= '0') goto yy897;
-		if(yych <= '1') goto yy898;
-		if(yych <= '9') goto yy899;
-		goto yy649;
-yy648:
-		YYDEBUG(648, *YYCURSOR);
+		if(yych <= '/') goto yy651;
+		if(yych <= '0') goto yy899;
+		if(yych <= '1') goto yy900;
+		if(yych <= '9') goto yy901;
+		goto yy651;
+yy650:
+		YYDEBUG(650, *YYCURSOR);
 		++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 13) YYFILL(13);
 		yych = *YYCURSOR;
-yy649:
-		YYDEBUG(649, *YYCURSOR);
+yy651:
+		YYDEBUG(651, *YYCURSOR);
 		YYDEBUG(-1, yych);
 		switch(yych) {
 		case 0x09:
-		case ' ':	goto yy648;
+		case ' ':	goto yy650;
 		case '-':
-		case '.':	goto yy748;
+		case '.':	goto yy750;
 		case 'A':
-		case 'a':	goto yy667;
+		case 'a':	goto yy669;
 		case 'D':
-		case 'd':	goto yy653;
+		case 'd':	goto yy655;
 		case 'F':
-		case 'f':	goto yy654;
+		case 'f':	goto yy656;
 		case 'H':
 		case 'h':	goto yy60;
-		case 'I':	goto yy662;
+		case 'I':	goto yy664;
 		case 'J':
-		case 'j':	goto yy666;
+		case 'j':	goto yy668;
 		case 'M':
-		case 'm':	goto yy652;
+		case 'm':	goto yy654;
 		case 'N':
-		case 'n':	goto yy669;
+		case 'n':	goto yy671;
 		case 'O':
-		case 'o':	goto yy668;
+		case 'o':	goto yy670;
 		case 'P':
-		case 'p':	goto yy671;
+		case 'p':	goto yy673;
 		case 'S':
-		case 's':	goto yy650;
+		case 's':	goto yy652;
 		case 'T':
 		case 't':	goto yy65;
-		case 'V':	goto yy664;
+		case 'V':	goto yy666;
 		case 'W':
 		case 'w':	goto yy62;
-		case 'X':	goto yy665;
+		case 'X':	goto yy667;
 		case 'Y':
 		case 'y':	goto yy64;
 		default:	goto yy53;
 		}
-yy650:
-		YYDEBUG(650, *YYCURSOR);
+yy652:
+		YYDEBUG(652, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
 			if(yych <= 'D') {
 				if(yych == 'A') goto yy123;
 				goto yy53;
 			} else {
-				if(yych <= 'E') goto yy1196;
+				if(yych <= 'E') goto yy1198;
 				if(yych <= 'T') goto yy53;
 				goto yy122;
 			}
@@ -12149,20 +12181,20 @@ yy650:
 				if(yych == 'a') goto yy123;
 				goto yy53;
 			} else {
-				if(yych <= 'e') goto yy1196;
+				if(yych <= 'e') goto yy1198;
 				if(yych == 'u') goto yy122;
 				goto yy53;
 			}
 		}
-yy651:
-		YYDEBUG(651, *YYCURSOR);
+yy653:
+		YYDEBUG(653, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '`') {
 			if(yych <= 'D') {
 				if(yych == 'A') goto yy123;
 				goto yy53;
 			} else {
-				if(yych <= 'E') goto yy1196;
+				if(yych <= 'E') goto yy1198;
 				if(yych == 'U') goto yy122;
 				goto yy53;
 			}
@@ -12170,20 +12202,20 @@ yy651:
 			if(yych <= 'e') {
 				if(yych <= 'a') goto yy123;
 				if(yych <= 'd') goto yy53;
-				goto yy1196;
+				goto yy1198;
 			} else {
 				if(yych <= 's') goto yy53;
-				if(yych <= 't') goto yy894;
+				if(yych <= 't') goto yy896;
 				if(yych <= 'u') goto yy122;
 				goto yy53;
 			}
 		}
-yy652:
-		YYDEBUG(652, *YYCURSOR);
+yy654:
+		YYDEBUG(654, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'O') {
 			if(yych <= 'H') {
-				if(yych == 'A') goto yy763;
+				if(yych == 'A') goto yy765;
 				goto yy53;
 			} else {
 				if(yych <= 'I') goto yy114;
@@ -12192,7 +12224,7 @@ yy652:
 			}
 		} else {
 			if(yych <= 'h') {
-				if(yych == 'a') goto yy763;
+				if(yych == 'a') goto yy765;
 				goto yy53;
 			} else {
 				if(yych <= 'i') goto yy114;
@@ -12200,28 +12232,28 @@ yy652:
 				goto yy53;
 			}
 		}
-yy653:
-		YYDEBUG(653, *YYCURSOR);
+yy655:
+		YYDEBUG(655, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'E') {
 			if(yych == 'A') goto yy110;
 			if(yych <= 'D') goto yy53;
-			goto yy750;
+			goto yy752;
 		} else {
 			if(yych <= 'a') {
 				if(yych <= '`') goto yy53;
 				goto yy110;
 			} else {
-				if(yych == 'e') goto yy750;
+				if(yych == 'e') goto yy752;
 				goto yy53;
 			}
 		}
-yy654:
-		YYDEBUG(654, *YYCURSOR);
+yy656:
+		YYDEBUG(656, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'R') {
 			if(yych <= 'N') {
-				if(yych == 'E') goto yy766;
+				if(yych == 'E') goto yy768;
 				goto yy53;
 			} else {
 				if(yych <= 'O') goto yy83;
@@ -12230,7 +12262,7 @@ yy654:
 			}
 		} else {
 			if(yych <= 'n') {
-				if(yych == 'e') goto yy766;
+				if(yych == 'e') goto yy768;
 				goto yy53;
 			} else {
 				if(yych <= 'o') goto yy83;
@@ -12238,8 +12270,8 @@ yy654:
 				goto yy53;
 			}
 		}
-yy655:
-		YYDEBUG(655, *YYCURSOR);
+yy657:
+		YYDEBUG(657, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
 			if(yych == 'H') goto yy66;
@@ -12248,75 +12280,75 @@ yy655:
 		} else {
 			if(yych <= 'h') {
 				if(yych <= 'g') goto yy53;
-				goto yy1195;
+				goto yy1197;
 			} else {
 				if(yych == 'u') goto yy67;
 				goto yy53;
 			}
 		}
-yy656:
-		YYDEBUG(656, *YYCURSOR);
+yy658:
+		YYDEBUG(658, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == '-') goto yy901;
+		if(yych == '-') goto yy903;
 		if(yych <= '/') goto yy57;
-		if(yych <= '9') goto yy900;
+		if(yych <= '9') goto yy902;
 		goto yy57;
-yy657:
-		YYDEBUG(657, *YYCURSOR);
+yy659:
+		YYDEBUG(659, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'c') {
-			if(yych == 'O') goto yy701;
+			if(yych == 'O') goto yy703;
 			goto yy53;
 		} else {
-			if(yych <= 'd') goto yy894;
-			if(yych == 'o') goto yy701;
+			if(yych <= 'd') goto yy896;
+			if(yych == 'o') goto yy703;
 			goto yy53;
 		}
-yy658:
-		YYDEBUG(658, *YYCURSOR);
+yy660:
+		YYDEBUG(660, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'd') goto yy894;
+		if(yych == 'd') goto yy896;
 		goto yy53;
-yy659:
-		YYDEBUG(659, *YYCURSOR);
+yy661:
+		YYDEBUG(661, *YYCURSOR);
 		yych = *++YYCURSOR;
 		YYDEBUG(-1, yych);
 		switch(yych) {
 		case '0':
 		case '1':
-		case '2':	goto yy834;
-		case '3':	goto yy836;
+		case '2':	goto yy836;
+		case '3':	goto yy838;
 		case '4':
 		case '5':
 		case '6':
 		case '7':
 		case '8':
-		case '9':	goto yy837;
+		case '9':	goto yy839;
 		case 'A':
-		case 'a':	goto yy841;
+		case 'a':	goto yy843;
 		case 'D':
-		case 'd':	goto yy845;
+		case 'd':	goto yy847;
 		case 'F':
-		case 'f':	goto yy839;
+		case 'f':	goto yy841;
 		case 'J':
-		case 'j':	goto yy838;
+		case 'j':	goto yy840;
 		case 'M':
-		case 'm':	goto yy840;
+		case 'm':	goto yy842;
 		case 'N':
-		case 'n':	goto yy844;
+		case 'n':	goto yy846;
 		case 'O':
-		case 'o':	goto yy843;
+		case 'o':	goto yy845;
 		case 'S':
-		case 's':	goto yy842;
+		case 's':	goto yy844;
 		default:	goto yy53;
 		}
-yy660:
-		YYDEBUG(660, *YYCURSOR);
+yy662:
+		YYDEBUG(662, *YYCURSOR);
 		yych = *++YYCURSOR;
 		YYDEBUG(-1, yych);
 		switch(yych) {
-		case '0':	goto yy784;
-		case '1':	goto yy785;
+		case '0':	goto yy786;
+		case '1':	goto yy787;
 		case '2':
 		case '3':
 		case '4':
@@ -12324,61 +12356,61 @@ yy660:
 		case '6':
 		case '7':
 		case '8':
-		case '9':	goto yy786;
+		case '9':	goto yy788;
 		case 'A':
-		case 'a':	goto yy790;
+		case 'a':	goto yy792;
 		case 'D':
-		case 'd':	goto yy794;
+		case 'd':	goto yy796;
 		case 'F':
-		case 'f':	goto yy788;
+		case 'f':	goto yy790;
 		case 'J':
-		case 'j':	goto yy787;
+		case 'j':	goto yy789;
 		case 'M':
-		case 'm':	goto yy789;
+		case 'm':	goto yy791;
 		case 'N':
-		case 'n':	goto yy793;
+		case 'n':	goto yy795;
 		case 'O':
-		case 'o':	goto yy792;
+		case 'o':	goto yy794;
 		case 'S':
-		case 's':	goto yy791;
-		default:	goto yy749;
+		case 's':	goto yy793;
+		default:	goto yy751;
 		}
-yy661:
-		YYDEBUG(661, *YYCURSOR);
+yy663:
+		YYDEBUG(663, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '1') {
-			if(yych <= '/') goto yy749;
-			if(yych <= '0') goto yy739;
-			goto yy740;
+			if(yych <= '/') goto yy751;
+			if(yych <= '0') goto yy741;
+			goto yy742;
 		} else {
-			if(yych <= '5') goto yy741;
-			if(yych <= '9') goto yy742;
-			goto yy749;
+			if(yych <= '5') goto yy743;
+			if(yych <= '9') goto yy744;
+			goto yy751;
 		}
-yy662:
-		YYDEBUG(662, *YYCURSOR);
+yy664:
+		YYDEBUG(664, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
+				if(yych == 0x09) goto yy705;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				if(yych <= '.') goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				if(yych <= '.') goto yy705;
 			}
 		} else {
 			if(yych <= 'U') {
-				if(yych <= '9') goto yy705;
-				if(yych == 'I') goto yy738;
+				if(yych <= '9') goto yy707;
+				if(yych == 'I') goto yy740;
 			} else {
-				if(yych == 'W') goto yy663;
-				if(yych <= 'X') goto yy711;
+				if(yych == 'W') goto yy665;
+				if(yych <= 'X') goto yy713;
 			}
 		}
-yy663:
-		YYDEBUG(663, *YYCURSOR);
-#line 1193 "ext/date/lib/parse_date.re"
+yy665:
+		YYDEBUG(665, *YYCURSOR);
+#line 1195 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("datenoyearrev");
 		TIMELIB_INIT;
@@ -12389,148 +12421,148 @@ yy663:
 		TIMELIB_DEINIT;
 		return TIMELIB_DATE_TEXT;
 	}
-#line 12393 "ext/date/lib/parse_date.c"
-yy664:
-		YYDEBUG(664, *YYCURSOR);
+#line 12425 "ext/date/lib/parse_date.c"
+yy666:
+		YYDEBUG(666, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= 0x09) {
-				if(yych <= 0x08) goto yy663;
-				goto yy703;
+				if(yych <= 0x08) goto yy665;
+				goto yy705;
 			} else {
-				if(yych == ' ') goto yy703;
-				goto yy663;
+				if(yych == ' ') goto yy705;
+				goto yy665;
 			}
 		} else {
 			if(yych <= '9') {
-				if(yych <= '.') goto yy703;
-				if(yych <= '/') goto yy663;
-				goto yy705;
+				if(yych <= '.') goto yy705;
+				if(yych <= '/') goto yy665;
+				goto yy707;
 			} else {
-				if(yych == 'I') goto yy736;
-				goto yy663;
+				if(yych == 'I') goto yy738;
+				goto yy665;
 			}
 		}
-yy665:
-		YYDEBUG(665, *YYCURSOR);
+yy667:
+		YYDEBUG(667, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= 0x09) {
-				if(yych <= 0x08) goto yy663;
-				goto yy703;
+				if(yych <= 0x08) goto yy665;
+				goto yy705;
 			} else {
-				if(yych == ' ') goto yy703;
-				goto yy663;
+				if(yych == ' ') goto yy705;
+				goto yy665;
 			}
 		} else {
 			if(yych <= '9') {
-				if(yych <= '.') goto yy703;
-				if(yych <= '/') goto yy663;
-				goto yy705;
+				if(yych <= '.') goto yy705;
+				if(yych <= '/') goto yy665;
+				goto yy707;
 			} else {
-				if(yych == 'I') goto yy735;
-				goto yy663;
+				if(yych == 'I') goto yy737;
+				goto yy665;
 			}
 		}
-yy666:
-		YYDEBUG(666, *YYCURSOR);
+yy668:
+		YYDEBUG(668, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
-			if(yych == 'A') goto yy728;
+			if(yych == 'A') goto yy730;
 			if(yych <= 'T') goto yy53;
-			goto yy727;
+			goto yy729;
 		} else {
 			if(yych <= 'a') {
 				if(yych <= '`') goto yy53;
-				goto yy728;
+				goto yy730;
 			} else {
-				if(yych == 'u') goto yy727;
+				if(yych == 'u') goto yy729;
 				goto yy53;
 			}
 		}
-yy667:
-		YYDEBUG(667, *YYCURSOR);
+yy669:
+		YYDEBUG(669, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'T') {
 			if(yych <= 'L') {
-				if(yych == '.') goto yy672;
+				if(yych == '.') goto yy674;
 				goto yy53;
 			} else {
-				if(yych <= 'M') goto yy673;
-				if(yych == 'P') goto yy721;
+				if(yych <= 'M') goto yy675;
+				if(yych == 'P') goto yy723;
 				goto yy53;
 			}
 		} else {
 			if(yych <= 'o') {
-				if(yych <= 'U') goto yy720;
-				if(yych == 'm') goto yy673;
+				if(yych <= 'U') goto yy722;
+				if(yych == 'm') goto yy675;
 				goto yy53;
 			} else {
-				if(yych <= 'p') goto yy721;
-				if(yych == 'u') goto yy720;
+				if(yych <= 'p') goto yy723;
+				if(yych == 'u') goto yy722;
 				goto yy53;
 			}
 		}
-yy668:
-		YYDEBUG(668, *YYCURSOR);
+yy670:
+		YYDEBUG(670, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'C') goto yy715;
-		if(yych == 'c') goto yy715;
+		if(yych == 'C') goto yy717;
+		if(yych == 'c') goto yy717;
 		goto yy53;
-yy669:
-		YYDEBUG(669, *YYCURSOR);
+yy671:
+		YYDEBUG(671, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'O') goto yy701;
-		if(yych == 'o') goto yy701;
+		if(yych == 'O') goto yy703;
+		if(yych == 'o') goto yy703;
 		goto yy53;
-yy670:
-		YYDEBUG(670, *YYCURSOR);
+yy672:
+		YYDEBUG(672, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy677;
-		if(yych <= '9') goto yy679;
+		if(yych <= '5') goto yy679;
+		if(yych <= '9') goto yy681;
 		goto yy53;
-yy671:
-		YYDEBUG(671, *YYCURSOR);
+yy673:
+		YYDEBUG(673, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'L') {
 			if(yych != '.') goto yy53;
 		} else {
-			if(yych <= 'M') goto yy673;
-			if(yych == 'm') goto yy673;
+			if(yych <= 'M') goto yy675;
+			if(yych == 'm') goto yy675;
 			goto yy53;
 		}
-yy672:
-		YYDEBUG(672, *YYCURSOR);
+yy674:
+		YYDEBUG(674, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'M') goto yy673;
+		if(yych == 'M') goto yy675;
 		if(yych != 'm') goto yy53;
-yy673:
-		YYDEBUG(673, *YYCURSOR);
+yy675:
+		YYDEBUG(675, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 0x1F) {
-			if(yych <= 0x00) goto yy675;
-			if(yych == 0x09) goto yy675;
+			if(yych <= 0x00) goto yy677;
+			if(yych == 0x09) goto yy677;
 			goto yy53;
 		} else {
-			if(yych <= ' ') goto yy675;
+			if(yych <= ' ') goto yy677;
 			if(yych != '.') goto yy53;
 		}
-		YYDEBUG(674, *YYCURSOR);
+		YYDEBUG(676, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 0x09) {
-			if(yych <= 0x00) goto yy675;
+			if(yych <= 0x00) goto yy677;
 			if(yych <= 0x08) goto yy53;
 		} else {
 			if(yych != ' ') goto yy53;
 		}
-yy675:
-		YYDEBUG(675, *YYCURSOR);
+yy677:
+		YYDEBUG(677, *YYCURSOR);
 		++YYCURSOR;
-		YYDEBUG(676, *YYCURSOR);
-#line 966 "ext/date/lib/parse_date.re"
+		YYDEBUG(678, *YYCURSOR);
+#line 968 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("timetiny12 | timeshort12 | timelong12");
 		TIMELIB_INIT;
@@ -12546,20 +12578,20 @@ yy675:
 		TIMELIB_DEINIT;
 		return TIMELIB_TIME12;
 	}
-#line 12550 "ext/date/lib/parse_date.c"
-yy677:
-		YYDEBUG(677, *YYCURSOR);
+#line 12582 "ext/date/lib/parse_date.c"
+yy679:
+		YYDEBUG(679, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy680;
+			if(yych == '.') goto yy682;
 		} else {
-			if(yych <= '9') goto yy694;
-			if(yych <= ':') goto yy680;
+			if(yych <= '9') goto yy696;
+			if(yych <= ':') goto yy682;
 		}
-yy678:
-		YYDEBUG(678, *YYCURSOR);
-#line 983 "ext/date/lib/parse_date.re"
+yy680:
+		YYDEBUG(680, *YYCURSOR);
+#line 985 "ext/date/lib/parse_date.re"
 		{
 		int tz_not_found;
 		DEBUG_OUTPUT("timeshort24 | timelong24 | iso8601long");
@@ -12584,275 +12616,275 @@ yy678:
 		TIMELIB_DEINIT;
 		return TIMELIB_TIME24_WITH_ZONE;
 	}
-#line 12588 "ext/date/lib/parse_date.c"
-yy679:
-		YYDEBUG(679, *YYCURSOR);
-		yyaccept = 12;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '.') goto yy680;
-		if(yych != ':') goto yy678;
-yy680:
-		YYDEBUG(680, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy681;
-		if(yych <= '6') goto yy682;
-		if(yych <= '9') goto yy683;
-		goto yy53;
+#line 12620 "ext/date/lib/parse_date.c"
 yy681:
 		YYDEBUG(681, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '.') goto yy684;
-		if(yych <= '/') goto yy678;
-		if(yych <= '9') goto yy687;
-		goto yy678;
+		if(yych == '.') goto yy682;
+		if(yych != ':') goto yy680;
 yy682:
 		YYDEBUG(682, *YYCURSOR);
-		yyaccept = 12;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '.') goto yy684;
-		if(yych == '0') goto yy687;
-		goto yy678;
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy683;
+		if(yych <= '6') goto yy684;
+		if(yych <= '9') goto yy685;
+		goto yy53;
 yy683:
 		YYDEBUG(683, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych != '.') goto yy678;
+		if(yych == '.') goto yy686;
+		if(yych <= '/') goto yy680;
+		if(yych <= '9') goto yy689;
+		goto yy680;
 yy684:
 		YYDEBUG(684, *YYCURSOR);
+		yyaccept = 12;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == '.') goto yy686;
+		if(yych == '0') goto yy689;
+		goto yy680;
+yy685:
+		YYDEBUG(685, *YYCURSOR);
+		yyaccept = 12;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych != '.') goto yy680;
+yy686:
+		YYDEBUG(686, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
 		if(yych >= ':') goto yy53;
-yy685:
-		YYDEBUG(685, *YYCURSOR);
+yy687:
+		YYDEBUG(687, *YYCURSOR);
 		++YYCURSOR;
 		if(YYLIMIT == YYCURSOR) YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(686, *YYCURSOR);
-		if(yych <= '/') goto yy678;
-		if(yych <= '9') goto yy685;
-		goto yy678;
-yy687:
-		YYDEBUG(687, *YYCURSOR);
+		YYDEBUG(688, *YYCURSOR);
+		if(yych <= '/') goto yy680;
+		if(yych <= '9') goto yy687;
+		goto yy680;
+yy689:
+		YYDEBUG(689, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '@') {
 			if(yych <= 0x1F) {
-				if(yych != 0x09) goto yy678;
+				if(yych != 0x09) goto yy680;
 			} else {
-				if(yych <= ' ') goto yy688;
-				if(yych == '.') goto yy684;
-				goto yy678;
+				if(yych <= ' ') goto yy690;
+				if(yych == '.') goto yy686;
+				goto yy680;
 			}
 		} else {
 			if(yych <= '`') {
-				if(yych <= 'A') goto yy690;
-				if(yych == 'P') goto yy690;
-				goto yy678;
+				if(yych <= 'A') goto yy692;
+				if(yych == 'P') goto yy692;
+				goto yy680;
 			} else {
-				if(yych <= 'a') goto yy690;
-				if(yych == 'p') goto yy690;
-				goto yy678;
+				if(yych <= 'a') goto yy692;
+				if(yych == 'p') goto yy692;
+				goto yy680;
 			}
 		}
-yy688:
-		YYDEBUG(688, *YYCURSOR);
+yy690:
+		YYDEBUG(690, *YYCURSOR);
 		++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
 		yych = *YYCURSOR;
-		YYDEBUG(689, *YYCURSOR);
+		YYDEBUG(691, *YYCURSOR);
 		if(yych <= 'A') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy688;
+				if(yych == 0x09) goto yy690;
 				goto yy53;
 			} else {
-				if(yych <= ' ') goto yy688;
+				if(yych <= ' ') goto yy690;
 				if(yych <= '@') goto yy53;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych != 'P') goto yy53;
 			} else {
-				if(yych <= 'a') goto yy690;
+				if(yych <= 'a') goto yy692;
 				if(yych != 'p') goto yy53;
 			}
 		}
-yy690:
-		YYDEBUG(690, *YYCURSOR);
+yy692:
+		YYDEBUG(692, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'L') {
 			if(yych != '.') goto yy53;
 		} else {
-			if(yych <= 'M') goto yy692;
-			if(yych == 'm') goto yy692;
+			if(yych <= 'M') goto yy694;
+			if(yych == 'm') goto yy694;
 			goto yy53;
 		}
-		YYDEBUG(691, *YYCURSOR);
+		YYDEBUG(693, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'M') goto yy692;
+		if(yych == 'M') goto yy694;
 		if(yych != 'm') goto yy53;
-yy692:
-		YYDEBUG(692, *YYCURSOR);
+yy694:
+		YYDEBUG(694, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 0x1F) {
-			if(yych <= 0x00) goto yy675;
-			if(yych == 0x09) goto yy675;
+			if(yych <= 0x00) goto yy677;
+			if(yych == 0x09) goto yy677;
 			goto yy53;
 		} else {
-			if(yych <= ' ') goto yy675;
+			if(yych <= ' ') goto yy677;
 			if(yych != '.') goto yy53;
 		}
-		YYDEBUG(693, *YYCURSOR);
+		YYDEBUG(695, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 0x09) {
-			if(yych <= 0x00) goto yy675;
+			if(yych <= 0x00) goto yy677;
 			if(yych <= 0x08) goto yy53;
-			goto yy675;
+			goto yy677;
 		} else {
-			if(yych == ' ') goto yy675;
+			if(yych == ' ') goto yy677;
 			goto yy53;
 		}
-yy694:
-		YYDEBUG(694, *YYCURSOR);
+yy696:
+		YYDEBUG(696, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ':') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy695;
-				if(yych <= 0x1F) goto yy678;
+				if(yych == 0x09) goto yy697;
+				if(yych <= 0x1F) goto yy680;
 			} else {
-				if(yych == '.') goto yy680;
-				if(yych <= '9') goto yy678;
-				goto yy680;
+				if(yych == '.') goto yy682;
+				if(yych <= '9') goto yy680;
+				goto yy682;
 			}
 		} else {
 			if(yych <= 'P') {
-				if(yych == 'A') goto yy697;
-				if(yych <= 'O') goto yy678;
-				goto yy697;
+				if(yych == 'A') goto yy699;
+				if(yych <= 'O') goto yy680;
+				goto yy699;
 			} else {
 				if(yych <= 'a') {
-					if(yych <= '`') goto yy678;
-					goto yy697;
+					if(yych <= '`') goto yy680;
+					goto yy699;
 				} else {
-					if(yych == 'p') goto yy697;
-					goto yy678;
+					if(yych == 'p') goto yy699;
+					goto yy680;
 				}
 			}
 		}
-yy695:
-		YYDEBUG(695, *YYCURSOR);
+yy697:
+		YYDEBUG(697, *YYCURSOR);
 		++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
 		yych = *YYCURSOR;
-		YYDEBUG(696, *YYCURSOR);
+		YYDEBUG(698, *YYCURSOR);
 		if(yych <= 'A') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy695;
+				if(yych == 0x09) goto yy697;
 				goto yy53;
 			} else {
-				if(yych <= ' ') goto yy695;
+				if(yych <= ' ') goto yy697;
 				if(yych <= '@') goto yy53;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych != 'P') goto yy53;
 			} else {
-				if(yych <= 'a') goto yy697;
+				if(yych <= 'a') goto yy699;
 				if(yych != 'p') goto yy53;
 			}
 		}
-yy697:
-		YYDEBUG(697, *YYCURSOR);
+yy699:
+		YYDEBUG(699, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'L') {
 			if(yych != '.') goto yy53;
 		} else {
-			if(yych <= 'M') goto yy699;
-			if(yych == 'm') goto yy699;
+			if(yych <= 'M') goto yy701;
+			if(yych == 'm') goto yy701;
 			goto yy53;
 		}
-		YYDEBUG(698, *YYCURSOR);
+		YYDEBUG(700, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'M') goto yy699;
+		if(yych == 'M') goto yy701;
 		if(yych != 'm') goto yy53;
-yy699:
-		YYDEBUG(699, *YYCURSOR);
+yy701:
+		YYDEBUG(701, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 0x1F) {
-			if(yych <= 0x00) goto yy675;
-			if(yych == 0x09) goto yy675;
+			if(yych <= 0x00) goto yy677;
+			if(yych == 0x09) goto yy677;
 			goto yy53;
 		} else {
-			if(yych <= ' ') goto yy675;
+			if(yych <= ' ') goto yy677;
 			if(yych != '.') goto yy53;
 		}
-		YYDEBUG(700, *YYCURSOR);
+		YYDEBUG(702, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 0x09) {
-			if(yych <= 0x00) goto yy675;
+			if(yych <= 0x00) goto yy677;
 			if(yych <= 0x08) goto yy53;
-			goto yy675;
+			goto yy677;
 		} else {
-			if(yych == ' ') goto yy675;
+			if(yych == ' ') goto yy677;
 			goto yy53;
 		}
-yy701:
-		YYDEBUG(701, *YYCURSOR);
+yy703:
+		YYDEBUG(703, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'V') goto yy702;
+		if(yych == 'V') goto yy704;
 		if(yych != 'v') goto yy53;
-yy702:
-		YYDEBUG(702, *YYCURSOR);
+yy704:
+		YYDEBUG(704, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych != 0x09) goto yy663;
+				if(yych != 0x09) goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
 			}
 		} else {
 			if(yych <= 'D') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'E') goto yy707;
-				if(yych == 'e') goto yy707;
-				goto yy663;
+				if(yych <= 'E') goto yy709;
+				if(yych == 'e') goto yy709;
+				goto yy665;
 			}
 		}
-yy703:
-		YYDEBUG(703, *YYCURSOR);
+yy705:
+		YYDEBUG(705, *YYCURSOR);
 		++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 4) YYFILL(4);
 		yych = *YYCURSOR;
-yy704:
-		YYDEBUG(704, *YYCURSOR);
+yy706:
+		YYDEBUG(706, *YYCURSOR);
 		if(yych <= ' ') {
-			if(yych == 0x09) goto yy703;
+			if(yych == 0x09) goto yy705;
 			if(yych <= 0x1F) goto yy53;
-			goto yy703;
+			goto yy705;
 		} else {
 			if(yych <= '.') {
 				if(yych <= ',') goto yy53;
-				goto yy703;
+				goto yy705;
 			} else {
 				if(yych <= '/') goto yy53;
 				if(yych >= ':') goto yy53;
 			}
 		}
-yy705:
-		YYDEBUG(705, *YYCURSOR);
+yy707:
+		YYDEBUG(707, *YYCURSOR);
 		++YYCURSOR;
-		if((yych = *YYCURSOR) <= '/') goto yy706;
-		if(yych <= '9') goto yy712;
-yy706:
-		YYDEBUG(706, *YYCURSOR);
-#line 1127 "ext/date/lib/parse_date.re"
+		if((yych = *YYCURSOR) <= '/') goto yy708;
+		if(yych <= '9') goto yy714;
+yy708:
+		YYDEBUG(708, *YYCURSOR);
+#line 1129 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("datefull");
 		TIMELIB_INIT;
@@ -12865,762 +12897,762 @@ yy706:
 		TIMELIB_DEINIT;
 		return TIMELIB_DATE_FULL;
 	}
-#line 12869 "ext/date/lib/parse_date.c"
-yy707:
-		YYDEBUG(707, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'M') goto yy708;
-		if(yych != 'm') goto yy53;
-yy708:
-		YYDEBUG(708, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'B') goto yy709;
-		if(yych != 'b') goto yy53;
+#line 12901 "ext/date/lib/parse_date.c"
 yy709:
 		YYDEBUG(709, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy710;
-		if(yych != 'e') goto yy53;
+		if(yych == 'M') goto yy710;
+		if(yych != 'm') goto yy53;
 yy710:
 		YYDEBUG(710, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy711;
-		if(yych != 'r') goto yy53;
+		if(yych == 'B') goto yy711;
+		if(yych != 'b') goto yy53;
 yy711:
 		YYDEBUG(711, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'E') goto yy712;
+		if(yych != 'e') goto yy53;
+yy712:
+		YYDEBUG(712, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'R') goto yy713;
+		if(yych != 'r') goto yy53;
+yy713:
+		YYDEBUG(713, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ' ') {
-			if(yych == 0x09) goto yy703;
-			if(yych <= 0x1F) goto yy663;
-			goto yy703;
+			if(yych == 0x09) goto yy705;
+			if(yych <= 0x1F) goto yy665;
+			goto yy705;
 		} else {
 			if(yych <= '.') {
-				if(yych <= ',') goto yy663;
-				goto yy703;
+				if(yych <= ',') goto yy665;
+				goto yy705;
 			} else {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			}
 		}
-yy712:
-		YYDEBUG(712, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy706;
-		if(yych >= ':') goto yy706;
-yy713:
-		YYDEBUG(713, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy706;
-		if(yych >= ':') goto yy706;
+yy714:
 		YYDEBUG(714, *YYCURSOR);
 		yych = *++YYCURSOR;
-		goto yy706;
+		if(yych <= '/') goto yy708;
+		if(yych >= ':') goto yy708;
 yy715:
 		YYDEBUG(715, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'T') goto yy716;
-		if(yych != 't') goto yy53;
-yy716:
+		if(yych <= '/') goto yy708;
+		if(yych >= ':') goto yy708;
 		YYDEBUG(716, *YYCURSOR);
+		yych = *++YYCURSOR;
+		goto yy708;
+yy717:
+		YYDEBUG(717, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'T') goto yy718;
+		if(yych != 't') goto yy53;
+yy718:
+		YYDEBUG(718, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'N') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'O') goto yy717;
-				if(yych != 'o') goto yy663;
+				if(yych <= 'O') goto yy719;
+				if(yych != 'o') goto yy665;
 			}
 		}
-yy717:
-		YYDEBUG(717, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'B') goto yy718;
-		if(yych != 'b') goto yy53;
-yy718:
-		YYDEBUG(718, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy719;
-		if(yych != 'e') goto yy53;
 yy719:
 		YYDEBUG(719, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy711;
-		if(yych == 'r') goto yy711;
-		goto yy53;
+		if(yych == 'B') goto yy720;
+		if(yych != 'b') goto yy53;
 yy720:
 		YYDEBUG(720, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'G') goto yy724;
-		if(yych == 'g') goto yy724;
-		goto yy53;
+		if(yych == 'E') goto yy721;
+		if(yych != 'e') goto yy53;
 yy721:
 		YYDEBUG(721, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy722;
-		if(yych != 'r') goto yy53;
+		if(yych == 'R') goto yy713;
+		if(yych == 'r') goto yy713;
+		goto yy53;
 yy722:
 		YYDEBUG(722, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'G') goto yy726;
+		if(yych == 'g') goto yy726;
+		goto yy53;
+yy723:
+		YYDEBUG(723, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'R') goto yy724;
+		if(yych != 'r') goto yy53;
+yy724:
+		YYDEBUG(724, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'H') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'I') goto yy723;
-				if(yych != 'i') goto yy663;
+				if(yych <= 'I') goto yy725;
+				if(yych != 'i') goto yy665;
 			}
 		}
-yy723:
-		YYDEBUG(723, *YYCURSOR);
+yy725:
+		YYDEBUG(725, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'L') goto yy711;
-		if(yych == 'l') goto yy711;
+		if(yych == 'L') goto yy713;
+		if(yych == 'l') goto yy713;
 		goto yy53;
-yy724:
-		YYDEBUG(724, *YYCURSOR);
+yy726:
+		YYDEBUG(726, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'T') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'U') goto yy725;
-				if(yych != 'u') goto yy663;
+				if(yych <= 'U') goto yy727;
+				if(yych != 'u') goto yy665;
 			}
 		}
-yy725:
-		YYDEBUG(725, *YYCURSOR);
+yy727:
+		YYDEBUG(727, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'S') goto yy726;
+		if(yych == 'S') goto yy728;
 		if(yych != 's') goto yy53;
-yy726:
-		YYDEBUG(726, *YYCURSOR);
+yy728:
+		YYDEBUG(728, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'T') goto yy711;
-		if(yych == 't') goto yy711;
+		if(yych == 'T') goto yy713;
+		if(yych == 't') goto yy713;
 		goto yy53;
-yy727:
-		YYDEBUG(727, *YYCURSOR);
+yy729:
+		YYDEBUG(729, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'N') {
-			if(yych == 'L') goto yy734;
+			if(yych == 'L') goto yy736;
 			if(yych <= 'M') goto yy53;
-			goto yy733;
+			goto yy735;
 		} else {
 			if(yych <= 'l') {
 				if(yych <= 'k') goto yy53;
-				goto yy734;
+				goto yy736;
 			} else {
-				if(yych == 'n') goto yy733;
+				if(yych == 'n') goto yy735;
 				goto yy53;
 			}
 		}
-yy728:
-		YYDEBUG(728, *YYCURSOR);
+yy730:
+		YYDEBUG(730, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'N') goto yy729;
+		if(yych == 'N') goto yy731;
 		if(yych != 'n') goto yy53;
-yy729:
-		YYDEBUG(729, *YYCURSOR);
+yy731:
+		YYDEBUG(731, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'T') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'U') goto yy730;
-				if(yych != 'u') goto yy663;
+				if(yych <= 'U') goto yy732;
+				if(yych != 'u') goto yy665;
 			}
 		}
-yy730:
-		YYDEBUG(730, *YYCURSOR);
+yy732:
+		YYDEBUG(732, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy731;
+		if(yych == 'A') goto yy733;
 		if(yych != 'a') goto yy53;
-yy731:
-		YYDEBUG(731, *YYCURSOR);
+yy733:
+		YYDEBUG(733, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy732;
+		if(yych == 'R') goto yy734;
 		if(yych != 'r') goto yy53;
-yy732:
-		YYDEBUG(732, *YYCURSOR);
+yy734:
+		YYDEBUG(734, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy711;
-		if(yych == 'y') goto yy711;
+		if(yych == 'Y') goto yy713;
+		if(yych == 'y') goto yy713;
 		goto yy53;
-yy733:
-		YYDEBUG(733, *YYCURSOR);
+yy735:
+		YYDEBUG(735, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'D') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'E') goto yy711;
-				if(yych == 'e') goto yy711;
-				goto yy663;
+				if(yych <= 'E') goto yy713;
+				if(yych == 'e') goto yy713;
+				goto yy665;
 			}
 		}
-yy734:
-		YYDEBUG(734, *YYCURSOR);
+yy736:
+		YYDEBUG(736, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'X') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'Y') goto yy711;
-				if(yych == 'y') goto yy711;
-				goto yy663;
+				if(yych <= 'Y') goto yy713;
+				if(yych == 'y') goto yy713;
+				goto yy665;
 			}
 		}
-yy735:
-		YYDEBUG(735, *YYCURSOR);
+yy737:
+		YYDEBUG(737, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= 0x09) {
-				if(yych <= 0x08) goto yy663;
-				goto yy703;
+				if(yych <= 0x08) goto yy665;
+				goto yy705;
 			} else {
-				if(yych == ' ') goto yy703;
-				goto yy663;
+				if(yych == ' ') goto yy705;
+				goto yy665;
 			}
 		} else {
 			if(yych <= '9') {
-				if(yych <= '.') goto yy703;
-				if(yych <= '/') goto yy663;
-				goto yy705;
+				if(yych <= '.') goto yy705;
+				if(yych <= '/') goto yy665;
+				goto yy707;
 			} else {
-				if(yych == 'I') goto yy711;
-				goto yy663;
+				if(yych == 'I') goto yy713;
+				goto yy665;
 			}
 		}
-yy736:
-		YYDEBUG(736, *YYCURSOR);
+yy738:
+		YYDEBUG(738, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= 0x09) {
-				if(yych <= 0x08) goto yy663;
-				goto yy703;
+				if(yych <= 0x08) goto yy665;
+				goto yy705;
 			} else {
-				if(yych == ' ') goto yy703;
-				goto yy663;
+				if(yych == ' ') goto yy705;
+				goto yy665;
 			}
 		} else {
 			if(yych <= '9') {
-				if(yych <= '.') goto yy703;
-				if(yych <= '/') goto yy663;
-				goto yy705;
+				if(yych <= '.') goto yy705;
+				if(yych <= '/') goto yy665;
+				goto yy707;
 			} else {
-				if(yych != 'I') goto yy663;
+				if(yych != 'I') goto yy665;
 			}
 		}
-		YYDEBUG(737, *YYCURSOR);
+		YYDEBUG(739, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= 0x09) {
-				if(yych <= 0x08) goto yy663;
-				goto yy703;
+				if(yych <= 0x08) goto yy665;
+				goto yy705;
 			} else {
-				if(yych == ' ') goto yy703;
-				goto yy663;
+				if(yych == ' ') goto yy705;
+				goto yy665;
 			}
 		} else {
 			if(yych <= '9') {
-				if(yych <= '.') goto yy703;
-				if(yych <= '/') goto yy663;
-				goto yy705;
+				if(yych <= '.') goto yy705;
+				if(yych <= '/') goto yy665;
+				goto yy707;
 			} else {
-				if(yych == 'I') goto yy711;
-				goto yy663;
+				if(yych == 'I') goto yy713;
+				goto yy665;
 			}
 		}
-yy738:
-		YYDEBUG(738, *YYCURSOR);
+yy740:
+		YYDEBUG(740, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= 0x09) {
-				if(yych <= 0x08) goto yy663;
-				goto yy703;
+				if(yych <= 0x08) goto yy665;
+				goto yy705;
 			} else {
-				if(yych == ' ') goto yy703;
-				goto yy663;
+				if(yych == ' ') goto yy705;
+				goto yy665;
 			}
 		} else {
 			if(yych <= '9') {
-				if(yych <= '.') goto yy703;
-				if(yych <= '/') goto yy663;
-				goto yy705;
+				if(yych <= '.') goto yy705;
+				if(yych <= '/') goto yy665;
+				goto yy707;
 			} else {
-				if(yych == 'I') goto yy711;
-				goto yy663;
+				if(yych == 'I') goto yy713;
+				goto yy665;
 			}
 		}
-yy739:
-		YYDEBUG(739, *YYCURSOR);
+yy741:
+		YYDEBUG(741, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
-			if(yych <= ',') goto yy678;
-			if(yych <= '-') goto yy772;
-			goto yy773;
+			if(yych <= ',') goto yy680;
+			if(yych <= '-') goto yy774;
+			goto yy775;
 		} else {
-			if(yych <= '/') goto yy678;
-			if(yych <= '9') goto yy783;
-			if(yych <= ':') goto yy680;
-			goto yy678;
+			if(yych <= '/') goto yy680;
+			if(yych <= '9') goto yy785;
+			if(yych <= ':') goto yy682;
+			goto yy680;
 		}
-yy740:
-		YYDEBUG(740, *YYCURSOR);
+yy742:
+		YYDEBUG(742, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych <= ',') goto yy678;
-			if(yych <= '-') goto yy772;
-			if(yych <= '.') goto yy773;
-			goto yy678;
+			if(yych <= ',') goto yy680;
+			if(yych <= '-') goto yy774;
+			if(yych <= '.') goto yy775;
+			goto yy680;
 		} else {
-			if(yych <= '2') goto yy783;
-			if(yych <= '9') goto yy694;
-			if(yych <= ':') goto yy680;
-			goto yy678;
+			if(yych <= '2') goto yy785;
+			if(yych <= '9') goto yy696;
+			if(yych <= ':') goto yy682;
+			goto yy680;
 		}
-yy741:
-		YYDEBUG(741, *YYCURSOR);
+yy743:
+		YYDEBUG(743, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
-			if(yych <= ',') goto yy678;
-			if(yych <= '-') goto yy772;
-			goto yy773;
+			if(yych <= ',') goto yy680;
+			if(yych <= '-') goto yy774;
+			goto yy775;
 		} else {
-			if(yych <= '/') goto yy678;
-			if(yych <= '9') goto yy694;
-			if(yych <= ':') goto yy680;
-			goto yy678;
+			if(yych <= '/') goto yy680;
+			if(yych <= '9') goto yy696;
+			if(yych <= ':') goto yy682;
+			goto yy680;
 		}
-yy742:
-		YYDEBUG(742, *YYCURSOR);
+yy744:
+		YYDEBUG(744, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
-			if(yych <= ',') goto yy678;
-			if(yych <= '-') goto yy772;
-			goto yy773;
+			if(yych <= ',') goto yy680;
+			if(yych <= '-') goto yy774;
+			goto yy775;
 		} else {
-			if(yych == ':') goto yy680;
-			goto yy678;
+			if(yych == ':') goto yy682;
+			goto yy680;
 		}
-yy743:
-		YYDEBUG(743, *YYCURSOR);
+yy745:
+		YYDEBUG(745, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy766;
-		if(yych == 'e') goto yy766;
+		if(yych == 'E') goto yy768;
+		if(yych == 'e') goto yy768;
 		goto yy53;
-yy744:
-		YYDEBUG(744, *YYCURSOR);
+yy746:
+		YYDEBUG(746, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy763;
-		if(yych == 'a') goto yy763;
+		if(yych == 'A') goto yy765;
+		if(yych == 'a') goto yy765;
 		goto yy53;
-yy745:
-		YYDEBUG(745, *YYCURSOR);
+yy747:
+		YYDEBUG(747, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
-			if(yych == 'P') goto yy721;
+			if(yych == 'P') goto yy723;
 			if(yych <= 'T') goto yy53;
-			goto yy720;
+			goto yy722;
 		} else {
 			if(yych <= 'p') {
 				if(yych <= 'o') goto yy53;
-				goto yy721;
+				goto yy723;
 			} else {
-				if(yych == 'u') goto yy720;
+				if(yych == 'u') goto yy722;
 				goto yy53;
 			}
 		}
-yy746:
-		YYDEBUG(746, *YYCURSOR);
+yy748:
+		YYDEBUG(748, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy756;
-		if(yych == 'e') goto yy756;
+		if(yych == 'E') goto yy758;
+		if(yych == 'e') goto yy758;
 		goto yy53;
-yy747:
-		YYDEBUG(747, *YYCURSOR);
+yy749:
+		YYDEBUG(749, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy750;
-		if(yych == 'e') goto yy750;
+		if(yych == 'E') goto yy752;
+		if(yych == 'e') goto yy752;
 		goto yy53;
-yy748:
-		YYDEBUG(748, *YYCURSOR);
+yy750:
+		YYDEBUG(750, *YYCURSOR);
 		++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 13) YYFILL(13);
 		yych = *YYCURSOR;
-yy749:
-		YYDEBUG(749, *YYCURSOR);
+yy751:
+		YYDEBUG(751, *YYCURSOR);
 		YYDEBUG(-1, yych);
 		switch(yych) {
 		case 0x09:
 		case ' ':
 		case '-':
-		case '.':	goto yy748;
+		case '.':	goto yy750;
 		case 'A':
-		case 'a':	goto yy745;
+		case 'a':	goto yy747;
 		case 'D':
-		case 'd':	goto yy747;
+		case 'd':	goto yy749;
 		case 'F':
-		case 'f':	goto yy743;
-		case 'I':	goto yy662;
+		case 'f':	goto yy745;
+		case 'I':	goto yy664;
 		case 'J':
-		case 'j':	goto yy666;
+		case 'j':	goto yy668;
 		case 'M':
-		case 'm':	goto yy744;
+		case 'm':	goto yy746;
 		case 'N':
-		case 'n':	goto yy669;
+		case 'n':	goto yy671;
 		case 'O':
-		case 'o':	goto yy668;
+		case 'o':	goto yy670;
 		case 'S':
-		case 's':	goto yy746;
-		case 'V':	goto yy664;
-		case 'X':	goto yy665;
+		case 's':	goto yy748;
+		case 'V':	goto yy666;
+		case 'X':	goto yy667;
 		default:	goto yy53;
 		}
-yy750:
-		YYDEBUG(750, *YYCURSOR);
+yy752:
+		YYDEBUG(752, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'C') goto yy751;
+		if(yych == 'C') goto yy753;
 		if(yych != 'c') goto yy53;
-yy751:
-		YYDEBUG(751, *YYCURSOR);
+yy753:
+		YYDEBUG(753, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'D') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'E') goto yy752;
-				if(yych != 'e') goto yy663;
+				if(yych <= 'E') goto yy754;
+				if(yych != 'e') goto yy665;
 			}
 		}
-yy752:
-		YYDEBUG(752, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'M') goto yy753;
-		if(yych != 'm') goto yy53;
-yy753:
-		YYDEBUG(753, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'B') goto yy754;
-		if(yych != 'b') goto yy53;
 yy754:
 		YYDEBUG(754, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy755;
-		if(yych != 'e') goto yy53;
+		if(yych == 'M') goto yy755;
+		if(yych != 'm') goto yy53;
 yy755:
 		YYDEBUG(755, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy711;
-		if(yych == 'r') goto yy711;
-		goto yy53;
+		if(yych == 'B') goto yy756;
+		if(yych != 'b') goto yy53;
 yy756:
 		YYDEBUG(756, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'P') goto yy757;
-		if(yych != 'p') goto yy53;
+		if(yych == 'E') goto yy757;
+		if(yych != 'e') goto yy53;
 yy757:
 		YYDEBUG(757, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'R') goto yy713;
+		if(yych == 'r') goto yy713;
+		goto yy53;
+yy758:
+		YYDEBUG(758, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'P') goto yy759;
+		if(yych != 'p') goto yy53;
+yy759:
+		YYDEBUG(759, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'S') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'T') goto yy758;
-				if(yych != 't') goto yy663;
+				if(yych <= 'T') goto yy760;
+				if(yych != 't') goto yy665;
 			}
 		}
-yy758:
-		YYDEBUG(758, *YYCURSOR);
+yy760:
+		YYDEBUG(760, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'D') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'E') goto yy759;
-				if(yych != 'e') goto yy663;
+				if(yych <= 'E') goto yy761;
+				if(yych != 'e') goto yy665;
 			}
 		}
-yy759:
-		YYDEBUG(759, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'M') goto yy760;
-		if(yych != 'm') goto yy53;
-yy760:
-		YYDEBUG(760, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'B') goto yy761;
-		if(yych != 'b') goto yy53;
 yy761:
 		YYDEBUG(761, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy762;
-		if(yych != 'e') goto yy53;
+		if(yych == 'M') goto yy762;
+		if(yych != 'm') goto yy53;
 yy762:
 		YYDEBUG(762, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy711;
-		if(yych == 'r') goto yy711;
-		goto yy53;
+		if(yych == 'B') goto yy763;
+		if(yych != 'b') goto yy53;
 yy763:
 		YYDEBUG(763, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if(yych == 'E') goto yy764;
+		if(yych != 'e') goto yy53;
+yy764:
+		YYDEBUG(764, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'R') goto yy713;
+		if(yych == 'r') goto yy713;
+		goto yy53;
+yy765:
+		YYDEBUG(765, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if(yych <= 'Y') {
-			if(yych == 'R') goto yy764;
+			if(yych == 'R') goto yy766;
 			if(yych <= 'X') goto yy53;
-			goto yy711;
+			goto yy713;
 		} else {
 			if(yych <= 'r') {
 				if(yych <= 'q') goto yy53;
 			} else {
-				if(yych == 'y') goto yy711;
+				if(yych == 'y') goto yy713;
 				goto yy53;
 			}
 		}
-yy764:
-		YYDEBUG(764, *YYCURSOR);
+yy766:
+		YYDEBUG(766, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'B') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'C') goto yy765;
-				if(yych != 'c') goto yy663;
+				if(yych <= 'C') goto yy767;
+				if(yych != 'c') goto yy665;
 			}
 		}
-yy765:
-		YYDEBUG(765, *YYCURSOR);
+yy767:
+		YYDEBUG(767, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'H') goto yy711;
-		if(yych == 'h') goto yy711;
+		if(yych == 'H') goto yy713;
+		if(yych == 'h') goto yy713;
 		goto yy53;
-yy766:
-		YYDEBUG(766, *YYCURSOR);
+yy768:
+		YYDEBUG(768, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'B') goto yy767;
+		if(yych == 'B') goto yy769;
 		if(yych != 'b') goto yy53;
-yy767:
-		YYDEBUG(767, *YYCURSOR);
+yy769:
+		YYDEBUG(769, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'Q') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'R') goto yy768;
-				if(yych != 'r') goto yy663;
+				if(yych <= 'R') goto yy770;
+				if(yych != 'r') goto yy665;
 			}
 		}
-yy768:
-		YYDEBUG(768, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'U') goto yy769;
-		if(yych != 'u') goto yy53;
-yy769:
-		YYDEBUG(769, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy770;
-		if(yych != 'a') goto yy53;
 yy770:
 		YYDEBUG(770, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy771;
-		if(yych != 'r') goto yy53;
+		if(yych == 'U') goto yy771;
+		if(yych != 'u') goto yy53;
 yy771:
 		YYDEBUG(771, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy711;
-		if(yych == 'y') goto yy711;
-		goto yy53;
+		if(yych == 'A') goto yy772;
+		if(yych != 'a') goto yy53;
 yy772:
 		YYDEBUG(772, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy782;
-		goto yy53;
+		if(yych == 'R') goto yy773;
+		if(yych != 'r') goto yy53;
 yy773:
 		YYDEBUG(773, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy774;
-		if(yych <= '6') goto yy775;
-		if(yych <= '9') goto yy776;
+		if(yych == 'Y') goto yy713;
+		if(yych == 'y') goto yy713;
 		goto yy53;
 yy774:
 		YYDEBUG(774, *YYCURSOR);
-		yyaccept = 12;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '.') goto yy684;
-		if(yych <= '/') goto yy678;
-		if(yych <= '9') goto yy781;
-		goto yy678;
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy53;
+		if(yych <= '9') goto yy784;
+		goto yy53;
 yy775:
 		YYDEBUG(775, *YYCURSOR);
-		yyaccept = 12;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= '/') {
-			if(yych == '.') goto yy684;
-			goto yy678;
-		} else {
-			if(yych <= '0') goto yy781;
-			if(yych <= '9') goto yy777;
-			goto yy678;
-		}
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy776;
+		if(yych <= '6') goto yy777;
+		if(yych <= '9') goto yy778;
+		goto yy53;
 yy776:
 		YYDEBUG(776, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '.') goto yy684;
-		if(yych <= '/') goto yy678;
-		if(yych >= ':') goto yy678;
+		if(yych == '.') goto yy686;
+		if(yych <= '/') goto yy680;
+		if(yych <= '9') goto yy783;
+		goto yy680;
 yy777:
 		YYDEBUG(777, *YYCURSOR);
-		++YYCURSOR;
-		if((yych = *YYCURSOR) <= '/') goto yy778;
-		if(yych <= '9') goto yy779;
+		yyaccept = 12;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych <= '/') {
+			if(yych == '.') goto yy686;
+			goto yy680;
+		} else {
+			if(yych <= '0') goto yy783;
+			if(yych <= '9') goto yy779;
+			goto yy680;
+		}
 yy778:
 		YYDEBUG(778, *YYCURSOR);
-#line 1141 "ext/date/lib/parse_date.re"
+		yyaccept = 12;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == '.') goto yy686;
+		if(yych <= '/') goto yy680;
+		if(yych >= ':') goto yy680;
+yy779:
+		YYDEBUG(779, *YYCURSOR);
+		++YYCURSOR;
+		if((yych = *YYCURSOR) <= '/') goto yy780;
+		if(yych <= '9') goto yy781;
+yy780:
+		YYDEBUG(780, *YYCURSOR);
+#line 1143 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("pointed date");
 		TIMELIB_INIT;
@@ -13632,634 +13664,634 @@ yy778:
 		TIMELIB_DEINIT;
 		return TIMELIB_DATE_FULL_POINTED;
 	}
-#line 13636 "ext/date/lib/parse_date.c"
-yy779:
-		YYDEBUG(779, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy778;
-		if(yych >= ':') goto yy778;
-		YYDEBUG(780, *YYCURSOR);
-		yych = *++YYCURSOR;
-		goto yy778;
+#line 13668 "ext/date/lib/parse_date.c"
 yy781:
 		YYDEBUG(781, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy780;
+		if(yych >= ':') goto yy780;
+		YYDEBUG(782, *YYCURSOR);
+		yych = *++YYCURSOR;
+		goto yy780;
+yy783:
+		YYDEBUG(783, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy688;
-				if(yych <= 0x1F) goto yy678;
-				goto yy688;
+				if(yych == 0x09) goto yy690;
+				if(yych <= 0x1F) goto yy680;
+				goto yy690;
 			} else {
-				if(yych == '.') goto yy684;
-				if(yych <= '/') goto yy678;
-				goto yy779;
+				if(yych == '.') goto yy686;
+				if(yych <= '/') goto yy680;
+				goto yy781;
 			}
 		} else {
 			if(yych <= 'P') {
-				if(yych == 'A') goto yy690;
-				if(yych <= 'O') goto yy678;
-				goto yy690;
+				if(yych == 'A') goto yy692;
+				if(yych <= 'O') goto yy680;
+				goto yy692;
 			} else {
 				if(yych <= 'a') {
-					if(yych <= '`') goto yy678;
-					goto yy690;
+					if(yych <= '`') goto yy680;
+					goto yy692;
 				} else {
-					if(yych == 'p') goto yy690;
-					goto yy678;
+					if(yych == 'p') goto yy692;
+					goto yy680;
 				}
 			}
 		}
-yy782:
-		YYDEBUG(782, *YYCURSOR);
+yy784:
+		YYDEBUG(784, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy778;
-		if(yych <= '9') goto yy777;
-		goto yy778;
-yy783:
-		YYDEBUG(783, *YYCURSOR);
+		if(yych <= '/') goto yy780;
+		if(yych <= '9') goto yy779;
+		goto yy780;
+yy785:
+		YYDEBUG(785, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ':') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy695;
-				if(yych <= 0x1F) goto yy678;
-				goto yy695;
+				if(yych == 0x09) goto yy697;
+				if(yych <= 0x1F) goto yy680;
+				goto yy697;
 			} else {
 				if(yych <= '-') {
-					if(yych <= ',') goto yy678;
-					goto yy772;
+					if(yych <= ',') goto yy680;
+					goto yy774;
 				} else {
-					if(yych <= '.') goto yy773;
-					if(yych <= '9') goto yy678;
-					goto yy680;
+					if(yych <= '.') goto yy775;
+					if(yych <= '9') goto yy680;
+					goto yy682;
 				}
 			}
 		} else {
 			if(yych <= 'P') {
-				if(yych == 'A') goto yy697;
-				if(yych <= 'O') goto yy678;
-				goto yy697;
+				if(yych == 'A') goto yy699;
+				if(yych <= 'O') goto yy680;
+				goto yy699;
 			} else {
 				if(yych <= 'a') {
-					if(yych <= '`') goto yy678;
-					goto yy697;
+					if(yych <= '`') goto yy680;
+					goto yy699;
 				} else {
-					if(yych == 'p') goto yy697;
-					goto yy678;
+					if(yych == 'p') goto yy699;
+					goto yy680;
 				}
 			}
 		}
-yy784:
-		YYDEBUG(784, *YYCURSOR);
+yy786:
+		YYDEBUG(786, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '.') {
 			if(yych <= ',') goto yy53;
-			if(yych <= '-') goto yy823;
-			goto yy772;
+			if(yych <= '-') goto yy825;
+			goto yy774;
 		} else {
 			if(yych <= '/') goto yy53;
-			if(yych <= '9') goto yy786;
+			if(yych <= '9') goto yy788;
 			goto yy53;
 		}
-yy785:
-		YYDEBUG(785, *YYCURSOR);
+yy787:
+		YYDEBUG(787, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '.') {
 			if(yych <= ',') goto yy53;
-			if(yych <= '-') goto yy823;
-			goto yy772;
+			if(yych <= '-') goto yy825;
+			goto yy774;
 		} else {
 			if(yych <= '/') goto yy53;
 			if(yych >= '3') goto yy53;
 		}
-yy786:
-		YYDEBUG(786, *YYCURSOR);
+yy788:
+		YYDEBUG(788, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= ',') goto yy53;
-		if(yych <= '-') goto yy823;
-		if(yych <= '.') goto yy772;
+		if(yych <= '-') goto yy825;
+		if(yych <= '.') goto yy774;
 		goto yy53;
-yy787:
-		YYDEBUG(787, *YYCURSOR);
+yy789:
+		YYDEBUG(789, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
-			if(yych == 'A') goto yy819;
+			if(yych == 'A') goto yy821;
 			if(yych <= 'T') goto yy53;
-			goto yy818;
+			goto yy820;
 		} else {
 			if(yych <= 'a') {
 				if(yych <= '`') goto yy53;
-				goto yy819;
+				goto yy821;
 			} else {
-				if(yych == 'u') goto yy818;
+				if(yych == 'u') goto yy820;
 				goto yy53;
 			}
 		}
-yy788:
-		YYDEBUG(788, *YYCURSOR);
+yy790:
+		YYDEBUG(790, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy816;
-		if(yych == 'e') goto yy816;
+		if(yych == 'E') goto yy818;
+		if(yych == 'e') goto yy818;
 		goto yy53;
-yy789:
-		YYDEBUG(789, *YYCURSOR);
+yy791:
+		YYDEBUG(791, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy813;
-		if(yych == 'a') goto yy813;
+		if(yych == 'A') goto yy815;
+		if(yych == 'a') goto yy815;
 		goto yy53;
-yy790:
-		YYDEBUG(790, *YYCURSOR);
+yy792:
+		YYDEBUG(792, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
-			if(yych == 'P') goto yy810;
+			if(yych == 'P') goto yy812;
 			if(yych <= 'T') goto yy53;
-			goto yy809;
+			goto yy811;
 		} else {
 			if(yych <= 'p') {
 				if(yych <= 'o') goto yy53;
-				goto yy810;
+				goto yy812;
 			} else {
-				if(yych == 'u') goto yy809;
+				if(yych == 'u') goto yy811;
 				goto yy53;
 			}
 		}
-yy791:
-		YYDEBUG(791, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy806;
-		if(yych == 'e') goto yy806;
-		goto yy53;
-yy792:
-		YYDEBUG(792, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'C') goto yy804;
-		if(yych == 'c') goto yy804;
-		goto yy53;
 yy793:
 		YYDEBUG(793, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'O') goto yy802;
-		if(yych == 'o') goto yy802;
+		if(yych == 'E') goto yy808;
+		if(yych == 'e') goto yy808;
 		goto yy53;
 yy794:
 		YYDEBUG(794, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy795;
-		if(yych != 'e') goto yy53;
+		if(yych == 'C') goto yy806;
+		if(yych == 'c') goto yy806;
+		goto yy53;
 yy795:
 		YYDEBUG(795, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'C') goto yy796;
-		if(yych != 'c') goto yy53;
+		if(yych == 'O') goto yy804;
+		if(yych == 'o') goto yy804;
+		goto yy53;
 yy796:
 		YYDEBUG(796, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'E') goto yy797;
+		if(yych != 'e') goto yy53;
+yy797:
+		YYDEBUG(797, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'C') goto yy798;
+		if(yych != 'c') goto yy53;
+yy798:
+		YYDEBUG(798, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				if(yych >= '.') goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				if(yych >= '.') goto yy705;
 			}
 		} else {
 			if(yych <= 'D') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'E') goto yy752;
-				if(yych == 'e') goto yy752;
-				goto yy663;
+				if(yych <= 'E') goto yy754;
+				if(yych == 'e') goto yy754;
+				goto yy665;
 			}
 		}
-yy797:
-		YYDEBUG(797, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy704;
-		if(yych <= '0') goto yy798;
-		if(yych <= '2') goto yy799;
-		if(yych <= '3') goto yy800;
-		goto yy704;
-yy798:
-		YYDEBUG(798, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy706;
-		if(yych <= '0') goto yy712;
-		if(yych <= '9') goto yy801;
-		goto yy706;
 yy799:
 		YYDEBUG(799, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy706;
-		if(yych <= '9') goto yy801;
+		if(yych <= '0') goto yy800;
+		if(yych <= '2') goto yy801;
+		if(yych <= '3') goto yy802;
 		goto yy706;
 yy800:
 		YYDEBUG(800, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy706;
-		if(yych <= '1') goto yy801;
-		if(yych <= '9') goto yy712;
-		goto yy706;
+		if(yych <= '/') goto yy708;
+		if(yych <= '0') goto yy714;
+		if(yych <= '9') goto yy803;
+		goto yy708;
 yy801:
 		YYDEBUG(801, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy706;
-		if(yych <= '9') goto yy713;
-		goto yy706;
+		if(yych <= '/') goto yy708;
+		if(yych <= '9') goto yy803;
+		goto yy708;
 yy802:
 		YYDEBUG(802, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'V') goto yy803;
-		if(yych != 'v') goto yy53;
+		if(yych <= '/') goto yy708;
+		if(yych <= '1') goto yy803;
+		if(yych <= '9') goto yy714;
+		goto yy708;
 yy803:
 		YYDEBUG(803, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy708;
+		if(yych <= '9') goto yy715;
+		goto yy708;
+yy804:
+		YYDEBUG(804, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'V') goto yy805;
+		if(yych != 'v') goto yy53;
+yy805:
+		YYDEBUG(805, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				if(yych <= '-') goto yy797;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				if(yych <= '-') goto yy799;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'D') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'E') goto yy707;
-				if(yych == 'e') goto yy707;
-				goto yy663;
+				if(yych <= 'E') goto yy709;
+				if(yych == 'e') goto yy709;
+				goto yy665;
 			}
 		}
-yy804:
-		YYDEBUG(804, *YYCURSOR);
+yy806:
+		YYDEBUG(806, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'T') goto yy805;
+		if(yych == 'T') goto yy807;
 		if(yych != 't') goto yy53;
-yy805:
-		YYDEBUG(805, *YYCURSOR);
+yy807:
+		YYDEBUG(807, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				if(yych <= '-') goto yy797;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				if(yych <= '-') goto yy799;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'N') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'O') goto yy717;
-				if(yych == 'o') goto yy717;
-				goto yy663;
+				if(yych <= 'O') goto yy719;
+				if(yych == 'o') goto yy719;
+				goto yy665;
 			}
 		}
-yy806:
-		YYDEBUG(806, *YYCURSOR);
+yy808:
+		YYDEBUG(808, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'P') goto yy807;
+		if(yych == 'P') goto yy809;
 		if(yych != 'p') goto yy53;
-yy807:
-		YYDEBUG(807, *YYCURSOR);
+yy809:
+		YYDEBUG(809, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				if(yych <= '-') goto yy797;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				if(yych <= '-') goto yy799;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'S') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'T') goto yy808;
-				if(yych != 't') goto yy663;
+				if(yych <= 'T') goto yy810;
+				if(yych != 't') goto yy665;
 			}
 		}
-yy808:
-		YYDEBUG(808, *YYCURSOR);
+yy810:
+		YYDEBUG(810, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				if(yych <= '-') goto yy797;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				if(yych <= '-') goto yy799;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'D') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'E') goto yy759;
-				if(yych == 'e') goto yy759;
-				goto yy663;
+				if(yych <= 'E') goto yy761;
+				if(yych == 'e') goto yy761;
+				goto yy665;
 			}
 		}
-yy809:
-		YYDEBUG(809, *YYCURSOR);
+yy811:
+		YYDEBUG(811, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'G') goto yy812;
-		if(yych == 'g') goto yy812;
+		if(yych == 'G') goto yy814;
+		if(yych == 'g') goto yy814;
 		goto yy53;
-yy810:
-		YYDEBUG(810, *YYCURSOR);
+yy812:
+		YYDEBUG(812, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy811;
+		if(yych == 'R') goto yy813;
 		if(yych != 'r') goto yy53;
-yy811:
-		YYDEBUG(811, *YYCURSOR);
+yy813:
+		YYDEBUG(813, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				if(yych <= '-') goto yy797;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				if(yych <= '-') goto yy799;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'H') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'I') goto yy723;
-				if(yych == 'i') goto yy723;
-				goto yy663;
+				if(yych <= 'I') goto yy725;
+				if(yych == 'i') goto yy725;
+				goto yy665;
 			}
 		}
-yy812:
-		YYDEBUG(812, *YYCURSOR);
+yy814:
+		YYDEBUG(814, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				if(yych <= '-') goto yy797;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				if(yych <= '-') goto yy799;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'T') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'U') goto yy725;
-				if(yych == 'u') goto yy725;
-				goto yy663;
+				if(yych <= 'U') goto yy727;
+				if(yych == 'u') goto yy727;
+				goto yy665;
 			}
 		}
-yy813:
-		YYDEBUG(813, *YYCURSOR);
+yy815:
+		YYDEBUG(815, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'Y') {
-			if(yych == 'R') goto yy814;
+			if(yych == 'R') goto yy816;
 			if(yych <= 'X') goto yy53;
-			goto yy815;
+			goto yy817;
 		} else {
 			if(yych <= 'r') {
 				if(yych <= 'q') goto yy53;
 			} else {
-				if(yych == 'y') goto yy815;
+				if(yych == 'y') goto yy817;
 				goto yy53;
 			}
 		}
-yy814:
-		YYDEBUG(814, *YYCURSOR);
+yy816:
+		YYDEBUG(816, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				if(yych <= '-') goto yy797;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				if(yych <= '-') goto yy799;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'B') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'C') goto yy765;
-				if(yych == 'c') goto yy765;
-				goto yy663;
+				if(yych <= 'C') goto yy767;
+				if(yych == 'c') goto yy767;
+				goto yy665;
 			}
 		}
-yy815:
-		YYDEBUG(815, *YYCURSOR);
+yy817:
+		YYDEBUG(817, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= ',') {
 			if(yych <= 0x09) {
-				if(yych <= 0x08) goto yy663;
-				goto yy703;
+				if(yych <= 0x08) goto yy665;
+				goto yy705;
 			} else {
-				if(yych == ' ') goto yy703;
-				goto yy663;
+				if(yych == ' ') goto yy705;
+				goto yy665;
 			}
 		} else {
 			if(yych <= '.') {
-				if(yych <= '-') goto yy797;
-				goto yy703;
+				if(yych <= '-') goto yy799;
+				goto yy705;
 			} else {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			}
 		}
-yy816:
-		YYDEBUG(816, *YYCURSOR);
+yy818:
+		YYDEBUG(818, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'B') goto yy817;
+		if(yych == 'B') goto yy819;
 		if(yych != 'b') goto yy53;
-yy817:
-		YYDEBUG(817, *YYCURSOR);
+yy819:
+		YYDEBUG(819, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				if(yych <= '-') goto yy797;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				if(yych <= '-') goto yy799;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'Q') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'R') goto yy768;
-				if(yych == 'r') goto yy768;
-				goto yy663;
+				if(yych <= 'R') goto yy770;
+				if(yych == 'r') goto yy770;
+				goto yy665;
 			}
 		}
-yy818:
-		YYDEBUG(818, *YYCURSOR);
+yy820:
+		YYDEBUG(820, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'N') {
-			if(yych == 'L') goto yy822;
+			if(yych == 'L') goto yy824;
 			if(yych <= 'M') goto yy53;
-			goto yy821;
+			goto yy823;
 		} else {
 			if(yych <= 'l') {
 				if(yych <= 'k') goto yy53;
-				goto yy822;
+				goto yy824;
 			} else {
-				if(yych == 'n') goto yy821;
+				if(yych == 'n') goto yy823;
 				goto yy53;
 			}
 		}
-yy819:
-		YYDEBUG(819, *YYCURSOR);
+yy821:
+		YYDEBUG(821, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'N') goto yy820;
+		if(yych == 'N') goto yy822;
 		if(yych != 'n') goto yy53;
-yy820:
-		YYDEBUG(820, *YYCURSOR);
+yy822:
+		YYDEBUG(822, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				if(yych <= '-') goto yy797;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				if(yych <= '-') goto yy799;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'T') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'U') goto yy730;
-				if(yych == 'u') goto yy730;
-				goto yy663;
+				if(yych <= 'U') goto yy732;
+				if(yych == 'u') goto yy732;
+				goto yy665;
 			}
 		}
-yy821:
-		YYDEBUG(821, *YYCURSOR);
+yy823:
+		YYDEBUG(823, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				if(yych <= '-') goto yy797;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				if(yych <= '-') goto yy799;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'D') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'E') goto yy711;
-				if(yych == 'e') goto yy711;
-				goto yy663;
+				if(yych <= 'E') goto yy713;
+				if(yych == 'e') goto yy713;
+				goto yy665;
 			}
 		}
-yy822:
-		YYDEBUG(822, *YYCURSOR);
+yy824:
+		YYDEBUG(824, *YYCURSOR);
 		yyaccept = 11;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= 0x1F) {
-				if(yych == 0x09) goto yy703;
-				goto yy663;
+				if(yych == 0x09) goto yy705;
+				goto yy665;
 			} else {
-				if(yych <= ' ') goto yy703;
-				if(yych <= ',') goto yy663;
-				if(yych <= '-') goto yy797;
-				goto yy703;
+				if(yych <= ' ') goto yy705;
+				if(yych <= ',') goto yy665;
+				if(yych <= '-') goto yy799;
+				goto yy705;
 			}
 		} else {
 			if(yych <= 'X') {
-				if(yych <= '/') goto yy663;
-				if(yych <= '9') goto yy705;
-				goto yy663;
+				if(yych <= '/') goto yy665;
+				if(yych <= '9') goto yy707;
+				goto yy665;
 			} else {
-				if(yych <= 'Y') goto yy711;
-				if(yych == 'y') goto yy711;
-				goto yy663;
+				if(yych <= 'Y') goto yy713;
+				if(yych == 'y') goto yy713;
+				goto yy665;
 			}
 		}
-yy823:
-		YYDEBUG(823, *YYCURSOR);
+yy825:
+		YYDEBUG(825, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '2') goto yy824;
-		if(yych <= '3') goto yy826;
-		if(yych <= '9') goto yy827;
+		if(yych <= '2') goto yy826;
+		if(yych <= '3') goto yy828;
+		if(yych <= '9') goto yy829;
 		goto yy53;
-yy824:
-		YYDEBUG(824, *YYCURSOR);
+yy826:
+		YYDEBUG(826, *YYCURSOR);
 		yyaccept = 13;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
-			if(yych <= '/') goto yy825;
-			if(yych <= '9') goto yy833;
-			if(yych >= 'n') goto yy829;
+			if(yych <= '/') goto yy827;
+			if(yych <= '9') goto yy835;
+			if(yych >= 'n') goto yy831;
 		} else {
 			if(yych <= 'r') {
-				if(yych >= 'r') goto yy830;
+				if(yych >= 'r') goto yy832;
 			} else {
-				if(yych <= 's') goto yy828;
-				if(yych <= 't') goto yy831;
+				if(yych <= 's') goto yy830;
+				if(yych <= 't') goto yy833;
 			}
 		}
-yy825:
-		YYDEBUG(825, *YYCURSOR);
-#line 1114 "ext/date/lib/parse_date.re"
+yy827:
+		YYDEBUG(827, *YYCURSOR);
+#line 1116 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("gnudateshort");
 		TIMELIB_INIT;
@@ -14271,113 +14303,113 @@ yy825:
 		TIMELIB_DEINIT;
 		return TIMELIB_ISO_DATE;
 	}
-#line 14275 "ext/date/lib/parse_date.c"
-yy826:
-		YYDEBUG(826, *YYCURSOR);
+#line 14307 "ext/date/lib/parse_date.c"
+yy828:
+		YYDEBUG(828, *YYCURSOR);
 		yyaccept = 13;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
 			if(yych <= '1') {
-				if(yych <= '/') goto yy825;
-				goto yy833;
+				if(yych <= '/') goto yy827;
+				goto yy835;
 			} else {
-				if(yych <= '9') goto yy777;
-				if(yych <= 'm') goto yy825;
-				goto yy829;
+				if(yych <= '9') goto yy779;
+				if(yych <= 'm') goto yy827;
+				goto yy831;
 			}
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'q') goto yy825;
-				goto yy830;
+				if(yych <= 'q') goto yy827;
+				goto yy832;
 			} else {
-				if(yych <= 's') goto yy828;
-				if(yych <= 't') goto yy831;
-				goto yy825;
+				if(yych <= 's') goto yy830;
+				if(yych <= 't') goto yy833;
+				goto yy827;
 			}
 		}
-yy827:
-		YYDEBUG(827, *YYCURSOR);
+yy829:
+		YYDEBUG(829, *YYCURSOR);
 		yyaccept = 13;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
-			if(yych <= '/') goto yy825;
-			if(yych <= '9') goto yy777;
-			if(yych <= 'm') goto yy825;
-			goto yy829;
+			if(yych <= '/') goto yy827;
+			if(yych <= '9') goto yy779;
+			if(yych <= 'm') goto yy827;
+			goto yy831;
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'q') goto yy825;
-				goto yy830;
+				if(yych <= 'q') goto yy827;
+				goto yy832;
 			} else {
-				if(yych <= 's') goto yy828;
-				if(yych <= 't') goto yy831;
-				goto yy825;
+				if(yych <= 's') goto yy830;
+				if(yych <= 't') goto yy833;
+				goto yy827;
 			}
 		}
-yy828:
-		YYDEBUG(828, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 't') goto yy832;
-		goto yy53;
-yy829:
-		YYDEBUG(829, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'd') goto yy832;
-		goto yy53;
 yy830:
 		YYDEBUG(830, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'd') goto yy832;
+		if(yych == 't') goto yy834;
 		goto yy53;
 yy831:
 		YYDEBUG(831, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != 'h') goto yy53;
+		if(yych == 'd') goto yy834;
+		goto yy53;
 yy832:
 		YYDEBUG(832, *YYCURSOR);
 		yych = *++YYCURSOR;
-		goto yy825;
+		if(yych == 'd') goto yy834;
+		goto yy53;
 yy833:
 		YYDEBUG(833, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych != 'h') goto yy53;
+yy834:
+		YYDEBUG(834, *YYCURSOR);
+		yych = *++YYCURSOR;
+		goto yy827;
+yy835:
+		YYDEBUG(835, *YYCURSOR);
 		yyaccept = 13;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
-			if(yych <= '/') goto yy825;
-			if(yych <= '9') goto yy779;
-			if(yych <= 'm') goto yy825;
-			goto yy829;
+			if(yych <= '/') goto yy827;
+			if(yych <= '9') goto yy781;
+			if(yych <= 'm') goto yy827;
+			goto yy831;
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'q') goto yy825;
-				goto yy830;
+				if(yych <= 'q') goto yy827;
+				goto yy832;
 			} else {
-				if(yych <= 's') goto yy828;
-				if(yych <= 't') goto yy831;
-				goto yy825;
+				if(yych <= 's') goto yy830;
+				if(yych <= 't') goto yy833;
+				goto yy827;
 			}
 		}
-yy834:
-		YYDEBUG(834, *YYCURSOR);
+yy836:
+		YYDEBUG(836, *YYCURSOR);
 		yyaccept = 14;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
 			if(yych <= '/') {
-				if(yych >= '/') goto yy888;
+				if(yych >= '/') goto yy890;
 			} else {
-				if(yych <= '9') goto yy837;
-				if(yych >= 'n') goto yy885;
+				if(yych <= '9') goto yy839;
+				if(yych >= 'n') goto yy887;
 			}
 		} else {
 			if(yych <= 'r') {
-				if(yych >= 'r') goto yy886;
+				if(yych >= 'r') goto yy888;
 			} else {
-				if(yych <= 's') goto yy884;
-				if(yych <= 't') goto yy887;
+				if(yych <= 's') goto yy886;
+				if(yych <= 't') goto yy889;
 			}
 		}
-yy835:
-		YYDEBUG(835, *YYCURSOR);
-#line 1075 "ext/date/lib/parse_date.re"
+yy837:
+		YYDEBUG(837, *YYCURSOR);
+#line 1077 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("americanshort | american");
 		TIMELIB_INIT;
@@ -14391,133 +14423,125 @@ yy835:
 		TIMELIB_DEINIT;
 		return TIMELIB_AMERICAN;
 	}
-#line 14395 "ext/date/lib/parse_date.c"
-yy836:
-		YYDEBUG(836, *YYCURSOR);
+#line 14427 "ext/date/lib/parse_date.c"
+yy838:
+		YYDEBUG(838, *YYCURSOR);
 		yyaccept = 14;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
 			if(yych <= '/') {
-				if(yych <= '.') goto yy835;
-				goto yy888;
+				if(yych <= '.') goto yy837;
+				goto yy890;
 			} else {
-				if(yych <= '1') goto yy837;
-				if(yych <= 'm') goto yy835;
-				goto yy885;
+				if(yych <= '1') goto yy839;
+				if(yych <= 'm') goto yy837;
+				goto yy887;
 			}
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'q') goto yy835;
-				goto yy886;
+				if(yych <= 'q') goto yy837;
+				goto yy888;
 			} else {
-				if(yych <= 's') goto yy884;
-				if(yych <= 't') goto yy887;
-				goto yy835;
+				if(yych <= 's') goto yy886;
+				if(yych <= 't') goto yy889;
+				goto yy837;
 			}
 		}
-yy837:
-		YYDEBUG(837, *YYCURSOR);
+yy839:
+		YYDEBUG(839, *YYCURSOR);
 		yyaccept = 14;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
-			if(yych == '/') goto yy888;
-			if(yych <= 'm') goto yy835;
-			goto yy885;
+			if(yych == '/') goto yy890;
+			if(yych <= 'm') goto yy837;
+			goto yy887;
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'q') goto yy835;
-				goto yy886;
+				if(yych <= 'q') goto yy837;
+				goto yy888;
 			} else {
-				if(yych <= 's') goto yy884;
-				if(yych <= 't') goto yy887;
-				goto yy835;
+				if(yych <= 's') goto yy886;
+				if(yych <= 't') goto yy889;
+				goto yy837;
 			}
 		}
-yy838:
-		YYDEBUG(838, *YYCURSOR);
+yy840:
+		YYDEBUG(840, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
-			if(yych == 'A') goto yy883;
+			if(yych == 'A') goto yy885;
 			if(yych <= 'T') goto yy53;
-			goto yy882;
+			goto yy884;
 		} else {
 			if(yych <= 'a') {
 				if(yych <= '`') goto yy53;
-				goto yy883;
+				goto yy885;
 			} else {
-				if(yych == 'u') goto yy882;
+				if(yych == 'u') goto yy884;
 				goto yy53;
 			}
 		}
-yy839:
-		YYDEBUG(839, *YYCURSOR);
+yy841:
+		YYDEBUG(841, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy881;
-		if(yych == 'e') goto yy881;
+		if(yych == 'E') goto yy883;
+		if(yych == 'e') goto yy883;
 		goto yy53;
-yy840:
-		YYDEBUG(840, *YYCURSOR);
+yy842:
+		YYDEBUG(842, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy880;
-		if(yych == 'a') goto yy880;
+		if(yych == 'A') goto yy882;
+		if(yych == 'a') goto yy882;
 		goto yy53;
-yy841:
-		YYDEBUG(841, *YYCURSOR);
+yy843:
+		YYDEBUG(843, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
-			if(yych == 'P') goto yy879;
+			if(yych == 'P') goto yy881;
 			if(yych <= 'T') goto yy53;
-			goto yy878;
+			goto yy880;
 		} else {
 			if(yych <= 'p') {
 				if(yych <= 'o') goto yy53;
-				goto yy879;
+				goto yy881;
 			} else {
-				if(yych == 'u') goto yy878;
+				if(yych == 'u') goto yy880;
 				goto yy53;
 			}
 		}
-yy842:
-		YYDEBUG(842, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy876;
-		if(yych == 'e') goto yy876;
-		goto yy53;
-yy843:
-		YYDEBUG(843, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'C') goto yy875;
-		if(yych == 'c') goto yy875;
-		goto yy53;
 yy844:
 		YYDEBUG(844, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'O') goto yy874;
-		if(yych == 'o') goto yy874;
+		if(yych == 'E') goto yy878;
+		if(yych == 'e') goto yy878;
 		goto yy53;
 yy845:
 		YYDEBUG(845, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy846;
-		if(yych != 'e') goto yy53;
+		if(yych == 'C') goto yy877;
+		if(yych == 'c') goto yy877;
+		goto yy53;
 yy846:
 		YYDEBUG(846, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'C') goto yy847;
-		if(yych != 'c') goto yy53;
+		if(yych == 'O') goto yy876;
+		if(yych == 'o') goto yy876;
+		goto yy53;
 yy847:
 		YYDEBUG(847, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != '/') goto yy53;
+		if(yych == 'E') goto yy848;
+		if(yych != 'e') goto yy53;
 yy848:
 		YYDEBUG(848, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych >= ':') goto yy53;
+		if(yych == 'C') goto yy849;
+		if(yych != 'c') goto yy53;
+yy849:
 		YYDEBUG(849, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych >= ':') goto yy53;
+		if(yych != '/') goto yy53;
+yy850:
 		YYDEBUG(850, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
@@ -14528,70 +14552,78 @@ yy848:
 		if(yych >= ':') goto yy53;
 		YYDEBUG(852, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != ':') goto yy53;
+		if(yych <= '/') goto yy53;
+		if(yych >= ':') goto yy53;
 		YYDEBUG(853, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '1') goto yy854;
-		if(yych <= '2') goto yy855;
-		goto yy53;
-yy854:
+		if(yych >= ':') goto yy53;
 		YYDEBUG(854, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy856;
-		goto yy53;
-yy855:
+		if(yych != ':') goto yy53;
 		YYDEBUG(855, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych >= '4') goto yy53;
+		if(yych <= '1') goto yy856;
+		if(yych <= '2') goto yy857;
+		goto yy53;
 yy856:
 		YYDEBUG(856, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != ':') goto yy53;
+		if(yych <= '/') goto yy53;
+		if(yych <= '9') goto yy858;
+		goto yy53;
+yy857:
 		YYDEBUG(857, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych >= '6') goto yy53;
+		if(yych >= '4') goto yy53;
+yy858:
 		YYDEBUG(858, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych >= ':') goto yy53;
+		if(yych != ':') goto yy53;
 		YYDEBUG(859, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != ':') goto yy53;
+		if(yych <= '/') goto yy53;
+		if(yych >= '6') goto yy53;
 		YYDEBUG(860, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy861;
-		if(yych <= '6') goto yy862;
-		goto yy53;
-yy861:
+		if(yych >= ':') goto yy53;
 		YYDEBUG(861, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy863;
-		goto yy53;
-yy862:
+		if(yych != ':') goto yy53;
 		YYDEBUG(862, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != '0') goto yy53;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy863;
+		if(yych <= '6') goto yy864;
+		goto yy53;
 yy863:
 		YYDEBUG(863, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 0x09) goto yy864;
-		if(yych != ' ') goto yy53;
+		if(yych <= '/') goto yy53;
+		if(yych <= '9') goto yy865;
+		goto yy53;
 yy864:
 		YYDEBUG(864, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych != '0') goto yy53;
+yy865:
+		YYDEBUG(865, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 0x09) goto yy866;
+		if(yych != ' ') goto yy53;
+yy866:
+		YYDEBUG(866, *YYCURSOR);
 		++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 6) YYFILL(6);
 		yych = *YYCURSOR;
-		YYDEBUG(865, *YYCURSOR);
+		YYDEBUG(867, *YYCURSOR);
 		if(yych <= ' ') {
-			if(yych == 0x09) goto yy864;
+			if(yych == 0x09) goto yy866;
 			if(yych <= 0x1F) goto yy53;
-			goto yy864;
+			goto yy866;
 		} else {
 			if(yych <= '+') {
 				if(yych <= '*') goto yy53;
@@ -14599,22 +14631,22 @@ yy864:
 				if(yych != '-') goto yy53;
 			}
 		}
-		YYDEBUG(866, *YYCURSOR);
+		YYDEBUG(868, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '1') goto yy867;
-		if(yych <= '2') goto yy869;
-		if(yych <= '9') goto yy870;
+		if(yych <= '1') goto yy869;
+		if(yych <= '2') goto yy871;
+		if(yych <= '9') goto yy872;
 		goto yy53;
-yy867:
-		YYDEBUG(867, *YYCURSOR);
+yy869:
+		YYDEBUG(869, *YYCURSOR);
 		++YYCURSOR;
-		if((yych = *YYCURSOR) <= '/') goto yy868;
-		if(yych <= '9') goto yy870;
-		if(yych <= ':') goto yy871;
-yy868:
-		YYDEBUG(868, *YYCURSOR);
-#line 1320 "ext/date/lib/parse_date.re"
+		if((yych = *YYCURSOR) <= '/') goto yy870;
+		if(yych <= '9') goto yy872;
+		if(yych <= ':') goto yy873;
+yy870:
+		YYDEBUG(870, *YYCURSOR);
+#line 1322 "ext/date/lib/parse_date.re"
 		{
 		int tz_not_found;
 		DEBUG_OUTPUT("clf");
@@ -14634,247 +14666,247 @@ yy868:
 		TIMELIB_DEINIT;
 		return TIMELIB_CLF;
 	}
-#line 14638 "ext/date/lib/parse_date.c"
-yy869:
-		YYDEBUG(869, *YYCURSOR);
+#line 14670 "ext/date/lib/parse_date.c"
+yy871:
+		YYDEBUG(871, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '5') {
-			if(yych <= '/') goto yy868;
-			if(yych >= '4') goto yy872;
+			if(yych <= '/') goto yy870;
+			if(yych >= '4') goto yy874;
 		} else {
-			if(yych <= '9') goto yy873;
-			if(yych <= ':') goto yy871;
-			goto yy868;
+			if(yych <= '9') goto yy875;
+			if(yych <= ':') goto yy873;
+			goto yy870;
 		}
-yy870:
-		YYDEBUG(870, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy868;
-		if(yych <= '5') goto yy872;
-		if(yych <= '9') goto yy873;
-		if(yych >= ';') goto yy868;
-yy871:
-		YYDEBUG(871, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy868;
-		if(yych <= '5') goto yy872;
-		if(yych <= '9') goto yy873;
-		goto yy868;
 yy872:
 		YYDEBUG(872, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy868;
-		if(yych >= ':') goto yy868;
+		if(yych <= '/') goto yy870;
+		if(yych <= '5') goto yy874;
+		if(yych <= '9') goto yy875;
+		if(yych >= ';') goto yy870;
 yy873:
 		YYDEBUG(873, *YYCURSOR);
 		yych = *++YYCURSOR;
-		goto yy868;
+		if(yych <= '/') goto yy870;
+		if(yych <= '5') goto yy874;
+		if(yych <= '9') goto yy875;
+		goto yy870;
 yy874:
 		YYDEBUG(874, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'V') goto yy847;
-		if(yych == 'v') goto yy847;
-		goto yy53;
+		if(yych <= '/') goto yy870;
+		if(yych >= ':') goto yy870;
 yy875:
 		YYDEBUG(875, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'T') goto yy847;
-		if(yych == 't') goto yy847;
-		goto yy53;
+		goto yy870;
 yy876:
 		YYDEBUG(876, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'P') goto yy877;
-		if(yych != 'p') goto yy53;
+		if(yych == 'V') goto yy849;
+		if(yych == 'v') goto yy849;
+		goto yy53;
 yy877:
 		YYDEBUG(877, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if(yych == 'T') goto yy849;
+		if(yych == 't') goto yy849;
+		goto yy53;
+yy878:
+		YYDEBUG(878, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'P') goto yy879;
+		if(yych != 'p') goto yy53;
+yy879:
+		YYDEBUG(879, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if(yych <= 'S') {
-			if(yych == '/') goto yy848;
+			if(yych == '/') goto yy850;
 			goto yy53;
 		} else {
-			if(yych <= 'T') goto yy847;
-			if(yych == 't') goto yy847;
+			if(yych <= 'T') goto yy849;
+			if(yych == 't') goto yy849;
 			goto yy53;
 		}
-yy878:
-		YYDEBUG(878, *YYCURSOR);
+yy880:
+		YYDEBUG(880, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'G') goto yy847;
-		if(yych == 'g') goto yy847;
+		if(yych == 'G') goto yy849;
+		if(yych == 'g') goto yy849;
 		goto yy53;
-yy879:
-		YYDEBUG(879, *YYCURSOR);
+yy881:
+		YYDEBUG(881, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy847;
-		if(yych == 'r') goto yy847;
+		if(yych == 'R') goto yy849;
+		if(yych == 'r') goto yy849;
 		goto yy53;
-yy880:
-		YYDEBUG(880, *YYCURSOR);
+yy882:
+		YYDEBUG(882, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'Y') {
-			if(yych == 'R') goto yy847;
+			if(yych == 'R') goto yy849;
 			if(yych <= 'X') goto yy53;
-			goto yy847;
+			goto yy849;
 		} else {
 			if(yych <= 'r') {
 				if(yych <= 'q') goto yy53;
-				goto yy847;
+				goto yy849;
 			} else {
-				if(yych == 'y') goto yy847;
+				if(yych == 'y') goto yy849;
 				goto yy53;
 			}
 		}
-yy881:
-		YYDEBUG(881, *YYCURSOR);
+yy883:
+		YYDEBUG(883, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'B') goto yy847;
-		if(yych == 'b') goto yy847;
+		if(yych == 'B') goto yy849;
+		if(yych == 'b') goto yy849;
 		goto yy53;
-yy882:
-		YYDEBUG(882, *YYCURSOR);
+yy884:
+		YYDEBUG(884, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'N') {
-			if(yych == 'L') goto yy847;
+			if(yych == 'L') goto yy849;
 			if(yych <= 'M') goto yy53;
-			goto yy847;
+			goto yy849;
 		} else {
 			if(yych <= 'l') {
 				if(yych <= 'k') goto yy53;
-				goto yy847;
+				goto yy849;
 			} else {
-				if(yych == 'n') goto yy847;
+				if(yych == 'n') goto yy849;
 				goto yy53;
 			}
 		}
-yy883:
-		YYDEBUG(883, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'N') goto yy847;
-		if(yych == 'n') goto yy847;
-		goto yy53;
-yy884:
-		YYDEBUG(884, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 't') goto yy893;
-		goto yy53;
 yy885:
 		YYDEBUG(885, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'd') goto yy893;
+		if(yych == 'N') goto yy849;
+		if(yych == 'n') goto yy849;
 		goto yy53;
 yy886:
 		YYDEBUG(886, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'd') goto yy893;
+		if(yych == 't') goto yy895;
 		goto yy53;
 yy887:
 		YYDEBUG(887, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'h') goto yy893;
+		if(yych == 'd') goto yy895;
 		goto yy53;
 yy888:
 		YYDEBUG(888, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych >= ':') goto yy53;
+		if(yych == 'd') goto yy895;
+		goto yy53;
+yy889:
 		YYDEBUG(889, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy835;
-		if(yych >= ':') goto yy835;
+		if(yych == 'h') goto yy895;
+		goto yy53;
+yy890:
 		YYDEBUG(890, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy835;
-		if(yych >= ':') goto yy835;
+		if(yych <= '/') goto yy53;
+		if(yych >= ':') goto yy53;
 		YYDEBUG(891, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy835;
-		if(yych >= ':') goto yy835;
+		if(yych <= '/') goto yy837;
+		if(yych >= ':') goto yy837;
 		YYDEBUG(892, *YYCURSOR);
 		yych = *++YYCURSOR;
-		goto yy835;
-yy893:
+		if(yych <= '/') goto yy837;
+		if(yych >= ':') goto yy837;
 		YYDEBUG(893, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy837;
+		if(yych >= ':') goto yy837;
+		YYDEBUG(894, *YYCURSOR);
+		yych = *++YYCURSOR;
+		goto yy837;
+yy895:
+		YYDEBUG(895, *YYCURSOR);
 		yyaccept = 14;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '/') goto yy888;
-		goto yy835;
-yy894:
-		YYDEBUG(894, *YYCURSOR);
+		if(yych == '/') goto yy890;
+		goto yy837;
+yy896:
+		YYDEBUG(896, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= ',') {
-			if(yych == 0x09) goto yy896;
-			goto yy749;
+			if(yych == 0x09) goto yy898;
+			goto yy751;
 		} else {
-			if(yych <= '.') goto yy896;
-			if(yych >= '0') goto yy749;
+			if(yych <= '.') goto yy898;
+			if(yych >= '0') goto yy751;
 		}
-yy895:
-		YYDEBUG(895, *YYCURSOR);
+yy897:
+		YYDEBUG(897, *YYCURSOR);
 		yych = *++YYCURSOR;
 		YYDEBUG(-1, yych);
 		switch(yych) {
 		case 'A':
-		case 'a':	goto yy841;
+		case 'a':	goto yy843;
 		case 'D':
-		case 'd':	goto yy845;
+		case 'd':	goto yy847;
 		case 'F':
-		case 'f':	goto yy839;
+		case 'f':	goto yy841;
 		case 'J':
-		case 'j':	goto yy838;
+		case 'j':	goto yy840;
 		case 'M':
-		case 'm':	goto yy840;
+		case 'm':	goto yy842;
 		case 'N':
-		case 'n':	goto yy844;
+		case 'n':	goto yy846;
 		case 'O':
-		case 'o':	goto yy843;
+		case 'o':	goto yy845;
 		case 'S':
-		case 's':	goto yy842;
+		case 's':	goto yy844;
 		default:	goto yy53;
 		}
-yy896:
-		YYDEBUG(896, *YYCURSOR);
+yy898:
+		YYDEBUG(898, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy749;
-		if(yych <= '0') goto yy897;
-		if(yych <= '1') goto yy898;
-		if(yych <= '9') goto yy899;
-		goto yy749;
-yy897:
-		YYDEBUG(897, *YYCURSOR);
+		if(yych <= '/') goto yy751;
+		if(yych <= '0') goto yy899;
+		if(yych <= '1') goto yy900;
+		if(yych <= '9') goto yy901;
+		goto yy751;
+yy899:
+		YYDEBUG(899, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= ',') goto yy53;
-		if(yych <= '.') goto yy772;
+		if(yych <= '.') goto yy774;
 		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy899;
+		if(yych <= '9') goto yy901;
 		goto yy53;
-yy898:
-		YYDEBUG(898, *YYCURSOR);
+yy900:
+		YYDEBUG(900, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= ',') goto yy53;
-		if(yych <= '.') goto yy772;
+		if(yych <= '.') goto yy774;
 		if(yych <= '/') goto yy53;
 		if(yych >= '3') goto yy53;
-yy899:
-		YYDEBUG(899, *YYCURSOR);
+yy901:
+		YYDEBUG(901, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= ',') goto yy53;
-		if(yych <= '.') goto yy772;
+		if(yych <= '.') goto yy774;
 		goto yy53;
-yy900:
-		YYDEBUG(900, *YYCURSOR);
+yy902:
+		YYDEBUG(902, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == '-') goto yy901;
+		if(yych == '-') goto yy903;
 		if(yych <= '/') goto yy57;
-		if(yych <= '9') goto yy935;
+		if(yych <= '9') goto yy937;
 		goto yy57;
-yy901:
-		YYDEBUG(901, *YYCURSOR);
+yy903:
+		YYDEBUG(903, *YYCURSOR);
 		yych = *++YYCURSOR;
 		YYDEBUG(-1, yych);
 		switch(yych) {
-		case '0':	goto yy910;
-		case '1':	goto yy911;
+		case '0':	goto yy912;
+		case '1':	goto yy913;
 		case '2':
 		case '3':
 		case '4':
@@ -14882,208 +14914,208 @@ yy901:
 		case '6':
 		case '7':
 		case '8':
-		case '9':	goto yy912;
+		case '9':	goto yy914;
 		case 'A':
-		case 'a':	goto yy905;
+		case 'a':	goto yy907;
 		case 'D':
-		case 'd':	goto yy909;
+		case 'd':	goto yy911;
 		case 'F':
-		case 'f':	goto yy903;
+		case 'f':	goto yy905;
 		case 'J':
-		case 'j':	goto yy902;
+		case 'j':	goto yy904;
 		case 'M':
-		case 'm':	goto yy904;
+		case 'm':	goto yy906;
 		case 'N':
-		case 'n':	goto yy908;
+		case 'n':	goto yy910;
 		case 'O':
-		case 'o':	goto yy907;
+		case 'o':	goto yy909;
 		case 'S':
-		case 's':	goto yy906;
+		case 's':	goto yy908;
 		default:	goto yy53;
 		}
-yy902:
-		YYDEBUG(902, *YYCURSOR);
+yy904:
+		YYDEBUG(904, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
-			if(yych == 'A') goto yy934;
+			if(yych == 'A') goto yy936;
 			if(yych <= 'T') goto yy53;
-			goto yy933;
+			goto yy935;
 		} else {
 			if(yych <= 'a') {
 				if(yych <= '`') goto yy53;
-				goto yy934;
+				goto yy936;
 			} else {
-				if(yych == 'u') goto yy933;
+				if(yych == 'u') goto yy935;
 				goto yy53;
 			}
 		}
-yy903:
-		YYDEBUG(903, *YYCURSOR);
+yy905:
+		YYDEBUG(905, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy932;
-		if(yych == 'e') goto yy932;
+		if(yych == 'E') goto yy934;
+		if(yych == 'e') goto yy934;
 		goto yy53;
-yy904:
-		YYDEBUG(904, *YYCURSOR);
+yy906:
+		YYDEBUG(906, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy931;
-		if(yych == 'a') goto yy931;
+		if(yych == 'A') goto yy933;
+		if(yych == 'a') goto yy933;
 		goto yy53;
-yy905:
-		YYDEBUG(905, *YYCURSOR);
+yy907:
+		YYDEBUG(907, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
-			if(yych == 'P') goto yy930;
+			if(yych == 'P') goto yy932;
 			if(yych <= 'T') goto yy53;
-			goto yy929;
+			goto yy931;
 		} else {
 			if(yych <= 'p') {
 				if(yych <= 'o') goto yy53;
-				goto yy930;
+				goto yy932;
 			} else {
-				if(yych == 'u') goto yy929;
+				if(yych == 'u') goto yy931;
 				goto yy53;
 			}
 		}
-yy906:
-		YYDEBUG(906, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy927;
-		if(yych == 'e') goto yy927;
-		goto yy53;
-yy907:
-		YYDEBUG(907, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'C') goto yy926;
-		if(yych == 'c') goto yy926;
-		goto yy53;
 yy908:
 		YYDEBUG(908, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'O') goto yy925;
-		if(yych == 'o') goto yy925;
+		if(yych == 'E') goto yy929;
+		if(yych == 'e') goto yy929;
 		goto yy53;
 yy909:
 		YYDEBUG(909, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy917;
-		if(yych == 'e') goto yy917;
+		if(yych == 'C') goto yy928;
+		if(yych == 'c') goto yy928;
 		goto yy53;
 yy910:
 		YYDEBUG(910, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == '-') goto yy913;
-		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy912;
+		if(yych == 'O') goto yy927;
+		if(yych == 'o') goto yy927;
 		goto yy53;
 yy911:
 		YYDEBUG(911, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == '-') goto yy913;
-		if(yych <= '/') goto yy53;
-		if(yych >= '3') goto yy53;
+		if(yych == 'E') goto yy919;
+		if(yych == 'e') goto yy919;
+		goto yy53;
 yy912:
 		YYDEBUG(912, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != '-') goto yy53;
+		if(yych == '-') goto yy915;
+		if(yych <= '/') goto yy53;
+		if(yych <= '9') goto yy914;
+		goto yy53;
 yy913:
 		YYDEBUG(913, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if(yych == '-') goto yy915;
 		if(yych <= '/') goto yy53;
-		if(yych <= '2') goto yy914;
-		if(yych <= '3') goto yy915;
-		if(yych <= '9') goto yy916;
-		goto yy53;
+		if(yych >= '3') goto yy53;
 yy914:
 		YYDEBUG(914, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych != '-') goto yy53;
+yy915:
+		YYDEBUG(915, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy53;
+		if(yych <= '2') goto yy916;
+		if(yych <= '3') goto yy917;
+		if(yych <= '9') goto yy918;
+		goto yy53;
+yy916:
+		YYDEBUG(916, *YYCURSOR);
 		yyaccept = 13;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
-			if(yych <= '/') goto yy825;
-			if(yych <= '9') goto yy916;
-			if(yych <= 'm') goto yy825;
-			goto yy829;
+			if(yych <= '/') goto yy827;
+			if(yych <= '9') goto yy918;
+			if(yych <= 'm') goto yy827;
+			goto yy831;
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'q') goto yy825;
-				goto yy830;
+				if(yych <= 'q') goto yy827;
+				goto yy832;
 			} else {
-				if(yych <= 's') goto yy828;
-				if(yych <= 't') goto yy831;
-				goto yy825;
+				if(yych <= 's') goto yy830;
+				if(yych <= 't') goto yy833;
+				goto yy827;
 			}
 		}
-yy915:
-		YYDEBUG(915, *YYCURSOR);
+yy917:
+		YYDEBUG(917, *YYCURSOR);
 		yyaccept = 13;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
-			if(yych <= '/') goto yy825;
-			if(yych <= '1') goto yy916;
-			if(yych <= 'm') goto yy825;
-			goto yy829;
+			if(yych <= '/') goto yy827;
+			if(yych <= '1') goto yy918;
+			if(yych <= 'm') goto yy827;
+			goto yy831;
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'q') goto yy825;
-				goto yy830;
+				if(yych <= 'q') goto yy827;
+				goto yy832;
 			} else {
-				if(yych <= 's') goto yy828;
-				if(yych <= 't') goto yy831;
-				goto yy825;
+				if(yych <= 's') goto yy830;
+				if(yych <= 't') goto yy833;
+				goto yy827;
 			}
 		}
-yy916:
-		YYDEBUG(916, *YYCURSOR);
+yy918:
+		YYDEBUG(918, *YYCURSOR);
 		yyaccept = 13;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'q') {
-			if(yych == 'n') goto yy829;
-			goto yy825;
+			if(yych == 'n') goto yy831;
+			goto yy827;
 		} else {
-			if(yych <= 'r') goto yy830;
-			if(yych <= 's') goto yy828;
-			if(yych <= 't') goto yy831;
-			goto yy825;
+			if(yych <= 'r') goto yy832;
+			if(yych <= 's') goto yy830;
+			if(yych <= 't') goto yy833;
+			goto yy827;
 		}
-yy917:
-		YYDEBUG(917, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'C') goto yy918;
-		if(yych != 'c') goto yy53;
-yy918:
-		YYDEBUG(918, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych != '-') goto yy53;
 yy919:
 		YYDEBUG(919, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '0') goto yy920;
-		if(yych <= '2') goto yy921;
-		if(yych <= '3') goto yy922;
-		goto yy53;
+		if(yych == 'C') goto yy920;
+		if(yych != 'c') goto yy53;
 yy920:
 		YYDEBUG(920, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '0') goto yy53;
-		if(yych <= '9') goto yy923;
-		goto yy53;
+		if(yych != '-') goto yy53;
 yy921:
 		YYDEBUG(921, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy923;
+		if(yych <= '0') goto yy922;
+		if(yych <= '2') goto yy923;
+		if(yych <= '3') goto yy924;
 		goto yy53;
 yy922:
 		YYDEBUG(922, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych >= '2') goto yy53;
+		if(yych <= '0') goto yy53;
+		if(yych <= '9') goto yy925;
+		goto yy53;
 yy923:
 		YYDEBUG(923, *YYCURSOR);
-		++YYCURSOR;
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy53;
+		if(yych <= '9') goto yy925;
+		goto yy53;
+yy924:
 		YYDEBUG(924, *YYCURSOR);
-#line 1307 "ext/date/lib/parse_date.re"
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy53;
+		if(yych >= '2') goto yy53;
+yy925:
+		YYDEBUG(925, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(926, *YYCURSOR);
+#line 1309 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("pgtextreverse");
 		TIMELIB_INIT;
@@ -15095,93 +15127,93 @@ yy923:
 		TIMELIB_DEINIT;
 		return TIMELIB_PG_TEXT;
 	}
-#line 15099 "ext/date/lib/parse_date.c"
-yy925:
-		YYDEBUG(925, *YYCURSOR);
+#line 15131 "ext/date/lib/parse_date.c"
+yy927:
+		YYDEBUG(927, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'V') goto yy918;
-		if(yych == 'v') goto yy918;
+		if(yych == 'V') goto yy920;
+		if(yych == 'v') goto yy920;
 		goto yy53;
-yy926:
-		YYDEBUG(926, *YYCURSOR);
+yy928:
+		YYDEBUG(928, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'T') goto yy918;
-		if(yych == 't') goto yy918;
+		if(yych == 'T') goto yy920;
+		if(yych == 't') goto yy920;
 		goto yy53;
-yy927:
-		YYDEBUG(927, *YYCURSOR);
+yy929:
+		YYDEBUG(929, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'P') goto yy928;
+		if(yych == 'P') goto yy930;
 		if(yych != 'p') goto yy53;
-yy928:
-		YYDEBUG(928, *YYCURSOR);
+yy930:
+		YYDEBUG(930, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'S') {
-			if(yych == '-') goto yy919;
+			if(yych == '-') goto yy921;
 			goto yy53;
 		} else {
-			if(yych <= 'T') goto yy918;
-			if(yych == 't') goto yy918;
+			if(yych <= 'T') goto yy920;
+			if(yych == 't') goto yy920;
 			goto yy53;
 		}
-yy929:
-		YYDEBUG(929, *YYCURSOR);
+yy931:
+		YYDEBUG(931, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'G') goto yy918;
-		if(yych == 'g') goto yy918;
+		if(yych == 'G') goto yy920;
+		if(yych == 'g') goto yy920;
 		goto yy53;
-yy930:
-		YYDEBUG(930, *YYCURSOR);
+yy932:
+		YYDEBUG(932, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy918;
-		if(yych == 'r') goto yy918;
+		if(yych == 'R') goto yy920;
+		if(yych == 'r') goto yy920;
 		goto yy53;
-yy931:
-		YYDEBUG(931, *YYCURSOR);
+yy933:
+		YYDEBUG(933, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'Y') {
-			if(yych == 'R') goto yy918;
+			if(yych == 'R') goto yy920;
 			if(yych <= 'X') goto yy53;
-			goto yy918;
+			goto yy920;
 		} else {
 			if(yych <= 'r') {
 				if(yych <= 'q') goto yy53;
-				goto yy918;
+				goto yy920;
 			} else {
-				if(yych == 'y') goto yy918;
+				if(yych == 'y') goto yy920;
 				goto yy53;
 			}
 		}
-yy932:
-		YYDEBUG(932, *YYCURSOR);
+yy934:
+		YYDEBUG(934, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'B') goto yy918;
-		if(yych == 'b') goto yy918;
+		if(yych == 'B') goto yy920;
+		if(yych == 'b') goto yy920;
 		goto yy53;
-yy933:
-		YYDEBUG(933, *YYCURSOR);
+yy935:
+		YYDEBUG(935, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'N') {
-			if(yych == 'L') goto yy918;
+			if(yych == 'L') goto yy920;
 			if(yych <= 'M') goto yy53;
-			goto yy918;
+			goto yy920;
 		} else {
 			if(yych <= 'l') {
 				if(yych <= 'k') goto yy53;
-				goto yy918;
+				goto yy920;
 			} else {
-				if(yych == 'n') goto yy918;
+				if(yych == 'n') goto yy920;
 				goto yy53;
 			}
 		}
-yy934:
-		YYDEBUG(934, *YYCURSOR);
+yy936:
+		YYDEBUG(936, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'N') goto yy918;
-		if(yych == 'n') goto yy918;
+		if(yych == 'N') goto yy920;
+		if(yych == 'n') goto yy920;
 		goto yy53;
-yy935:
-		YYDEBUG(935, *YYCURSOR);
+yy937:
+		YYDEBUG(937, *YYCURSOR);
 		yyaccept = 15;
 		yych = *(YYMARKER = ++YYCURSOR);
 		YYDEBUG(-1, yych);
@@ -15213,27 +15245,27 @@ yy935:
 		case 's':
 		case 't':
 		case 'w':
-		case 'y':	goto yy940;
-		case '-':	goto yy937;
-		case '.':	goto yy941;
-		case '/':	goto yy938;
-		case '0':	goto yy954;
-		case '1':	goto yy955;
-		case '2':	goto yy957;
-		case '3':	goto yy958;
+		case 'y':	goto yy942;
+		case '-':	goto yy939;
+		case '.':	goto yy943;
+		case '/':	goto yy940;
+		case '0':	goto yy956;
+		case '1':	goto yy957;
+		case '2':	goto yy959;
+		case '3':	goto yy960;
 		case '4':
 		case '5':
 		case '6':
 		case '7':
 		case '8':
 		case '9':	goto yy51;
-		case ':':	goto yy956;
-		case 'W':	goto yy959;
-		default:	goto yy936;
+		case ':':	goto yy958;
+		case 'W':	goto yy961;
+		default:	goto yy938;
 		}
-yy936:
-		YYDEBUG(936, *YYCURSOR);
-#line 1341 "ext/date/lib/parse_date.re"
+yy938:
+		YYDEBUG(938, *YYCURSOR);
+#line 1343 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("year4");
 		TIMELIB_INIT;
@@ -15241,14 +15273,14 @@ yy936:
 		TIMELIB_DEINIT;
 		return TIMELIB_CLF;
 	}
-#line 15245 "ext/date/lib/parse_date.c"
-yy937:
-		YYDEBUG(937, *YYCURSOR);
+#line 15277 "ext/date/lib/parse_date.c"
+yy939:
+		YYDEBUG(939, *YYCURSOR);
 		yych = *++YYCURSOR;
 		YYDEBUG(-1, yych);
 		switch(yych) {
-		case '0':	goto yy1123;
-		case '1':	goto yy1125;
+		case '0':	goto yy1125;
+		case '1':	goto yy1127;
 		case '2':
 		case '3':
 		case '4':
@@ -15256,96 +15288,96 @@ yy937:
 		case '6':
 		case '7':
 		case '8':
-		case '9':	goto yy1126;
+		case '9':	goto yy1128;
 		case 'A':
-		case 'a':	goto yy1117;
+		case 'a':	goto yy1119;
 		case 'D':
-		case 'd':	goto yy1121;
+		case 'd':	goto yy1123;
 		case 'F':
-		case 'f':	goto yy1115;
+		case 'f':	goto yy1117;
 		case 'J':
-		case 'j':	goto yy1114;
+		case 'j':	goto yy1116;
 		case 'M':
-		case 'm':	goto yy1116;
+		case 'm':	goto yy1118;
 		case 'N':
-		case 'n':	goto yy1120;
+		case 'n':	goto yy1122;
 		case 'O':
-		case 'o':	goto yy1119;
+		case 'o':	goto yy1121;
 		case 'S':
-		case 's':	goto yy1118;
-		case 'W':	goto yy1122;
-		default:	goto yy1087;
+		case 's':	goto yy1120;
+		case 'W':	goto yy1124;
+		default:	goto yy1089;
 		}
-yy938:
-		YYDEBUG(938, *YYCURSOR);
+yy940:
+		YYDEBUG(940, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '0') goto yy1095;
-		if(yych <= '1') goto yy1096;
-		if(yych <= '9') goto yy1097;
+		if(yych <= '0') goto yy1097;
+		if(yych <= '1') goto yy1098;
+		if(yych <= '9') goto yy1099;
 		goto yy53;
-yy939:
-		YYDEBUG(939, *YYCURSOR);
+yy941:
+		YYDEBUG(941, *YYCURSOR);
 		++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 11) YYFILL(11);
 		yych = *YYCURSOR;
-yy940:
-		YYDEBUG(940, *YYCURSOR);
+yy942:
+		YYDEBUG(942, *YYCURSOR);
 		YYDEBUG(-1, yych);
 		switch(yych) {
 		case 0x09:
-		case ' ':	goto yy939;
+		case ' ':	goto yy941;
 		case '-':
-		case '.':	goto yy1086;
+		case '.':	goto yy1088;
 		case 'A':
-		case 'a':	goto yy949;
+		case 'a':	goto yy951;
 		case 'D':
-		case 'd':	goto yy953;
+		case 'd':	goto yy955;
 		case 'F':
-		case 'f':	goto yy947;
+		case 'f':	goto yy949;
 		case 'H':
 		case 'h':	goto yy60;
-		case 'I':	goto yy942;
+		case 'I':	goto yy944;
 		case 'J':
-		case 'j':	goto yy946;
+		case 'j':	goto yy948;
 		case 'M':
-		case 'm':	goto yy948;
+		case 'm':	goto yy950;
 		case 'N':
-		case 'n':	goto yy952;
+		case 'n':	goto yy954;
 		case 'O':
-		case 'o':	goto yy951;
+		case 'o':	goto yy953;
 		case 'S':
-		case 's':	goto yy950;
+		case 's':	goto yy952;
 		case 'T':
 		case 't':	goto yy65;
-		case 'V':	goto yy944;
+		case 'V':	goto yy946;
 		case 'W':
 		case 'w':	goto yy62;
-		case 'X':	goto yy945;
+		case 'X':	goto yy947;
 		case 'Y':
 		case 'y':	goto yy64;
 		default:	goto yy53;
 		}
-yy941:
-		YYDEBUG(941, *YYCURSOR);
+yy943:
+		YYDEBUG(943, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy1087;
-		if(yych <= '0') goto yy1079;
-		if(yych <= '2') goto yy1080;
-		if(yych <= '3') goto yy1081;
-		goto yy1087;
-yy942:
-		YYDEBUG(942, *YYCURSOR);
+		if(yych <= '/') goto yy1089;
+		if(yych <= '0') goto yy1081;
+		if(yych <= '2') goto yy1082;
+		if(yych <= '3') goto yy1083;
+		goto yy1089;
+yy944:
+		YYDEBUG(944, *YYCURSOR);
 		++YYCURSOR;
 		if((yych = *YYCURSOR) <= 'U') {
-			if(yych == 'I') goto yy1078;
+			if(yych == 'I') goto yy1080;
 		} else {
-			if(yych == 'W') goto yy943;
-			if(yych <= 'X') goto yy1032;
+			if(yych == 'W') goto yy945;
+			if(yych <= 'X') goto yy1034;
 		}
-yy943:
-		YYDEBUG(943, *YYCURSOR);
-#line 1167 "ext/date/lib/parse_date.re"
+yy945:
+		YYDEBUG(945, *YYCURSOR);
+#line 1169 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("datenodayrev");
 		TIMELIB_INIT;
@@ -15357,39 +15389,39 @@ yy943:
 		TIMELIB_DEINIT;
 		return TIMELIB_DATE_NO_DAY;
 	}
-#line 15361 "ext/date/lib/parse_date.c"
-yy944:
-		YYDEBUG(944, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'I') goto yy1076;
-		goto yy943;
-yy945:
-		YYDEBUG(945, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'I') goto yy1075;
-		goto yy943;
+#line 15393 "ext/date/lib/parse_date.c"
 yy946:
 		YYDEBUG(946, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if(yych == 'I') goto yy1078;
+		goto yy945;
+yy947:
+		YYDEBUG(947, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'I') goto yy1077;
+		goto yy945;
+yy948:
+		YYDEBUG(948, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if(yych <= 'U') {
-			if(yych == 'A') goto yy1068;
+			if(yych == 'A') goto yy1070;
 			if(yych <= 'T') goto yy53;
-			goto yy1067;
+			goto yy1069;
 		} else {
 			if(yych <= 'a') {
 				if(yych <= '`') goto yy53;
-				goto yy1068;
+				goto yy1070;
 			} else {
-				if(yych == 'u') goto yy1067;
+				if(yych == 'u') goto yy1069;
 				goto yy53;
 			}
 		}
-yy947:
-		YYDEBUG(947, *YYCURSOR);
+yy949:
+		YYDEBUG(949, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'R') {
 			if(yych <= 'N') {
-				if(yych == 'E') goto yy1061;
+				if(yych == 'E') goto yy1063;
 				goto yy53;
 			} else {
 				if(yych <= 'O') goto yy83;
@@ -15398,7 +15430,7 @@ yy947:
 			}
 		} else {
 			if(yych <= 'n') {
-				if(yych == 'e') goto yy1061;
+				if(yych == 'e') goto yy1063;
 				goto yy53;
 			} else {
 				if(yych <= 'o') goto yy83;
@@ -15406,12 +15438,12 @@ yy947:
 				goto yy53;
 			}
 		}
-yy948:
-		YYDEBUG(948, *YYCURSOR);
+yy950:
+		YYDEBUG(950, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'O') {
 			if(yych <= 'H') {
-				if(yych == 'A') goto yy1058;
+				if(yych == 'A') goto yy1060;
 				goto yy53;
 			} else {
 				if(yych <= 'I') goto yy114;
@@ -15420,7 +15452,7 @@ yy948:
 			}
 		} else {
 			if(yych <= 'h') {
-				if(yych == 'a') goto yy1058;
+				if(yych == 'a') goto yy1060;
 				goto yy53;
 			} else {
 				if(yych <= 'i') goto yy114;
@@ -15428,31 +15460,31 @@ yy948:
 				goto yy53;
 			}
 		}
-yy949:
-		YYDEBUG(949, *YYCURSOR);
+yy951:
+		YYDEBUG(951, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
-			if(yych == 'P') goto yy1052;
+			if(yych == 'P') goto yy1054;
 			if(yych <= 'T') goto yy53;
-			goto yy1051;
+			goto yy1053;
 		} else {
 			if(yych <= 'p') {
 				if(yych <= 'o') goto yy53;
-				goto yy1052;
+				goto yy1054;
 			} else {
-				if(yych == 'u') goto yy1051;
+				if(yych == 'u') goto yy1053;
 				goto yy53;
 			}
 		}
-yy950:
-		YYDEBUG(950, *YYCURSOR);
+yy952:
+		YYDEBUG(952, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
 			if(yych <= 'D') {
 				if(yych == 'A') goto yy123;
 				goto yy53;
 			} else {
-				if(yych <= 'E') goto yy1044;
+				if(yych <= 'E') goto yy1046;
 				if(yych <= 'T') goto yy53;
 				goto yy122;
 			}
@@ -15461,82 +15493,82 @@ yy950:
 				if(yych == 'a') goto yy123;
 				goto yy53;
 			} else {
-				if(yych <= 'e') goto yy1044;
+				if(yych <= 'e') goto yy1046;
 				if(yych == 'u') goto yy122;
 				goto yy53;
 			}
 		}
-yy951:
-		YYDEBUG(951, *YYCURSOR);
+yy953:
+		YYDEBUG(953, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'C') goto yy1039;
-		if(yych == 'c') goto yy1039;
+		if(yych == 'C') goto yy1041;
+		if(yych == 'c') goto yy1041;
 		goto yy53;
-yy952:
-		YYDEBUG(952, *YYCURSOR);
+yy954:
+		YYDEBUG(954, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'O') goto yy1033;
-		if(yych == 'o') goto yy1033;
+		if(yych == 'O') goto yy1035;
+		if(yych == 'o') goto yy1035;
 		goto yy53;
-yy953:
-		YYDEBUG(953, *YYCURSOR);
+yy955:
+		YYDEBUG(955, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'E') {
 			if(yych == 'A') goto yy110;
 			if(yych <= 'D') goto yy53;
-			goto yy1026;
+			goto yy1028;
 		} else {
 			if(yych <= 'a') {
 				if(yych <= '`') goto yy53;
 				goto yy110;
 			} else {
-				if(yych == 'e') goto yy1026;
+				if(yych == 'e') goto yy1028;
 				goto yy53;
 			}
 		}
-yy954:
-		YYDEBUG(954, *YYCURSOR);
+yy956:
+		YYDEBUG(956, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy57;
-		if(yych <= '0') goto yy1024;
-		if(yych <= '9') goto yy1025;
+		if(yych <= '0') goto yy1026;
+		if(yych <= '9') goto yy1027;
 		goto yy57;
-yy955:
-		YYDEBUG(955, *YYCURSOR);
+yy957:
+		YYDEBUG(957, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy57;
-		if(yych <= '2') goto yy993;
-		if(yych <= '9') goto yy972;
+		if(yych <= '2') goto yy995;
+		if(yych <= '9') goto yy974;
 		goto yy57;
-yy956:
-		YYDEBUG(956, *YYCURSOR);
+yy958:
+		YYDEBUG(958, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '0') goto yy973;
-		if(yych <= '1') goto yy974;
+		if(yych <= '0') goto yy975;
+		if(yych <= '1') goto yy976;
 		goto yy53;
-yy957:
-		YYDEBUG(957, *YYCURSOR);
+yy959:
+		YYDEBUG(959, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy57;
-		if(yych <= '9') goto yy972;
+		if(yych <= '9') goto yy974;
 		goto yy57;
-yy958:
-		YYDEBUG(958, *YYCURSOR);
+yy960:
+		YYDEBUG(960, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy57;
-		if(yych <= '5') goto yy968;
-		if(yych <= '6') goto yy969;
+		if(yych <= '5') goto yy970;
+		if(yych <= '6') goto yy971;
 		if(yych <= '9') goto yy51;
 		goto yy57;
-yy959:
-		YYDEBUG(959, *YYCURSOR);
+yy961:
+		YYDEBUG(961, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '5') {
 			if(yych <= '/') goto yy53;
-			if(yych <= '0') goto yy960;
-			if(yych <= '4') goto yy961;
-			goto yy962;
+			if(yych <= '0') goto yy962;
+			if(yych <= '4') goto yy963;
+			goto yy964;
 		} else {
 			if(yych <= 'E') {
 				if(yych <= 'D') goto yy53;
@@ -15546,33 +15578,33 @@ yy959:
 				goto yy53;
 			}
 		}
-yy960:
-		YYDEBUG(960, *YYCURSOR);
+yy962:
+		YYDEBUG(962, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '0') goto yy53;
-		if(yych <= '9') goto yy963;
+		if(yych <= '9') goto yy965;
 		goto yy53;
-yy961:
-		YYDEBUG(961, *YYCURSOR);
+yy963:
+		YYDEBUG(963, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy963;
+		if(yych <= '9') goto yy965;
 		goto yy53;
-yy962:
-		YYDEBUG(962, *YYCURSOR);
+yy964:
+		YYDEBUG(964, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
 		if(yych >= '4') goto yy53;
-yy963:
-		YYDEBUG(963, *YYCURSOR);
+yy965:
+		YYDEBUG(965, *YYCURSOR);
 		yyaccept = 16;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '-') goto yy965;
-		if(yych <= '/') goto yy964;
-		if(yych <= '7') goto yy966;
-yy964:
-		YYDEBUG(964, *YYCURSOR);
-#line 1275 "ext/date/lib/parse_date.re"
+		if(yych == '-') goto yy967;
+		if(yych <= '/') goto yy966;
+		if(yych <= '7') goto yy968;
+yy966:
+		YYDEBUG(966, *YYCURSOR);
+#line 1277 "ext/date/lib/parse_date.re"
 		{
 		timelib_sll w, d;
 		DEBUG_OUTPUT("isoweek");
@@ -15590,17 +15622,17 @@ yy964:
 		TIMELIB_DEINIT;
 		return TIMELIB_ISO_WEEK;
 	}
-#line 15594 "ext/date/lib/parse_date.c"
-yy965:
-		YYDEBUG(965, *YYCURSOR);
+#line 15626 "ext/date/lib/parse_date.c"
+yy967:
+		YYDEBUG(967, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
 		if(yych >= '8') goto yy53;
-yy966:
-		YYDEBUG(966, *YYCURSOR);
+yy968:
+		YYDEBUG(968, *YYCURSOR);
 		++YYCURSOR;
-		YYDEBUG(967, *YYCURSOR);
-#line 1256 "ext/date/lib/parse_date.re"
+		YYDEBUG(969, *YYCURSOR);
+#line 1258 "ext/date/lib/parse_date.re"
 		{
 		timelib_sll w, d;
 		DEBUG_OUTPUT("isoweekday");
@@ -15618,25 +15650,25 @@ yy966:
 		TIMELIB_DEINIT;
 		return TIMELIB_ISO_WEEK;
 	}
-#line 15622 "ext/date/lib/parse_date.c"
-yy968:
-		YYDEBUG(968, *YYCURSOR);
+#line 15654 "ext/date/lib/parse_date.c"
+yy970:
+		YYDEBUG(970, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy57;
-		if(yych <= '9') goto yy970;
+		if(yych <= '9') goto yy972;
 		goto yy57;
-yy969:
-		YYDEBUG(969, *YYCURSOR);
+yy971:
+		YYDEBUG(971, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy57;
-		if(yych <= '6') goto yy970;
+		if(yych <= '6') goto yy972;
 		if(yych <= '9') goto yy51;
 		goto yy57;
-yy970:
-		YYDEBUG(970, *YYCURSOR);
+yy972:
+		YYDEBUG(972, *YYCURSOR);
 		yyaccept = 17;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yybm[0+yych] & 8) {
+		if(yybm[0+yych] & 4) {
 			goto yy51;
 		}
 		if(yych <= 'W') {
@@ -15653,7 +15685,7 @@ yy970:
 					if(yych == 'H') goto yy57;
 					if(yych >= 'M') goto yy57;
 				} else {
-					if(yych <= 'R') goto yy971;
+					if(yych <= 'R') goto yy973;
 					if(yych <= 'T') goto yy57;
 					if(yych >= 'W') goto yy57;
 				}
@@ -15680,9 +15712,9 @@ yy970:
 				}
 			}
 		}
-yy971:
-		YYDEBUG(971, *YYCURSOR);
-#line 1243 "ext/date/lib/parse_date.re"
+yy973:
+		YYDEBUG(973, *YYCURSOR);
+#line 1245 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("pgydotd");
 		TIMELIB_INIT;
@@ -15694,110 +15726,110 @@ yy971:
 		TIMELIB_DEINIT;
 		return TIMELIB_PG_YEARDAY;
 	}
-#line 15698 "ext/date/lib/parse_date.c"
-yy972:
-		YYDEBUG(972, *YYCURSOR);
+#line 15730 "ext/date/lib/parse_date.c"
+yy974:
+		YYDEBUG(974, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy57;
-		if(yych <= '9') goto yy970;
+		if(yych <= '9') goto yy972;
 		goto yy57;
-yy973:
-		YYDEBUG(973, *YYCURSOR);
+yy975:
+		YYDEBUG(975, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '0') goto yy53;
-		if(yych <= '9') goto yy975;
+		if(yych <= '9') goto yy977;
 		goto yy53;
-yy974:
-		YYDEBUG(974, *YYCURSOR);
+yy976:
+		YYDEBUG(976, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
 		if(yych >= '3') goto yy53;
-yy975:
-		YYDEBUG(975, *YYCURSOR);
+yy977:
+		YYDEBUG(977, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych != ':') goto yy53;
-		YYDEBUG(976, *YYCURSOR);
+		YYDEBUG(978, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '0') goto yy977;
-		if(yych <= '2') goto yy978;
-		if(yych <= '3') goto yy979;
+		if(yych <= '0') goto yy979;
+		if(yych <= '2') goto yy980;
+		if(yych <= '3') goto yy981;
 		goto yy53;
-yy977:
-		YYDEBUG(977, *YYCURSOR);
+yy979:
+		YYDEBUG(979, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '0') goto yy53;
-		if(yych <= '9') goto yy980;
+		if(yych <= '9') goto yy982;
 		goto yy53;
-yy978:
-		YYDEBUG(978, *YYCURSOR);
+yy980:
+		YYDEBUG(980, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy980;
+		if(yych <= '9') goto yy982;
 		goto yy53;
-yy979:
-		YYDEBUG(979, *YYCURSOR);
+yy981:
+		YYDEBUG(981, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
 		if(yych >= '2') goto yy53;
-yy980:
-		YYDEBUG(980, *YYCURSOR);
+yy982:
+		YYDEBUG(982, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych != ' ') goto yy53;
-		YYDEBUG(981, *YYCURSOR);
+		YYDEBUG(983, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '1') goto yy982;
-		if(yych <= '2') goto yy983;
+		if(yych <= '1') goto yy984;
+		if(yych <= '2') goto yy985;
 		goto yy53;
-yy982:
-		YYDEBUG(982, *YYCURSOR);
+yy984:
+		YYDEBUG(984, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy984;
+		if(yych <= '9') goto yy986;
 		goto yy53;
-yy983:
-		YYDEBUG(983, *YYCURSOR);
+yy985:
+		YYDEBUG(985, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
 		if(yych >= '4') goto yy53;
-yy984:
-		YYDEBUG(984, *YYCURSOR);
+yy986:
+		YYDEBUG(986, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych != ':') goto yy53;
-		YYDEBUG(985, *YYCURSOR);
+		YYDEBUG(987, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
 		if(yych >= '6') goto yy53;
-		YYDEBUG(986, *YYCURSOR);
+		YYDEBUG(988, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
 		if(yych >= ':') goto yy53;
-		YYDEBUG(987, *YYCURSOR);
+		YYDEBUG(989, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych != ':') goto yy53;
-		YYDEBUG(988, *YYCURSOR);
+		YYDEBUG(990, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy989;
-		if(yych <= '6') goto yy990;
+		if(yych <= '5') goto yy991;
+		if(yych <= '6') goto yy992;
 		goto yy53;
-yy989:
-		YYDEBUG(989, *YYCURSOR);
+yy991:
+		YYDEBUG(991, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy991;
+		if(yych <= '9') goto yy993;
 		goto yy53;
-yy990:
-		YYDEBUG(990, *YYCURSOR);
+yy992:
+		YYDEBUG(992, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych != '0') goto yy53;
-yy991:
-		YYDEBUG(991, *YYCURSOR);
+yy993:
+		YYDEBUG(993, *YYCURSOR);
 		++YYCURSOR;
-yy992:
-		YYDEBUG(992, *YYCURSOR);
-#line 1217 "ext/date/lib/parse_date.re"
+yy994:
+		YYDEBUG(994, *YYCURSOR);
+#line 1219 "ext/date/lib/parse_date.re"
 		{
 		int tz_not_found;
 		DEBUG_OUTPUT("xmlrpc | xmlrpcnocolon | soap | wddx | exif");
@@ -15822,219 +15854,219 @@ yy992:
 		TIMELIB_DEINIT;
 		return TIMELIB_XMLRPC_SOAP;
 	}
-#line 15826 "ext/date/lib/parse_date.c"
-yy993:
-		YYDEBUG(993, *YYCURSOR);
+#line 15858 "ext/date/lib/parse_date.c"
+yy995:
+		YYDEBUG(995, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '2') {
 			if(yych <= '/') goto yy57;
-			if(yych >= '1') goto yy995;
+			if(yych >= '1') goto yy997;
 		} else {
-			if(yych <= '3') goto yy996;
-			if(yych <= '9') goto yy970;
+			if(yych <= '3') goto yy998;
+			if(yych <= '9') goto yy972;
 			goto yy57;
 		}
-yy994:
-		YYDEBUG(994, *YYCURSOR);
+yy996:
+		YYDEBUG(996, *YYCURSOR);
 		yyaccept = 17;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'V') {
 			if(yych <= 'D') {
 				if(yych <= ' ') {
 					if(yych == 0x09) goto yy57;
-					if(yych <= 0x1F) goto yy971;
+					if(yych <= 0x1F) goto yy973;
 					goto yy57;
 				} else {
 					if(yych <= '0') {
-						if(yych <= '/') goto yy971;
+						if(yych <= '/') goto yy973;
 						goto yy51;
 					} else {
-						if(yych <= '9') goto yy997;
-						if(yych <= 'C') goto yy971;
+						if(yych <= '9') goto yy999;
+						if(yych <= 'C') goto yy973;
 						goto yy57;
 					}
 				}
 			} else {
 				if(yych <= 'H') {
 					if(yych == 'F') goto yy57;
-					if(yych <= 'G') goto yy971;
+					if(yych <= 'G') goto yy973;
 					goto yy57;
 				} else {
 					if(yych <= 'M') {
-						if(yych <= 'L') goto yy971;
+						if(yych <= 'L') goto yy973;
 						goto yy57;
 					} else {
-						if(yych <= 'R') goto yy971;
+						if(yych <= 'R') goto yy973;
 						if(yych <= 'T') goto yy57;
-						goto yy971;
+						goto yy973;
 					}
 				}
 			}
 		} else {
 			if(yych <= 'h') {
 				if(yych <= 'c') {
-					if(yych == 'X') goto yy971;
+					if(yych == 'X') goto yy973;
 					if(yych <= 'Y') goto yy57;
-					goto yy971;
+					goto yy973;
 				} else {
 					if(yych <= 'e') {
 						if(yych <= 'd') goto yy57;
-						goto yy971;
+						goto yy973;
 					} else {
-						if(yych == 'g') goto yy971;
+						if(yych == 'g') goto yy973;
 						goto yy57;
 					}
 				}
 			} else {
 				if(yych <= 't') {
 					if(yych == 'm') goto yy57;
-					if(yych <= 'r') goto yy971;
+					if(yych <= 'r') goto yy973;
 					goto yy57;
 				} else {
 					if(yych <= 'w') {
-						if(yych <= 'v') goto yy971;
+						if(yych <= 'v') goto yy973;
 						goto yy57;
 					} else {
 						if(yych == 'y') goto yy57;
-						goto yy971;
+						goto yy973;
 					}
 				}
 			}
 		}
-yy995:
-		YYDEBUG(995, *YYCURSOR);
+yy997:
+		YYDEBUG(997, *YYCURSOR);
 		yyaccept = 17;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'V') {
 			if(yych <= 'D') {
 				if(yych <= ' ') {
 					if(yych == 0x09) goto yy57;
-					if(yych <= 0x1F) goto yy971;
+					if(yych <= 0x1F) goto yy973;
 					goto yy57;
 				} else {
-					if(yych <= '/') goto yy971;
-					if(yych <= '9') goto yy997;
-					if(yych <= 'C') goto yy971;
+					if(yych <= '/') goto yy973;
+					if(yych <= '9') goto yy999;
+					if(yych <= 'C') goto yy973;
 					goto yy57;
 				}
 			} else {
 				if(yych <= 'H') {
 					if(yych == 'F') goto yy57;
-					if(yych <= 'G') goto yy971;
+					if(yych <= 'G') goto yy973;
 					goto yy57;
 				} else {
 					if(yych <= 'M') {
-						if(yych <= 'L') goto yy971;
+						if(yych <= 'L') goto yy973;
 						goto yy57;
 					} else {
-						if(yych <= 'R') goto yy971;
+						if(yych <= 'R') goto yy973;
 						if(yych <= 'T') goto yy57;
-						goto yy971;
+						goto yy973;
 					}
 				}
 			}
 		} else {
 			if(yych <= 'h') {
 				if(yych <= 'c') {
-					if(yych == 'X') goto yy971;
+					if(yych == 'X') goto yy973;
 					if(yych <= 'Y') goto yy57;
-					goto yy971;
+					goto yy973;
 				} else {
 					if(yych <= 'e') {
 						if(yych <= 'd') goto yy57;
-						goto yy971;
+						goto yy973;
 					} else {
-						if(yych == 'g') goto yy971;
+						if(yych == 'g') goto yy973;
 						goto yy57;
 					}
 				}
 			} else {
 				if(yych <= 't') {
 					if(yych == 'm') goto yy57;
-					if(yych <= 'r') goto yy971;
+					if(yych <= 'r') goto yy973;
 					goto yy57;
 				} else {
 					if(yych <= 'w') {
-						if(yych <= 'v') goto yy971;
+						if(yych <= 'v') goto yy973;
 						goto yy57;
 					} else {
 						if(yych == 'y') goto yy57;
-						goto yy971;
+						goto yy973;
 					}
 				}
 			}
 		}
-yy996:
-		YYDEBUG(996, *YYCURSOR);
+yy998:
+		YYDEBUG(998, *YYCURSOR);
 		yyaccept = 17;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'V') {
 			if(yych <= 'D') {
 				if(yych <= ' ') {
 					if(yych == 0x09) goto yy57;
-					if(yych <= 0x1F) goto yy971;
+					if(yych <= 0x1F) goto yy973;
 					goto yy57;
 				} else {
 					if(yych <= '1') {
-						if(yych <= '/') goto yy971;
+						if(yych <= '/') goto yy973;
 					} else {
 						if(yych <= '9') goto yy51;
-						if(yych <= 'C') goto yy971;
+						if(yych <= 'C') goto yy973;
 						goto yy57;
 					}
 				}
 			} else {
 				if(yych <= 'H') {
 					if(yych == 'F') goto yy57;
-					if(yych <= 'G') goto yy971;
+					if(yych <= 'G') goto yy973;
 					goto yy57;
 				} else {
 					if(yych <= 'M') {
-						if(yych <= 'L') goto yy971;
+						if(yych <= 'L') goto yy973;
 						goto yy57;
 					} else {
-						if(yych <= 'R') goto yy971;
+						if(yych <= 'R') goto yy973;
 						if(yych <= 'T') goto yy57;
-						goto yy971;
+						goto yy973;
 					}
 				}
 			}
 		} else {
 			if(yych <= 'h') {
 				if(yych <= 'c') {
-					if(yych == 'X') goto yy971;
+					if(yych == 'X') goto yy973;
 					if(yych <= 'Y') goto yy57;
-					goto yy971;
+					goto yy973;
 				} else {
 					if(yych <= 'e') {
 						if(yych <= 'd') goto yy57;
-						goto yy971;
+						goto yy973;
 					} else {
-						if(yych == 'g') goto yy971;
+						if(yych == 'g') goto yy973;
 						goto yy57;
 					}
 				}
 			} else {
 				if(yych <= 't') {
 					if(yych == 'm') goto yy57;
-					if(yych <= 'r') goto yy971;
+					if(yych <= 'r') goto yy973;
 					goto yy57;
 				} else {
 					if(yych <= 'w') {
-						if(yych <= 'v') goto yy971;
+						if(yych <= 'v') goto yy973;
 						goto yy57;
 					} else {
 						if(yych == 'y') goto yy57;
-						goto yy971;
+						goto yy973;
 					}
 				}
 			}
 		}
-yy997:
-		YYDEBUG(997, *YYCURSOR);
+yy999:
+		YYDEBUG(999, *YYCURSOR);
 		yyaccept = 18;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yybm[0+yych] & 8) {
+		if(yybm[0+yych] & 4) {
 			goto yy51;
 		}
 		if(yych <= 'W') {
@@ -16054,7 +16086,7 @@ yy997:
 					if(yych <= 'S') {
 						if(yych >= 'S') goto yy58;
 					} else {
-						if(yych <= 'T') goto yy999;
+						if(yych <= 'T') goto yy1001;
 						if(yych >= 'W') goto yy62;
 					}
 				}
@@ -16074,9 +16106,9 @@ yy997:
 			} else {
 				if(yych <= 't') {
 					if(yych <= 'm') goto yy59;
-					if(yych <= 'r') goto yy998;
+					if(yych <= 'r') goto yy1000;
 					if(yych <= 's') goto yy58;
-					goto yy1000;
+					goto yy1002;
 				} else {
 					if(yych <= 'w') {
 						if(yych >= 'w') goto yy62;
@@ -16086,9 +16118,9 @@ yy997:
 				}
 			}
 		}
-yy998:
-		YYDEBUG(998, *YYCURSOR);
-#line 1205 "ext/date/lib/parse_date.re"
+yy1000:
+		YYDEBUG(1000, *YYCURSOR);
+#line 1207 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("datenocolon");
 		TIMELIB_INIT;
@@ -16099,17 +16131,17 @@ yy998:
 		TIMELIB_DEINIT;
 		return TIMELIB_DATE_NOCOLON;
 	}
-#line 16103 "ext/date/lib/parse_date.c"
-yy999:
-		YYDEBUG(999, *YYCURSOR);
+#line 16135 "ext/date/lib/parse_date.c"
+yy1001:
+		YYDEBUG(1001, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'H') {
 			if(yych <= '2') {
 				if(yych <= '/') goto yy53;
-				if(yych <= '1') goto yy1014;
-				goto yy1015;
+				if(yych <= '1') goto yy1016;
+				goto yy1017;
 			} else {
-				if(yych <= '9') goto yy1016;
+				if(yych <= '9') goto yy1018;
 				if(yych <= 'G') goto yy53;
 				goto yy66;
 			}
@@ -16123,15 +16155,15 @@ yy999:
 				goto yy53;
 			}
 		}
-yy1000:
-		YYDEBUG(1000, *YYCURSOR);
+yy1002:
+		YYDEBUG(1002, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'H') {
 			if(yych <= '2') {
 				if(yych <= '/') goto yy53;
-				if(yych >= '2') goto yy1002;
+				if(yych >= '2') goto yy1004;
 			} else {
-				if(yych <= '9') goto yy1003;
+				if(yych <= '9') goto yy1005;
 				if(yych <= 'G') goto yy53;
 				goto yy66;
 			}
@@ -16145,267 +16177,267 @@ yy1000:
 				goto yy53;
 			}
 		}
-		YYDEBUG(1001, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1008;
-		if(yych <= '9') goto yy1003;
-		goto yy53;
-yy1002:
-		YYDEBUG(1002, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '3') goto yy1008;
-		if(yych <= '5') goto yy1004;
-		goto yy53;
-yy1003:
 		YYDEBUG(1003, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych >= '6') goto yy53;
+		if(yych <= '5') goto yy1010;
+		if(yych <= '9') goto yy1005;
+		goto yy53;
 yy1004:
 		YYDEBUG(1004, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych >= ':') goto yy53;
+		if(yych <= '3') goto yy1010;
+		if(yych <= '5') goto yy1006;
+		goto yy53;
 yy1005:
 		YYDEBUG(1005, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1006;
-		if(yych <= '6') goto yy1007;
-		goto yy53;
+		if(yych >= '6') goto yy53;
 yy1006:
 		YYDEBUG(1006, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy991;
-		goto yy53;
+		if(yych >= ':') goto yy53;
 yy1007:
 		YYDEBUG(1007, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == '0') goto yy991;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy1008;
+		if(yych <= '6') goto yy1009;
 		goto yy53;
 yy1008:
 		YYDEBUG(1008, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1009;
-		if(yych <= '9') goto yy1005;
+		if(yych <= '9') goto yy993;
 		goto yy53;
 yy1009:
 		YYDEBUG(1009, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1010;
-		if(yych <= '6') goto yy1011;
-		if(yych <= '9') goto yy1005;
+		if(yych == '0') goto yy993;
 		goto yy53;
 yy1010:
 		YYDEBUG(1010, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1012;
-		if(yych <= '6') goto yy1013;
-		if(yych <= '9') goto yy991;
+		if(yych <= '5') goto yy1011;
+		if(yych <= '9') goto yy1007;
 		goto yy53;
 yy1011:
 		YYDEBUG(1011, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '0') goto yy1012;
-		if(yych <= '5') goto yy1006;
-		if(yych <= '6') goto yy1007;
+		if(yych <= '5') goto yy1012;
+		if(yych <= '6') goto yy1013;
+		if(yych <= '9') goto yy1007;
 		goto yy53;
 yy1012:
 		YYDEBUG(1012, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy992;
-		if(yych <= '9') goto yy991;
-		goto yy992;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy1014;
+		if(yych <= '6') goto yy1015;
+		if(yych <= '9') goto yy993;
+		goto yy53;
 yy1013:
 		YYDEBUG(1013, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == '0') goto yy991;
-		goto yy992;
+		if(yych <= '/') goto yy53;
+		if(yych <= '0') goto yy1014;
+		if(yych <= '5') goto yy1008;
+		if(yych <= '6') goto yy1009;
+		goto yy53;
 yy1014:
 		YYDEBUG(1014, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1023;
-		if(yych <= '9') goto yy1016;
-		if(yych <= ':') goto yy1017;
-		goto yy53;
+		if(yych <= '/') goto yy994;
+		if(yych <= '9') goto yy993;
+		goto yy994;
 yy1015:
 		YYDEBUG(1015, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '5') {
-			if(yych <= '/') goto yy53;
-			if(yych <= '3') goto yy1023;
-			goto yy1004;
-		} else {
-			if(yych == ':') goto yy1017;
-			goto yy53;
-		}
+		if(yych == '0') goto yy993;
+		goto yy994;
 yy1016:
 		YYDEBUG(1016, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1004;
-		if(yych != ':') goto yy53;
+		if(yych <= '5') goto yy1025;
+		if(yych <= '9') goto yy1018;
+		if(yych <= ':') goto yy1019;
+		goto yy53;
 yy1017:
 		YYDEBUG(1017, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych >= '6') goto yy53;
+		if(yych <= '5') {
+			if(yych <= '/') goto yy53;
+			if(yych <= '3') goto yy1025;
+			goto yy1006;
+		} else {
+			if(yych == ':') goto yy1019;
+			goto yy53;
+		}
+yy1018:
 		YYDEBUG(1018, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych >= ':') goto yy53;
+		if(yych <= '5') goto yy1006;
+		if(yych != ':') goto yy53;
+yy1019:
 		YYDEBUG(1019, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != ':') goto yy53;
+		if(yych <= '/') goto yy53;
+		if(yych >= '6') goto yy53;
 		YYDEBUG(1020, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1021;
-		if(yych <= '6') goto yy1022;
-		goto yy53;
-yy1021:
+		if(yych >= ':') goto yy53;
 		YYDEBUG(1021, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy991;
-		goto yy53;
-yy1022:
+		if(yych != ':') goto yy53;
 		YYDEBUG(1022, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == '0') goto yy991;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy1023;
+		if(yych <= '6') goto yy1024;
 		goto yy53;
 yy1023:
 		YYDEBUG(1023, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1009;
-		if(yych <= '9') goto yy1005;
-		if(yych <= ':') goto yy1017;
+		if(yych <= '9') goto yy993;
 		goto yy53;
 yy1024:
 		YYDEBUG(1024, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if(yych == '0') goto yy993;
+		goto yy53;
+yy1025:
+		YYDEBUG(1025, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy1011;
+		if(yych <= '9') goto yy1007;
+		if(yych <= ':') goto yy1019;
+		goto yy53;
+yy1026:
+		YYDEBUG(1026, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy57;
 		if(yych <= '0') goto yy51;
-		if(yych <= '9') goto yy970;
+		if(yych <= '9') goto yy972;
 		goto yy57;
-yy1025:
-		YYDEBUG(1025, *YYCURSOR);
+yy1027:
+		YYDEBUG(1027, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '2') {
 			if(yych <= '/') goto yy57;
-			if(yych <= '0') goto yy994;
-			goto yy995;
+			if(yych <= '0') goto yy996;
+			goto yy997;
 		} else {
-			if(yych <= '3') goto yy996;
-			if(yych <= '9') goto yy970;
+			if(yych <= '3') goto yy998;
+			if(yych <= '9') goto yy972;
 			goto yy57;
 		}
-yy1026:
-		YYDEBUG(1026, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'C') goto yy1027;
-		if(yych != 'c') goto yy53;
-yy1027:
-		YYDEBUG(1027, *YYCURSOR);
-		yyaccept = 19;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == 'E') goto yy1028;
-		if(yych != 'e') goto yy943;
 yy1028:
 		YYDEBUG(1028, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'M') goto yy1029;
-		if(yych != 'm') goto yy53;
+		if(yych == 'C') goto yy1029;
+		if(yych != 'c') goto yy53;
 yy1029:
 		YYDEBUG(1029, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'B') goto yy1030;
-		if(yych != 'b') goto yy53;
+		yyaccept = 19;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == 'E') goto yy1030;
+		if(yych != 'e') goto yy945;
 yy1030:
 		YYDEBUG(1030, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy1031;
-		if(yych != 'e') goto yy53;
+		if(yych == 'M') goto yy1031;
+		if(yych != 'm') goto yy53;
 yy1031:
 		YYDEBUG(1031, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy1032;
-		if(yych != 'r') goto yy53;
+		if(yych == 'B') goto yy1032;
+		if(yych != 'b') goto yy53;
 yy1032:
 		YYDEBUG(1032, *YYCURSOR);
 		yych = *++YYCURSOR;
-		goto yy943;
+		if(yych == 'E') goto yy1033;
+		if(yych != 'e') goto yy53;
 yy1033:
 		YYDEBUG(1033, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'V') goto yy1034;
-		if(yych != 'v') goto yy53;
+		if(yych == 'R') goto yy1034;
+		if(yych != 'r') goto yy53;
 yy1034:
 		YYDEBUG(1034, *YYCURSOR);
-		yyaccept = 19;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == 'E') goto yy1035;
-		if(yych != 'e') goto yy943;
+		yych = *++YYCURSOR;
+		goto yy945;
 yy1035:
 		YYDEBUG(1035, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'M') goto yy1036;
-		if(yych != 'm') goto yy53;
+		if(yych == 'V') goto yy1036;
+		if(yych != 'v') goto yy53;
 yy1036:
 		YYDEBUG(1036, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'B') goto yy1037;
-		if(yych != 'b') goto yy53;
+		yyaccept = 19;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == 'E') goto yy1037;
+		if(yych != 'e') goto yy945;
 yy1037:
 		YYDEBUG(1037, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy1038;
-		if(yych != 'e') goto yy53;
+		if(yych == 'M') goto yy1038;
+		if(yych != 'm') goto yy53;
 yy1038:
 		YYDEBUG(1038, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy1032;
-		if(yych == 'r') goto yy1032;
-		goto yy53;
+		if(yych == 'B') goto yy1039;
+		if(yych != 'b') goto yy53;
 yy1039:
 		YYDEBUG(1039, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'T') goto yy1040;
-		if(yych != 't') goto yy53;
+		if(yych == 'E') goto yy1040;
+		if(yych != 'e') goto yy53;
 yy1040:
 		YYDEBUG(1040, *YYCURSOR);
-		yyaccept = 19;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == 'O') goto yy1041;
-		if(yych != 'o') goto yy943;
+		yych = *++YYCURSOR;
+		if(yych == 'R') goto yy1034;
+		if(yych == 'r') goto yy1034;
+		goto yy53;
 yy1041:
 		YYDEBUG(1041, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'B') goto yy1042;
-		if(yych != 'b') goto yy53;
+		if(yych == 'T') goto yy1042;
+		if(yych != 't') goto yy53;
 yy1042:
 		YYDEBUG(1042, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy1043;
-		if(yych != 'e') goto yy53;
+		yyaccept = 19;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == 'O') goto yy1043;
+		if(yych != 'o') goto yy945;
 yy1043:
 		YYDEBUG(1043, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy1032;
-		if(yych == 'r') goto yy1032;
-		goto yy53;
+		if(yych == 'B') goto yy1044;
+		if(yych != 'b') goto yy53;
 yy1044:
 		YYDEBUG(1044, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if(yych == 'E') goto yy1045;
+		if(yych != 'e') goto yy53;
+yy1045:
+		YYDEBUG(1045, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'R') goto yy1034;
+		if(yych == 'r') goto yy1034;
+		goto yy53;
+yy1046:
+		YYDEBUG(1046, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if(yych <= 'P') {
 			if(yych == 'C') goto yy125;
 			if(yych <= 'O') goto yy53;
@@ -16417,373 +16449,373 @@ yy1044:
 				if(yych != 'p') goto yy53;
 			}
 		}
-yy1045:
-		YYDEBUG(1045, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'T') goto yy1046;
-		if(yych != 't') goto yy943;
-yy1046:
-		YYDEBUG(1046, *YYCURSOR);
-		yyaccept = 19;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == 'E') goto yy1047;
-		if(yych != 'e') goto yy943;
 yy1047:
 		YYDEBUG(1047, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'M') goto yy1048;
-		if(yych != 'm') goto yy53;
+		if(yych == 'T') goto yy1048;
+		if(yych != 't') goto yy945;
 yy1048:
 		YYDEBUG(1048, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'B') goto yy1049;
-		if(yych != 'b') goto yy53;
+		yyaccept = 19;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == 'E') goto yy1049;
+		if(yych != 'e') goto yy945;
 yy1049:
 		YYDEBUG(1049, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy1050;
-		if(yych != 'e') goto yy53;
+		if(yych == 'M') goto yy1050;
+		if(yych != 'm') goto yy53;
 yy1050:
 		YYDEBUG(1050, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy1032;
-		if(yych == 'r') goto yy1032;
-		goto yy53;
+		if(yych == 'B') goto yy1051;
+		if(yych != 'b') goto yy53;
 yy1051:
 		YYDEBUG(1051, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'G') goto yy1055;
-		if(yych == 'g') goto yy1055;
-		goto yy53;
+		if(yych == 'E') goto yy1052;
+		if(yych != 'e') goto yy53;
 yy1052:
 		YYDEBUG(1052, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy1053;
-		if(yych != 'r') goto yy53;
+		if(yych == 'R') goto yy1034;
+		if(yych == 'r') goto yy1034;
+		goto yy53;
 yy1053:
 		YYDEBUG(1053, *YYCURSOR);
-		yyaccept = 19;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == 'I') goto yy1054;
-		if(yych != 'i') goto yy943;
+		yych = *++YYCURSOR;
+		if(yych == 'G') goto yy1057;
+		if(yych == 'g') goto yy1057;
+		goto yy53;
 yy1054:
 		YYDEBUG(1054, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'L') goto yy1032;
-		if(yych == 'l') goto yy1032;
-		goto yy53;
+		if(yych == 'R') goto yy1055;
+		if(yych != 'r') goto yy53;
 yy1055:
 		YYDEBUG(1055, *YYCURSOR);
 		yyaccept = 19;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == 'U') goto yy1056;
-		if(yych != 'u') goto yy943;
+		if(yych == 'I') goto yy1056;
+		if(yych != 'i') goto yy945;
 yy1056:
 		YYDEBUG(1056, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'S') goto yy1057;
-		if(yych != 's') goto yy53;
+		if(yych == 'L') goto yy1034;
+		if(yych == 'l') goto yy1034;
+		goto yy53;
 yy1057:
 		YYDEBUG(1057, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'T') goto yy1032;
-		if(yych == 't') goto yy1032;
-		goto yy53;
+		yyaccept = 19;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == 'U') goto yy1058;
+		if(yych != 'u') goto yy945;
 yy1058:
 		YYDEBUG(1058, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if(yych == 'S') goto yy1059;
+		if(yych != 's') goto yy53;
+yy1059:
+		YYDEBUG(1059, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'T') goto yy1034;
+		if(yych == 't') goto yy1034;
+		goto yy53;
+yy1060:
+		YYDEBUG(1060, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if(yych <= 'Y') {
-			if(yych == 'R') goto yy1059;
+			if(yych == 'R') goto yy1061;
 			if(yych <= 'X') goto yy53;
-			goto yy1032;
+			goto yy1034;
 		} else {
 			if(yych <= 'r') {
 				if(yych <= 'q') goto yy53;
 			} else {
-				if(yych == 'y') goto yy1032;
+				if(yych == 'y') goto yy1034;
 				goto yy53;
 			}
 		}
-yy1059:
-		YYDEBUG(1059, *YYCURSOR);
-		yyaccept = 19;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == 'C') goto yy1060;
-		if(yych != 'c') goto yy943;
-yy1060:
-		YYDEBUG(1060, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'H') goto yy1032;
-		if(yych == 'h') goto yy1032;
-		goto yy53;
 yy1061:
 		YYDEBUG(1061, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'B') goto yy1062;
-		if(yych != 'b') goto yy53;
-yy1062:
-		YYDEBUG(1062, *YYCURSOR);
 		yyaccept = 19;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == 'R') goto yy1063;
-		if(yych != 'r') goto yy943;
+		if(yych == 'C') goto yy1062;
+		if(yych != 'c') goto yy945;
+yy1062:
+		YYDEBUG(1062, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'H') goto yy1034;
+		if(yych == 'h') goto yy1034;
+		goto yy53;
 yy1063:
 		YYDEBUG(1063, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'U') goto yy1064;
-		if(yych != 'u') goto yy53;
+		if(yych == 'B') goto yy1064;
+		if(yych != 'b') goto yy53;
 yy1064:
 		YYDEBUG(1064, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy1065;
-		if(yych != 'a') goto yy53;
+		yyaccept = 19;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == 'R') goto yy1065;
+		if(yych != 'r') goto yy945;
 yy1065:
 		YYDEBUG(1065, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy1066;
-		if(yych != 'r') goto yy53;
+		if(yych == 'U') goto yy1066;
+		if(yych != 'u') goto yy53;
 yy1066:
 		YYDEBUG(1066, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy1032;
-		if(yych == 'y') goto yy1032;
-		goto yy53;
+		if(yych == 'A') goto yy1067;
+		if(yych != 'a') goto yy53;
 yy1067:
 		YYDEBUG(1067, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if(yych == 'R') goto yy1068;
+		if(yych != 'r') goto yy53;
+yy1068:
+		YYDEBUG(1068, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'Y') goto yy1034;
+		if(yych == 'y') goto yy1034;
+		goto yy53;
+yy1069:
+		YYDEBUG(1069, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if(yych <= 'N') {
-			if(yych == 'L') goto yy1074;
+			if(yych == 'L') goto yy1076;
 			if(yych <= 'M') goto yy53;
-			goto yy1073;
+			goto yy1075;
 		} else {
 			if(yych <= 'l') {
 				if(yych <= 'k') goto yy53;
-				goto yy1074;
+				goto yy1076;
 			} else {
-				if(yych == 'n') goto yy1073;
+				if(yych == 'n') goto yy1075;
 				goto yy53;
 			}
 		}
-yy1068:
-		YYDEBUG(1068, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'N') goto yy1069;
-		if(yych != 'n') goto yy53;
-yy1069:
-		YYDEBUG(1069, *YYCURSOR);
-		yyaccept = 19;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == 'U') goto yy1070;
-		if(yych != 'u') goto yy943;
 yy1070:
 		YYDEBUG(1070, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy1071;
-		if(yych != 'a') goto yy53;
+		if(yych == 'N') goto yy1071;
+		if(yych != 'n') goto yy53;
 yy1071:
 		YYDEBUG(1071, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy1072;
-		if(yych != 'r') goto yy53;
+		yyaccept = 19;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == 'U') goto yy1072;
+		if(yych != 'u') goto yy945;
 yy1072:
 		YYDEBUG(1072, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy1032;
-		if(yych == 'y') goto yy1032;
-		goto yy53;
+		if(yych == 'A') goto yy1073;
+		if(yych != 'a') goto yy53;
 yy1073:
 		YYDEBUG(1073, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy1032;
-		if(yych == 'e') goto yy1032;
-		goto yy943;
+		if(yych == 'R') goto yy1074;
+		if(yych != 'r') goto yy53;
 yy1074:
 		YYDEBUG(1074, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy1032;
-		if(yych == 'y') goto yy1032;
-		goto yy943;
+		if(yych == 'Y') goto yy1034;
+		if(yych == 'y') goto yy1034;
+		goto yy53;
 yy1075:
 		YYDEBUG(1075, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'I') goto yy1032;
-		goto yy943;
+		if(yych == 'E') goto yy1034;
+		if(yych == 'e') goto yy1034;
+		goto yy945;
 yy1076:
 		YYDEBUG(1076, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != 'I') goto yy943;
+		if(yych == 'Y') goto yy1034;
+		if(yych == 'y') goto yy1034;
+		goto yy945;
+yy1077:
 		YYDEBUG(1077, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'I') goto yy1032;
-		goto yy943;
+		if(yych == 'I') goto yy1034;
+		goto yy945;
 yy1078:
 		YYDEBUG(1078, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'I') goto yy1032;
-		goto yy943;
-yy1079:
+		if(yych != 'I') goto yy945;
 		YYDEBUG(1079, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '0') goto yy1094;
-		if(yych <= '9') goto yy1093;
-		goto yy53;
+		if(yych == 'I') goto yy1034;
+		goto yy945;
 yy1080:
 		YYDEBUG(1080, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy1092;
-		goto yy53;
+		if(yych == 'I') goto yy1034;
+		goto yy945;
 yy1081:
 		YYDEBUG(1081, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1090;
-		if(yych <= '6') goto yy1089;
+		if(yych <= '0') goto yy1096;
+		if(yych <= '9') goto yy1095;
 		goto yy53;
 yy1082:
 		YYDEBUG(1082, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy1061;
-		if(yych == 'e') goto yy1061;
+		if(yych <= '/') goto yy53;
+		if(yych <= '9') goto yy1094;
 		goto yy53;
 yy1083:
 		YYDEBUG(1083, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy1058;
-		if(yych == 'a') goto yy1058;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy1092;
+		if(yych <= '6') goto yy1091;
 		goto yy53;
 yy1084:
 		YYDEBUG(1084, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy1088;
-		if(yych == 'e') goto yy1088;
+		if(yych == 'E') goto yy1063;
+		if(yych == 'e') goto yy1063;
 		goto yy53;
 yy1085:
 		YYDEBUG(1085, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy1026;
-		if(yych == 'e') goto yy1026;
+		if(yych == 'A') goto yy1060;
+		if(yych == 'a') goto yy1060;
 		goto yy53;
 yy1086:
 		YYDEBUG(1086, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'E') goto yy1090;
+		if(yych == 'e') goto yy1090;
+		goto yy53;
+yy1087:
+		YYDEBUG(1087, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'E') goto yy1028;
+		if(yych == 'e') goto yy1028;
+		goto yy53;
+yy1088:
+		YYDEBUG(1088, *YYCURSOR);
 		++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 9) YYFILL(9);
 		yych = *YYCURSOR;
-yy1087:
-		YYDEBUG(1087, *YYCURSOR);
+yy1089:
+		YYDEBUG(1089, *YYCURSOR);
 		YYDEBUG(-1, yych);
 		switch(yych) {
 		case 0x09:
 		case ' ':
 		case '-':
-		case '.':	goto yy1086;
+		case '.':	goto yy1088;
 		case 'A':
-		case 'a':	goto yy949;
+		case 'a':	goto yy951;
 		case 'D':
-		case 'd':	goto yy1085;
+		case 'd':	goto yy1087;
 		case 'F':
-		case 'f':	goto yy1082;
-		case 'I':	goto yy942;
+		case 'f':	goto yy1084;
+		case 'I':	goto yy944;
 		case 'J':
-		case 'j':	goto yy946;
+		case 'j':	goto yy948;
 		case 'M':
-		case 'm':	goto yy1083;
+		case 'm':	goto yy1085;
 		case 'N':
-		case 'n':	goto yy952;
+		case 'n':	goto yy954;
 		case 'O':
-		case 'o':	goto yy951;
+		case 'o':	goto yy953;
 		case 'S':
-		case 's':	goto yy1084;
-		case 'V':	goto yy944;
-		case 'X':	goto yy945;
+		case 's':	goto yy1086;
+		case 'V':	goto yy946;
+		case 'X':	goto yy947;
 		default:	goto yy53;
 		}
-yy1088:
-		YYDEBUG(1088, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'P') goto yy1045;
-		if(yych == 'p') goto yy1045;
-		goto yy53;
-yy1089:
-		YYDEBUG(1089, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '6') goto yy1091;
-		goto yy53;
 yy1090:
 		YYDEBUG(1090, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych >= ':') goto yy53;
+		if(yych == 'P') goto yy1047;
+		if(yych == 'p') goto yy1047;
+		goto yy53;
 yy1091:
 		YYDEBUG(1091, *YYCURSOR);
 		yych = *++YYCURSOR;
-		goto yy971;
+		if(yych <= '/') goto yy53;
+		if(yych <= '6') goto yy1093;
+		goto yy53;
 yy1092:
 		YYDEBUG(1092, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy1091;
-		goto yy53;
+		if(yych >= ':') goto yy53;
 yy1093:
 		YYDEBUG(1093, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy1091;
-		goto yy53;
+		goto yy973;
 yy1094:
 		YYDEBUG(1094, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '0') goto yy53;
-		if(yych <= '9') goto yy1091;
+		if(yych <= '/') goto yy53;
+		if(yych <= '9') goto yy1093;
 		goto yy53;
 yy1095:
 		YYDEBUG(1095, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '.') goto yy53;
-		if(yych <= '/') goto yy1098;
-		if(yych <= '0') goto yy1097;
-		if(yych <= '9') goto yy1108;
+		if(yych <= '/') goto yy53;
+		if(yych <= '9') goto yy1093;
 		goto yy53;
 yy1096:
 		YYDEBUG(1096, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '.') goto yy53;
-		if(yych <= '/') goto yy1098;
-		if(yych <= '2') goto yy1108;
+		if(yych <= '0') goto yy53;
+		if(yych <= '9') goto yy1093;
 		goto yy53;
 yy1097:
 		YYDEBUG(1097, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != '/') goto yy53;
+		if(yych <= '.') goto yy53;
+		if(yych <= '/') goto yy1100;
+		if(yych <= '0') goto yy1099;
+		if(yych <= '9') goto yy1110;
+		goto yy53;
 yy1098:
 		YYDEBUG(1098, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '2') goto yy1099;
-		if(yych <= '3') goto yy1101;
-		if(yych <= '9') goto yy1102;
+		if(yych <= '.') goto yy53;
+		if(yych <= '/') goto yy1100;
+		if(yych <= '2') goto yy1110;
 		goto yy53;
 yy1099:
 		YYDEBUG(1099, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych != '/') goto yy53;
+yy1100:
+		YYDEBUG(1100, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy53;
+		if(yych <= '2') goto yy1101;
+		if(yych <= '3') goto yy1103;
+		if(yych <= '9') goto yy1104;
+		goto yy53;
+yy1101:
+		YYDEBUG(1101, *YYCURSOR);
 		yyaccept = 20;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
-			if(yych <= '/') goto yy1100;
-			if(yych <= '9') goto yy1102;
-			if(yych >= 'n') goto yy1104;
+			if(yych <= '/') goto yy1102;
+			if(yych <= '9') goto yy1104;
+			if(yych >= 'n') goto yy1106;
 		} else {
 			if(yych <= 'r') {
-				if(yych >= 'r') goto yy1105;
+				if(yych >= 'r') goto yy1107;
 			} else {
-				if(yych <= 's') goto yy1103;
-				if(yych <= 't') goto yy1106;
+				if(yych <= 's') goto yy1105;
+				if(yych <= 't') goto yy1108;
 			}
 		}
-yy1100:
-		YYDEBUG(1100, *YYCURSOR);
-#line 1090 "ext/date/lib/parse_date.re"
+yy1102:
+		YYDEBUG(1102, *YYCURSOR);
+#line 1092 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("iso8601date | iso8601dateslash | dateslash");
 		TIMELIB_INIT;
@@ -16794,243 +16826,243 @@ yy1100:
 		TIMELIB_DEINIT;
 		return TIMELIB_ISO_DATE;
 	}
-#line 16798 "ext/date/lib/parse_date.c"
-yy1101:
-		YYDEBUG(1101, *YYCURSOR);
+#line 16830 "ext/date/lib/parse_date.c"
+yy1103:
+		YYDEBUG(1103, *YYCURSOR);
 		yyaccept = 20;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
-			if(yych <= '/') goto yy1100;
-			if(yych <= '1') goto yy1102;
-			if(yych <= 'm') goto yy1100;
-			goto yy1104;
+			if(yych <= '/') goto yy1102;
+			if(yych <= '1') goto yy1104;
+			if(yych <= 'm') goto yy1102;
+			goto yy1106;
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'q') goto yy1100;
-				goto yy1105;
+				if(yych <= 'q') goto yy1102;
+				goto yy1107;
 			} else {
-				if(yych <= 's') goto yy1103;
-				if(yych <= 't') goto yy1106;
-				goto yy1100;
+				if(yych <= 's') goto yy1105;
+				if(yych <= 't') goto yy1108;
+				goto yy1102;
 			}
 		}
-yy1102:
-		YYDEBUG(1102, *YYCURSOR);
+yy1104:
+		YYDEBUG(1104, *YYCURSOR);
 		yyaccept = 20;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'q') {
-			if(yych == 'n') goto yy1104;
-			goto yy1100;
+			if(yych == 'n') goto yy1106;
+			goto yy1102;
 		} else {
-			if(yych <= 'r') goto yy1105;
-			if(yych <= 's') goto yy1103;
-			if(yych <= 't') goto yy1106;
-			goto yy1100;
+			if(yych <= 'r') goto yy1107;
+			if(yych <= 's') goto yy1105;
+			if(yych <= 't') goto yy1108;
+			goto yy1102;
 		}
-yy1103:
-		YYDEBUG(1103, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 't') goto yy1107;
-		goto yy53;
-yy1104:
-		YYDEBUG(1104, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'd') goto yy1107;
-		goto yy53;
 yy1105:
 		YYDEBUG(1105, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'd') goto yy1107;
+		if(yych == 't') goto yy1109;
 		goto yy53;
 yy1106:
 		YYDEBUG(1106, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != 'h') goto yy53;
+		if(yych == 'd') goto yy1109;
+		goto yy53;
 yy1107:
 		YYDEBUG(1107, *YYCURSOR);
 		yych = *++YYCURSOR;
-		goto yy1100;
+		if(yych == 'd') goto yy1109;
+		goto yy53;
 yy1108:
 		YYDEBUG(1108, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != '/') goto yy53;
+		if(yych != 'h') goto yy53;
+yy1109:
 		YYDEBUG(1109, *YYCURSOR);
 		yych = *++YYCURSOR;
+		goto yy1102;
+yy1110:
+		YYDEBUG(1110, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych != '/') goto yy53;
+		YYDEBUG(1111, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if(yych <= '2') {
 			if(yych <= '/') goto yy53;
-			if(yych >= '1') goto yy1111;
+			if(yych >= '1') goto yy1113;
 		} else {
-			if(yych <= '3') goto yy1112;
-			if(yych <= '9') goto yy1102;
+			if(yych <= '3') goto yy1114;
+			if(yych <= '9') goto yy1104;
 			goto yy53;
 		}
-		YYDEBUG(1110, *YYCURSOR);
+		YYDEBUG(1112, *YYCURSOR);
 		yyaccept = 20;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
 			if(yych <= '0') {
-				if(yych <= '/') goto yy1100;
-				goto yy1102;
-			} else {
-				if(yych <= '9') goto yy1113;
-				if(yych <= 'm') goto yy1100;
+				if(yych <= '/') goto yy1102;
 				goto yy1104;
+			} else {
+				if(yych <= '9') goto yy1115;
+				if(yych <= 'm') goto yy1102;
+				goto yy1106;
 			}
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'q') goto yy1100;
-				goto yy1105;
+				if(yych <= 'q') goto yy1102;
+				goto yy1107;
 			} else {
-				if(yych <= 's') goto yy1103;
-				if(yych <= 't') goto yy1106;
-				goto yy1100;
+				if(yych <= 's') goto yy1105;
+				if(yych <= 't') goto yy1108;
+				goto yy1102;
 			}
 		}
-yy1111:
-		YYDEBUG(1111, *YYCURSOR);
+yy1113:
+		YYDEBUG(1113, *YYCURSOR);
 		yyaccept = 20;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
-			if(yych <= '/') goto yy1100;
-			if(yych <= '9') goto yy1113;
-			if(yych <= 'm') goto yy1100;
-			goto yy1104;
+			if(yych <= '/') goto yy1102;
+			if(yych <= '9') goto yy1115;
+			if(yych <= 'm') goto yy1102;
+			goto yy1106;
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'q') goto yy1100;
-				goto yy1105;
+				if(yych <= 'q') goto yy1102;
+				goto yy1107;
 			} else {
-				if(yych <= 's') goto yy1103;
-				if(yych <= 't') goto yy1106;
-				goto yy1100;
+				if(yych <= 's') goto yy1105;
+				if(yych <= 't') goto yy1108;
+				goto yy1102;
 			}
 		}
-yy1112:
-		YYDEBUG(1112, *YYCURSOR);
+yy1114:
+		YYDEBUG(1114, *YYCURSOR);
 		yyaccept = 20;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
-			if(yych <= '/') goto yy1100;
-			if(yych <= '1') goto yy1113;
-			if(yych <= 'm') goto yy1100;
-			goto yy1104;
+			if(yych <= '/') goto yy1102;
+			if(yych <= '1') goto yy1115;
+			if(yych <= 'm') goto yy1102;
+			goto yy1106;
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'q') goto yy1100;
-				goto yy1105;
+				if(yych <= 'q') goto yy1102;
+				goto yy1107;
 			} else {
-				if(yych <= 's') goto yy1103;
-				if(yych <= 't') goto yy1106;
-				goto yy1100;
+				if(yych <= 's') goto yy1105;
+				if(yych <= 't') goto yy1108;
+				goto yy1102;
 			}
 		}
-yy1113:
-		YYDEBUG(1113, *YYCURSOR);
+yy1115:
+		YYDEBUG(1115, *YYCURSOR);
 		yyaccept = 20;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
-			if(yych == '/') goto yy1107;
-			if(yych <= 'm') goto yy1100;
-			goto yy1104;
+			if(yych == '/') goto yy1109;
+			if(yych <= 'm') goto yy1102;
+			goto yy1106;
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'q') goto yy1100;
-				goto yy1105;
+				if(yych <= 'q') goto yy1102;
+				goto yy1107;
 			} else {
-				if(yych <= 's') goto yy1103;
-				if(yych <= 't') goto yy1106;
-				goto yy1100;
+				if(yych <= 's') goto yy1105;
+				if(yych <= 't') goto yy1108;
+				goto yy1102;
 			}
 		}
-yy1114:
-		YYDEBUG(1114, *YYCURSOR);
+yy1116:
+		YYDEBUG(1116, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
-			if(yych == 'A') goto yy1191;
+			if(yych == 'A') goto yy1193;
 			if(yych <= 'T') goto yy53;
-			goto yy1190;
+			goto yy1192;
 		} else {
 			if(yych <= 'a') {
 				if(yych <= '`') goto yy53;
-				goto yy1191;
+				goto yy1193;
 			} else {
-				if(yych == 'u') goto yy1190;
+				if(yych == 'u') goto yy1192;
 				goto yy53;
 			}
 		}
-yy1115:
-		YYDEBUG(1115, *YYCURSOR);
+yy1117:
+		YYDEBUG(1117, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy1188;
-		if(yych == 'e') goto yy1188;
+		if(yych == 'E') goto yy1190;
+		if(yych == 'e') goto yy1190;
 		goto yy53;
-yy1116:
-		YYDEBUG(1116, *YYCURSOR);
+yy1118:
+		YYDEBUG(1118, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy1185;
-		if(yych == 'a') goto yy1185;
+		if(yych == 'A') goto yy1187;
+		if(yych == 'a') goto yy1187;
 		goto yy53;
-yy1117:
-		YYDEBUG(1117, *YYCURSOR);
+yy1119:
+		YYDEBUG(1119, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
-			if(yych == 'P') goto yy1182;
+			if(yych == 'P') goto yy1184;
 			if(yych <= 'T') goto yy53;
-			goto yy1181;
+			goto yy1183;
 		} else {
 			if(yych <= 'p') {
 				if(yych <= 'o') goto yy53;
-				goto yy1182;
+				goto yy1184;
 			} else {
-				if(yych == 'u') goto yy1181;
+				if(yych == 'u') goto yy1183;
 				goto yy53;
 			}
 		}
-yy1118:
-		YYDEBUG(1118, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy1178;
-		if(yych == 'e') goto yy1178;
-		goto yy53;
-yy1119:
-		YYDEBUG(1119, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'C') goto yy1176;
-		if(yych == 'c') goto yy1176;
-		goto yy53;
 yy1120:
 		YYDEBUG(1120, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'O') goto yy1174;
-		if(yych == 'o') goto yy1174;
+		if(yych == 'E') goto yy1180;
+		if(yych == 'e') goto yy1180;
 		goto yy53;
 yy1121:
 		YYDEBUG(1121, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'E') goto yy1172;
-		if(yych == 'e') goto yy1172;
+		if(yych == 'C') goto yy1178;
+		if(yych == 'c') goto yy1178;
 		goto yy53;
 yy1122:
 		YYDEBUG(1122, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '0') goto yy960;
-		if(yych <= '4') goto yy961;
-		if(yych <= '5') goto yy962;
+		if(yych == 'O') goto yy1176;
+		if(yych == 'o') goto yy1176;
 		goto yy53;
 yy1123:
 		YYDEBUG(1123, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'E') goto yy1174;
+		if(yych == 'e') goto yy1174;
+		goto yy53;
+yy1124:
+		YYDEBUG(1124, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy53;
+		if(yych <= '0') goto yy962;
+		if(yych <= '4') goto yy963;
+		if(yych <= '5') goto yy964;
+		goto yy53;
+yy1125:
+		YYDEBUG(1125, *YYCURSOR);
 		yyaccept = 21;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '-') goto yy1127;
+			if(yych == '-') goto yy1129;
 		} else {
-			if(yych <= '0') goto yy1126;
-			if(yych <= '9') goto yy1146;
+			if(yych <= '0') goto yy1128;
+			if(yych <= '9') goto yy1148;
 		}
-yy1124:
-		YYDEBUG(1124, *YYCURSOR);
-#line 1102 "ext/date/lib/parse_date.re"
+yy1126:
+		YYDEBUG(1126, *YYCURSOR);
+#line 1104 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("gnudateshorter");
 		TIMELIB_INIT;
@@ -17041,794 +17073,794 @@ yy1124:
 		TIMELIB_DEINIT;
 		return TIMELIB_ISO_DATE;
 	}
-#line 17045 "ext/date/lib/parse_date.c"
-yy1125:
-		YYDEBUG(1125, *YYCURSOR);
+#line 17077 "ext/date/lib/parse_date.c"
+yy1127:
+		YYDEBUG(1127, *YYCURSOR);
 		yyaccept = 21;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '-') goto yy1127;
-		if(yych <= '/') goto yy1124;
-		if(yych <= '2') goto yy1146;
-		goto yy1124;
-yy1126:
-		YYDEBUG(1126, *YYCURSOR);
+		if(yych == '-') goto yy1129;
+		if(yych <= '/') goto yy1126;
+		if(yych <= '2') goto yy1148;
+		goto yy1126;
+yy1128:
+		YYDEBUG(1128, *YYCURSOR);
 		yyaccept = 21;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych != '-') goto yy1124;
-yy1127:
-		YYDEBUG(1127, *YYCURSOR);
+		if(yych != '-') goto yy1126;
+yy1129:
+		YYDEBUG(1129, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '2') goto yy1128;
-		if(yych <= '3') goto yy1129;
-		if(yych <= '9') goto yy1130;
+		if(yych <= '2') goto yy1130;
+		if(yych <= '3') goto yy1131;
+		if(yych <= '9') goto yy1132;
 		goto yy53;
-yy1128:
-		YYDEBUG(1128, *YYCURSOR);
+yy1130:
+		YYDEBUG(1130, *YYCURSOR);
 		yyaccept = 13;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'm') {
 			if(yych <= '9') {
-				if(yych <= '/') goto yy825;
-				goto yy1130;
+				if(yych <= '/') goto yy827;
+				goto yy1132;
 			} else {
-				if(yych == 'T') goto yy1135;
-				goto yy825;
+				if(yych == 'T') goto yy1137;
+				goto yy827;
 			}
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'n') goto yy1132;
-				if(yych <= 'q') goto yy825;
-				goto yy1133;
+				if(yych <= 'n') goto yy1134;
+				if(yych <= 'q') goto yy827;
+				goto yy1135;
 			} else {
-				if(yych <= 's') goto yy1131;
-				if(yych <= 't') goto yy1134;
-				goto yy825;
+				if(yych <= 's') goto yy1133;
+				if(yych <= 't') goto yy1136;
+				goto yy827;
 			}
 		}
-yy1129:
-		YYDEBUG(1129, *YYCURSOR);
+yy1131:
+		YYDEBUG(1131, *YYCURSOR);
 		yyaccept = 13;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'm') {
 			if(yych <= '1') {
-				if(yych <= '/') goto yy825;
+				if(yych <= '/') goto yy827;
 			} else {
-				if(yych == 'T') goto yy1135;
-				goto yy825;
+				if(yych == 'T') goto yy1137;
+				goto yy827;
 			}
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'n') goto yy1132;
-				if(yych <= 'q') goto yy825;
-				goto yy1133;
+				if(yych <= 'n') goto yy1134;
+				if(yych <= 'q') goto yy827;
+				goto yy1135;
 			} else {
-				if(yych <= 's') goto yy1131;
-				if(yych <= 't') goto yy1134;
-				goto yy825;
+				if(yych <= 's') goto yy1133;
+				if(yych <= 't') goto yy1136;
+				goto yy827;
 			}
 		}
-yy1130:
-		YYDEBUG(1130, *YYCURSOR);
+yy1132:
+		YYDEBUG(1132, *YYCURSOR);
 		yyaccept = 13;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
-			if(yych == 'T') goto yy1135;
-			if(yych <= 'm') goto yy825;
-			goto yy1132;
+			if(yych == 'T') goto yy1137;
+			if(yych <= 'm') goto yy827;
+			goto yy1134;
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'q') goto yy825;
-				goto yy1133;
+				if(yych <= 'q') goto yy827;
+				goto yy1135;
 			} else {
-				if(yych <= 's') goto yy1131;
-				if(yych <= 't') goto yy1134;
-				goto yy825;
+				if(yych <= 's') goto yy1133;
+				if(yych <= 't') goto yy1136;
+				goto yy827;
 			}
 		}
-yy1131:
-		YYDEBUG(1131, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 't') goto yy1145;
-		goto yy53;
-yy1132:
-		YYDEBUG(1132, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych == 'd') goto yy1145;
-		goto yy53;
 yy1133:
 		YYDEBUG(1133, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'd') goto yy1145;
+		if(yych == 't') goto yy1147;
 		goto yy53;
 yy1134:
 		YYDEBUG(1134, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'h') goto yy1145;
+		if(yych == 'd') goto yy1147;
 		goto yy53;
 yy1135:
 		YYDEBUG(1135, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '1') goto yy1136;
-		if(yych <= '2') goto yy1137;
-		if(yych <= '9') goto yy1138;
+		if(yych == 'd') goto yy1147;
 		goto yy53;
 yy1136:
 		YYDEBUG(1136, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy1138;
-		if(yych <= ':') goto yy1139;
+		if(yych == 'h') goto yy1147;
 		goto yy53;
 yy1137:
 		YYDEBUG(1137, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '3') goto yy1138;
-		if(yych == ':') goto yy1139;
+		if(yych <= '1') goto yy1138;
+		if(yych <= '2') goto yy1139;
+		if(yych <= '9') goto yy1140;
 		goto yy53;
 yy1138:
 		YYDEBUG(1138, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != ':') goto yy53;
+		if(yych <= '/') goto yy53;
+		if(yych <= '9') goto yy1140;
+		if(yych <= ':') goto yy1141;
+		goto yy53;
 yy1139:
 		YYDEBUG(1139, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1140;
-		if(yych <= '9') goto yy1141;
+		if(yych <= '3') goto yy1140;
+		if(yych == ':') goto yy1141;
 		goto yy53;
 yy1140:
 		YYDEBUG(1140, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy1141;
-		if(yych <= ':') goto yy1142;
-		goto yy53;
+		if(yych != ':') goto yy53;
 yy1141:
 		YYDEBUG(1141, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != ':') goto yy53;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy1142;
+		if(yych <= '9') goto yy1143;
+		goto yy53;
 yy1142:
 		YYDEBUG(1142, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1143;
-		if(yych <= '6') goto yy1144;
-		if(yych <= '9') goto yy991;
+		if(yych <= '9') goto yy1143;
+		if(yych <= ':') goto yy1144;
 		goto yy53;
 yy1143:
 		YYDEBUG(1143, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy992;
-		if(yych <= '9') goto yy991;
-		goto yy992;
+		if(yych != ':') goto yy53;
 yy1144:
 		YYDEBUG(1144, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == '0') goto yy991;
-		goto yy992;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy1145;
+		if(yych <= '6') goto yy1146;
+		if(yych <= '9') goto yy993;
+		goto yy53;
 yy1145:
 		YYDEBUG(1145, *YYCURSOR);
-		yyaccept = 13;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == 'T') goto yy1135;
-		goto yy825;
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy994;
+		if(yych <= '9') goto yy993;
+		goto yy994;
 yy1146:
 		YYDEBUG(1146, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == '0') goto yy993;
+		goto yy994;
+yy1147:
+		YYDEBUG(1147, *YYCURSOR);
+		yyaccept = 13;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == 'T') goto yy1137;
+		goto yy827;
+yy1148:
+		YYDEBUG(1148, *YYCURSOR);
 		yyaccept = 21;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych != '-') goto yy1124;
-		YYDEBUG(1147, *YYCURSOR);
+		if(yych != '-') goto yy1126;
+		YYDEBUG(1149, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '2') {
 			if(yych <= '/') goto yy53;
-			if(yych >= '1') goto yy1149;
+			if(yych >= '1') goto yy1151;
 		} else {
-			if(yych <= '3') goto yy1150;
-			if(yych <= '9') goto yy1130;
+			if(yych <= '3') goto yy1152;
+			if(yych <= '9') goto yy1132;
 			goto yy53;
 		}
-		YYDEBUG(1148, *YYCURSOR);
+		YYDEBUG(1150, *YYCURSOR);
 		yyaccept = 13;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'm') {
 			if(yych <= '9') {
-				if(yych <= '/') goto yy825;
-				if(yych <= '0') goto yy1130;
-				goto yy1151;
+				if(yych <= '/') goto yy827;
+				if(yych <= '0') goto yy1132;
+				goto yy1153;
 			} else {
-				if(yych == 'T') goto yy1135;
-				goto yy825;
+				if(yych == 'T') goto yy1137;
+				goto yy827;
 			}
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'n') goto yy1132;
-				if(yych <= 'q') goto yy825;
-				goto yy1133;
+				if(yych <= 'n') goto yy1134;
+				if(yych <= 'q') goto yy827;
+				goto yy1135;
 			} else {
-				if(yych <= 's') goto yy1131;
-				if(yych <= 't') goto yy1134;
-				goto yy825;
+				if(yych <= 's') goto yy1133;
+				if(yych <= 't') goto yy1136;
+				goto yy827;
 			}
 		}
-yy1149:
-		YYDEBUG(1149, *YYCURSOR);
+yy1151:
+		YYDEBUG(1151, *YYCURSOR);
 		yyaccept = 13;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'm') {
 			if(yych <= '9') {
-				if(yych <= '/') goto yy825;
-				goto yy1151;
+				if(yych <= '/') goto yy827;
+				goto yy1153;
 			} else {
-				if(yych == 'T') goto yy1135;
-				goto yy825;
+				if(yych == 'T') goto yy1137;
+				goto yy827;
 			}
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'n') goto yy1132;
-				if(yych <= 'q') goto yy825;
-				goto yy1133;
+				if(yych <= 'n') goto yy1134;
+				if(yych <= 'q') goto yy827;
+				goto yy1135;
 			} else {
-				if(yych <= 's') goto yy1131;
-				if(yych <= 't') goto yy1134;
-				goto yy825;
+				if(yych <= 's') goto yy1133;
+				if(yych <= 't') goto yy1136;
+				goto yy827;
 			}
 		}
-yy1150:
-		YYDEBUG(1150, *YYCURSOR);
+yy1152:
+		YYDEBUG(1152, *YYCURSOR);
 		yyaccept = 13;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'm') {
 			if(yych <= '1') {
-				if(yych <= '/') goto yy825;
+				if(yych <= '/') goto yy827;
 			} else {
-				if(yych == 'T') goto yy1135;
-				goto yy825;
+				if(yych == 'T') goto yy1137;
+				goto yy827;
 			}
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'n') goto yy1132;
-				if(yych <= 'q') goto yy825;
-				goto yy1133;
+				if(yych <= 'n') goto yy1134;
+				if(yych <= 'q') goto yy827;
+				goto yy1135;
 			} else {
-				if(yych <= 's') goto yy1131;
-				if(yych <= 't') goto yy1134;
-				goto yy825;
+				if(yych <= 's') goto yy1133;
+				if(yych <= 't') goto yy1136;
+				goto yy827;
 			}
 		}
-yy1151:
-		YYDEBUG(1151, *YYCURSOR);
+yy1153:
+		YYDEBUG(1153, *YYCURSOR);
 		yyaccept = 20;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'n') {
-			if(yych == 'T') goto yy1152;
-			if(yych <= 'm') goto yy1100;
-			goto yy1132;
+			if(yych == 'T') goto yy1154;
+			if(yych <= 'm') goto yy1102;
+			goto yy1134;
 		} else {
 			if(yych <= 'r') {
-				if(yych <= 'q') goto yy1100;
-				goto yy1133;
+				if(yych <= 'q') goto yy1102;
+				goto yy1135;
 			} else {
-				if(yych <= 's') goto yy1131;
-				if(yych <= 't') goto yy1134;
-				goto yy1100;
+				if(yych <= 's') goto yy1133;
+				if(yych <= 't') goto yy1136;
+				goto yy1102;
 			}
 		}
-yy1152:
-		YYDEBUG(1152, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '1') goto yy1153;
-		if(yych <= '2') goto yy1154;
-		if(yych <= '9') goto yy1138;
-		goto yy53;
-yy1153:
-		YYDEBUG(1153, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy1155;
-		if(yych <= ':') goto yy1139;
-		goto yy53;
 yy1154:
 		YYDEBUG(1154, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '3') goto yy1155;
-		if(yych == ':') goto yy1139;
+		if(yych <= '1') goto yy1155;
+		if(yych <= '2') goto yy1156;
+		if(yych <= '9') goto yy1140;
 		goto yy53;
 yy1155:
 		YYDEBUG(1155, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != ':') goto yy53;
+		if(yych <= '/') goto yy53;
+		if(yych <= '9') goto yy1157;
+		if(yych <= ':') goto yy1141;
+		goto yy53;
+yy1156:
 		YYDEBUG(1156, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1157;
-		if(yych <= '9') goto yy1141;
+		if(yych <= '3') goto yy1157;
+		if(yych == ':') goto yy1141;
 		goto yy53;
 yy1157:
 		YYDEBUG(1157, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy1158;
-		if(yych <= ':') goto yy1142;
-		goto yy53;
-yy1158:
+		if(yych != ':') goto yy53;
 		YYDEBUG(1158, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != ':') goto yy53;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy1159;
+		if(yych <= '9') goto yy1143;
+		goto yy53;
+yy1159:
 		YYDEBUG(1159, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1160;
-		if(yych <= '6') goto yy1161;
-		if(yych <= '9') goto yy991;
+		if(yych <= '9') goto yy1160;
+		if(yych <= ':') goto yy1144;
 		goto yy53;
 yy1160:
 		YYDEBUG(1160, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy992;
-		if(yych <= '9') goto yy1162;
-		goto yy992;
-yy1161:
+		if(yych != ':') goto yy53;
 		YYDEBUG(1161, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych != '0') goto yy992;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy1162;
+		if(yych <= '6') goto yy1163;
+		if(yych <= '9') goto yy993;
+		goto yy53;
 yy1162:
 		YYDEBUG(1162, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy994;
+		if(yych <= '9') goto yy1164;
+		goto yy994;
+yy1163:
+		YYDEBUG(1163, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych != '0') goto yy994;
+yy1164:
+		YYDEBUG(1164, *YYCURSOR);
 		yyaccept = 22;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych != '.') goto yy992;
-		YYDEBUG(1163, *YYCURSOR);
+		if(yych != '.') goto yy994;
+		YYDEBUG(1165, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
 		if(yych >= ':') goto yy53;
-yy1164:
-		YYDEBUG(1164, *YYCURSOR);
+yy1166:
+		YYDEBUG(1166, *YYCURSOR);
 		yyaccept = 22;
 		YYMARKER = ++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 6) YYFILL(6);
 		yych = *YYCURSOR;
-		YYDEBUG(1165, *YYCURSOR);
+		YYDEBUG(1167, *YYCURSOR);
 		if(yych <= ',') {
-			if(yych != '+') goto yy992;
+			if(yych != '+') goto yy994;
 		} else {
-			if(yych <= '-') goto yy1166;
-			if(yych <= '/') goto yy992;
-			if(yych <= '9') goto yy1164;
-			goto yy992;
+			if(yych <= '-') goto yy1168;
+			if(yych <= '/') goto yy994;
+			if(yych <= '9') goto yy1166;
+			goto yy994;
 		}
-yy1166:
-		YYDEBUG(1166, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '1') goto yy1167;
-		if(yych <= '2') goto yy1168;
-		if(yych <= '9') goto yy1169;
-		goto yy53;
-yy1167:
-		YYDEBUG(1167, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy992;
-		if(yych <= '9') goto yy1169;
-		if(yych <= ':') goto yy1170;
-		goto yy992;
 yy1168:
 		YYDEBUG(1168, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '5') {
-			if(yych <= '/') goto yy992;
-			if(yych >= '4') goto yy1171;
-		} else {
-			if(yych <= '9') goto yy991;
-			if(yych <= ':') goto yy1170;
-			goto yy992;
-		}
+		if(yych <= '/') goto yy53;
+		if(yych <= '1') goto yy1169;
+		if(yych <= '2') goto yy1170;
+		if(yych <= '9') goto yy1171;
+		goto yy53;
 yy1169:
 		YYDEBUG(1169, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy992;
-		if(yych <= '5') goto yy1171;
-		if(yych <= '9') goto yy991;
-		if(yych >= ';') goto yy992;
+		if(yych <= '/') goto yy994;
+		if(yych <= '9') goto yy1171;
+		if(yych <= ':') goto yy1172;
+		goto yy994;
 yy1170:
 		YYDEBUG(1170, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy992;
-		if(yych <= '5') goto yy1171;
-		if(yych <= '9') goto yy991;
-		goto yy992;
+		if(yych <= '5') {
+			if(yych <= '/') goto yy994;
+			if(yych >= '4') goto yy1173;
+		} else {
+			if(yych <= '9') goto yy993;
+			if(yych <= ':') goto yy1172;
+			goto yy994;
+		}
 yy1171:
 		YYDEBUG(1171, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy992;
-		if(yych <= '9') goto yy991;
-		goto yy992;
+		if(yych <= '/') goto yy994;
+		if(yych <= '5') goto yy1173;
+		if(yych <= '9') goto yy993;
+		if(yych >= ';') goto yy994;
 yy1172:
 		YYDEBUG(1172, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'C') goto yy1173;
-		if(yych != 'c') goto yy53;
+		if(yych <= '/') goto yy994;
+		if(yych <= '5') goto yy1173;
+		if(yych <= '9') goto yy993;
+		goto yy994;
 yy1173:
 		YYDEBUG(1173, *YYCURSOR);
-		yyaccept = 19;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= 'D') {
-			if(yych == '-') goto yy919;
-			goto yy943;
-		} else {
-			if(yych <= 'E') goto yy1028;
-			if(yych == 'e') goto yy1028;
-			goto yy943;
-		}
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy994;
+		if(yych <= '9') goto yy993;
+		goto yy994;
 yy1174:
 		YYDEBUG(1174, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'V') goto yy1175;
-		if(yych != 'v') goto yy53;
+		if(yych == 'C') goto yy1175;
+		if(yych != 'c') goto yy53;
 yy1175:
 		YYDEBUG(1175, *YYCURSOR);
 		yyaccept = 19;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
-			if(yych == '-') goto yy919;
-			goto yy943;
+			if(yych == '-') goto yy921;
+			goto yy945;
 		} else {
-			if(yych <= 'E') goto yy1035;
-			if(yych == 'e') goto yy1035;
-			goto yy943;
+			if(yych <= 'E') goto yy1030;
+			if(yych == 'e') goto yy1030;
+			goto yy945;
 		}
 yy1176:
 		YYDEBUG(1176, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'T') goto yy1177;
-		if(yych != 't') goto yy53;
+		if(yych == 'V') goto yy1177;
+		if(yych != 'v') goto yy53;
 yy1177:
 		YYDEBUG(1177, *YYCURSOR);
 		yyaccept = 19;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= 'N') {
-			if(yych == '-') goto yy919;
-			goto yy943;
+		if(yych <= 'D') {
+			if(yych == '-') goto yy921;
+			goto yy945;
 		} else {
-			if(yych <= 'O') goto yy1041;
-			if(yych == 'o') goto yy1041;
-			goto yy943;
+			if(yych <= 'E') goto yy1037;
+			if(yych == 'e') goto yy1037;
+			goto yy945;
 		}
 yy1178:
 		YYDEBUG(1178, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'P') goto yy1179;
-		if(yych != 'p') goto yy53;
+		if(yych == 'T') goto yy1179;
+		if(yych != 't') goto yy53;
 yy1179:
 		YYDEBUG(1179, *YYCURSOR);
 		yyaccept = 19;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= 'S') {
-			if(yych == '-') goto yy919;
-			goto yy943;
+		if(yych <= 'N') {
+			if(yych == '-') goto yy921;
+			goto yy945;
 		} else {
-			if(yych <= 'T') goto yy1180;
-			if(yych != 't') goto yy943;
+			if(yych <= 'O') goto yy1043;
+			if(yych == 'o') goto yy1043;
+			goto yy945;
 		}
 yy1180:
 		YYDEBUG(1180, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych == 'P') goto yy1181;
+		if(yych != 'p') goto yy53;
+yy1181:
+		YYDEBUG(1181, *YYCURSOR);
+		yyaccept = 19;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych <= 'S') {
+			if(yych == '-') goto yy921;
+			goto yy945;
+		} else {
+			if(yych <= 'T') goto yy1182;
+			if(yych != 't') goto yy945;
+		}
+yy1182:
+		YYDEBUG(1182, *YYCURSOR);
 		yyaccept = 19;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
-			if(yych == '-') goto yy919;
-			goto yy943;
+			if(yych == '-') goto yy921;
+			goto yy945;
 		} else {
-			if(yych <= 'E') goto yy1047;
-			if(yych == 'e') goto yy1047;
-			goto yy943;
+			if(yych <= 'E') goto yy1049;
+			if(yych == 'e') goto yy1049;
+			goto yy945;
 		}
-yy1181:
-		YYDEBUG(1181, *YYCURSOR);
+yy1183:
+		YYDEBUG(1183, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'G') goto yy1184;
-		if(yych == 'g') goto yy1184;
+		if(yych == 'G') goto yy1186;
+		if(yych == 'g') goto yy1186;
 		goto yy53;
-yy1182:
-		YYDEBUG(1182, *YYCURSOR);
+yy1184:
+		YYDEBUG(1184, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy1183;
+		if(yych == 'R') goto yy1185;
 		if(yych != 'r') goto yy53;
-yy1183:
-		YYDEBUG(1183, *YYCURSOR);
+yy1185:
+		YYDEBUG(1185, *YYCURSOR);
 		yyaccept = 19;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'H') {
-			if(yych == '-') goto yy919;
-			goto yy943;
+			if(yych == '-') goto yy921;
+			goto yy945;
 		} else {
-			if(yych <= 'I') goto yy1054;
-			if(yych == 'i') goto yy1054;
-			goto yy943;
+			if(yych <= 'I') goto yy1056;
+			if(yych == 'i') goto yy1056;
+			goto yy945;
 		}
-yy1184:
-		YYDEBUG(1184, *YYCURSOR);
+yy1186:
+		YYDEBUG(1186, *YYCURSOR);
 		yyaccept = 19;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
-			if(yych == '-') goto yy919;
-			goto yy943;
+			if(yych == '-') goto yy921;
+			goto yy945;
 		} else {
-			if(yych <= 'U') goto yy1056;
-			if(yych == 'u') goto yy1056;
-			goto yy943;
+			if(yych <= 'U') goto yy1058;
+			if(yych == 'u') goto yy1058;
+			goto yy945;
 		}
-yy1185:
-		YYDEBUG(1185, *YYCURSOR);
+yy1187:
+		YYDEBUG(1187, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'Y') {
-			if(yych == 'R') goto yy1186;
+			if(yych == 'R') goto yy1188;
 			if(yych <= 'X') goto yy53;
-			goto yy1187;
+			goto yy1189;
 		} else {
 			if(yych <= 'r') {
 				if(yych <= 'q') goto yy53;
 			} else {
-				if(yych == 'y') goto yy1187;
+				if(yych == 'y') goto yy1189;
 				goto yy53;
 			}
 		}
-yy1186:
-		YYDEBUG(1186, *YYCURSOR);
+yy1188:
+		YYDEBUG(1188, *YYCURSOR);
 		yyaccept = 19;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'B') {
-			if(yych == '-') goto yy919;
-			goto yy943;
+			if(yych == '-') goto yy921;
+			goto yy945;
 		} else {
-			if(yych <= 'C') goto yy1060;
-			if(yych == 'c') goto yy1060;
-			goto yy943;
+			if(yych <= 'C') goto yy1062;
+			if(yych == 'c') goto yy1062;
+			goto yy945;
 		}
-yy1187:
-		YYDEBUG(1187, *YYCURSOR);
+yy1189:
+		YYDEBUG(1189, *YYCURSOR);
 		yyaccept = 19;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '-') goto yy919;
-		goto yy943;
-yy1188:
-		YYDEBUG(1188, *YYCURSOR);
+		if(yych == '-') goto yy921;
+		goto yy945;
+yy1190:
+		YYDEBUG(1190, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'B') goto yy1189;
+		if(yych == 'B') goto yy1191;
 		if(yych != 'b') goto yy53;
-yy1189:
-		YYDEBUG(1189, *YYCURSOR);
+yy1191:
+		YYDEBUG(1191, *YYCURSOR);
 		yyaccept = 19;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'Q') {
-			if(yych == '-') goto yy919;
-			goto yy943;
+			if(yych == '-') goto yy921;
+			goto yy945;
 		} else {
-			if(yych <= 'R') goto yy1063;
-			if(yych == 'r') goto yy1063;
-			goto yy943;
+			if(yych <= 'R') goto yy1065;
+			if(yych == 'r') goto yy1065;
+			goto yy945;
 		}
-yy1190:
-		YYDEBUG(1190, *YYCURSOR);
+yy1192:
+		YYDEBUG(1192, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'N') {
-			if(yych == 'L') goto yy1194;
+			if(yych == 'L') goto yy1196;
 			if(yych <= 'M') goto yy53;
-			goto yy1193;
+			goto yy1195;
 		} else {
 			if(yych <= 'l') {
 				if(yych <= 'k') goto yy53;
-				goto yy1194;
+				goto yy1196;
 			} else {
-				if(yych == 'n') goto yy1193;
+				if(yych == 'n') goto yy1195;
 				goto yy53;
 			}
 		}
-yy1191:
-		YYDEBUG(1191, *YYCURSOR);
+yy1193:
+		YYDEBUG(1193, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'N') goto yy1192;
+		if(yych == 'N') goto yy1194;
 		if(yych != 'n') goto yy53;
-yy1192:
-		YYDEBUG(1192, *YYCURSOR);
+yy1194:
+		YYDEBUG(1194, *YYCURSOR);
 		yyaccept = 19;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
-			if(yych == '-') goto yy919;
-			goto yy943;
+			if(yych == '-') goto yy921;
+			goto yy945;
 		} else {
-			if(yych <= 'U') goto yy1070;
-			if(yych == 'u') goto yy1070;
-			goto yy943;
+			if(yych <= 'U') goto yy1072;
+			if(yych == 'u') goto yy1072;
+			goto yy945;
 		}
-yy1193:
-		YYDEBUG(1193, *YYCURSOR);
+yy1195:
+		YYDEBUG(1195, *YYCURSOR);
 		yyaccept = 19;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
-			if(yych == '-') goto yy919;
-			goto yy943;
+			if(yych == '-') goto yy921;
+			goto yy945;
 		} else {
-			if(yych <= 'E') goto yy1032;
-			if(yych == 'e') goto yy1032;
-			goto yy943;
+			if(yych <= 'E') goto yy1034;
+			if(yych == 'e') goto yy1034;
+			goto yy945;
 		}
-yy1194:
-		YYDEBUG(1194, *YYCURSOR);
+yy1196:
+		YYDEBUG(1196, *YYCURSOR);
 		yyaccept = 19;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'X') {
-			if(yych == '-') goto yy919;
-			goto yy943;
+			if(yych == '-') goto yy921;
+			goto yy945;
 		} else {
-			if(yych <= 'Y') goto yy1032;
-			if(yych == 'y') goto yy1032;
-			goto yy943;
+			if(yych <= 'Y') goto yy1034;
+			if(yych == 'y') goto yy1034;
+			goto yy945;
 		}
-yy1195:
-		YYDEBUG(1195, *YYCURSOR);
+yy1197:
+		YYDEBUG(1197, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') {
 			if(yych <= 0x09) {
-				if(yych <= 0x08) goto yy749;
-				goto yy896;
+				if(yych <= 0x08) goto yy751;
+				goto yy898;
 			} else {
-				if(yych <= ',') goto yy749;
-				if(yych <= '.') goto yy896;
-				goto yy895;
+				if(yych <= ',') goto yy751;
+				if(yych <= '.') goto yy898;
+				goto yy897;
 			}
 		} else {
 			if(yych <= 'U') {
-				if(yych <= 'T') goto yy749;
+				if(yych <= 'T') goto yy751;
 				goto yy74;
 			} else {
 				if(yych == 'u') goto yy74;
-				goto yy749;
+				goto yy751;
 			}
 		}
-yy1196:
-		YYDEBUG(1196, *YYCURSOR);
+yy1198:
+		YYDEBUG(1198, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'P') {
 			if(yych == 'C') goto yy125;
 			if(yych <= 'O') goto yy53;
-			goto yy757;
+			goto yy759;
 		} else {
 			if(yych <= 'c') {
 				if(yych <= 'b') goto yy53;
 				goto yy125;
 			} else {
-				if(yych == 'p') goto yy757;
+				if(yych == 'p') goto yy759;
 				goto yy53;
 			}
 		}
-yy1197:
-		YYDEBUG(1197, *YYCURSOR);
+yy1199:
+		YYDEBUG(1199, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '9') {
 			if(yych <= ',') {
-				if(yych != 0x09) goto yy1200;
+				if(yych != 0x09) goto yy1202;
 			} else {
-				if(yych <= '-') goto yy660;
-				if(yych <= '.') goto yy896;
-				if(yych <= '/') goto yy895;
-				goto yy900;
+				if(yych <= '-') goto yy662;
+				if(yych <= '.') goto yy898;
+				if(yych <= '/') goto yy897;
+				goto yy902;
 			}
 		} else {
 			if(yych <= 'q') {
-				if(yych == 'n') goto yy657;
-				goto yy1200;
+				if(yych == 'n') goto yy659;
+				goto yy1202;
 			} else {
-				if(yych <= 'r') goto yy658;
-				if(yych <= 's') goto yy651;
-				if(yych <= 't') goto yy655;
-				goto yy1200;
+				if(yych <= 'r') goto yy660;
+				if(yych <= 's') goto yy653;
+				if(yych <= 't') goto yy657;
+				goto yy1202;
 			}
 		}
-yy1198:
-		YYDEBUG(1198, *YYCURSOR);
+yy1200:
+		YYDEBUG(1200, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy1200;
-		if(yych <= '0') goto yy897;
-		if(yych <= '1') goto yy898;
-		if(yych <= '9') goto yy899;
-		goto yy1200;
-yy1199:
-		YYDEBUG(1199, *YYCURSOR);
+		if(yych <= '/') goto yy1202;
+		if(yych <= '0') goto yy899;
+		if(yych <= '1') goto yy900;
+		if(yych <= '9') goto yy901;
+		goto yy1202;
+yy1201:
+		YYDEBUG(1201, *YYCURSOR);
 		++YYCURSOR;
 		if((YYLIMIT - YYCURSOR) < 13) YYFILL(13);
 		yych = *YYCURSOR;
-yy1200:
-		YYDEBUG(1200, *YYCURSOR);
+yy1202:
+		YYDEBUG(1202, *YYCURSOR);
 		YYDEBUG(-1, yych);
 		switch(yych) {
 		case 0x09:
-		case ' ':	goto yy1199;
+		case ' ':	goto yy1201;
 		case '-':
-		case '.':	goto yy748;
+		case '.':	goto yy750;
 		case 'A':
-		case 'a':	goto yy745;
+		case 'a':	goto yy747;
 		case 'D':
-		case 'd':	goto yy653;
+		case 'd':	goto yy655;
 		case 'F':
-		case 'f':	goto yy654;
+		case 'f':	goto yy656;
 		case 'H':
 		case 'h':	goto yy60;
-		case 'I':	goto yy662;
+		case 'I':	goto yy664;
 		case 'J':
-		case 'j':	goto yy666;
+		case 'j':	goto yy668;
 		case 'M':
-		case 'm':	goto yy652;
+		case 'm':	goto yy654;
 		case 'N':
-		case 'n':	goto yy669;
+		case 'n':	goto yy671;
 		case 'O':
-		case 'o':	goto yy668;
+		case 'o':	goto yy670;
 		case 'S':
-		case 's':	goto yy650;
+		case 's':	goto yy652;
 		case 'T':
 		case 't':	goto yy65;
-		case 'V':	goto yy664;
+		case 'V':	goto yy666;
 		case 'W':
 		case 'w':	goto yy62;
-		case 'X':	goto yy665;
+		case 'X':	goto yy667;
 		case 'Y':
 		case 'y':	goto yy64;
 		default:	goto yy53;
 		}
-yy1201:
-		YYDEBUG(1201, *YYCURSOR);
+yy1203:
+		YYDEBUG(1203, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '9') {
 			if(yych <= '-') {
-				if(yych == 0x09) goto yy1198;
-				if(yych <= ',') goto yy1200;
-				goto yy660;
+				if(yych == 0x09) goto yy1200;
+				if(yych <= ',') goto yy1202;
+				goto yy662;
 			} else {
-				if(yych <= '.') goto yy1202;
-				if(yych <= '/') goto yy895;
-				if(yych <= '5') goto yy1204;
-				goto yy900;
+				if(yych <= '.') goto yy1204;
+				if(yych <= '/') goto yy897;
+				if(yych <= '5') goto yy1206;
+				goto yy902;
 			}
 		} else {
 			if(yych <= 'q') {
-				if(yych <= ':') goto yy1203;
-				if(yych == 'n') goto yy657;
-				goto yy1200;
+				if(yych <= ':') goto yy1205;
+				if(yych == 'n') goto yy659;
+				goto yy1202;
 			} else {
-				if(yych <= 'r') goto yy658;
-				if(yych <= 's') goto yy651;
-				if(yych <= 't') goto yy655;
-				goto yy1200;
+				if(yych <= 'r') goto yy660;
+				if(yych <= 's') goto yy653;
+				if(yych <= 't') goto yy657;
+				goto yy1202;
 			}
 		}
-yy1202:
-		YYDEBUG(1202, *YYCURSOR);
+yy1204:
+		YYDEBUG(1204, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '1') {
-			if(yych <= '/') goto yy749;
-			if(yych <= '0') goto yy1226;
-			goto yy1227;
+			if(yych <= '/') goto yy751;
+			if(yych <= '0') goto yy1228;
+			goto yy1229;
 		} else {
-			if(yych <= '5') goto yy1228;
-			if(yych <= '9') goto yy1229;
-			goto yy749;
+			if(yych <= '5') goto yy1230;
+			if(yych <= '9') goto yy1231;
+			goto yy751;
 		}
-yy1203:
-		YYDEBUG(1203, *YYCURSOR);
+yy1205:
+		YYDEBUG(1205, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1221;
-		if(yych <= '9') goto yy1222;
+		if(yych <= '5') goto yy1223;
+		if(yych <= '9') goto yy1224;
 		goto yy53;
-yy1204:
-		YYDEBUG(1204, *YYCURSOR);
+yy1206:
+		YYDEBUG(1206, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == '-') goto yy901;
+		if(yych == '-') goto yy903;
 		if(yych <= '/') goto yy57;
 		if(yych >= ':') goto yy57;
-		YYDEBUG(1205, *YYCURSOR);
+		YYDEBUG(1207, *YYCURSOR);
 		yyaccept = 23;
 		yych = *(YYMARKER = ++YYCURSOR);
 		YYDEBUG(-1, yych);
@@ -17860,27 +17892,27 @@ yy1204:
 		case 's':
 		case 't':
 		case 'w':
-		case 'y':	goto yy940;
-		case '-':	goto yy937;
-		case '.':	goto yy941;
-		case '/':	goto yy938;
-		case '0':	goto yy1207;
-		case '1':	goto yy1208;
-		case '2':	goto yy1209;
-		case '3':	goto yy1210;
+		case 'y':	goto yy942;
+		case '-':	goto yy939;
+		case '.':	goto yy943;
+		case '/':	goto yy940;
+		case '0':	goto yy1209;
+		case '1':	goto yy1210;
+		case '2':	goto yy1211;
+		case '3':	goto yy1212;
 		case '4':
-		case '5':	goto yy1211;
-		case '6':	goto yy1212;
+		case '5':	goto yy1213;
+		case '6':	goto yy1214;
 		case '7':
 		case '8':
 		case '9':	goto yy51;
-		case ':':	goto yy956;
-		case 'W':	goto yy959;
-		default:	goto yy1206;
+		case ':':	goto yy958;
+		case 'W':	goto yy961;
+		default:	goto yy1208;
 		}
-yy1206:
-		YYDEBUG(1206, *YYCURSOR);
-#line 1009 "ext/date/lib/parse_date.re"
+yy1208:
+		YYDEBUG(1208, *YYCURSOR);
+#line 1011 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("gnunocolon");
 		TIMELIB_INIT;
@@ -17902,53 +17934,53 @@ yy1206:
 		TIMELIB_DEINIT;
 		return TIMELIB_GNU_NOCOLON;
 	}
-#line 17906 "ext/date/lib/parse_date.c"
-yy1207:
-		YYDEBUG(1207, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy57;
-		if(yych <= '0') goto yy1219;
-		if(yych <= '9') goto yy1220;
-		goto yy57;
-yy1208:
-		YYDEBUG(1208, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy57;
-		if(yych <= '2') goto yy1218;
-		if(yych <= '9') goto yy1217;
-		goto yy57;
+#line 17938 "ext/date/lib/parse_date.c"
 yy1209:
 		YYDEBUG(1209, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy57;
-		if(yych <= '9') goto yy1217;
+		if(yych <= '0') goto yy1221;
+		if(yych <= '9') goto yy1222;
 		goto yy57;
 yy1210:
 		YYDEBUG(1210, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy57;
-		if(yych <= '5') goto yy1215;
-		if(yych <= '6') goto yy1216;
-		if(yych <= '9') goto yy1213;
+		if(yych <= '2') goto yy1220;
+		if(yych <= '9') goto yy1219;
 		goto yy57;
 yy1211:
 		YYDEBUG(1211, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy57;
-		if(yych <= '9') goto yy1213;
+		if(yych <= '9') goto yy1219;
 		goto yy57;
 yy1212:
 		YYDEBUG(1212, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy57;
-		if(yych <= '0') goto yy1213;
-		if(yych <= '9') goto yy51;
+		if(yych <= '5') goto yy1217;
+		if(yych <= '6') goto yy1218;
+		if(yych <= '9') goto yy1215;
 		goto yy57;
 yy1213:
 		YYDEBUG(1213, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy57;
+		if(yych <= '9') goto yy1215;
+		goto yy57;
+yy1214:
+		YYDEBUG(1214, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy57;
+		if(yych <= '0') goto yy1215;
+		if(yych <= '9') goto yy51;
+		goto yy57;
+yy1215:
+		YYDEBUG(1215, *YYCURSOR);
 		yyaccept = 24;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yybm[0+yych] & 8) {
+		if(yybm[0+yych] & 4) {
 			goto yy51;
 		}
 		if(yych <= 'W') {
@@ -17965,7 +17997,7 @@ yy1213:
 					if(yych == 'H') goto yy57;
 					if(yych >= 'M') goto yy57;
 				} else {
-					if(yych <= 'R') goto yy1214;
+					if(yych <= 'R') goto yy1216;
 					if(yych <= 'T') goto yy57;
 					if(yych >= 'W') goto yy57;
 				}
@@ -17992,9 +18024,9 @@ yy1213:
 				}
 			}
 		}
-yy1214:
-		YYDEBUG(1214, *YYCURSOR);
-#line 1055 "ext/date/lib/parse_date.re"
+yy1216:
+		YYDEBUG(1216, *YYCURSOR);
+#line 1057 "ext/date/lib/parse_date.re"
 		{
 		int tz_not_found;
 		DEBUG_OUTPUT("iso8601nocolon");
@@ -18013,236 +18045,236 @@ yy1214:
 		TIMELIB_DEINIT;
 		return TIMELIB_ISO_NOCOLON;
 	}
-#line 18017 "ext/date/lib/parse_date.c"
-yy1215:
-		YYDEBUG(1215, *YYCURSOR);
+#line 18049 "ext/date/lib/parse_date.c"
+yy1217:
+		YYDEBUG(1217, *YYCURSOR);
 		yyaccept = 24;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'V') {
 			if(yych <= 'D') {
 				if(yych <= ' ') {
 					if(yych == 0x09) goto yy57;
-					if(yych <= 0x1F) goto yy1214;
+					if(yych <= 0x1F) goto yy1216;
 					goto yy57;
 				} else {
-					if(yych <= '/') goto yy1214;
-					if(yych <= '9') goto yy970;
-					if(yych <= 'C') goto yy1214;
+					if(yych <= '/') goto yy1216;
+					if(yych <= '9') goto yy972;
+					if(yych <= 'C') goto yy1216;
 					goto yy57;
 				}
 			} else {
 				if(yych <= 'H') {
 					if(yych == 'F') goto yy57;
-					if(yych <= 'G') goto yy1214;
+					if(yych <= 'G') goto yy1216;
 					goto yy57;
 				} else {
 					if(yych <= 'M') {
-						if(yych <= 'L') goto yy1214;
+						if(yych <= 'L') goto yy1216;
 						goto yy57;
 					} else {
-						if(yych <= 'R') goto yy1214;
+						if(yych <= 'R') goto yy1216;
 						if(yych <= 'T') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					}
 				}
 			}
 		} else {
 			if(yych <= 'h') {
 				if(yych <= 'c') {
-					if(yych == 'X') goto yy1214;
+					if(yych == 'X') goto yy1216;
 					if(yych <= 'Y') goto yy57;
-					goto yy1214;
+					goto yy1216;
 				} else {
 					if(yych <= 'e') {
 						if(yych <= 'd') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					} else {
-						if(yych == 'g') goto yy1214;
+						if(yych == 'g') goto yy1216;
 						goto yy57;
 					}
 				}
 			} else {
 				if(yych <= 't') {
 					if(yych == 'm') goto yy57;
-					if(yych <= 'r') goto yy1214;
+					if(yych <= 'r') goto yy1216;
 					goto yy57;
 				} else {
 					if(yych <= 'w') {
-						if(yych <= 'v') goto yy1214;
+						if(yych <= 'v') goto yy1216;
 						goto yy57;
 					} else {
 						if(yych == 'y') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					}
 				}
 			}
 		}
-yy1216:
-		YYDEBUG(1216, *YYCURSOR);
+yy1218:
+		YYDEBUG(1218, *YYCURSOR);
 		yyaccept = 24;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'V') {
 			if(yych <= 'D') {
 				if(yych <= ' ') {
 					if(yych == 0x09) goto yy57;
-					if(yych <= 0x1F) goto yy1214;
+					if(yych <= 0x1F) goto yy1216;
 					goto yy57;
 				} else {
 					if(yych <= '6') {
-						if(yych <= '/') goto yy1214;
-						goto yy970;
+						if(yych <= '/') goto yy1216;
+						goto yy972;
 					} else {
 						if(yych <= '9') goto yy51;
-						if(yych <= 'C') goto yy1214;
+						if(yych <= 'C') goto yy1216;
 						goto yy57;
 					}
 				}
 			} else {
 				if(yych <= 'H') {
 					if(yych == 'F') goto yy57;
-					if(yych <= 'G') goto yy1214;
+					if(yych <= 'G') goto yy1216;
 					goto yy57;
 				} else {
 					if(yych <= 'M') {
-						if(yych <= 'L') goto yy1214;
+						if(yych <= 'L') goto yy1216;
 						goto yy57;
 					} else {
-						if(yych <= 'R') goto yy1214;
+						if(yych <= 'R') goto yy1216;
 						if(yych <= 'T') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					}
 				}
 			}
 		} else {
 			if(yych <= 'h') {
 				if(yych <= 'c') {
-					if(yych == 'X') goto yy1214;
+					if(yych == 'X') goto yy1216;
 					if(yych <= 'Y') goto yy57;
-					goto yy1214;
+					goto yy1216;
 				} else {
 					if(yych <= 'e') {
 						if(yych <= 'd') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					} else {
-						if(yych == 'g') goto yy1214;
+						if(yych == 'g') goto yy1216;
 						goto yy57;
 					}
 				}
 			} else {
 				if(yych <= 't') {
 					if(yych == 'm') goto yy57;
-					if(yych <= 'r') goto yy1214;
+					if(yych <= 'r') goto yy1216;
 					goto yy57;
 				} else {
 					if(yych <= 'w') {
-						if(yych <= 'v') goto yy1214;
+						if(yych <= 'v') goto yy1216;
 						goto yy57;
 					} else {
 						if(yych == 'y') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					}
 				}
 			}
 		}
-yy1217:
-		YYDEBUG(1217, *YYCURSOR);
+yy1219:
+		YYDEBUG(1219, *YYCURSOR);
 		yyaccept = 24;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'V') {
 			if(yych <= 'D') {
 				if(yych <= ' ') {
 					if(yych == 0x09) goto yy57;
-					if(yych <= 0x1F) goto yy1214;
+					if(yych <= 0x1F) goto yy1216;
 					goto yy57;
 				} else {
-					if(yych <= '/') goto yy1214;
-					if(yych <= '9') goto yy970;
-					if(yych <= 'C') goto yy1214;
+					if(yych <= '/') goto yy1216;
+					if(yych <= '9') goto yy972;
+					if(yych <= 'C') goto yy1216;
 					goto yy57;
 				}
 			} else {
 				if(yych <= 'H') {
 					if(yych == 'F') goto yy57;
-					if(yych <= 'G') goto yy1214;
+					if(yych <= 'G') goto yy1216;
 					goto yy57;
 				} else {
 					if(yych <= 'M') {
-						if(yych <= 'L') goto yy1214;
+						if(yych <= 'L') goto yy1216;
 						goto yy57;
 					} else {
-						if(yych <= 'R') goto yy1214;
+						if(yych <= 'R') goto yy1216;
 						if(yych <= 'T') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					}
 				}
 			}
 		} else {
 			if(yych <= 'h') {
 				if(yych <= 'c') {
-					if(yych == 'X') goto yy1214;
+					if(yych == 'X') goto yy1216;
 					if(yych <= 'Y') goto yy57;
-					goto yy1214;
+					goto yy1216;
 				} else {
 					if(yych <= 'e') {
 						if(yych <= 'd') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					} else {
-						if(yych == 'g') goto yy1214;
+						if(yych == 'g') goto yy1216;
 						goto yy57;
 					}
 				}
 			} else {
 				if(yych <= 't') {
 					if(yych == 'm') goto yy57;
-					if(yych <= 'r') goto yy1214;
+					if(yych <= 'r') goto yy1216;
 					goto yy57;
 				} else {
 					if(yych <= 'w') {
-						if(yych <= 'v') goto yy1214;
+						if(yych <= 'v') goto yy1216;
 						goto yy57;
 					} else {
 						if(yych == 'y') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					}
 				}
 			}
 		}
-yy1218:
-		YYDEBUG(1218, *YYCURSOR);
+yy1220:
+		YYDEBUG(1220, *YYCURSOR);
 		yyaccept = 24;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
 			if(yych <= '9') {
 				if(yych <= ' ') {
 					if(yych == 0x09) goto yy57;
-					if(yych <= 0x1F) goto yy1214;
+					if(yych <= 0x1F) goto yy1216;
 					goto yy57;
 				} else {
 					if(yych <= '0') {
-						if(yych <= '/') goto yy1214;
-						goto yy994;
+						if(yych <= '/') goto yy1216;
+						goto yy996;
 					} else {
-						if(yych <= '2') goto yy995;
-						if(yych <= '3') goto yy996;
-						goto yy970;
+						if(yych <= '2') goto yy997;
+						if(yych <= '3') goto yy998;
+						goto yy972;
 					}
 				}
 			} else {
 				if(yych <= 'G') {
 					if(yych <= 'D') {
-						if(yych <= 'C') goto yy1214;
+						if(yych <= 'C') goto yy1216;
 						goto yy57;
 					} else {
 						if(yych == 'F') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					}
 				} else {
 					if(yych <= 'L') {
 						if(yych <= 'H') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					} else {
 						if(yych <= 'M') goto yy57;
-						if(yych <= 'R') goto yy1214;
+						if(yych <= 'R') goto yy1216;
 						goto yy57;
 					}
 				}
@@ -18251,141 +18283,141 @@ yy1218:
 			if(yych <= 'g') {
 				if(yych <= 'Y') {
 					if(yych == 'W') goto yy57;
-					if(yych <= 'X') goto yy1214;
+					if(yych <= 'X') goto yy1216;
 					goto yy57;
 				} else {
 					if(yych <= 'd') {
-						if(yych <= 'c') goto yy1214;
+						if(yych <= 'c') goto yy1216;
 						goto yy57;
 					} else {
 						if(yych == 'f') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					}
 				}
 			} else {
 				if(yych <= 't') {
 					if(yych <= 'l') {
 						if(yych <= 'h') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					} else {
 						if(yych <= 'm') goto yy57;
-						if(yych <= 'r') goto yy1214;
+						if(yych <= 'r') goto yy1216;
 						goto yy57;
 					}
 				} else {
 					if(yych <= 'w') {
-						if(yych <= 'v') goto yy1214;
+						if(yych <= 'v') goto yy1216;
 						goto yy57;
 					} else {
 						if(yych == 'y') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					}
 				}
 			}
 		}
-yy1219:
-		YYDEBUG(1219, *YYCURSOR);
+yy1221:
+		YYDEBUG(1221, *YYCURSOR);
 		yyaccept = 24;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'V') {
 			if(yych <= 'D') {
 				if(yych <= ' ') {
 					if(yych == 0x09) goto yy57;
-					if(yych <= 0x1F) goto yy1214;
+					if(yych <= 0x1F) goto yy1216;
 					goto yy57;
 				} else {
 					if(yych <= '0') {
-						if(yych <= '/') goto yy1214;
+						if(yych <= '/') goto yy1216;
 						goto yy51;
 					} else {
-						if(yych <= '9') goto yy970;
-						if(yych <= 'C') goto yy1214;
+						if(yych <= '9') goto yy972;
+						if(yych <= 'C') goto yy1216;
 						goto yy57;
 					}
 				}
 			} else {
 				if(yych <= 'H') {
 					if(yych == 'F') goto yy57;
-					if(yych <= 'G') goto yy1214;
+					if(yych <= 'G') goto yy1216;
 					goto yy57;
 				} else {
 					if(yych <= 'M') {
-						if(yych <= 'L') goto yy1214;
+						if(yych <= 'L') goto yy1216;
 						goto yy57;
 					} else {
-						if(yych <= 'R') goto yy1214;
+						if(yych <= 'R') goto yy1216;
 						if(yych <= 'T') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					}
 				}
 			}
 		} else {
 			if(yych <= 'h') {
 				if(yych <= 'c') {
-					if(yych == 'X') goto yy1214;
+					if(yych == 'X') goto yy1216;
 					if(yych <= 'Y') goto yy57;
-					goto yy1214;
+					goto yy1216;
 				} else {
 					if(yych <= 'e') {
 						if(yych <= 'd') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					} else {
-						if(yych == 'g') goto yy1214;
+						if(yych == 'g') goto yy1216;
 						goto yy57;
 					}
 				}
 			} else {
 				if(yych <= 't') {
 					if(yych == 'm') goto yy57;
-					if(yych <= 'r') goto yy1214;
+					if(yych <= 'r') goto yy1216;
 					goto yy57;
 				} else {
 					if(yych <= 'w') {
-						if(yych <= 'v') goto yy1214;
+						if(yych <= 'v') goto yy1216;
 						goto yy57;
 					} else {
 						if(yych == 'y') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					}
 				}
 			}
 		}
-yy1220:
-		YYDEBUG(1220, *YYCURSOR);
+yy1222:
+		YYDEBUG(1222, *YYCURSOR);
 		yyaccept = 24;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
 			if(yych <= '9') {
 				if(yych <= ' ') {
 					if(yych == 0x09) goto yy57;
-					if(yych <= 0x1F) goto yy1214;
+					if(yych <= 0x1F) goto yy1216;
 					goto yy57;
 				} else {
 					if(yych <= '0') {
-						if(yych <= '/') goto yy1214;
-						goto yy994;
+						if(yych <= '/') goto yy1216;
+						goto yy996;
 					} else {
-						if(yych <= '2') goto yy995;
-						if(yych <= '3') goto yy996;
-						goto yy970;
+						if(yych <= '2') goto yy997;
+						if(yych <= '3') goto yy998;
+						goto yy972;
 					}
 				}
 			} else {
 				if(yych <= 'G') {
 					if(yych <= 'D') {
-						if(yych <= 'C') goto yy1214;
+						if(yych <= 'C') goto yy1216;
 						goto yy57;
 					} else {
 						if(yych == 'F') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					}
 				} else {
 					if(yych <= 'L') {
 						if(yych <= 'H') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					} else {
 						if(yych <= 'M') goto yy57;
-						if(yych <= 'R') goto yy1214;
+						if(yych <= 'R') goto yy1216;
 						goto yy57;
 					}
 				}
@@ -18394,237 +18426,237 @@ yy1220:
 			if(yych <= 'g') {
 				if(yych <= 'Y') {
 					if(yych == 'W') goto yy57;
-					if(yych <= 'X') goto yy1214;
+					if(yych <= 'X') goto yy1216;
 					goto yy57;
 				} else {
 					if(yych <= 'd') {
-						if(yych <= 'c') goto yy1214;
+						if(yych <= 'c') goto yy1216;
 						goto yy57;
 					} else {
 						if(yych == 'f') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					}
 				}
 			} else {
 				if(yych <= 't') {
 					if(yych <= 'l') {
 						if(yych <= 'h') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					} else {
 						if(yych <= 'm') goto yy57;
-						if(yych <= 'r') goto yy1214;
+						if(yych <= 'r') goto yy1216;
 						goto yy57;
 					}
 				} else {
 					if(yych <= 'w') {
-						if(yych <= 'v') goto yy1214;
+						if(yych <= 'v') goto yy1216;
 						goto yy57;
 					} else {
 						if(yych == 'y') goto yy57;
-						goto yy1214;
+						goto yy1216;
 					}
 				}
 			}
 		}
-yy1221:
-		YYDEBUG(1221, *YYCURSOR);
+yy1223:
+		YYDEBUG(1223, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy1223;
-			goto yy678;
+			if(yych == '.') goto yy1225;
+			goto yy680;
 		} else {
-			if(yych <= '9') goto yy1222;
-			if(yych <= ':') goto yy1223;
-			goto yy678;
+			if(yych <= '9') goto yy1224;
+			if(yych <= ':') goto yy1225;
+			goto yy680;
 		}
-yy1222:
-		YYDEBUG(1222, *YYCURSOR);
-		yyaccept = 12;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '.') goto yy1223;
-		if(yych != ':') goto yy678;
-yy1223:
-		YYDEBUG(1223, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1224;
-		if(yych <= '6') goto yy1225;
-		if(yych <= '9') goto yy683;
-		goto yy53;
 yy1224:
 		YYDEBUG(1224, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '.') goto yy684;
-		if(yych <= '/') goto yy678;
-		if(yych <= '9') goto yy683;
-		goto yy678;
+		if(yych == '.') goto yy1225;
+		if(yych != ':') goto yy680;
 yy1225:
 		YYDEBUG(1225, *YYCURSOR);
-		yyaccept = 12;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '.') goto yy684;
-		if(yych == '0') goto yy683;
-		goto yy678;
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy1226;
+		if(yych <= '6') goto yy1227;
+		if(yych <= '9') goto yy685;
+		goto yy53;
 yy1226:
 		YYDEBUG(1226, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= '.') {
-			if(yych <= ',') goto yy678;
-			if(yych <= '-') goto yy772;
-			goto yy1230;
-		} else {
-			if(yych <= '/') goto yy678;
-			if(yych <= '9') goto yy1229;
-			if(yych <= ':') goto yy1223;
-			goto yy678;
-		}
+		if(yych == '.') goto yy686;
+		if(yych <= '/') goto yy680;
+		if(yych <= '9') goto yy685;
+		goto yy680;
 yy1227:
 		YYDEBUG(1227, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= '/') {
-			if(yych <= ',') goto yy678;
-			if(yych <= '-') goto yy772;
-			if(yych <= '.') goto yy1230;
-			goto yy678;
-		} else {
-			if(yych <= '2') goto yy1229;
-			if(yych <= '9') goto yy1222;
-			if(yych <= ':') goto yy1223;
-			goto yy678;
-		}
+		if(yych == '.') goto yy686;
+		if(yych == '0') goto yy685;
+		goto yy680;
 yy1228:
 		YYDEBUG(1228, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
-			if(yych <= ',') goto yy678;
-			if(yych <= '-') goto yy772;
-			goto yy1230;
+			if(yych <= ',') goto yy680;
+			if(yych <= '-') goto yy774;
+			goto yy1232;
 		} else {
-			if(yych <= '/') goto yy678;
-			if(yych <= '9') goto yy1222;
-			if(yych <= ':') goto yy1223;
-			goto yy678;
+			if(yych <= '/') goto yy680;
+			if(yych <= '9') goto yy1231;
+			if(yych <= ':') goto yy1225;
+			goto yy680;
 		}
 yy1229:
 		YYDEBUG(1229, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= '.') {
-			if(yych <= ',') goto yy678;
-			if(yych <= '-') goto yy772;
+		if(yych <= '/') {
+			if(yych <= ',') goto yy680;
+			if(yych <= '-') goto yy774;
+			if(yych <= '.') goto yy1232;
+			goto yy680;
 		} else {
-			if(yych == ':') goto yy1223;
-			goto yy678;
+			if(yych <= '2') goto yy1231;
+			if(yych <= '9') goto yy1224;
+			if(yych <= ':') goto yy1225;
+			goto yy680;
 		}
 yy1230:
 		YYDEBUG(1230, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if(yych <= '/') goto yy53;
-		if(yych <= '5') goto yy1231;
-		if(yych <= '6') goto yy1232;
-		if(yych <= '9') goto yy776;
-		goto yy53;
+		yyaccept = 12;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych <= '.') {
+			if(yych <= ',') goto yy680;
+			if(yych <= '-') goto yy774;
+			goto yy1232;
+		} else {
+			if(yych <= '/') goto yy680;
+			if(yych <= '9') goto yy1224;
+			if(yych <= ':') goto yy1225;
+			goto yy680;
+		}
 yy1231:
 		YYDEBUG(1231, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '.') goto yy684;
-		if(yych <= '/') goto yy678;
-		if(yych <= '9') goto yy1233;
-		goto yy678;
+		if(yych <= '.') {
+			if(yych <= ',') goto yy680;
+			if(yych <= '-') goto yy774;
+		} else {
+			if(yych == ':') goto yy1225;
+			goto yy680;
+		}
 yy1232:
 		YYDEBUG(1232, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if(yych <= '/') goto yy53;
+		if(yych <= '5') goto yy1233;
+		if(yych <= '6') goto yy1234;
+		if(yych <= '9') goto yy778;
+		goto yy53;
+yy1233:
+		YYDEBUG(1233, *YYCURSOR);
+		yyaccept = 12;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if(yych == '.') goto yy686;
+		if(yych <= '/') goto yy680;
+		if(yych <= '9') goto yy1235;
+		goto yy680;
+yy1234:
+		YYDEBUG(1234, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
-			if(yych == '.') goto yy684;
-			goto yy678;
+			if(yych == '.') goto yy686;
+			goto yy680;
 		} else {
-			if(yych <= '0') goto yy1233;
-			if(yych <= '9') goto yy777;
-			goto yy678;
+			if(yych <= '0') goto yy1235;
+			if(yych <= '9') goto yy779;
+			goto yy680;
 		}
-yy1233:
-		YYDEBUG(1233, *YYCURSOR);
+yy1235:
+		YYDEBUG(1235, *YYCURSOR);
 		yyaccept = 12;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych == '.') goto yy684;
-		if(yych <= '/') goto yy678;
-		if(yych <= '9') goto yy779;
-		goto yy678;
-yy1234:
-		YYDEBUG(1234, *YYCURSOR);
+		if(yych == '.') goto yy686;
+		if(yych <= '/') goto yy680;
+		if(yych <= '9') goto yy781;
+		goto yy680;
+yy1236:
+		YYDEBUG(1236, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '9') {
 			if(yych <= '-') {
-				if(yych == 0x09) goto yy647;
-				if(yych <= ',') goto yy649;
-				goto yy660;
+				if(yych == 0x09) goto yy649;
+				if(yych <= ',') goto yy651;
+				goto yy662;
 			} else {
-				if(yych <= '.') goto yy661;
-				if(yych <= '/') goto yy659;
-				if(yych <= '5') goto yy1204;
-				goto yy900;
+				if(yych <= '.') goto yy663;
+				if(yych <= '/') goto yy661;
+				if(yych <= '5') goto yy1206;
+				goto yy902;
 			}
 		} else {
 			if(yych <= 'q') {
-				if(yych <= ':') goto yy670;
-				if(yych == 'n') goto yy657;
-				goto yy649;
+				if(yych <= ':') goto yy672;
+				if(yych == 'n') goto yy659;
+				goto yy651;
 			} else {
-				if(yych <= 'r') goto yy658;
-				if(yych <= 's') goto yy651;
-				if(yych <= 't') goto yy655;
-				goto yy649;
+				if(yych <= 'r') goto yy660;
+				if(yych <= 's') goto yy653;
+				if(yych <= 't') goto yy657;
+				goto yy651;
 			}
 		}
-yy1235:
-		YYDEBUG(1235, *YYCURSOR);
+yy1237:
+		YYDEBUG(1237, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '9') {
 			if(yych <= '-') {
-				if(yych == 0x09) goto yy1198;
-				if(yych <= ',') goto yy1200;
-				goto yy660;
+				if(yych == 0x09) goto yy1200;
+				if(yych <= ',') goto yy1202;
+				goto yy662;
 			} else {
-				if(yych <= '.') goto yy1202;
-				if(yych <= '/') goto yy659;
-				if(yych <= '5') goto yy1204;
-				goto yy900;
+				if(yych <= '.') goto yy1204;
+				if(yych <= '/') goto yy661;
+				if(yych <= '5') goto yy1206;
+				goto yy902;
 			}
 		} else {
 			if(yych <= 'q') {
-				if(yych <= ':') goto yy1203;
-				if(yych == 'n') goto yy657;
-				goto yy1200;
+				if(yych <= ':') goto yy1205;
+				if(yych == 'n') goto yy659;
+				goto yy1202;
 			} else {
-				if(yych <= 'r') goto yy658;
-				if(yych <= 's') goto yy651;
-				if(yych <= 't') goto yy655;
-				goto yy1200;
+				if(yych <= 'r') goto yy660;
+				if(yych <= 's') goto yy653;
+				if(yych <= 't') goto yy657;
+				goto yy1202;
 			}
 		}
-yy1236:
-		YYDEBUG(1236, *YYCURSOR);
+yy1238:
+		YYDEBUG(1238, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
 		if(yych >= ':') goto yy53;
-yy1237:
-		YYDEBUG(1237, *YYCURSOR);
+yy1239:
+		YYDEBUG(1239, *YYCURSOR);
 		++YYCURSOR;
 		if(YYLIMIT == YYCURSOR) YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(1238, *YYCURSOR);
-		if(yych <= '/') goto yy1239;
-		if(yych <= '9') goto yy1237;
-yy1239:
-		YYDEBUG(1239, *YYCURSOR);
-#line 942 "ext/date/lib/parse_date.re"
+		YYDEBUG(1240, *YYCURSOR);
+		if(yych <= '/') goto yy1241;
+		if(yych <= '9') goto yy1239;
+yy1241:
+		YYDEBUG(1241, *YYCURSOR);
+#line 944 "ext/date/lib/parse_date.re"
 		{
 		timelib_ull i;
 
@@ -18647,9 +18679,9 @@ yy1239:
 		TIMELIB_DEINIT;
 		return TIMELIB_RELATIVE;
 	}
-#line 18651 "ext/date/lib/parse_date.c"
-yy1240:
-		YYDEBUG(1240, *YYCURSOR);
+#line 18683 "ext/date/lib/parse_date.c"
+yy1242:
+		YYDEBUG(1242, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'N') {
 			if(yych <= ')') {
@@ -18658,7 +18690,7 @@ yy1240:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'M') goto yy138;
-				goto yy1280;
+				goto yy1282;
 			}
 		} else {
 			if(yych <= 'm') {
@@ -18666,61 +18698,61 @@ yy1240:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'n') goto yy1280;
+				if(yych <= 'n') goto yy1282;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy1241:
-		YYDEBUG(1241, *YYCURSOR);
+yy1243:
+		YYDEBUG(1243, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'U') {
 			if(yych <= '@') {
 				if(yych == ')') goto yy136;
 				goto yy3;
 			} else {
-				if(yych == 'I') goto yy1274;
+				if(yych == 'I') goto yy1276;
 				if(yych <= 'T') goto yy138;
-				goto yy1273;
+				goto yy1275;
 			}
 		} else {
 			if(yych <= 'i') {
 				if(yych <= 'Z') goto yy138;
 				if(yych <= '`') goto yy3;
 				if(yych <= 'h') goto yy138;
-				goto yy1274;
+				goto yy1276;
 			} else {
-				if(yych == 'u') goto yy1273;
+				if(yych == 'u') goto yy1275;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy1242:
-		YYDEBUG(1242, *YYCURSOR);
+yy1244:
+		YYDEBUG(1244, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'M') {
 			if(yych <= '@') {
 				if(yych == ')') goto yy136;
 				goto yy3;
 			} else {
-				if(yych == 'D') goto yy1262;
+				if(yych == 'D') goto yy1264;
 				if(yych <= 'L') goto yy138;
-				goto yy1263;
+				goto yy1265;
 			}
 		} else {
 			if(yych <= 'd') {
 				if(yych <= 'Z') goto yy138;
 				if(yych <= '`') goto yy3;
 				if(yych <= 'c') goto yy138;
-				goto yy1262;
+				goto yy1264;
 			} else {
-				if(yych == 'm') goto yy1263;
+				if(yych == 'm') goto yy1265;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy1243:
-		YYDEBUG(1243, *YYCURSOR);
+yy1245:
+		YYDEBUG(1245, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'E') {
 			if(yych <= ')') {
@@ -18729,7 +18761,7 @@ yy1243:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy138;
-				goto yy1258;
+				goto yy1260;
 			}
 		} else {
 			if(yych <= 'd') {
@@ -18737,13 +18769,13 @@ yy1243:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'e') goto yy1258;
+				if(yych <= 'e') goto yy1260;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy1244:
-		YYDEBUG(1244, *YYCURSOR);
+yy1246:
+		YYDEBUG(1246, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'E') {
 			if(yych <= ')') {
@@ -18752,7 +18784,7 @@ yy1244:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy138;
-				goto yy1254;
+				goto yy1256;
 			}
 		} else {
 			if(yych <= 'd') {
@@ -18760,78 +18792,78 @@ yy1244:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'e') goto yy1254;
+				if(yych <= 'e') goto yy1256;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy1245:
-		YYDEBUG(1245, *YYCURSOR);
+yy1247:
+		YYDEBUG(1247, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') {
-			if(yych == '.') goto yy1203;
+			if(yych == '.') goto yy1205;
 			goto yy53;
 		} else {
-			if(yych <= '9') goto yy1248;
-			if(yych <= ':') goto yy1203;
+			if(yych <= '9') goto yy1250;
+			if(yych <= ':') goto yy1205;
 			goto yy53;
 		}
-yy1246:
-		YYDEBUG(1246, *YYCURSOR);
+yy1248:
+		YYDEBUG(1248, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') {
-			if(yych == '.') goto yy1203;
+			if(yych == '.') goto yy1205;
 			goto yy53;
 		} else {
-			if(yych <= '3') goto yy1248;
-			if(yych == ':') goto yy1203;
+			if(yych <= '3') goto yy1250;
+			if(yych == ':') goto yy1205;
 			goto yy53;
 		}
-yy1247:
-		YYDEBUG(1247, *YYCURSOR);
+yy1249:
+		YYDEBUG(1249, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == '.') goto yy1203;
-		if(yych == ':') goto yy1203;
+		if(yych == '.') goto yy1205;
+		if(yych == ':') goto yy1205;
 		goto yy53;
-yy1248:
-		YYDEBUG(1248, *YYCURSOR);
+yy1250:
+		YYDEBUG(1250, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') {
-			if(yych == '.') goto yy1203;
+			if(yych == '.') goto yy1205;
 			goto yy53;
 		} else {
-			if(yych <= '5') goto yy1249;
-			if(yych == ':') goto yy1203;
+			if(yych <= '5') goto yy1251;
+			if(yych == ':') goto yy1205;
 			goto yy53;
 		}
-yy1249:
-		YYDEBUG(1249, *YYCURSOR);
+yy1251:
+		YYDEBUG(1251, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
 		if(yych >= ':') goto yy53;
-		YYDEBUG(1250, *YYCURSOR);
+		YYDEBUG(1252, *YYCURSOR);
 		yyaccept = 23;
 		yych = *(YYMARKER = ++YYCURSOR);
-		if(yych <= '/') goto yy1206;
-		if(yych <= '5') goto yy1251;
-		if(yych <= '6') goto yy1252;
-		goto yy1206;
-yy1251:
-		YYDEBUG(1251, *YYCURSOR);
+		if(yych <= '/') goto yy1208;
+		if(yych <= '5') goto yy1253;
+		if(yych <= '6') goto yy1254;
+		goto yy1208;
+yy1253:
+		YYDEBUG(1253, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= '/') goto yy53;
-		if(yych <= '9') goto yy1253;
+		if(yych <= '9') goto yy1255;
 		goto yy53;
-yy1252:
-		YYDEBUG(1252, *YYCURSOR);
+yy1254:
+		YYDEBUG(1254, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych != '0') goto yy53;
-yy1253:
-		YYDEBUG(1253, *YYCURSOR);
+yy1255:
+		YYDEBUG(1255, *YYCURSOR);
 		yych = *++YYCURSOR;
-		goto yy1214;
-yy1254:
-		YYDEBUG(1254, *YYCURSOR);
+		goto yy1216;
+yy1256:
+		YYDEBUG(1256, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'L') {
 			if(yych <= ')') {
@@ -18847,13 +18879,13 @@ yy1254:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 'l') goto yy1255;
+				if(yych <= 'l') goto yy1257;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy1255:
-		YYDEBUG(1255, *YYCURSOR);
+yy1257:
+		YYDEBUG(1257, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'F') {
 			if(yych <= ')') {
@@ -18869,13 +18901,13 @@ yy1255:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'f') goto yy1256;
+				if(yych <= 'f') goto yy1258;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy1256:
-		YYDEBUG(1256, *YYCURSOR);
+yy1258:
+		YYDEBUG(1258, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'T') {
 			if(yych <= ')') {
@@ -18891,47 +18923,47 @@ yy1256:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 't') goto yy1257;
+				if(yych <= 't') goto yy1259;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy1257:
-		YYDEBUG(1257, *YYCURSOR);
+yy1259:
+		YYDEBUG(1259, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'G') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'H') goto yy167;
-			if(yych == 'h') goto yy167;
+			if(yych <= 'H') goto yy169;
+			if(yych == 'h') goto yy169;
 			goto yy3;
 		}
-yy1258:
-		YYDEBUG(1258, *YYCURSOR);
+yy1260:
+		YYDEBUG(1260, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'S') {
 			if(yych <= ')') {
-				if(yych <= '(') goto yy283;
+				if(yych <= '(') goto yy285;
 				goto yy136;
 			} else {
-				if(yych <= '@') goto yy283;
+				if(yych <= '@') goto yy285;
 				if(yych <= 'R') goto yy139;
 			}
 		} else {
 			if(yych <= 'r') {
 				if(yych <= 'Z') goto yy139;
-				if(yych <= '`') goto yy283;
+				if(yych <= '`') goto yy285;
 				goto yy139;
 			} else {
-				if(yych <= 's') goto yy1259;
+				if(yych <= 's') goto yy1261;
 				if(yych <= 'z') goto yy139;
-				goto yy283;
+				goto yy285;
 			}
 		}
-yy1259:
-		YYDEBUG(1259, *YYCURSOR);
+yy1261:
+		YYDEBUG(1261, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'D') {
 			if(yych <= ')') {
@@ -18947,13 +18979,13 @@ yy1259:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'd') goto yy1260;
+				if(yych <= 'd') goto yy1262;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy1260:
-		YYDEBUG(1260, *YYCURSOR);
+yy1262:
+		YYDEBUG(1262, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'A') {
 			if(yych == ')') goto yy136;
@@ -18963,41 +18995,41 @@ yy1260:
 				if(yych <= 'Z') goto yy141;
 				goto yy3;
 			} else {
-				if(yych <= 'a') goto yy1261;
+				if(yych <= 'a') goto yy1263;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy1261:
-		YYDEBUG(1261, *YYCURSOR);
+yy1263:
+		YYDEBUG(1263, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'X') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'Y') goto yy289;
-			if(yych == 'y') goto yy289;
+			if(yych <= 'Y') goto yy291;
+			if(yych == 'y') goto yy291;
 			goto yy3;
 		}
-yy1262:
-		YYDEBUG(1262, *YYCURSOR);
+yy1264:
+		YYDEBUG(1264, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'A') {
 			if(yych == ')') goto yy136;
 			if(yych <= '@') goto yy3;
-			goto yy1270;
+			goto yy1272;
 		} else {
 			if(yych <= '`') {
 				if(yych <= 'Z') goto yy139;
 				goto yy3;
 			} else {
-				if(yych <= 'a') goto yy1270;
+				if(yych <= 'a') goto yy1272;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy1263:
-		YYDEBUG(1263, *YYCURSOR);
+yy1265:
+		YYDEBUG(1265, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'O') {
 			if(yych <= ')') {
@@ -19013,13 +19045,13 @@ yy1263:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 'o') goto yy1264;
+				if(yych <= 'o') goto yy1266;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy1264:
-		YYDEBUG(1264, *YYCURSOR);
+yy1266:
+		YYDEBUG(1266, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'R') {
 			if(yych <= ')') {
@@ -19035,13 +19067,13 @@ yy1264:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'r') goto yy1265;
+				if(yych <= 'r') goto yy1267;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy1265:
-		YYDEBUG(1265, *YYCURSOR);
+yy1267:
+		YYDEBUG(1267, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'R') {
 			if(yych <= ')') {
@@ -19057,33 +19089,33 @@ yy1265:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'r') goto yy1266;
+				if(yych <= 'r') goto yy1268;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy1266:
-		YYDEBUG(1266, *YYCURSOR);
+yy1268:
+		YYDEBUG(1268, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'N') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'O') goto yy1267;
+			if(yych <= 'O') goto yy1269;
 			if(yych != 'o') goto yy3;
 		}
-yy1267:
-		YYDEBUG(1267, *YYCURSOR);
+yy1269:
+		YYDEBUG(1269, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'W') goto yy1268;
+		if(yych == 'W') goto yy1270;
 		if(yych != 'w') goto yy53;
-yy1268:
-		YYDEBUG(1268, *YYCURSOR);
+yy1270:
+		YYDEBUG(1270, *YYCURSOR);
 		++YYCURSOR;
-yy1269:
-		YYDEBUG(1269, *YYCURSOR);
-#line 930 "ext/date/lib/parse_date.re"
+yy1271:
+		YYDEBUG(1271, *YYCURSOR);
+#line 932 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("tomorrow");
 		TIMELIB_INIT;
@@ -19094,9 +19126,9 @@ yy1269:
 		TIMELIB_DEINIT;
 		return TIMELIB_RELATIVE;
 	}
-#line 19098 "ext/date/lib/parse_date.c"
-yy1270:
-		YYDEBUG(1270, *YYCURSOR);
+#line 19130 "ext/date/lib/parse_date.c"
+yy1272:
+		YYDEBUG(1272, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'Y') {
 			if(yych <= ')') {
@@ -19112,24 +19144,24 @@ yy1270:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'y') goto yy1271;
+				if(yych <= 'y') goto yy1273;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy1271:
-		YYDEBUG(1271, *YYCURSOR);
+yy1273:
+		YYDEBUG(1273, *YYCURSOR);
 		++YYCURSOR;
 		if((yych = *YYCURSOR) <= '@') {
 			if(yych == ')') goto yy136;
 		} else {
 			if(yych <= 'Z') goto yy141;
-			if(yych <= '`') goto yy1272;
+			if(yych <= '`') goto yy1274;
 			if(yych <= 'z') goto yy141;
 		}
-yy1272:
-		YYDEBUG(1272, *YYCURSOR);
-#line 920 "ext/date/lib/parse_date.re"
+yy1274:
+		YYDEBUG(1274, *YYCURSOR);
+#line 922 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("midnight | today");
 		TIMELIB_INIT;
@@ -19138,32 +19170,32 @@ yy1272:
 		TIMELIB_DEINIT;
 		return TIMELIB_RELATIVE;
 	}
-#line 19142 "ext/date/lib/parse_date.c"
-yy1273:
-		YYDEBUG(1273, *YYCURSOR);
+#line 19174 "ext/date/lib/parse_date.c"
+yy1275:
+		YYDEBUG(1275, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'R') {
 			if(yych <= ')') {
-				if(yych <= '(') goto yy283;
+				if(yych <= '(') goto yy285;
 				goto yy136;
 			} else {
-				if(yych <= '@') goto yy283;
+				if(yych <= '@') goto yy285;
 				if(yych <= 'Q') goto yy139;
-				goto yy1276;
+				goto yy1278;
 			}
 		} else {
 			if(yych <= 'q') {
 				if(yych <= 'Z') goto yy139;
-				if(yych <= '`') goto yy283;
+				if(yych <= '`') goto yy285;
 				goto yy139;
 			} else {
-				if(yych <= 'r') goto yy1276;
+				if(yych <= 'r') goto yy1278;
 				if(yych <= 'z') goto yy139;
-				goto yy283;
+				goto yy285;
 			}
 		}
-yy1274:
-		YYDEBUG(1274, *YYCURSOR);
+yy1276:
+		YYDEBUG(1276, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'S') {
 			if(yych <= '@') {
@@ -19171,7 +19203,7 @@ yy1274:
 				goto yy3;
 			} else {
 				if(yych <= 'Q') goto yy139;
-				if(yych >= 'S') goto yy257;
+				if(yych >= 'S') goto yy259;
 			}
 		} else {
 			if(yych <= 'q') {
@@ -19179,14 +19211,14 @@ yy1274:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 'r') goto yy1275;
-				if(yych <= 's') goto yy257;
+				if(yych <= 'r') goto yy1277;
+				if(yych <= 's') goto yy259;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy1275:
-		YYDEBUG(1275, *YYCURSOR);
+yy1277:
+		YYDEBUG(1277, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'D') {
 			if(yych <= ')') {
@@ -19195,7 +19227,7 @@ yy1275:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'C') goto yy140;
-				goto yy270;
+				goto yy272;
 			}
 		} else {
 			if(yych <= 'c') {
@@ -19203,13 +19235,13 @@ yy1275:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'd') goto yy270;
+				if(yych <= 'd') goto yy272;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy1276:
-		YYDEBUG(1276, *YYCURSOR);
+yy1278:
+		YYDEBUG(1278, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'S') {
 			if(yych <= ')') {
@@ -19225,13 +19257,13 @@ yy1276:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 's') goto yy1277;
+				if(yych <= 's') goto yy1279;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy1277:
-		YYDEBUG(1277, *YYCURSOR);
+yy1279:
+		YYDEBUG(1279, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'D') {
 			if(yych <= ')') {
@@ -19247,30 +19279,30 @@ yy1277:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'd') goto yy1278;
+				if(yych <= 'd') goto yy1280;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy1278:
-		YYDEBUG(1278, *YYCURSOR);
+yy1280:
+		YYDEBUG(1280, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '@') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'A') goto yy1279;
+			if(yych <= 'A') goto yy1281;
 			if(yych != 'a') goto yy3;
 		}
-yy1279:
-		YYDEBUG(1279, *YYCURSOR);
+yy1281:
+		YYDEBUG(1281, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy289;
-		if(yych == 'y') goto yy289;
+		if(yych == 'Y') goto yy291;
+		if(yych == 'y') goto yy291;
 		goto yy53;
-yy1280:
-		YYDEBUG(1280, *YYCURSOR);
+yy1282:
+		YYDEBUG(1282, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'T') {
 			if(yych <= ')') {
@@ -19286,13 +19318,13 @@ yy1280:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 't') goto yy1281;
+				if(yych <= 't') goto yy1283;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy1281:
-		YYDEBUG(1281, *YYCURSOR);
+yy1283:
+		YYDEBUG(1283, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'H') {
 			if(yych <= ')') {
@@ -19301,7 +19333,7 @@ yy1281:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'G') goto yy140;
-				goto yy270;
+				goto yy272;
 			}
 		} else {
 			if(yych <= 'g') {
@@ -19309,13 +19341,13 @@ yy1281:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'h') goto yy270;
+				if(yych <= 'h') goto yy272;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy1282:
-		YYDEBUG(1282, *YYCURSOR);
+yy1284:
+		YYDEBUG(1284, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'N') {
@@ -19326,7 +19358,7 @@ yy1282:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'M') goto yy138;
-				goto yy1280;
+				goto yy1282;
 			}
 		} else {
 			if(yych <= '`') {
@@ -19334,13 +19366,13 @@ yy1282:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'n') goto yy1311;
+				if(yych == 'n') goto yy1313;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy1283:
-		YYDEBUG(1283, *YYCURSOR);
+yy1285:
+		YYDEBUG(1285, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'U') {
@@ -19353,9 +19385,9 @@ yy1283:
 					if(yych <= '@') goto yy3;
 					goto yy138;
 				} else {
-					if(yych <= 'I') goto yy1274;
+					if(yych <= 'I') goto yy1276;
 					if(yych <= 'T') goto yy138;
-					goto yy1273;
+					goto yy1275;
 				}
 			}
 		} else {
@@ -19370,17 +19402,17 @@ yy1283:
 				}
 			} else {
 				if(yych <= 't') {
-					if(yych <= 'i') goto yy1305;
+					if(yych <= 'i') goto yy1307;
 					goto yy143;
 				} else {
-					if(yych <= 'u') goto yy1304;
+					if(yych <= 'u') goto yy1306;
 					if(yych <= 'z') goto yy143;
 					goto yy3;
 				}
 			}
 		}
-yy1284:
-		YYDEBUG(1284, *YYCURSOR);
+yy1286:
+		YYDEBUG(1286, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'M') {
@@ -19393,9 +19425,9 @@ yy1284:
 					if(yych <= '@') goto yy3;
 					goto yy138;
 				} else {
-					if(yych <= 'D') goto yy1262;
+					if(yych <= 'D') goto yy1264;
 					if(yych <= 'L') goto yy138;
-					goto yy1263;
+					goto yy1265;
 				}
 			}
 		} else {
@@ -19410,17 +19442,17 @@ yy1284:
 				}
 			} else {
 				if(yych <= 'l') {
-					if(yych <= 'd') goto yy1295;
+					if(yych <= 'd') goto yy1297;
 					goto yy143;
 				} else {
-					if(yych <= 'm') goto yy1296;
+					if(yych <= 'm') goto yy1298;
 					if(yych <= 'z') goto yy143;
 					goto yy3;
 				}
 			}
 		}
-yy1285:
-		YYDEBUG(1285, *YYCURSOR);
+yy1287:
+		YYDEBUG(1287, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'E') {
@@ -19431,7 +19463,7 @@ yy1285:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy138;
-				goto yy1258;
+				goto yy1260;
 			}
 		} else {
 			if(yych <= '`') {
@@ -19439,13 +19471,13 @@ yy1285:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'e') goto yy1291;
+				if(yych == 'e') goto yy1293;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy1286:
-		YYDEBUG(1286, *YYCURSOR);
+yy1288:
+		YYDEBUG(1288, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'E') {
@@ -19456,7 +19488,7 @@ yy1286:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy138;
-				goto yy1254;
+				goto yy1256;
 			}
 		} else {
 			if(yych <= '`') {
@@ -19464,13 +19496,13 @@ yy1286:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'e') goto yy1287;
+				if(yych == 'e') goto yy1289;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy1287:
-		YYDEBUG(1287, *YYCURSOR);
+yy1289:
+		YYDEBUG(1289, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'L') {
@@ -19481,7 +19513,7 @@ yy1287:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'K') goto yy139;
-				goto yy1255;
+				goto yy1257;
 			}
 		} else {
 			if(yych <= '`') {
@@ -19489,13 +19521,13 @@ yy1287:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'l') goto yy1288;
+				if(yych == 'l') goto yy1290;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy1288:
-		YYDEBUG(1288, *YYCURSOR);
+yy1290:
+		YYDEBUG(1290, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'F') {
@@ -19506,7 +19538,7 @@ yy1288:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'E') goto yy140;
-				goto yy1256;
+				goto yy1258;
 			}
 		} else {
 			if(yych <= '`') {
@@ -19514,13 +19546,13 @@ yy1288:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'f') goto yy1289;
+				if(yych == 'f') goto yy1291;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy1289:
-		YYDEBUG(1289, *YYCURSOR);
+yy1291:
+		YYDEBUG(1291, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
@@ -19531,7 +19563,7 @@ yy1289:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy141;
-				goto yy1257;
+				goto yy1259;
 			}
 		} else {
 			if(yych <= '`') {
@@ -19539,13 +19571,13 @@ yy1289:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 't') goto yy1290;
+				if(yych == 't') goto yy1292;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy1290:
-		YYDEBUG(1290, *YYCURSOR);
+yy1292:
+		YYDEBUG(1292, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'H') {
@@ -19555,45 +19587,45 @@ yy1290:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= 'G') goto yy3;
-				goto yy167;
+				goto yy169;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'h') goto yy254;
+				if(yych == 'h') goto yy256;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy1291:
-		YYDEBUG(1291, *YYCURSOR);
+yy1293:
+		YYDEBUG(1293, *YYCURSOR);
 		yyaccept = 5;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'S') {
 			if(yych <= '.') {
 				if(yych == ')') goto yy136;
-				goto yy283;
+				goto yy285;
 			} else {
 				if(yych <= '/') goto yy144;
-				if(yych <= '@') goto yy283;
+				if(yych <= '@') goto yy285;
 				if(yych <= 'R') goto yy139;
-				goto yy1259;
+				goto yy1261;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych <= 'Z') goto yy139;
 				if(yych == '_') goto yy144;
-				goto yy283;
+				goto yy285;
 			} else {
-				if(yych == 's') goto yy1292;
+				if(yych == 's') goto yy1294;
 				if(yych <= 'z') goto yy148;
-				goto yy283;
+				goto yy285;
 			}
 		}
-yy1292:
-		YYDEBUG(1292, *YYCURSOR);
+yy1294:
+		YYDEBUG(1294, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
@@ -19604,7 +19636,7 @@ yy1292:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'C') goto yy140;
-				goto yy1260;
+				goto yy1262;
 			}
 		} else {
 			if(yych <= '`') {
@@ -19612,13 +19644,13 @@ yy1292:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'd') goto yy1293;
+				if(yych == 'd') goto yy1295;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy1293:
-		YYDEBUG(1293, *YYCURSOR);
+yy1295:
+		YYDEBUG(1295, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'A') {
@@ -19628,7 +19660,7 @@ yy1293:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
-				goto yy1261;
+				goto yy1263;
 			}
 		} else {
 			if(yych <= '_') {
@@ -19637,13 +19669,13 @@ yy1293:
 				goto yy144;
 			} else {
 				if(yych <= '`') goto yy3;
-				if(yych <= 'a') goto yy1294;
+				if(yych <= 'a') goto yy1296;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy1294:
-		YYDEBUG(1294, *YYCURSOR);
+yy1296:
+		YYDEBUG(1296, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'Y') {
@@ -19653,20 +19685,20 @@ yy1294:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= 'X') goto yy3;
-				goto yy289;
+				goto yy291;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'y') goto yy302;
+				if(yych == 'y') goto yy304;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy1295:
-		YYDEBUG(1295, *YYCURSOR);
+yy1297:
+		YYDEBUG(1297, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'A') {
@@ -19676,7 +19708,7 @@ yy1295:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
-				goto yy1270;
+				goto yy1272;
 			}
 		} else {
 			if(yych <= '_') {
@@ -19685,13 +19717,13 @@ yy1295:
 				goto yy144;
 			} else {
 				if(yych <= '`') goto yy3;
-				if(yych <= 'a') goto yy1302;
+				if(yych <= 'a') goto yy1304;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy1296:
-		YYDEBUG(1296, *YYCURSOR);
+yy1298:
+		YYDEBUG(1298, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'O') {
@@ -19702,7 +19734,7 @@ yy1296:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'N') goto yy139;
-				goto yy1264;
+				goto yy1266;
 			}
 		} else {
 			if(yych <= '`') {
@@ -19710,13 +19742,13 @@ yy1296:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'o') goto yy1297;
+				if(yych == 'o') goto yy1299;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy1297:
-		YYDEBUG(1297, *YYCURSOR);
+yy1299:
+		YYDEBUG(1299, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'R') {
@@ -19727,7 +19759,7 @@ yy1297:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'Q') goto yy140;
-				goto yy1265;
+				goto yy1267;
 			}
 		} else {
 			if(yych <= '`') {
@@ -19735,13 +19767,13 @@ yy1297:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'r') goto yy1298;
+				if(yych == 'r') goto yy1300;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy1298:
-		YYDEBUG(1298, *YYCURSOR);
+yy1300:
+		YYDEBUG(1300, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'R') {
@@ -19752,7 +19784,7 @@ yy1298:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'Q') goto yy141;
-				goto yy1266;
+				goto yy1268;
 			}
 		} else {
 			if(yych <= '`') {
@@ -19760,13 +19792,13 @@ yy1298:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'r') goto yy1299;
+				if(yych == 'r') goto yy1301;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy1299:
-		YYDEBUG(1299, *YYCURSOR);
+yy1301:
+		YYDEBUG(1301, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'O') {
@@ -19776,37 +19808,37 @@ yy1299:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= 'N') goto yy3;
-				goto yy1267;
+				goto yy1269;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'o') goto yy1300;
+				if(yych == 'o') goto yy1302;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy1300:
-		YYDEBUG(1300, *YYCURSOR);
+yy1302:
+		YYDEBUG(1302, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'W') goto yy1268;
+		if(yych == 'W') goto yy1270;
 		if(yych != 'w') goto yy152;
-		YYDEBUG(1301, *YYCURSOR);
+		YYDEBUG(1303, *YYCURSOR);
 		yyaccept = 25;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '^') {
 			if(yych == '/') goto yy144;
-			goto yy1269;
+			goto yy1271;
 		} else {
 			if(yych <= '_') goto yy144;
-			if(yych <= '`') goto yy1269;
+			if(yych <= '`') goto yy1271;
 			if(yych <= 'z') goto yy151;
-			goto yy1269;
+			goto yy1271;
 		}
-yy1302:
-		YYDEBUG(1302, *YYCURSOR);
+yy1304:
+		YYDEBUG(1304, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'Y') {
@@ -19817,7 +19849,7 @@ yy1302:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'X') goto yy140;
-				goto yy1271;
+				goto yy1273;
 			}
 		} else {
 			if(yych <= '`') {
@@ -19825,61 +19857,61 @@ yy1302:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'y') goto yy1303;
+				if(yych == 'y') goto yy1305;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy1303:
-		YYDEBUG(1303, *YYCURSOR);
+yy1305:
+		YYDEBUG(1305, *YYCURSOR);
 		yyaccept = 26;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '@') {
 			if(yych <= ')') {
-				if(yych <= '(') goto yy1272;
+				if(yych <= '(') goto yy1274;
 				goto yy136;
 			} else {
 				if(yych == '/') goto yy144;
-				goto yy1272;
+				goto yy1274;
 			}
 		} else {
 			if(yych <= '_') {
 				if(yych <= 'Z') goto yy141;
-				if(yych <= '^') goto yy1272;
+				if(yych <= '^') goto yy1274;
 				goto yy144;
 			} else {
-				if(yych <= '`') goto yy1272;
+				if(yych <= '`') goto yy1274;
 				if(yych <= 'z') goto yy150;
-				goto yy1272;
+				goto yy1274;
 			}
 		}
-yy1304:
-		YYDEBUG(1304, *YYCURSOR);
+yy1306:
+		YYDEBUG(1306, *YYCURSOR);
 		yyaccept = 5;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'R') {
 			if(yych <= '.') {
 				if(yych == ')') goto yy136;
-				goto yy283;
+				goto yy285;
 			} else {
 				if(yych <= '/') goto yy144;
-				if(yych <= '@') goto yy283;
+				if(yych <= '@') goto yy285;
 				if(yych <= 'Q') goto yy139;
-				goto yy1276;
+				goto yy1278;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych <= 'Z') goto yy139;
 				if(yych == '_') goto yy144;
-				goto yy283;
+				goto yy285;
 			} else {
-				if(yych == 'r') goto yy1307;
+				if(yych == 'r') goto yy1309;
 				if(yych <= 'z') goto yy148;
-				goto yy283;
+				goto yy285;
 			}
 		}
-yy1305:
-		YYDEBUG(1305, *YYCURSOR);
+yy1307:
+		YYDEBUG(1307, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'S') {
@@ -19890,8 +19922,8 @@ yy1305:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'Q') goto yy139;
-				if(yych <= 'R') goto yy1275;
-				goto yy257;
+				if(yych <= 'R') goto yy1277;
+				goto yy259;
 			}
 		} else {
 			if(yych <= '`') {
@@ -19902,13 +19934,13 @@ yy1305:
 				if(yych <= 'r') {
 					if(yych <= 'q') goto yy148;
 				} else {
-					if(yych <= 's') goto yy260;
+					if(yych <= 's') goto yy262;
 					if(yych <= 'z') goto yy148;
 					goto yy3;
 				}
 			}
 		}
-		YYDEBUG(1306, *YYCURSOR);
+		YYDEBUG(1308, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
@@ -19919,7 +19951,7 @@ yy1305:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'C') goto yy140;
-				goto yy270;
+				goto yy272;
 			}
 		} else {
 			if(yych <= '`') {
@@ -19927,13 +19959,13 @@ yy1305:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'd') goto yy280;
+				if(yych == 'd') goto yy282;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy1307:
-		YYDEBUG(1307, *YYCURSOR);
+yy1309:
+		YYDEBUG(1309, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'S') {
@@ -19944,7 +19976,7 @@ yy1307:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'R') goto yy140;
-				goto yy1277;
+				goto yy1279;
 			}
 		} else {
 			if(yych <= '`') {
@@ -19952,13 +19984,13 @@ yy1307:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 's') goto yy1308;
+				if(yych == 's') goto yy1310;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy1308:
-		YYDEBUG(1308, *YYCURSOR);
+yy1310:
+		YYDEBUG(1310, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
@@ -19969,7 +20001,7 @@ yy1308:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'C') goto yy141;
-				goto yy1278;
+				goto yy1280;
 			}
 		} else {
 			if(yych <= '`') {
@@ -19977,13 +20009,13 @@ yy1308:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'd') goto yy1309;
+				if(yych == 'd') goto yy1311;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy1309:
-		YYDEBUG(1309, *YYCURSOR);
+yy1311:
+		YYDEBUG(1311, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'A') {
@@ -19993,26 +20025,26 @@ yy1309:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
-				goto yy1279;
+				goto yy1281;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych <= 'a') goto yy1310;
+				if(yych <= 'a') goto yy1312;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy1310:
-		YYDEBUG(1310, *YYCURSOR);
+yy1312:
+		YYDEBUG(1312, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy289;
-		if(yych == 'y') goto yy302;
+		if(yych == 'Y') goto yy291;
+		if(yych == 'y') goto yy304;
 		goto yy152;
-yy1311:
-		YYDEBUG(1311, *YYCURSOR);
+yy1313:
+		YYDEBUG(1313, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
@@ -20023,7 +20055,7 @@ yy1311:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy139;
-				goto yy1281;
+				goto yy1283;
 			}
 		} else {
 			if(yych <= '`') {
@@ -20031,13 +20063,13 @@ yy1311:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 't') goto yy1312;
+				if(yych == 't') goto yy1314;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy1312:
-		YYDEBUG(1312, *YYCURSOR);
+yy1314:
+		YYDEBUG(1314, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'H') {
@@ -20048,7 +20080,7 @@ yy1312:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'G') goto yy140;
-				goto yy270;
+				goto yy272;
 			}
 		} else {
 			if(yych <= '`') {
@@ -20056,37 +20088,37 @@ yy1312:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'h') goto yy280;
+				if(yych == 'h') goto yy282;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy1313:
-		YYDEBUG(1313, *YYCURSOR);
+yy1315:
+		YYDEBUG(1315, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'Y') {
 			if(yych <= '@') {
 				if(yych == ')') goto yy136;
 				goto yy3;
 			} else {
-				if(yych == 'R') goto yy1325;
+				if(yych == 'R') goto yy1327;
 				if(yych <= 'X') goto yy138;
-				goto yy1326;
+				goto yy1328;
 			}
 		} else {
 			if(yych <= 'r') {
 				if(yych <= 'Z') goto yy138;
 				if(yych <= '`') goto yy3;
 				if(yych <= 'q') goto yy138;
-				goto yy1325;
+				goto yy1327;
 			} else {
-				if(yych == 'y') goto yy1326;
+				if(yych == 'y') goto yy1328;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy1314:
-		YYDEBUG(1314, *YYCURSOR);
+yy1316:
+		YYDEBUG(1316, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'D') {
 			if(yych <= ')') {
@@ -20095,7 +20127,7 @@ yy1314:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'C') goto yy138;
-				goto yy1319;
+				goto yy1321;
 			}
 		} else {
 			if(yych <= 'c') {
@@ -20103,13 +20135,13 @@ yy1314:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'd') goto yy1319;
+				if(yych <= 'd') goto yy1321;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy1315:
-		YYDEBUG(1315, *YYCURSOR);
+yy1317:
+		YYDEBUG(1317, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'N') {
 			if(yych <= ')') {
@@ -20125,35 +20157,35 @@ yy1315:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'n') goto yy1316;
+				if(yych <= 'n') goto yy1318;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy1316:
-		YYDEBUG(1316, *YYCURSOR);
+yy1318:
+		YYDEBUG(1318, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'D') {
 			if(yych <= ')') {
-				if(yych <= '(') goto yy283;
+				if(yych <= '(') goto yy285;
 				goto yy136;
 			} else {
-				if(yych <= '@') goto yy283;
+				if(yych <= '@') goto yy285;
 				if(yych <= 'C') goto yy139;
 			}
 		} else {
 			if(yych <= 'c') {
 				if(yych <= 'Z') goto yy139;
-				if(yych <= '`') goto yy283;
+				if(yych <= '`') goto yy285;
 				goto yy139;
 			} else {
-				if(yych <= 'd') goto yy1317;
+				if(yych <= 'd') goto yy1319;
 				if(yych <= 'z') goto yy139;
-				goto yy283;
+				goto yy285;
 			}
 		}
-yy1317:
-		YYDEBUG(1317, *YYCURSOR);
+yy1319:
+		YYDEBUG(1319, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'A') {
 			if(yych == ')') goto yy136;
@@ -20163,13 +20195,13 @@ yy1317:
 				if(yych <= 'Z') goto yy140;
 				goto yy3;
 			} else {
-				if(yych <= 'a') goto yy1318;
+				if(yych <= 'a') goto yy1320;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy1318:
-		YYDEBUG(1318, *YYCURSOR);
+yy1320:
+		YYDEBUG(1320, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'Y') {
 			if(yych <= ')') {
@@ -20178,7 +20210,7 @@ yy1318:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'X') goto yy141;
-				goto yy510;
+				goto yy512;
 			}
 		} else {
 			if(yych <= 'x') {
@@ -20186,13 +20218,13 @@ yy1318:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'y') goto yy510;
+				if(yych <= 'y') goto yy512;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy1319:
-		YYDEBUG(1319, *YYCURSOR);
+yy1321:
+		YYDEBUG(1321, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'N') {
 			if(yych <= ')') {
@@ -20208,13 +20240,13 @@ yy1319:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 'n') goto yy1320;
+				if(yych <= 'n') goto yy1322;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy1320:
-		YYDEBUG(1320, *YYCURSOR);
+yy1322:
+		YYDEBUG(1322, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'I') {
 			if(yych <= ')') {
@@ -20230,13 +20262,13 @@ yy1320:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'i') goto yy1321;
+				if(yych <= 'i') goto yy1323;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy1321:
-		YYDEBUG(1321, *YYCURSOR);
+yy1323:
+		YYDEBUG(1323, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'G') {
 			if(yych <= ')') {
@@ -20252,102 +20284,102 @@ yy1321:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'g') goto yy1322;
+				if(yych <= 'g') goto yy1324;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy1322:
-		YYDEBUG(1322, *YYCURSOR);
+yy1324:
+		YYDEBUG(1324, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'G') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'H') goto yy1323;
+			if(yych <= 'H') goto yy1325;
 			if(yych != 'h') goto yy3;
 		}
-yy1323:
-		YYDEBUG(1323, *YYCURSOR);
+yy1325:
+		YYDEBUG(1325, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'T') goto yy1324;
+		if(yych == 'T') goto yy1326;
 		if(yych != 't') goto yy53;
-yy1324:
-		YYDEBUG(1324, *YYCURSOR);
+yy1326:
+		YYDEBUG(1326, *YYCURSOR);
 		yych = *++YYCURSOR;
-		goto yy1272;
-yy1325:
-		YYDEBUG(1325, *YYCURSOR);
+		goto yy1274;
+yy1327:
+		YYDEBUG(1327, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= ',') {
 					if(yych <= ')') goto yy136;
-					goto yy310;
+					goto yy312;
 				} else {
-					if(yych <= '-') goto yy313;
-					if(yych <= '.') goto yy312;
-					goto yy310;
+					if(yych <= '-') goto yy315;
+					if(yych <= '.') goto yy314;
+					goto yy312;
 				}
 			}
 		} else {
 			if(yych <= 'Z') {
 				if(yych <= '@') {
-					if(yych <= '9') goto yy312;
-					goto yy310;
+					if(yych <= '9') goto yy314;
+					goto yy312;
 				} else {
-					if(yych == 'C') goto yy1327;
+					if(yych == 'C') goto yy1329;
 					goto yy139;
 				}
 			} else {
 				if(yych <= 'b') {
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'c') goto yy1327;
+					if(yych <= 'c') goto yy1329;
 					if(yych <= 'z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy1326:
-		YYDEBUG(1326, *YYCURSOR);
+yy1328:
+		YYDEBUG(1328, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '-') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy312;
-				if(yych <= 0x1F) goto yy310;
-				goto yy312;
+				if(yych == 0x09) goto yy314;
+				if(yych <= 0x1F) goto yy312;
+				goto yy314;
 			} else {
 				if(yych == ')') goto yy136;
-				if(yych <= ',') goto yy310;
-				goto yy313;
+				if(yych <= ',') goto yy312;
+				goto yy315;
 			}
 		} else {
 			if(yych <= '@') {
-				if(yych == '/') goto yy310;
-				if(yych <= '9') goto yy312;
-				goto yy310;
+				if(yych == '/') goto yy312;
+				if(yych <= '9') goto yy314;
+				goto yy312;
 			} else {
 				if(yych <= 'Z') goto yy139;
-				if(yych <= '`') goto yy310;
+				if(yych <= '`') goto yy312;
 				if(yych <= 'z') goto yy139;
-				goto yy310;
+				goto yy312;
 			}
 		}
-yy1327:
-		YYDEBUG(1327, *YYCURSOR);
+yy1329:
+		YYDEBUG(1329, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'H') {
 			if(yych <= ')') {
@@ -20356,7 +20388,7 @@ yy1327:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'G') goto yy140;
-				goto yy568;
+				goto yy570;
 			}
 		} else {
 			if(yych <= 'g') {
@@ -20364,13 +20396,13 @@ yy1327:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'h') goto yy568;
+				if(yych <= 'h') goto yy570;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy1328:
-		YYDEBUG(1328, *YYCURSOR);
+yy1330:
+		YYDEBUG(1330, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'Y') {
@@ -20383,9 +20415,9 @@ yy1328:
 					if(yych <= '@') goto yy3;
 					goto yy138;
 				} else {
-					if(yych <= 'R') goto yy1325;
+					if(yych <= 'R') goto yy1327;
 					if(yych <= 'X') goto yy138;
-					goto yy1326;
+					goto yy1328;
 				}
 			}
 		} else {
@@ -20400,17 +20432,17 @@ yy1328:
 				}
 			} else {
 				if(yych <= 'x') {
-					if(yych <= 'r') goto yy1340;
+					if(yych <= 'r') goto yy1342;
 					goto yy143;
 				} else {
-					if(yych <= 'y') goto yy1341;
+					if(yych <= 'y') goto yy1343;
 					if(yych <= 'z') goto yy143;
 					goto yy3;
 				}
 			}
 		}
-yy1329:
-		YYDEBUG(1329, *YYCURSOR);
+yy1331:
+		YYDEBUG(1331, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
@@ -20421,7 +20453,7 @@ yy1329:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'C') goto yy138;
-				goto yy1319;
+				goto yy1321;
 			}
 		} else {
 			if(yych <= '`') {
@@ -20429,13 +20461,13 @@ yy1329:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'd') goto yy1334;
+				if(yych == 'd') goto yy1336;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy1330:
-		YYDEBUG(1330, *YYCURSOR);
+yy1332:
+		YYDEBUG(1332, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'N') {
@@ -20446,7 +20478,7 @@ yy1330:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'M') goto yy138;
-				goto yy1316;
+				goto yy1318;
 			}
 		} else {
 			if(yych <= '`') {
@@ -20454,38 +20486,38 @@ yy1330:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'n') goto yy1331;
+				if(yych == 'n') goto yy1333;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy1331:
-		YYDEBUG(1331, *YYCURSOR);
+yy1333:
+		YYDEBUG(1333, *YYCURSOR);
 		yyaccept = 5;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
 			if(yych <= '.') {
 				if(yych == ')') goto yy136;
-				goto yy283;
+				goto yy285;
 			} else {
 				if(yych <= '/') goto yy144;
-				if(yych <= '@') goto yy283;
+				if(yych <= '@') goto yy285;
 				if(yych <= 'C') goto yy139;
-				goto yy1317;
+				goto yy1319;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych <= 'Z') goto yy139;
 				if(yych == '_') goto yy144;
-				goto yy283;
+				goto yy285;
 			} else {
-				if(yych == 'd') goto yy1332;
+				if(yych == 'd') goto yy1334;
 				if(yych <= 'z') goto yy148;
-				goto yy283;
+				goto yy285;
 			}
 		}
-yy1332:
-		YYDEBUG(1332, *YYCURSOR);
+yy1334:
+		YYDEBUG(1334, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'A') {
@@ -20495,7 +20527,7 @@ yy1332:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
-				goto yy1318;
+				goto yy1320;
 			}
 		} else {
 			if(yych <= '_') {
@@ -20504,13 +20536,13 @@ yy1332:
 				goto yy144;
 			} else {
 				if(yych <= '`') goto yy3;
-				if(yych <= 'a') goto yy1333;
+				if(yych <= 'a') goto yy1335;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy1333:
-		YYDEBUG(1333, *YYCURSOR);
+yy1335:
+		YYDEBUG(1335, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'Y') {
@@ -20521,7 +20553,7 @@ yy1333:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'X') goto yy141;
-				goto yy510;
+				goto yy512;
 			}
 		} else {
 			if(yych <= '`') {
@@ -20529,13 +20561,13 @@ yy1333:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'y') goto yy539;
+				if(yych == 'y') goto yy541;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy1334:
-		YYDEBUG(1334, *YYCURSOR);
+yy1336:
+		YYDEBUG(1336, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'N') {
@@ -20546,7 +20578,7 @@ yy1334:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'M') goto yy139;
-				goto yy1320;
+				goto yy1322;
 			}
 		} else {
 			if(yych <= '`') {
@@ -20554,13 +20586,13 @@ yy1334:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'n') goto yy1335;
+				if(yych == 'n') goto yy1337;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy1335:
-		YYDEBUG(1335, *YYCURSOR);
+yy1337:
+		YYDEBUG(1337, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'I') {
@@ -20571,7 +20603,7 @@ yy1335:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'H') goto yy140;
-				goto yy1321;
+				goto yy1323;
 			}
 		} else {
 			if(yych <= '`') {
@@ -20579,13 +20611,13 @@ yy1335:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'i') goto yy1336;
+				if(yych == 'i') goto yy1338;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy1336:
-		YYDEBUG(1336, *YYCURSOR);
+yy1338:
+		YYDEBUG(1338, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'G') {
@@ -20596,7 +20628,7 @@ yy1336:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'F') goto yy141;
-				goto yy1322;
+				goto yy1324;
 			}
 		} else {
 			if(yych <= '`') {
@@ -20604,13 +20636,13 @@ yy1336:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'g') goto yy1337;
+				if(yych == 'g') goto yy1339;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy1337:
-		YYDEBUG(1337, *YYCURSOR);
+yy1339:
+		YYDEBUG(1339, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'H') {
@@ -20620,118 +20652,118 @@ yy1337:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= 'G') goto yy3;
-				goto yy1323;
+				goto yy1325;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'h') goto yy1338;
+				if(yych == 'h') goto yy1340;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy1338:
-		YYDEBUG(1338, *YYCURSOR);
+yy1340:
+		YYDEBUG(1340, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'T') goto yy1324;
+		if(yych == 'T') goto yy1326;
 		if(yych != 't') goto yy152;
-		YYDEBUG(1339, *YYCURSOR);
+		YYDEBUG(1341, *YYCURSOR);
 		yyaccept = 26;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '^') {
 			if(yych == '/') goto yy144;
-			goto yy1272;
+			goto yy1274;
 		} else {
 			if(yych <= '_') goto yy144;
-			if(yych <= '`') goto yy1272;
+			if(yych <= '`') goto yy1274;
 			if(yych <= 'z') goto yy151;
-			goto yy1272;
+			goto yy1274;
 		}
-yy1340:
-		YYDEBUG(1340, *YYCURSOR);
+yy1342:
+		YYDEBUG(1342, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= '-') {
 					if(yych <= ')') goto yy136;
-					if(yych <= ',') goto yy310;
-					goto yy313;
+					if(yych <= ',') goto yy312;
+					goto yy315;
 				} else {
 					if(yych == '/') goto yy144;
-					goto yy312;
+					goto yy314;
 				}
 			}
 		} else {
 			if(yych <= '^') {
 				if(yych <= 'B') {
-					if(yych <= '@') goto yy310;
+					if(yych <= '@') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'C') goto yy1327;
+					if(yych <= 'C') goto yy1329;
 					if(yych <= 'Z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			} else {
 				if(yych <= 'b') {
 					if(yych <= '_') goto yy144;
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy148;
 				} else {
-					if(yych <= 'c') goto yy1342;
+					if(yych <= 'c') goto yy1344;
 					if(yych <= 'z') goto yy148;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy1341:
-		YYDEBUG(1341, *YYCURSOR);
+yy1343:
+		YYDEBUG(1343, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '.') {
 			if(yych <= ' ') {
-				if(yych == 0x09) goto yy312;
-				if(yych <= 0x1F) goto yy310;
-				goto yy312;
+				if(yych == 0x09) goto yy314;
+				if(yych <= 0x1F) goto yy312;
+				goto yy314;
 			} else {
 				if(yych <= ')') {
-					if(yych <= '(') goto yy310;
+					if(yych <= '(') goto yy312;
 					goto yy136;
 				} else {
-					if(yych <= ',') goto yy310;
-					if(yych <= '-') goto yy313;
-					goto yy312;
+					if(yych <= ',') goto yy312;
+					if(yych <= '-') goto yy315;
+					goto yy314;
 				}
 			}
 		} else {
 			if(yych <= 'Z') {
 				if(yych <= '/') goto yy144;
-				if(yych <= '9') goto yy312;
-				if(yych <= '@') goto yy310;
+				if(yych <= '9') goto yy314;
+				if(yych <= '@') goto yy312;
 				goto yy139;
 			} else {
 				if(yych <= '_') {
-					if(yych <= '^') goto yy310;
+					if(yych <= '^') goto yy312;
 					goto yy144;
 				} else {
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					if(yych <= 'z') goto yy148;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy1342:
-		YYDEBUG(1342, *YYCURSOR);
+yy1344:
+		YYDEBUG(1344, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'H') {
@@ -20742,7 +20774,7 @@ yy1342:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'G') goto yy140;
-				goto yy568;
+				goto yy570;
 			}
 		} else {
 			if(yych <= '`') {
@@ -20750,13 +20782,13 @@ yy1342:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'h') goto yy579;
+				if(yych == 'h') goto yy581;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy1343:
-		YYDEBUG(1343, *YYCURSOR);
+yy1345:
+		YYDEBUG(1345, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'W') {
 			if(yych <= 'N') {
@@ -20764,30 +20796,30 @@ yy1343:
 				if(yych <= '@') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'O') goto yy1351;
+				if(yych <= 'O') goto yy1353;
 				if(yych <= 'U') goto yy138;
-				if(yych <= 'V') goto yy1352;
-				goto yy1349;
+				if(yych <= 'V') goto yy1354;
+				goto yy1351;
 			}
 		} else {
 			if(yych <= 'o') {
 				if(yych <= 'Z') goto yy138;
 				if(yych <= '`') goto yy3;
 				if(yych <= 'n') goto yy138;
-				goto yy1351;
+				goto yy1353;
 			} else {
 				if(yych <= 'v') {
 					if(yych <= 'u') goto yy138;
-					goto yy1352;
+					goto yy1354;
 				} else {
-					if(yych <= 'w') goto yy1349;
+					if(yych <= 'w') goto yy1351;
 					if(yych <= 'z') goto yy138;
 					goto yy3;
 				}
 			}
 		}
-yy1344:
-		YYDEBUG(1344, *YYCURSOR);
+yy1346:
+		YYDEBUG(1346, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'X') {
 			if(yych <= ')') {
@@ -20796,7 +20828,7 @@ yy1344:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'W') goto yy138;
-				goto yy1348;
+				goto yy1350;
 			}
 		} else {
 			if(yych <= 'w') {
@@ -20804,13 +20836,13 @@ yy1344:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'x') goto yy1348;
+				if(yych <= 'x') goto yy1350;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy1345:
-		YYDEBUG(1345, *YYCURSOR);
+yy1347:
+		YYDEBUG(1347, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'N') {
 			if(yych <= ')') {
@@ -20826,13 +20858,13 @@ yy1345:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 'n') goto yy1346;
+				if(yych <= 'n') goto yy1348;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy1346:
-		YYDEBUG(1346, *YYCURSOR);
+yy1348:
+		YYDEBUG(1348, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'T') {
 			if(yych <= ')') {
@@ -20848,13 +20880,13 @@ yy1346:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 't') goto yy1347;
+				if(yych <= 't') goto yy1349;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy1347:
-		YYDEBUG(1347, *YYCURSOR);
+yy1349:
+		YYDEBUG(1349, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'H') {
 			if(yych <= ')') {
@@ -20863,7 +20895,7 @@ yy1347:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'G') goto yy140;
-				goto yy270;
+				goto yy272;
 			}
 		} else {
 			if(yych <= 'g') {
@@ -20871,13 +20903,13 @@ yy1347:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'h') goto yy270;
+				if(yych <= 'h') goto yy272;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy1348:
-		YYDEBUG(1348, *YYCURSOR);
+yy1350:
+		YYDEBUG(1350, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'T') {
 			if(yych <= ')') {
@@ -20886,7 +20918,7 @@ yy1348:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy139;
-				goto yy257;
+				goto yy259;
 			}
 		} else {
 			if(yych <= 's') {
@@ -20894,24 +20926,24 @@ yy1348:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 't') goto yy257;
+				if(yych <= 't') goto yy259;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy1349:
-		YYDEBUG(1349, *YYCURSOR);
+yy1351:
+		YYDEBUG(1351, *YYCURSOR);
 		++YYCURSOR;
 		if((yych = *YYCURSOR) <= '@') {
 			if(yych == ')') goto yy136;
 		} else {
 			if(yych <= 'Z') goto yy139;
-			if(yych <= '`') goto yy1350;
+			if(yych <= '`') goto yy1352;
 			if(yych <= 'z') goto yy139;
 		}
-yy1350:
-		YYDEBUG(1350, *YYCURSOR);
-#line 899 "ext/date/lib/parse_date.re"
+yy1352:
+		YYDEBUG(1352, *YYCURSOR);
+#line 901 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("now");
 		TIMELIB_INIT;
@@ -20919,9 +20951,9 @@ yy1350:
 		TIMELIB_DEINIT;
 		return TIMELIB_RELATIVE;
 	}
-#line 20923 "ext/date/lib/parse_date.c"
-yy1351:
-		YYDEBUG(1351, *YYCURSOR);
+#line 20955 "ext/date/lib/parse_date.c"
+yy1353:
+		YYDEBUG(1353, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'N') {
 			if(yych <= ')') {
@@ -20930,7 +20962,7 @@ yy1351:
 			} else {
 				if(yych <= '@') goto yy3;
 				if(yych <= 'M') goto yy139;
-				goto yy1357;
+				goto yy1359;
 			}
 		} else {
 			if(yych <= 'm') {
@@ -20938,55 +20970,55 @@ yy1351:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 'n') goto yy1357;
+				if(yych <= 'n') goto yy1359;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy1352:
-		YYDEBUG(1352, *YYCURSOR);
+yy1354:
+		YYDEBUG(1354, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '/') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= ',') {
 					if(yych <= ')') goto yy136;
-					goto yy310;
+					goto yy312;
 				} else {
-					if(yych <= '-') goto yy313;
-					if(yych <= '.') goto yy312;
-					goto yy310;
+					if(yych <= '-') goto yy315;
+					if(yych <= '.') goto yy314;
+					goto yy312;
 				}
 			}
 		} else {
 			if(yych <= 'Z') {
 				if(yych <= '@') {
-					if(yych <= '9') goto yy312;
-					goto yy310;
+					if(yych <= '9') goto yy314;
+					goto yy312;
 				} else {
 					if(yych != 'E') goto yy139;
 				}
 			} else {
 				if(yych <= 'd') {
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'e') goto yy1353;
+					if(yych <= 'e') goto yy1355;
 					if(yych <= 'z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy1353:
-		YYDEBUG(1353, *YYCURSOR);
+yy1355:
+		YYDEBUG(1355, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'M') {
 			if(yych <= ')') {
@@ -21002,13 +21034,13 @@ yy1353:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'm') goto yy1354;
+				if(yych <= 'm') goto yy1356;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy1354:
-		YYDEBUG(1354, *YYCURSOR);
+yy1356:
+		YYDEBUG(1356, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'B') {
 			if(yych <= ')') {
@@ -21024,41 +21056,41 @@ yy1354:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'b') goto yy1355;
+				if(yych <= 'b') goto yy1357;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy1355:
-		YYDEBUG(1355, *YYCURSOR);
+yy1357:
+		YYDEBUG(1357, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'E') goto yy1356;
+			if(yych <= 'E') goto yy1358;
 			if(yych != 'e') goto yy3;
 		}
-yy1356:
-		YYDEBUG(1356, *YYCURSOR);
+yy1358:
+		YYDEBUG(1358, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy322;
-		if(yych == 'r') goto yy322;
+		if(yych == 'R') goto yy324;
+		if(yych == 'r') goto yy324;
 		goto yy53;
-yy1357:
-		YYDEBUG(1357, *YYCURSOR);
+yy1359:
+		YYDEBUG(1359, *YYCURSOR);
 		++YYCURSOR;
 		if((yych = *YYCURSOR) <= '@') {
 			if(yych == ')') goto yy136;
 		} else {
 			if(yych <= 'Z') goto yy140;
-			if(yych <= '`') goto yy1358;
+			if(yych <= '`') goto yy1360;
 			if(yych <= 'z') goto yy140;
 		}
-yy1358:
-		YYDEBUG(1358, *YYCURSOR);
-#line 908 "ext/date/lib/parse_date.re"
+yy1360:
+		YYDEBUG(1360, *YYCURSOR);
+#line 910 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("noon");
 		TIMELIB_INIT;
@@ -21069,9 +21101,9 @@ yy1358:
 		TIMELIB_DEINIT;
 		return TIMELIB_RELATIVE;
 	}
-#line 21073 "ext/date/lib/parse_date.c"
-yy1359:
-		YYDEBUG(1359, *YYCURSOR);
+#line 21105 "ext/date/lib/parse_date.c"
+yy1361:
+		YYDEBUG(1361, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'W') {
@@ -21086,11 +21118,11 @@ yy1359:
 			} else {
 				if(yych <= 'O') {
 					if(yych <= 'N') goto yy138;
-					goto yy1351;
+					goto yy1353;
 				} else {
 					if(yych <= 'U') goto yy138;
-					if(yych <= 'V') goto yy1352;
-					goto yy1349;
+					if(yych <= 'V') goto yy1354;
+					goto yy1351;
 				}
 			}
 		} else {
@@ -21105,18 +21137,18 @@ yy1359:
 				}
 			} else {
 				if(yych <= 'v') {
-					if(yych <= 'o') goto yy1366;
+					if(yych <= 'o') goto yy1368;
 					if(yych <= 'u') goto yy143;
-					goto yy1367;
+					goto yy1369;
 				} else {
-					if(yych <= 'w') goto yy1365;
+					if(yych <= 'w') goto yy1367;
 					if(yych <= 'z') goto yy143;
 					goto yy3;
 				}
 			}
 		}
-yy1360:
-		YYDEBUG(1360, *YYCURSOR);
+yy1362:
+		YYDEBUG(1362, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'X') {
@@ -21127,7 +21159,7 @@ yy1360:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'W') goto yy138;
-				goto yy1348;
+				goto yy1350;
 			}
 		} else {
 			if(yych <= '`') {
@@ -21135,13 +21167,13 @@ yy1360:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'x') goto yy1364;
+				if(yych == 'x') goto yy1366;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy1361:
-		YYDEBUG(1361, *YYCURSOR);
+yy1363:
+		YYDEBUG(1363, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'N') {
@@ -21152,7 +21184,7 @@ yy1361:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'M') goto yy138;
-				goto yy1346;
+				goto yy1348;
 			}
 		} else {
 			if(yych <= '`') {
@@ -21160,13 +21192,13 @@ yy1361:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'n') goto yy1362;
+				if(yych == 'n') goto yy1364;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy1362:
-		YYDEBUG(1362, *YYCURSOR);
+yy1364:
+		YYDEBUG(1364, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
@@ -21177,7 +21209,7 @@ yy1362:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy139;
-				goto yy1347;
+				goto yy1349;
 			}
 		} else {
 			if(yych <= '`') {
@@ -21185,13 +21217,13 @@ yy1362:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 't') goto yy1363;
+				if(yych == 't') goto yy1365;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy1363:
-		YYDEBUG(1363, *YYCURSOR);
+yy1365:
+		YYDEBUG(1365, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'H') {
@@ -21202,7 +21234,7 @@ yy1363:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'G') goto yy140;
-				goto yy270;
+				goto yy272;
 			}
 		} else {
 			if(yych <= '`') {
@@ -21210,13 +21242,13 @@ yy1363:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'h') goto yy280;
+				if(yych == 'h') goto yy282;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy1364:
-		YYDEBUG(1364, *YYCURSOR);
+yy1366:
+		YYDEBUG(1366, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
@@ -21227,7 +21259,7 @@ yy1364:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy139;
-				goto yy257;
+				goto yy259;
 			}
 		} else {
 			if(yych <= '`') {
@@ -21235,36 +21267,36 @@ yy1364:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 't') goto yy260;
+				if(yych == 't') goto yy262;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy1365:
-		YYDEBUG(1365, *YYCURSOR);
+yy1367:
+		YYDEBUG(1367, *YYCURSOR);
 		yyaccept = 27;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '@') {
 			if(yych <= ')') {
-				if(yych <= '(') goto yy1350;
+				if(yych <= '(') goto yy1352;
 				goto yy136;
 			} else {
 				if(yych == '/') goto yy144;
-				goto yy1350;
+				goto yy1352;
 			}
 		} else {
 			if(yych <= '_') {
 				if(yych <= 'Z') goto yy139;
-				if(yych <= '^') goto yy1350;
+				if(yych <= '^') goto yy1352;
 				goto yy144;
 			} else {
-				if(yych <= '`') goto yy1350;
+				if(yych <= '`') goto yy1352;
 				if(yych <= 'z') goto yy148;
-				goto yy1350;
+				goto yy1352;
 			}
 		}
-yy1366:
-		YYDEBUG(1366, *YYCURSOR);
+yy1368:
+		YYDEBUG(1368, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'N') {
@@ -21275,7 +21307,7 @@ yy1366:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'M') goto yy139;
-				goto yy1357;
+				goto yy1359;
 			}
 		} else {
 			if(yych <= '`') {
@@ -21283,58 +21315,58 @@ yy1366:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'n') goto yy1372;
+				if(yych == 'n') goto yy1374;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy1367:
-		YYDEBUG(1367, *YYCURSOR);
+yy1369:
+		YYDEBUG(1369, *YYCURSOR);
 		yyaccept = 6;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '9') {
 			if(yych <= '(') {
 				if(yych <= 0x09) {
-					if(yych <= 0x08) goto yy310;
-					goto yy312;
+					if(yych <= 0x08) goto yy312;
+					goto yy314;
 				} else {
-					if(yych == ' ') goto yy312;
-					goto yy310;
+					if(yych == ' ') goto yy314;
+					goto yy312;
 				}
 			} else {
 				if(yych <= '-') {
 					if(yych <= ')') goto yy136;
-					if(yych <= ',') goto yy310;
-					goto yy313;
+					if(yych <= ',') goto yy312;
+					goto yy315;
 				} else {
 					if(yych == '/') goto yy144;
-					goto yy312;
+					goto yy314;
 				}
 			}
 		} else {
 			if(yych <= '^') {
 				if(yych <= 'D') {
-					if(yych <= '@') goto yy310;
+					if(yych <= '@') goto yy312;
 					goto yy139;
 				} else {
-					if(yych <= 'E') goto yy1353;
+					if(yych <= 'E') goto yy1355;
 					if(yych <= 'Z') goto yy139;
-					goto yy310;
+					goto yy312;
 				}
 			} else {
 				if(yych <= 'd') {
 					if(yych <= '_') goto yy144;
-					if(yych <= '`') goto yy310;
+					if(yych <= '`') goto yy312;
 					goto yy148;
 				} else {
-					if(yych <= 'e') goto yy1368;
+					if(yych <= 'e') goto yy1370;
 					if(yych <= 'z') goto yy148;
-					goto yy310;
+					goto yy312;
 				}
 			}
 		}
-yy1368:
-		YYDEBUG(1368, *YYCURSOR);
+yy1370:
+		YYDEBUG(1370, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'M') {
@@ -21345,7 +21377,7 @@ yy1368:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'L') goto yy140;
-				goto yy1354;
+				goto yy1356;
 			}
 		} else {
 			if(yych <= '`') {
@@ -21353,13 +21385,13 @@ yy1368:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'm') goto yy1369;
+				if(yych == 'm') goto yy1371;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy1369:
-		YYDEBUG(1369, *YYCURSOR);
+yy1371:
+		YYDEBUG(1371, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'B') {
@@ -21370,7 +21402,7 @@ yy1369:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'A') goto yy141;
-				goto yy1355;
+				goto yy1357;
 			}
 		} else {
 			if(yych <= '`') {
@@ -21378,13 +21410,13 @@ yy1369:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'b') goto yy1370;
+				if(yych == 'b') goto yy1372;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy1370:
-		YYDEBUG(1370, *YYCURSOR);
+yy1372:
+		YYDEBUG(1372, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'E') {
@@ -21394,49 +21426,49 @@ yy1370:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= 'D') goto yy3;
-				goto yy1356;
+				goto yy1358;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'e') goto yy1371;
+				if(yych == 'e') goto yy1373;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy1371:
-		YYDEBUG(1371, *YYCURSOR);
+yy1373:
+		YYDEBUG(1373, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'R') goto yy322;
-		if(yych == 'r') goto yy492;
+		if(yych == 'R') goto yy324;
+		if(yych == 'r') goto yy494;
 		goto yy152;
-yy1372:
-		YYDEBUG(1372, *YYCURSOR);
+yy1374:
+		YYDEBUG(1374, *YYCURSOR);
 		yyaccept = 28;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '@') {
 			if(yych <= ')') {
-				if(yych <= '(') goto yy1358;
+				if(yych <= '(') goto yy1360;
 				goto yy136;
 			} else {
 				if(yych == '/') goto yy144;
-				goto yy1358;
+				goto yy1360;
 			}
 		} else {
 			if(yych <= '_') {
 				if(yych <= 'Z') goto yy140;
-				if(yych <= '^') goto yy1358;
+				if(yych <= '^') goto yy1360;
 				goto yy144;
 			} else {
-				if(yych <= '`') goto yy1358;
+				if(yych <= '`') goto yy1360;
 				if(yych <= 'z') goto yy149;
-				goto yy1358;
+				goto yy1360;
 			}
 		}
-yy1373:
-		YYDEBUG(1373, *YYCURSOR);
+yy1375:
+		YYDEBUG(1375, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'S') {
 			if(yych <= ')') {
@@ -21452,13 +21484,13 @@ yy1373:
 				if(yych <= '`') goto yy3;
 				goto yy138;
 			} else {
-				if(yych <= 's') goto yy1374;
+				if(yych <= 's') goto yy1376;
 				if(yych <= 'z') goto yy138;
 				goto yy3;
 			}
 		}
-yy1374:
-		YYDEBUG(1374, *YYCURSOR);
+yy1376:
+		YYDEBUG(1376, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'T') {
 			if(yych <= ')') {
@@ -21474,13 +21506,13 @@ yy1374:
 				if(yych <= '`') goto yy3;
 				goto yy139;
 			} else {
-				if(yych <= 't') goto yy1375;
+				if(yych <= 't') goto yy1377;
 				if(yych <= 'z') goto yy139;
 				goto yy3;
 			}
 		}
-yy1375:
-		YYDEBUG(1375, *YYCURSOR);
+yy1377:
+		YYDEBUG(1377, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'E') {
 			if(yych <= ')') {
@@ -21496,13 +21528,13 @@ yy1375:
 				if(yych <= '`') goto yy3;
 				goto yy140;
 			} else {
-				if(yych <= 'e') goto yy1376;
+				if(yych <= 'e') goto yy1378;
 				if(yych <= 'z') goto yy140;
 				goto yy3;
 			}
 		}
-yy1376:
-		YYDEBUG(1376, *YYCURSOR);
+yy1378:
+		YYDEBUG(1378, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if(yych <= 'R') {
 			if(yych <= ')') {
@@ -21518,38 +21550,38 @@ yy1376:
 				if(yych <= '`') goto yy3;
 				goto yy141;
 			} else {
-				if(yych <= 'r') goto yy1377;
+				if(yych <= 'r') goto yy1379;
 				if(yych <= 'z') goto yy141;
 				goto yy3;
 			}
 		}
-yy1377:
-		YYDEBUG(1377, *YYCURSOR);
+yy1379:
+		YYDEBUG(1379, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'C') {
 			if(yych == ')') goto yy136;
 			goto yy3;
 		} else {
-			if(yych <= 'D') goto yy1378;
+			if(yych <= 'D') goto yy1380;
 			if(yych != 'd') goto yy3;
 		}
-yy1378:
-		YYDEBUG(1378, *YYCURSOR);
+yy1380:
+		YYDEBUG(1380, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy1379;
+		if(yych == 'A') goto yy1381;
 		if(yych != 'a') goto yy53;
-yy1379:
-		YYDEBUG(1379, *YYCURSOR);
+yy1381:
+		YYDEBUG(1381, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy1380;
+		if(yych == 'Y') goto yy1382;
 		if(yych != 'y') goto yy53;
-yy1380:
-		YYDEBUG(1380, *YYCURSOR);
+yy1382:
+		YYDEBUG(1382, *YYCURSOR);
 		++YYCURSOR;
-yy1381:
-		YYDEBUG(1381, *YYCURSOR);
-#line 887 "ext/date/lib/parse_date.re"
+yy1383:
+		YYDEBUG(1383, *YYCURSOR);
+#line 889 "ext/date/lib/parse_date.re"
 		{
 		DEBUG_OUTPUT("yesterday");
 		TIMELIB_INIT;
@@ -21560,9 +21592,9 @@ yy1381:
 		TIMELIB_DEINIT;
 		return TIMELIB_RELATIVE;
 	}
-#line 21564 "ext/date/lib/parse_date.c"
-yy1382:
-		YYDEBUG(1382, *YYCURSOR);
+#line 21596 "ext/date/lib/parse_date.c"
+yy1384:
+		YYDEBUG(1384, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'S') {
@@ -21573,7 +21605,7 @@ yy1382:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'R') goto yy138;
-				goto yy1374;
+				goto yy1376;
 			}
 		} else {
 			if(yych <= '`') {
@@ -21581,13 +21613,13 @@ yy1382:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 's') goto yy1383;
+				if(yych == 's') goto yy1385;
 				if(yych <= 'z') goto yy143;
 				goto yy3;
 			}
 		}
-yy1383:
-		YYDEBUG(1383, *YYCURSOR);
+yy1385:
+		YYDEBUG(1385, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'T') {
@@ -21598,7 +21630,7 @@ yy1383:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'S') goto yy139;
-				goto yy1375;
+				goto yy1377;
 			}
 		} else {
 			if(yych <= '`') {
@@ -21606,13 +21638,13 @@ yy1383:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 't') goto yy1384;
+				if(yych == 't') goto yy1386;
 				if(yych <= 'z') goto yy148;
 				goto yy3;
 			}
 		}
-yy1384:
-		YYDEBUG(1384, *YYCURSOR);
+yy1386:
+		YYDEBUG(1386, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'E') {
@@ -21623,7 +21655,7 @@ yy1384:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'D') goto yy140;
-				goto yy1376;
+				goto yy1378;
 			}
 		} else {
 			if(yych <= '`') {
@@ -21631,13 +21663,13 @@ yy1384:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'e') goto yy1385;
+				if(yych == 'e') goto yy1387;
 				if(yych <= 'z') goto yy149;
 				goto yy3;
 			}
 		}
-yy1385:
-		YYDEBUG(1385, *YYCURSOR);
+yy1387:
+		YYDEBUG(1387, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'R') {
@@ -21648,7 +21680,7 @@ yy1385:
 				if(yych <= '/') goto yy144;
 				if(yych <= '@') goto yy3;
 				if(yych <= 'Q') goto yy141;
-				goto yy1377;
+				goto yy1379;
 			}
 		} else {
 			if(yych <= '`') {
@@ -21656,13 +21688,13 @@ yy1385:
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'r') goto yy1386;
+				if(yych == 'r') goto yy1388;
 				if(yych <= 'z') goto yy150;
 				goto yy3;
 			}
 		}
-yy1386:
-		YYDEBUG(1386, *YYCURSOR);
+yy1388:
+		YYDEBUG(1388, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= 'D') {
@@ -21672,42 +21704,42 @@ yy1386:
 			} else {
 				if(yych <= '/') goto yy144;
 				if(yych <= 'C') goto yy3;
-				goto yy1378;
+				goto yy1380;
 			}
 		} else {
 			if(yych <= '`') {
 				if(yych == '_') goto yy144;
 				goto yy3;
 			} else {
-				if(yych == 'd') goto yy1387;
+				if(yych == 'd') goto yy1389;
 				if(yych <= 'z') goto yy151;
 				goto yy3;
 			}
 		}
-yy1387:
-		YYDEBUG(1387, *YYCURSOR);
+yy1389:
+		YYDEBUG(1389, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'A') goto yy1379;
+		if(yych == 'A') goto yy1381;
 		if(yych != 'a') goto yy152;
-		YYDEBUG(1388, *YYCURSOR);
+		YYDEBUG(1390, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if(yych == 'Y') goto yy1380;
+		if(yych == 'Y') goto yy1382;
 		if(yych != 'y') goto yy152;
-		YYDEBUG(1389, *YYCURSOR);
+		YYDEBUG(1391, *YYCURSOR);
 		yyaccept = 29;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if(yych <= '^') {
 			if(yych == '/') goto yy144;
-			goto yy1381;
+			goto yy1383;
 		} else {
 			if(yych <= '_') goto yy144;
-			if(yych <= '`') goto yy1381;
+			if(yych <= '`') goto yy1383;
 			if(yych <= 'z') goto yy151;
-			goto yy1381;
+			goto yy1383;
 		}
 	}
 }
-#line 1510 "ext/date/lib/parse_date.re"
+#line 1512 "ext/date/lib/parse_date.re"
 
 }
 
@@ -21742,7 +21774,8 @@ timelib_time* timelib_strtotime(char *s,
 		} else {
 			timelib_error_container_dtor(in.errors);
 		}
-		in.time->y = in.time->d = in.time->m = in.time->h = in.time->i = in.time->s = in.time->f = in.time->z = in.time->dst = -1;
+		in.time->y = in.time->d = in.time->m = in.time->h = in.time->i = in.time->s = in.time->f = in.time->dst = -1;
+		in.time->z = -999999;
 		in.time->is_localtime = in.time->zone_type = 0;
 		return in.time;
 	}
@@ -21761,7 +21794,7 @@ timelib_time* timelib_strtotime(char *s,
 	in.time->i = -1;
 	in.time->s = -1;
 	in.time->f = -1;
-	in.time->z = -1;
+	in.time->z = -999999;
 	in.time->dst = -1;
 	in.tzdb = tzdb;
 	in.time->is_localtime = 0;
@@ -21798,7 +21831,7 @@ void timelib_fill_holes(timelib_time *pa
 	if (parsed->i == -1) parsed->i = now->i != -1 ? now->i : 0;
 	if (parsed->s == -1) parsed->s = now->s != -1 ? now->s : 0;
 	if (parsed->f == -1) parsed->f = now->f != -1 ? now->f : 0;
-	if (parsed->z == -1) parsed->z = now->z != -1 ? now->z : 0;
+	if (parsed->z == -999999) parsed->z = now->z != -999999 ? now->z : 0;
 	if (parsed->dst == -1) parsed->dst = now->dst != -1 ? now->dst : 0;
 
 	if (!parsed->tz_abbr) {
Index: ext/date/lib/parse_date.re
===================================================================
RCS file: /repository/php-src/ext/date/lib/parse_date.re,v
retrieving revision 1.26.2.27.2.9
retrieving revision 1.26.2.27.2.11
diff -u -p -d -r1.26.2.27.2.9 -r1.26.2.27.2.11
--- ext/date/lib/parse_date.re	21 Mar 2007 09:40:33 -0000	1.26.2.27.2.9
+++ ext/date/lib/parse_date.re	13 Apr 2007 08:11:07 -0000	1.26.2.27.2.11
@@ -448,10 +448,12 @@ static timelib_ull timelib_get_unsigned_
 		}
 		++*ptr;
 	}
-	if (**ptr == '+') {
-		++*ptr;
-	} else if (**ptr == '-') {
-		dir = -1;
+
+	while (**ptr == '+' || **ptr == '-')
+	{
+		if (**ptr == '-') {
+			dir *= -1;
+		}
 		++*ptr;
 	}
 	return dir * timelib_get_nr(ptr, max_length);
@@ -875,7 +877,7 @@ dateshortwithtimelongtz = datenoyear iso
 reltextnumber = 'first'|'next'|'second'|'third'|'fourth'|'fifth'|'sixth'|'seventh'|'eight'|'ninth'|'tenth'|'eleventh'|'twelfth'|'last'|'previous'|'this';
 reltextunit = (('sec'|'second'|'min'|'minute'|'hour'|'day'|'week'|'fortnight'|'forthnight'|'month'|'year') 's'?) | daytext;
 
-relnumber = ([+-]?[ \t]*[0-9]+);
+relnumber = ([+-]*[ \t]*[0-9]+);
 relative = relnumber space? reltextunit;
 relativetext = reltextnumber space reltextunit;
 
@@ -1541,7 +1543,8 @@ timelib_time* timelib_strtotime(char *s,
 		} else {
 			timelib_error_container_dtor(in.errors);
 		}
-		in.time->y = in.time->d = in.time->m = in.time->h = in.time->i = in.time->s = in.time->f = in.time->z = in.time->dst = -1;
+		in.time->y = in.time->d = in.time->m = in.time->h = in.time->i = in.time->s = in.time->f = in.time->dst = -1;
+		in.time->z = -999999;
 		in.time->is_localtime = in.time->zone_type = 0;
 		return in.time;
 	}
@@ -1560,7 +1563,7 @@ timelib_time* timelib_strtotime(char *s,
 	in.time->i = -1;
 	in.time->s = -1;
 	in.time->f = -1;
-	in.time->z = -1;
+	in.time->z = -999999;
 	in.time->dst = -1;
 	in.tzdb = tzdb;
 	in.time->is_localtime = 0;
@@ -1597,7 +1600,7 @@ void timelib_fill_holes(timelib_time *pa
 	if (parsed->i == -1) parsed->i = now->i != -1 ? now->i : 0;
 	if (parsed->s == -1) parsed->s = now->s != -1 ? now->s : 0;
 	if (parsed->f == -1) parsed->f = now->f != -1 ? now->f : 0;
-	if (parsed->z == -1) parsed->z = now->z != -1 ? now->z : 0;
+	if (parsed->z == -999999) parsed->z = now->z != -999999 ? now->z : 0;
 	if (parsed->dst == -1) parsed->dst = now->dst != -1 ? now->dst : 0;
 
 	if (!parsed->tz_abbr) {
Index: ext/date/lib/timezonedb.h
===================================================================
RCS file: /repository/php-src/ext/date/lib/timezonedb.h,v
retrieving revision 1.4.2.7.2.8
retrieving revision 1.4.2.7.2.9
diff -u -p -d -r1.4.2.7.2.8 -r1.4.2.7.2.9
--- ext/date/lib/timezonedb.h	6 Mar 2007 21:28:36 -0000	1.4.2.7.2.8
+++ ext/date/lib/timezonedb.h	13 Apr 2007 14:51:40 -0000	1.4.2.7.2.9
@@ -1,4 +1,4 @@
-const timelib_tzdb_index_entry timezonedb_idx_builtin[550] = {
+const timelib_tzdb_index_entry timezonedb_idx_builtin[551] = {
 	{ "Africa/Abidjan"                    , 0x000000 },
 	{ "Africa/Accra"                      , 0x000049 },
 	{ "Africa/Addis_Ababa"                , 0x0000E5 },
@@ -82,476 +82,477 @@ const timelib_tzdb_index_entry timezoned
 	{ "America/Boise"                     , 0x004536 },
 	{ "America/Buenos_Aires"              , 0x004898 },
 	{ "America/Cambridge_Bay"             , 0x004A11 },
-	{ "America/Campo_Grande"              , 0x004D14 },
-	{ "America/Cancun"                    , 0x004FE5 },
-	{ "America/Caracas"                   , 0x005200 },
-	{ "America/Catamarca"                 , 0x005256 },
-	{ "America/Cayenne"                   , 0x0053E6 },
-	{ "America/Cayman"                    , 0x00543C },
-	{ "America/Chicago"                   , 0x005485 },
-	{ "America/Chihuahua"                 , 0x005984 },
-	{ "America/Coral_Harbour"             , 0x005BAE },
-	{ "America/Cordoba"                   , 0x005C34 },
-	{ "America/Costa_Rica"                , 0x005DBA },
-	{ "America/Cuiaba"                    , 0x005E38 },
-	{ "America/Curacao"                   , 0x0060FF },
-	{ "America/Danmarkshavn"              , 0x006159 },
-	{ "America/Dawson"                    , 0x006270 },
-	{ "America/Dawson_Creek"              , 0x006567 },
-	{ "America/Denver"                    , 0x0066EC },
-	{ "America/Detroit"                   , 0x006A59 },
-	{ "America/Dominica"                  , 0x006D84 },
-	{ "America/Edmonton"                  , 0x006DCD },
-	{ "America/Eirunepe"                  , 0x007137 },
-	{ "America/El_Salvador"               , 0x007223 },
-	{ "America/Ensenada"                  , 0x00728C },
-	{ "America/Fort_Wayne"                , 0x0076FD },
-	{ "America/Fortaleza"                 , 0x0075E9 },
-	{ "America/Glace_Bay"                 , 0x00795B },
-	{ "America/Godthab"                   , 0x007C7F },
-	{ "America/Goose_Bay"                 , 0x007F29 },
-	{ "America/Grand_Turk"                , 0x0083B1 },
-	{ "America/Grenada"                   , 0x008654 },
-	{ "America/Guadeloupe"                , 0x00869D },
-	{ "America/Guatemala"                 , 0x0086E6 },
-	{ "America/Guayaquil"                 , 0x008763 },
-	{ "America/Guyana"                    , 0x0087AC },
-	{ "America/Halifax"                   , 0x008821 },
-	{ "America/Havana"                    , 0x008CFD },
-	{ "America/Hermosillo"                , 0x009064 },
-	{ "America/Indiana/Indianapolis"      , 0x009117 },
-	{ "America/Indiana/Knox"              , 0x009375 },
-	{ "America/Indiana/Marengo"           , 0x0096DA },
-	{ "America/Indiana/Petersburg"        , 0x00994C },
-	{ "America/Indiana/Vevay"             , 0x009E51 },
-	{ "America/Indiana/Vincennes"         , 0x00A055 },
-	{ "America/Indiana/Winamac"           , 0x00A2BD },
-	{ "America/Indianapolis"              , 0x009BF3 },
-	{ "America/Inuvik"                    , 0x00A543 },
-	{ "America/Iqaluit"                   , 0x00A83A },
-	{ "America/Jamaica"                   , 0x00AB2C },
-	{ "America/Jujuy"                     , 0x00ABE5 },
-	{ "America/Juneau"                    , 0x00AD79 },
-	{ "America/Kentucky/Louisville"       , 0x00B0CD },
-	{ "America/Kentucky/Monticello"       , 0x00B4B6 },
-	{ "America/Knox_IN"                   , 0x00B809 },
-	{ "America/La_Paz"                    , 0x00BB6E },
-	{ "America/Lima"                      , 0x00BBC9 },
-	{ "America/Los_Angeles"               , 0x00BC65 },
-	{ "America/Louisville"                , 0x00C05E },
-	{ "America/Maceio"                    , 0x00C447 },
-	{ "America/Managua"                   , 0x00C565 },
-	{ "America/Manaus"                    , 0x00C60C },
-	{ "America/Martinique"                , 0x00C6F8 },
-	{ "America/Mazatlan"                  , 0x00C758 },
-	{ "America/Mendoza"                   , 0x00C991 },
-	{ "America/Menominee"                 , 0x00CB2F },
-	{ "America/Merida"                    , 0x00CE5D },
-	{ "America/Mexico_City"               , 0x00D06C },
-	{ "America/Miquelon"                  , 0x00D2BE },
-	{ "America/Moncton"                   , 0x00D524 },
-	{ "America/Monterrey"                 , 0x00D992 },
-	{ "America/Montevideo"                , 0x00DB95 },
-	{ "America/Montreal"                  , 0x00DE9B },
-	{ "America/Montserrat"                , 0x00E37F },
-	{ "America/Nassau"                    , 0x00E3C8 },
-	{ "America/New_York"                  , 0x00E701 },
-	{ "America/Nipigon"                   , 0x00EBF4 },
-	{ "America/Nome"                      , 0x00EEEE },
-	{ "America/Noronha"                   , 0x00F247 },
-	{ "America/North_Dakota/Center"       , 0x00F35B },
-	{ "America/North_Dakota/New_Salem"    , 0x00F6B8 },
-	{ "America/Panama"                    , 0x00FA15 },
-	{ "America/Pangnirtung"               , 0x00FA5E },
-	{ "America/Paramaribo"                , 0x00FD68 },
-	{ "America/Phoenix"                   , 0x00FDEE },
-	{ "America/Port-au-Prince"            , 0x00FE70 },
-	{ "America/Port_of_Spain"             , 0x010198 },
-	{ "America/Porto_Acre"                , 0x0100B6 },
-	{ "America/Porto_Velho"               , 0x0101E1 },
-	{ "America/Puerto_Rico"               , 0x0102C3 },
-	{ "America/Rainy_River"               , 0x010322 },
-	{ "America/Rankin_Inlet"              , 0x01061C },
-	{ "America/Recife"                    , 0x010902 },
-	{ "America/Regina"                    , 0x010A16 },
-	{ "America/Rio_Branco"                , 0x010B93 },
-	{ "America/Rosario"                   , 0x010C75 },
-	{ "America/Santiago"                  , 0x010DFB },
-	{ "America/Santo_Domingo"             , 0x01118A },
-	{ "America/Sao_Paulo"                 , 0x011244 },
-	{ "America/Scoresbysund"              , 0x011515 },
-	{ "America/Shiprock"                  , 0x0117D8 },
-	{ "America/St_Johns"                  , 0x011B45 },
-	{ "America/St_Kitts"                  , 0x012064 },
-	{ "America/St_Lucia"                  , 0x0120AD },
-	{ "America/St_Thomas"                 , 0x0120F6 },
-	{ "America/St_Vincent"                , 0x01213F },
-	{ "America/Swift_Current"             , 0x012188 },
-	{ "America/Tegucigalpa"               , 0x01226F },
-	{ "America/Thule"                     , 0x012300 },
-	{ "America/Thunder_Bay"               , 0x01252B },
-	{ "America/Tijuana"                   , 0x012845 },
-	{ "America/Toronto"                   , 0x012BA2 },
-	{ "America/Tortola"                   , 0x013086 },
-	{ "America/Vancouver"                 , 0x0130CF },
-	{ "America/Virgin"                    , 0x0134DC },
-	{ "America/Whitehorse"                , 0x013525 },
-	{ "America/Winnipeg"                  , 0x01381C },
-	{ "America/Yakutat"                   , 0x013C2A },
-	{ "America/Yellowknife"               , 0x013F66 },
-	{ "Antarctica/Casey"                  , 0x014240 },
-	{ "Antarctica/Davis"                  , 0x014289 },
-	{ "Antarctica/DumontDUrville"         , 0x0142DD },
-	{ "Antarctica/Mawson"                 , 0x01433D },
-	{ "Antarctica/McMurdo"                , 0x014387 },
-	{ "Antarctica/Palmer"                 , 0x014661 },
-	{ "Antarctica/Rothera"                , 0x014954 },
-	{ "Antarctica/South_Pole"             , 0x01499E },
-	{ "Antarctica/Syowa"                  , 0x014C78 },
-	{ "Antarctica/Vostok"                 , 0x014CC2 },
-	{ "Arctic/Longyearbyen"               , 0x014D0C },
-	{ "Asia/Aden"                         , 0x015032 },
-	{ "Asia/Almaty"                       , 0x01507B },
-	{ "Asia/Amman"                        , 0x0151E0 },
-	{ "Asia/Anadyr"                       , 0x015494 },
-	{ "Asia/Aqtau"                        , 0x015760 },
-	{ "Asia/Aqtobe"                       , 0x015922 },
-	{ "Asia/Ashgabat"                     , 0x015ABF },
-	{ "Asia/Ashkhabad"                    , 0x015BD0 },
-	{ "Asia/Baghdad"                      , 0x015CE1 },
-	{ "Asia/Bahrain"                      , 0x015F76 },
-	{ "Asia/Baku"                         , 0x015FD0 },
-	{ "Asia/Bangkok"                      , 0x0162AC },
-	{ "Asia/Beirut"                       , 0x0162F5 },
-	{ "Asia/Bishkek"                      , 0x0165F6 },
-	{ "Asia/Brunei"                       , 0x016796 },
-	{ "Asia/Calcutta"                     , 0x0167EC },
-	{ "Asia/Choibalsan"                   , 0x016859 },
-	{ "Asia/Chongqing"                    , 0x016ADD },
-	{ "Asia/Chungking"                    , 0x016B80 },
-	{ "Asia/Colombo"                      , 0x016C23 },
-	{ "Asia/Dacca"                        , 0x016CB3 },
-	{ "Asia/Damascus"                     , 0x016D36 },
-	{ "Asia/Dhaka"                        , 0x01707A },
-	{ "Asia/Dili"                         , 0x0170FD },
-	{ "Asia/Dubai"                        , 0x01717A },
-	{ "Asia/Dushanbe"                     , 0x0171C3 },
-	{ "Asia/Gaza"                         , 0x0172BA },
-	{ "Asia/Harbin"                       , 0x0175F7 },
-	{ "Asia/Hong_Kong"                    , 0x0176B1 },
-	{ "Asia/Hovd"                         , 0x01785B },
-	{ "Asia/Irkutsk"                      , 0x017AD2 },
-	{ "Asia/Istanbul"                     , 0x017D96 },
-	{ "Asia/Jakarta"                      , 0x018162 },
-	{ "Asia/Jayapura"                     , 0x0181F2 },
-	{ "Asia/Jerusalem"                    , 0x018251 },
-	{ "Asia/Kabul"                        , 0x018574 },
-	{ "Asia/Kamchatka"                    , 0x0185B9 },
-	{ "Asia/Karachi"                      , 0x01887D },
-	{ "Asia/Kashgar"                      , 0x018912 },
-	{ "Asia/Katmandu"                     , 0x0189C2 },
-	{ "Asia/Krasnoyarsk"                  , 0x018A1C },
-	{ "Asia/Kuala_Lumpur"                 , 0x018CE0 },
-	{ "Asia/Kuching"                      , 0x018D7E },
-	{ "Asia/Kuwait"                       , 0x018E51 },
-	{ "Asia/Macao"                        , 0x018E9A },
-	{ "Asia/Macau"                        , 0x018FC9 },
-	{ "Asia/Magadan"                      , 0x0190F8 },
-	{ "Asia/Makassar"                     , 0x0193BC },
-	{ "Asia/Manila"                       , 0x01942C },
-	{ "Asia/Muscat"                       , 0x0194A5 },
-	{ "Asia/Nicosia"                      , 0x0194EE },
-	{ "Asia/Novosibirsk"                  , 0x0197CA },
-	{ "Asia/Omsk"                         , 0x019A9B },
-	{ "Asia/Oral"                         , 0x019D5F },
-	{ "Asia/Phnom_Penh"                   , 0x019F14 },
-	{ "Asia/Pontianak"                    , 0x019F80 },
-	{ "Asia/Pyongyang"                    , 0x01A020 },
-	{ "Asia/Qatar"                        , 0x01A081 },
-	{ "Asia/Qyzylorda"                    , 0x01A0DB },
-	{ "Asia/Rangoon"                      , 0x01A285 },
-	{ "Asia/Riyadh"                       , 0x01A2F1 },
-	{ "Asia/Saigon"                       , 0x01A33A },
-	{ "Asia/Sakhalin"                     , 0x01A3A6 },
-	{ "Asia/Samarkand"                    , 0x01A67F },
-	{ "Asia/Seoul"                        , 0x01A79A },
-	{ "Asia/Shanghai"                     , 0x01A832 },
-	{ "Asia/Singapore"                    , 0x01A8D7 },
-	{ "Asia/Taipei"                       , 0x01A982 },
-	{ "Asia/Tashkent"                     , 0x01AA8E },
-	{ "Asia/Tbilisi"                      , 0x01ABA4 },
-	{ "Asia/Tehran"                       , 0x01AD52 },
-	{ "Asia/Tel_Aviv"                     , 0x01AE88 },
-	{ "Asia/Thimbu"                       , 0x01B1AB },
-	{ "Asia/Thimphu"                      , 0x01B205 },
-	{ "Asia/Tokyo"                        , 0x01B25F },
-	{ "Asia/Ujung_Pandang"                , 0x01B2DC },
-	{ "Asia/Ulaanbaatar"                  , 0x01B34C },
-	{ "Asia/Ulan_Bator"                   , 0x01B5C3 },
-	{ "Asia/Urumqi"                       , 0x01B83A },
-	{ "Asia/Vientiane"                    , 0x01B8DD },
-	{ "Asia/Vladivostok"                  , 0x01B949 },
-	{ "Asia/Yakutsk"                      , 0x01BC14 },
-	{ "Asia/Yekaterinburg"                , 0x01BED8 },
-	{ "Asia/Yerevan"                      , 0x01C1C7 },
-	{ "Atlantic/Azores"                   , 0x01C4BF },
-	{ "Atlantic/Bermuda"                  , 0x01C9B0 },
-	{ "Atlantic/Canary"                   , 0x01CC85 },
-	{ "Atlantic/Cape_Verde"               , 0x01CF41 },
-	{ "Atlantic/Faeroe"                   , 0x01CFAE },
-	{ "Atlantic/Faroe"                    , 0x01D246 },
-	{ "Atlantic/Jan_Mayen"                , 0x01D4DE },
-	{ "Atlantic/Madeira"                  , 0x01D804 },
-	{ "Atlantic/Reykjavik"                , 0x01DCF2 },
-	{ "Atlantic/South_Georgia"            , 0x01DE9F },
-	{ "Atlantic/St_Helena"                , 0x01E19F },
-	{ "Atlantic/Stanley"                  , 0x01DED7 },
-	{ "Australia/ACT"                     , 0x01E1E8 },
-	{ "Australia/Adelaide"                , 0x01E4F9 },
-	{ "Australia/Brisbane"                , 0x01E80A },
-	{ "Australia/Broken_Hill"             , 0x01E8AA },
-	{ "Australia/Canberra"                , 0x01EBC0 },
-	{ "Australia/Currie"                  , 0x01EED1 },
-	{ "Australia/Darwin"                  , 0x01F1E2 },
-	{ "Australia/Eucla"                   , 0x01F24A },
-	{ "Australia/Hobart"                  , 0x01F2F5 },
-	{ "Australia/LHI"                     , 0x01F62E },
-	{ "Australia/Lindeman"                , 0x01F8BD },
-	{ "Australia/Lord_Howe"               , 0x01F976 },
-	{ "Australia/Melbourne"               , 0x01FC05 },
-	{ "Australia/North"                   , 0x01FF16 },
-	{ "Australia/NSW"                     , 0x01FF7E },
-	{ "Australia/Perth"                   , 0x02028F },
-	{ "Australia/Queensland"              , 0x020339 },
-	{ "Australia/South"                   , 0x0203D9 },
-	{ "Australia/Sydney"                  , 0x0206EA },
-	{ "Australia/Tasmania"                , 0x0209FB },
-	{ "Australia/Victoria"                , 0x020D34 },
-	{ "Australia/West"                    , 0x021045 },
-	{ "Australia/Yancowinna"              , 0x0210EF },
-	{ "Brazil/Acre"                       , 0x021405 },
-	{ "Brazil/DeNoronha"                  , 0x0214E7 },
-	{ "Brazil/East"                       , 0x0215FB },
-	{ "Brazil/West"                       , 0x0218CC },
-	{ "Canada/Atlantic"                   , 0x0219B8 },
-	{ "Canada/Central"                    , 0x021E94 },
-	{ "Canada/East-Saskatchewan"          , 0x022786 },
-	{ "Canada/Eastern"                    , 0x0222A2 },
-	{ "Canada/Mountain"                   , 0x022903 },
-	{ "Canada/Newfoundland"               , 0x022C6D },
-	{ "Canada/Pacific"                    , 0x02318C },
-	{ "Canada/Saskatchewan"               , 0x023599 },
-	{ "Canada/Yukon"                      , 0x023716 },
-	{ "CET"                               , 0x023A0D },
-	{ "Chile/Continental"                 , 0x023D00 },
-	{ "Chile/EasterIsland"                , 0x02408F },
-	{ "CST6CDT"                           , 0x0243C5 },
-	{ "Cuba"                              , 0x02470A },
-	{ "EET"                               , 0x024A71 },
-	{ "Egypt"                             , 0x024D18 },
-	{ "Eire"                              , 0x0250D3 },
-	{ "EST"                               , 0x0255D8 },
-	{ "EST5EDT"                           , 0x025610 },
-	{ "Etc/GMT"                           , 0x025955 },
-	{ "Etc/GMT+0"                         , 0x0259FD },
-	{ "Etc/GMT+1"                         , 0x025A6F },
-	{ "Etc/GMT+10"                        , 0x025AE4 },
-	{ "Etc/GMT+11"                        , 0x025B5A },
-	{ "Etc/GMT+12"                        , 0x025BD0 },
-	{ "Etc/GMT+2"                         , 0x025CBB },
-	{ "Etc/GMT+3"                         , 0x025D2F },
-	{ "Etc/GMT+4"                         , 0x025DA3 },
-	{ "Etc/GMT+5"                         , 0x025E17 },
-	{ "Etc/GMT+6"                         , 0x025E8B },
-	{ "Etc/GMT+7"                         , 0x025EFF },
-	{ "Etc/GMT+8"                         , 0x025F73 },
-	{ "Etc/GMT+9"                         , 0x025FE7 },
-	{ "Etc/GMT-0"                         , 0x0259C5 },
-	{ "Etc/GMT-1"                         , 0x025A35 },
-	{ "Etc/GMT-10"                        , 0x025AA9 },
-	{ "Etc/GMT-11"                        , 0x025B1F },
-	{ "Etc/GMT-12"                        , 0x025B95 },
-	{ "Etc/GMT-13"                        , 0x025C0B },
-	{ "Etc/GMT-14"                        , 0x025C46 },
-	{ "Etc/GMT-2"                         , 0x025C81 },
-	{ "Etc/GMT-3"                         , 0x025CF5 },
-	{ "Etc/GMT-4"                         , 0x025D69 },
-	{ "Etc/GMT-5"                         , 0x025DDD },
-	{ "Etc/GMT-6"                         , 0x025E51 },
-	{ "Etc/GMT-7"                         , 0x025EC5 },
-	{ "Etc/GMT-8"                         , 0x025F39 },
-	{ "Etc/GMT-9"                         , 0x025FAD },
-	{ "Etc/GMT0"                          , 0x02598D },
-	{ "Etc/Greenwich"                     , 0x026021 },
-	{ "Etc/UCT"                           , 0x026059 },
-	{ "Etc/Universal"                     , 0x026091 },
-	{ "Etc/UTC"                           , 0x0260C9 },
-	{ "Etc/Zulu"                          , 0x026101 },
-	{ "Europe/Amsterdam"                  , 0x026139 },
-	{ "Europe/Andorra"                    , 0x02656B },
-	{ "Europe/Athens"                     , 0x0267DB },
-	{ "Europe/Belfast"                    , 0x026B12 },
-	{ "Europe/Belgrade"                   , 0x02703D },
-	{ "Europe/Berlin"                     , 0x0272F5 },
-	{ "Europe/Bratislava"                 , 0x02763A },
-	{ "Europe/Brussels"                   , 0x027960 },
-	{ "Europe/Bucharest"                  , 0x027D8B },
-	{ "Europe/Budapest"                   , 0x0280A9 },
-	{ "Europe/Chisinau"                   , 0x02840B },
-	{ "Europe/Copenhagen"                 , 0x02878D },
-	{ "Europe/Dublin"                     , 0x028A8B },
-	{ "Europe/Gibraltar"                  , 0x028F90 },
-	{ "Europe/Guernsey"                   , 0x0293DB },
-	{ "Europe/Helsinki"                   , 0x029906 },
-	{ "Europe/Isle_of_Man"                , 0x029BB0 },
-	{ "Europe/Istanbul"                   , 0x02A0DB },
-	{ "Europe/Jersey"                     , 0x02A4A7 },
-	{ "Europe/Kaliningrad"                , 0x02A9D2 },
-	{ "Europe/Kiev"                       , 0x02AD12 },
-	{ "Europe/Lisbon"                     , 0x02B00F },
-	{ "Europe/Ljubljana"                  , 0x02B4FF },
-	{ "Europe/London"                     , 0x02B7B7 },
-	{ "Europe/Luxembourg"                 , 0x02BCE2 },
-	{ "Europe/Madrid"                     , 0x02C12C },
-	{ "Europe/Malta"                      , 0x02C4DE },
-	{ "Europe/Mariehamn"                  , 0x02C88B },
-	{ "Europe/Minsk"                      , 0x02CB35 },
-	{ "Europe/Monaco"                     , 0x02CE34 },
-	{ "Europe/Moscow"                     , 0x02D263 },
-	{ "Europe/Nicosia"                    , 0x02D592 },
-	{ "Europe/Oslo"                       , 0x02D86E },
-	{ "Europe/Paris"                      , 0x02DB94 },
-	{ "Europe/Podgorica"                  , 0x02DFCE },
-	{ "Europe/Prague"                     , 0x02E286 },
-	{ "Europe/Riga"                       , 0x02E5AC },
-	{ "Europe/Rome"                       , 0x02E8E5 },
-	{ "Europe/Samara"                     , 0x02EC9C },
-	{ "Europe/San_Marino"                 , 0x02EFA0 },
-	{ "Europe/Sarajevo"                   , 0x02F357 },
-	{ "Europe/Simferopol"                 , 0x02F60F },
-	{ "Europe/Skopje"                     , 0x02F920 },
-	{ "Europe/Sofia"                      , 0x02FBD8 },
-	{ "Europe/Stockholm"                  , 0x02FEC7 },
-	{ "Europe/Tallinn"                    , 0x03016A },
-	{ "Europe/Tirane"                     , 0x030498 },
-	{ "Europe/Tiraspol"                   , 0x030792 },
-	{ "Europe/Uzhgorod"                   , 0x030B14 },
-	{ "Europe/Vaduz"                      , 0x030E17 },
-	{ "Europe/Vatican"                    , 0x03109E },
-	{ "Europe/Vienna"                     , 0x031455 },
-	{ "Europe/Vilnius"                    , 0x031776 },
-	{ "Europe/Volgograd"                  , 0x031AA9 },
-	{ "Europe/Warsaw"                     , 0x031D8F },
-	{ "Europe/Zagreb"                     , 0x032164 },
-	{ "Europe/Zaporozhye"                 , 0x03241C },
-	{ "Europe/Zurich"                     , 0x032723 },
-	{ "Factory"                           , 0x0329D0 },
-	{ "GB"                                , 0x032A35 },
-	{ "GB-Eire"                           , 0x032F60 },
-	{ "GMT"                               , 0x03348B },
-	{ "GMT+0"                             , 0x033533 },
-	{ "GMT-0"                             , 0x0334FB },
-	{ "GMT0"                              , 0x0334C3 },
-	{ "Greenwich"                         , 0x03356B },
-	{ "Hongkong"                          , 0x0335A3 },
-	{ "HST"                               , 0x03374D },
-	{ "Iceland"                           , 0x033785 },
-	{ "Indian/Antananarivo"               , 0x033932 },
-	{ "Indian/Chagos"                     , 0x03399A },
-	{ "Indian/Christmas"                  , 0x0339F0 },
-	{ "Indian/Cocos"                      , 0x033A28 },
-	{ "Indian/Comoro"                     , 0x033A60 },
-	{ "Indian/Kerguelen"                  , 0x033AA9 },
-	{ "Indian/Mahe"                       , 0x033AF2 },
-	{ "Indian/Maldives"                   , 0x033B3B },
-	{ "Indian/Mauritius"                  , 0x033B84 },
-	{ "Indian/Mayotte"                    , 0x033BCD },
-	{ "Indian/Reunion"                    , 0x033C16 },
-	{ "Iran"                              , 0x033C5F },
-	{ "Israel"                            , 0x033D95 },
-	{ "Jamaica"                           , 0x0340B8 },
-	{ "Japan"                             , 0x034171 },
-	{ "Kwajalein"                         , 0x0341EE },
-	{ "Libya"                             , 0x034245 },
-	{ "MET"                               , 0x034333 },
-	{ "Mexico/BajaNorte"                  , 0x034626 },
-	{ "Mexico/BajaSur"                    , 0x034983 },
-	{ "Mexico/General"                    , 0x034BBC },
-	{ "MST"                               , 0x034E0E },
-	{ "MST7MDT"                           , 0x034E46 },
-	{ "Navajo"                            , 0x03518B },
-	{ "NZ"                                , 0x0354F8 },
-	{ "NZ-CHAT"                           , 0x03586A },
-	{ "Pacific/Apia"                      , 0x035B46 },
-	{ "Pacific/Auckland"                  , 0x035BA1 },
-	{ "Pacific/Chatham"                   , 0x035F13 },
-	{ "Pacific/Easter"                    , 0x0361EF },
-	{ "Pacific/Efate"                     , 0x036525 },
-	{ "Pacific/Enderbury"                 , 0x0365DF },
-	{ "Pacific/Fakaofo"                   , 0x036632 },
-	{ "Pacific/Fiji"                      , 0x03666A },
-	{ "Pacific/Funafuti"                  , 0x0366D4 },
-	{ "Pacific/Galapagos"                 , 0x03670C },
-	{ "Pacific/Gambier"                   , 0x036767 },
-	{ "Pacific/Guadalcanal"               , 0x0367B1 },
-	{ "Pacific/Guam"                      , 0x0367FA },
-	{ "Pacific/Honolulu"                  , 0x036844 },
-	{ "Pacific/Johnston"                  , 0x0368C6 },
-	{ "Pacific/Kiritimati"                , 0x0368FE },
-	{ "Pacific/Kosrae"                    , 0x036951 },
-	{ "Pacific/Kwajalein"                 , 0x03699C },
-	{ "Pacific/Majuro"                    , 0x0369F3 },
-	{ "Pacific/Marquesas"                 , 0x036A38 },
-	{ "Pacific/Midway"                    , 0x036A82 },
-	{ "Pacific/Nauru"                     , 0x036AF2 },
-	{ "Pacific/Niue"                      , 0x036B5E },
-	{ "Pacific/Norfolk"                   , 0x036BB0 },
-	{ "Pacific/Noumea"                    , 0x036BF9 },
-	{ "Pacific/Pago_Pago"                 , 0x036C7D },
-	{ "Pacific/Palau"                     , 0x036CFA },
-	{ "Pacific/Pitcairn"                  , 0x036D32 },
-	{ "Pacific/Ponape"                    , 0x036D7B },
-	{ "Pacific/Port_Moresby"              , 0x036DB4 },
-	{ "Pacific/Rarotonga"                 , 0x036DEC },
-	{ "Pacific/Saipan"                    , 0x036EBC },
-	{ "Pacific/Samoa"                     , 0x036F13 },
-	{ "Pacific/Tahiti"                    , 0x036F90 },
-	{ "Pacific/Tarawa"                    , 0x036FDA },
-	{ "Pacific/Tongatapu"                 , 0x037013 },
-	{ "Pacific/Truk"                      , 0x037093 },
-	{ "Pacific/Wake"                      , 0x0370CC },
-	{ "Pacific/Wallis"                    , 0x037105 },
-	{ "Pacific/Yap"                       , 0x03713D },
-	{ "Poland"                            , 0x037176 },
-	{ "Portugal"                          , 0x03754B },
-	{ "PRC"                               , 0x037A3B },
-	{ "PST8PDT"                           , 0x037AE0 },
-	{ "ROC"                               , 0x037E25 },
-	{ "ROK"                               , 0x037F31 },
-	{ "Singapore"                         , 0x037FC9 },
-	{ "Turkey"                            , 0x038074 },
-	{ "UCT"                               , 0x038440 },
-	{ "Universal"                         , 0x038478 },
-	{ "US/Alaska"                         , 0x0384B0 },
-	{ "US/Aleutian"                       , 0x03880D },
-	{ "US/Arizona"                        , 0x038B67 },
-	{ "US/Central"                        , 0x038BE9 },
-	{ "US/East-Indiana"                   , 0x0395DB },
-	{ "US/Eastern"                        , 0x0390E8 },
-	{ "US/Hawaii"                         , 0x039839 },
-	{ "US/Indiana-Starke"                 , 0x0398BB },
-	{ "US/Michigan"                       , 0x039C20 },
-	{ "US/Mountain"                       , 0x039F4B },
-	{ "US/Pacific"                        , 0x03A2B8 },
-	{ "US/Pacific-New"                    , 0x03A6B1 },
-	{ "US/Samoa"                          , 0x03AAAA },
-	{ "UTC"                               , 0x03AB27 },
-	{ "W-SU"                              , 0x03AE06 },
-	{ "WET"                               , 0x03AB5F },
-	{ "Zulu"                              , 0x03B135 },
+	{ "America/Campo_Grande"              , 0x004D11 },
+	{ "America/Cancun"                    , 0x004FE2 },
+	{ "America/Caracas"                   , 0x0051FD },
+	{ "America/Catamarca"                 , 0x005253 },
+	{ "America/Cayenne"                   , 0x0053E3 },
+	{ "America/Cayman"                    , 0x005439 },
+	{ "America/Chicago"                   , 0x005482 },
+	{ "America/Chihuahua"                 , 0x005981 },
+	{ "America/Coral_Harbour"             , 0x005BAB },
+	{ "America/Cordoba"                   , 0x005C31 },
+	{ "America/Costa_Rica"                , 0x005DB7 },
+	{ "America/Cuiaba"                    , 0x005E35 },
+	{ "America/Curacao"                   , 0x0060FC },
+	{ "America/Danmarkshavn"              , 0x006156 },
+	{ "America/Dawson"                    , 0x00626D },
+	{ "America/Dawson_Creek"              , 0x006564 },
+	{ "America/Denver"                    , 0x0066E9 },
+	{ "America/Detroit"                   , 0x006A56 },
+	{ "America/Dominica"                  , 0x006D81 },
+	{ "America/Edmonton"                  , 0x006DCA },
+	{ "America/Eirunepe"                  , 0x007134 },
+	{ "America/El_Salvador"               , 0x007220 },
+	{ "America/Ensenada"                  , 0x007289 },
+	{ "America/Fort_Wayne"                , 0x0076FA },
+	{ "America/Fortaleza"                 , 0x0075E6 },
+	{ "America/Glace_Bay"                 , 0x007958 },
+	{ "America/Godthab"                   , 0x007C7C },
+	{ "America/Goose_Bay"                 , 0x007F26 },
+	{ "America/Grand_Turk"                , 0x0083AE },
+	{ "America/Grenada"                   , 0x008651 },
+	{ "America/Guadeloupe"                , 0x00869A },
+	{ "America/Guatemala"                 , 0x0086E3 },
+	{ "America/Guayaquil"                 , 0x008760 },
+	{ "America/Guyana"                    , 0x0087A9 },
+	{ "America/Halifax"                   , 0x00881E },
+	{ "America/Havana"                    , 0x008CFA },
+	{ "America/Hermosillo"                , 0x009061 },
+	{ "America/Indiana/Indianapolis"      , 0x009114 },
+	{ "America/Indiana/Knox"              , 0x009372 },
+	{ "America/Indiana/Marengo"           , 0x0096D7 },
+	{ "America/Indiana/Petersburg"        , 0x009949 },
+	{ "America/Indiana/Vevay"             , 0x009E4E },
+	{ "America/Indiana/Vincennes"         , 0x00A052 },
+	{ "America/Indiana/Winamac"           , 0x00A2BA },
+	{ "America/Indianapolis"              , 0x009BF0 },
+	{ "America/Inuvik"                    , 0x00A540 },
+	{ "America/Iqaluit"                   , 0x00A801 },
+	{ "America/Jamaica"                   , 0x00AAEB },
+	{ "America/Jujuy"                     , 0x00ABA4 },
+	{ "America/Juneau"                    , 0x00AD38 },
+	{ "America/Kentucky/Louisville"       , 0x00B08C },
+	{ "America/Kentucky/Monticello"       , 0x00B475 },
+	{ "America/Knox_IN"                   , 0x00B7C8 },
+	{ "America/La_Paz"                    , 0x00BB2D },
+	{ "America/Lima"                      , 0x00BB88 },
+	{ "America/Los_Angeles"               , 0x00BC24 },
+	{ "America/Louisville"                , 0x00C01D },
+	{ "America/Maceio"                    , 0x00C406 },
+	{ "America/Managua"                   , 0x00C524 },
+	{ "America/Manaus"                    , 0x00C5CB },
+	{ "America/Martinique"                , 0x00C6B7 },
+	{ "America/Mazatlan"                  , 0x00C717 },
+	{ "America/Mendoza"                   , 0x00C950 },
+	{ "America/Menominee"                 , 0x00CAEE },
+	{ "America/Merida"                    , 0x00CE1C },
+	{ "America/Mexico_City"               , 0x00D02B },
+	{ "America/Miquelon"                  , 0x00D27D },
+	{ "America/Moncton"                   , 0x00D4E3 },
+	{ "America/Monterrey"                 , 0x00D951 },
+	{ "America/Montevideo"                , 0x00DB54 },
+	{ "America/Montreal"                  , 0x00DE5A },
+	{ "America/Montserrat"                , 0x00E33E },
+	{ "America/Nassau"                    , 0x00E387 },
+	{ "America/New_York"                  , 0x00E6C0 },
+	{ "America/Nipigon"                   , 0x00EBB3 },
+	{ "America/Nome"                      , 0x00EEAD },
+	{ "America/Noronha"                   , 0x00F206 },
+	{ "America/North_Dakota/Center"       , 0x00F31A },
+	{ "America/North_Dakota/New_Salem"    , 0x00F677 },
+	{ "America/Panama"                    , 0x00F9D4 },
+	{ "America/Pangnirtung"               , 0x00FA1D },
+	{ "America/Paramaribo"                , 0x00FD24 },
+	{ "America/Phoenix"                   , 0x00FDAA },
+	{ "America/Port-au-Prince"            , 0x00FE2C },
+	{ "America/Port_of_Spain"             , 0x010154 },
+	{ "America/Porto_Acre"                , 0x010072 },
+	{ "America/Porto_Velho"               , 0x01019D },
+	{ "America/Puerto_Rico"               , 0x01027F },
+	{ "America/Rainy_River"               , 0x0102DE },
+	{ "America/Rankin_Inlet"              , 0x0105D8 },
+	{ "America/Recife"                    , 0x010894 },
+	{ "America/Regina"                    , 0x0109A8 },
+	{ "America/Resolute"                  , 0x010B25 },
+	{ "America/Rio_Branco"                , 0x010CAB },
+	{ "America/Rosario"                   , 0x010D8D },
+	{ "America/Santiago"                  , 0x010F13 },
+	{ "America/Santo_Domingo"             , 0x0112A2 },
+	{ "America/Sao_Paulo"                 , 0x01135C },
+	{ "America/Scoresbysund"              , 0x01162D },
+	{ "America/Shiprock"                  , 0x0118F0 },
+	{ "America/St_Johns"                  , 0x011C5D },
+	{ "America/St_Kitts"                  , 0x01217C },
+	{ "America/St_Lucia"                  , 0x0121C5 },
+	{ "America/St_Thomas"                 , 0x01220E },
+	{ "America/St_Vincent"                , 0x012257 },
+	{ "America/Swift_Current"             , 0x0122A0 },
+	{ "America/Tegucigalpa"               , 0x012387 },
+	{ "America/Thule"                     , 0x0123FA },
+	{ "America/Thunder_Bay"               , 0x012625 },
+	{ "America/Tijuana"                   , 0x01293F },
+	{ "America/Toronto"                   , 0x012C9C },
+	{ "America/Tortola"                   , 0x013180 },
+	{ "America/Vancouver"                 , 0x0131C9 },
+	{ "America/Virgin"                    , 0x0135D6 },
+	{ "America/Whitehorse"                , 0x01361F },
+	{ "America/Winnipeg"                  , 0x013916 },
+	{ "America/Yakutat"                   , 0x013D24 },
+	{ "America/Yellowknife"               , 0x014060 },
+	{ "Antarctica/Casey"                  , 0x014337 },
+	{ "Antarctica/Davis"                  , 0x014380 },
+	{ "Antarctica/DumontDUrville"         , 0x0143D4 },
+	{ "Antarctica/Mawson"                 , 0x014434 },
+	{ "Antarctica/McMurdo"                , 0x01447E },
+	{ "Antarctica/Palmer"                 , 0x014758 },
+	{ "Antarctica/Rothera"                , 0x014A4B },
+	{ "Antarctica/South_Pole"             , 0x014A95 },
+	{ "Antarctica/Syowa"                  , 0x014D6F },
+	{ "Antarctica/Vostok"                 , 0x014DB9 },
+	{ "Arctic/Longyearbyen"               , 0x014E03 },
+	{ "Asia/Aden"                         , 0x015129 },
+	{ "Asia/Almaty"                       , 0x015172 },
+	{ "Asia/Amman"                        , 0x0152D7 },
+	{ "Asia/Anadyr"                       , 0x01558B },
+	{ "Asia/Aqtau"                        , 0x015857 },
+	{ "Asia/Aqtobe"                       , 0x015A19 },
+	{ "Asia/Ashgabat"                     , 0x015BB6 },
+	{ "Asia/Ashkhabad"                    , 0x015CC7 },
+	{ "Asia/Baghdad"                      , 0x015DD8 },
+	{ "Asia/Bahrain"                      , 0x01606D },
+	{ "Asia/Baku"                         , 0x0160C7 },
+	{ "Asia/Bangkok"                      , 0x0163A3 },
+	{ "Asia/Beirut"                       , 0x0163EC },
+	{ "Asia/Bishkek"                      , 0x0166ED },
+	{ "Asia/Brunei"                       , 0x01688D },
+	{ "Asia/Calcutta"                     , 0x0168E3 },
+	{ "Asia/Choibalsan"                   , 0x016950 },
+	{ "Asia/Chongqing"                    , 0x016A9E },
+	{ "Asia/Chungking"                    , 0x016B41 },
+	{ "Asia/Colombo"                      , 0x016BE4 },
+	{ "Asia/Dacca"                        , 0x016C74 },
+	{ "Asia/Damascus"                     , 0x016CF7 },
+	{ "Asia/Dhaka"                        , 0x01703B },
+	{ "Asia/Dili"                         , 0x0170BE },
+	{ "Asia/Dubai"                        , 0x01713B },
+	{ "Asia/Dushanbe"                     , 0x017184 },
+	{ "Asia/Gaza"                         , 0x01727B },
+	{ "Asia/Harbin"                       , 0x0175B8 },
+	{ "Asia/Hong_Kong"                    , 0x017672 },
+	{ "Asia/Hovd"                         , 0x01781C },
+	{ "Asia/Irkutsk"                      , 0x01795D },
+	{ "Asia/Istanbul"                     , 0x017C21 },
+	{ "Asia/Jakarta"                      , 0x018002 },
+	{ "Asia/Jayapura"                     , 0x018092 },
+	{ "Asia/Jerusalem"                    , 0x0180F1 },
+	{ "Asia/Kabul"                        , 0x018414 },
+	{ "Asia/Kamchatka"                    , 0x018459 },
+	{ "Asia/Karachi"                      , 0x01871D },
+	{ "Asia/Kashgar"                      , 0x0187B2 },
+	{ "Asia/Katmandu"                     , 0x018862 },
+	{ "Asia/Krasnoyarsk"                  , 0x0188BC },
+	{ "Asia/Kuala_Lumpur"                 , 0x018B80 },
+	{ "Asia/Kuching"                      , 0x018C1E },
+	{ "Asia/Kuwait"                       , 0x018CF1 },
+	{ "Asia/Macao"                        , 0x018D3A },
+	{ "Asia/Macau"                        , 0x018E69 },
+	{ "Asia/Magadan"                      , 0x018F98 },
+	{ "Asia/Makassar"                     , 0x01925C },
+	{ "Asia/Manila"                       , 0x0192CC },
+	{ "Asia/Muscat"                       , 0x019345 },
+	{ "Asia/Nicosia"                      , 0x01938E },
+	{ "Asia/Novosibirsk"                  , 0x01966A },
+	{ "Asia/Omsk"                         , 0x01993B },
+	{ "Asia/Oral"                         , 0x019BFF },
+	{ "Asia/Phnom_Penh"                   , 0x019DB4 },
+	{ "Asia/Pontianak"                    , 0x019E20 },
+	{ "Asia/Pyongyang"                    , 0x019EC0 },
+	{ "Asia/Qatar"                        , 0x019F21 },
+	{ "Asia/Qyzylorda"                    , 0x019F7B },
+	{ "Asia/Rangoon"                      , 0x01A125 },
+	{ "Asia/Riyadh"                       , 0x01A191 },
+	{ "Asia/Saigon"                       , 0x01A1DA },
+	{ "Asia/Sakhalin"                     , 0x01A246 },
+	{ "Asia/Samarkand"                    , 0x01A51F },
+	{ "Asia/Seoul"                        , 0x01A63A },
+	{ "Asia/Shanghai"                     , 0x01A6D2 },
+	{ "Asia/Singapore"                    , 0x01A777 },
+	{ "Asia/Taipei"                       , 0x01A822 },
+	{ "Asia/Tashkent"                     , 0x01A92E },
+	{ "Asia/Tbilisi"                      , 0x01AA44 },
+	{ "Asia/Tehran"                       , 0x01ABF2 },
+	{ "Asia/Tel_Aviv"                     , 0x01AD28 },
+	{ "Asia/Thimbu"                       , 0x01B04B },
+	{ "Asia/Thimphu"                      , 0x01B0A5 },
+	{ "Asia/Tokyo"                        , 0x01B0FF },
+	{ "Asia/Ujung_Pandang"                , 0x01B17C },
+	{ "Asia/Ulaanbaatar"                  , 0x01B1EC },
+	{ "Asia/Ulan_Bator"                   , 0x01B32D },
+	{ "Asia/Urumqi"                       , 0x01B46E },
+	{ "Asia/Vientiane"                    , 0x01B511 },
+	{ "Asia/Vladivostok"                  , 0x01B57D },
+	{ "Asia/Yakutsk"                      , 0x01B848 },
+	{ "Asia/Yekaterinburg"                , 0x01BB0C },
+	{ "Asia/Yerevan"                      , 0x01BDFB },
+	{ "Atlantic/Azores"                   , 0x01C0F3 },
+	{ "Atlantic/Bermuda"                  , 0x01C5E4 },
+	{ "Atlantic/Canary"                   , 0x01C8B9 },
+	{ "Atlantic/Cape_Verde"               , 0x01CB75 },
+	{ "Atlantic/Faeroe"                   , 0x01CBE2 },
+	{ "Atlantic/Faroe"                    , 0x01CE7A },
+	{ "Atlantic/Jan_Mayen"                , 0x01D112 },
+	{ "Atlantic/Madeira"                  , 0x01D438 },
+	{ "Atlantic/Reykjavik"                , 0x01D926 },
+	{ "Atlantic/South_Georgia"            , 0x01DAD3 },
+	{ "Atlantic/St_Helena"                , 0x01DDD3 },
+	{ "Atlantic/Stanley"                  , 0x01DB0B },
+	{ "Australia/ACT"                     , 0x01DE1C },
+	{ "Australia/Adelaide"                , 0x01E12D },
+	{ "Australia/Brisbane"                , 0x01E43E },
+	{ "Australia/Broken_Hill"             , 0x01E4DE },
+	{ "Australia/Canberra"                , 0x01E7F4 },
+	{ "Australia/Currie"                  , 0x01EB05 },
+	{ "Australia/Darwin"                  , 0x01EE16 },
+	{ "Australia/Eucla"                   , 0x01EE7E },
+	{ "Australia/Hobart"                  , 0x01EF29 },
+	{ "Australia/LHI"                     , 0x01F262 },
+	{ "Australia/Lindeman"                , 0x01F4F1 },
+	{ "Australia/Lord_Howe"               , 0x01F5AA },
+	{ "Australia/Melbourne"               , 0x01F839 },
+	{ "Australia/North"                   , 0x01FB4A },
+	{ "Australia/NSW"                     , 0x01FBB2 },
+	{ "Australia/Perth"                   , 0x01FEC3 },
+	{ "Australia/Queensland"              , 0x01FF6D },
+	{ "Australia/South"                   , 0x02000D },
+	{ "Australia/Sydney"                  , 0x02031E },
+	{ "Australia/Tasmania"                , 0x02062F },
+	{ "Australia/Victoria"                , 0x020968 },
+	{ "Australia/West"                    , 0x020C79 },
+	{ "Australia/Yancowinna"              , 0x020D23 },
+	{ "Brazil/Acre"                       , 0x021039 },
+	{ "Brazil/DeNoronha"                  , 0x02111B },
+	{ "Brazil/East"                       , 0x02122F },
+	{ "Brazil/West"                       , 0x021500 },
+	{ "Canada/Atlantic"                   , 0x0215EC },
+	{ "Canada/Central"                    , 0x021AC8 },
+	{ "Canada/East-Saskatchewan"          , 0x0223BA },
+	{ "Canada/Eastern"                    , 0x021ED6 },
+	{ "Canada/Mountain"                   , 0x022537 },
+	{ "Canada/Newfoundland"               , 0x0228A1 },
+	{ "Canada/Pacific"                    , 0x022DC0 },
+	{ "Canada/Saskatchewan"               , 0x0231CD },
+	{ "Canada/Yukon"                      , 0x02334A },
+	{ "CET"                               , 0x023641 },
+	{ "Chile/Continental"                 , 0x023934 },
+	{ "Chile/EasterIsland"                , 0x023CC3 },
+	{ "CST6CDT"                           , 0x023FF9 },
+	{ "Cuba"                              , 0x02433E },
+	{ "EET"                               , 0x0246A5 },
+	{ "Egypt"                             , 0x02494C },
+	{ "Eire"                              , 0x024D07 },
+	{ "EST"                               , 0x02520C },
+	{ "EST5EDT"                           , 0x025244 },
+	{ "Etc/GMT"                           , 0x025589 },
+	{ "Etc/GMT+0"                         , 0x025631 },
+	{ "Etc/GMT+1"                         , 0x0256A3 },
+	{ "Etc/GMT+10"                        , 0x025718 },
+	{ "Etc/GMT+11"                        , 0x02578E },
+	{ "Etc/GMT+12"                        , 0x025804 },
+	{ "Etc/GMT+2"                         , 0x0258EF },
+	{ "Etc/GMT+3"                         , 0x025963 },
+	{ "Etc/GMT+4"                         , 0x0259D7 },
+	{ "Etc/GMT+5"                         , 0x025A4B },
+	{ "Etc/GMT+6"                         , 0x025ABF },
+	{ "Etc/GMT+7"                         , 0x025B33 },
+	{ "Etc/GMT+8"                         , 0x025BA7 },
+	{ "Etc/GMT+9"                         , 0x025C1B },
+	{ "Etc/GMT-0"                         , 0x0255F9 },
+	{ "Etc/GMT-1"                         , 0x025669 },
+	{ "Etc/GMT-10"                        , 0x0256DD },
+	{ "Etc/GMT-11"                        , 0x025753 },
+	{ "Etc/GMT-12"                        , 0x0257C9 },
+	{ "Etc/GMT-13"                        , 0x02583F },
+	{ "Etc/GMT-14"                        , 0x02587A },
+	{ "Etc/GMT-2"                         , 0x0258B5 },
+	{ "Etc/GMT-3"                         , 0x025929 },
+	{ "Etc/GMT-4"                         , 0x02599D },
+	{ "Etc/GMT-5"                         , 0x025A11 },
+	{ "Etc/GMT-6"                         , 0x025A85 },
+	{ "Etc/GMT-7"                         , 0x025AF9 },
+	{ "Etc/GMT-8"                         , 0x025B6D },
+	{ "Etc/GMT-9"                         , 0x025BE1 },
+	{ "Etc/GMT0"                          , 0x0255C1 },
+	{ "Etc/Greenwich"                     , 0x025C55 },
+	{ "Etc/UCT"                           , 0x025C8D },
+	{ "Etc/Universal"                     , 0x025CC5 },
+	{ "Etc/UTC"                           , 0x025CFD },
+	{ "Etc/Zulu"                          , 0x025D35 },
+	{ "Europe/Amsterdam"                  , 0x025D6D },
+	{ "Europe/Andorra"                    , 0x02619F },
+	{ "Europe/Athens"                     , 0x02640F },
+	{ "Europe/Belfast"                    , 0x026746 },
+	{ "Europe/Belgrade"                   , 0x026C71 },
+	{ "Europe/Berlin"                     , 0x026F29 },
+	{ "Europe/Bratislava"                 , 0x02726E },
+	{ "Europe/Brussels"                   , 0x027594 },
+	{ "Europe/Bucharest"                  , 0x0279BF },
+	{ "Europe/Budapest"                   , 0x027CDD },
+	{ "Europe/Chisinau"                   , 0x02803F },
+	{ "Europe/Copenhagen"                 , 0x0283C1 },
+	{ "Europe/Dublin"                     , 0x0286BF },
+	{ "Europe/Gibraltar"                  , 0x028BC4 },
+	{ "Europe/Guernsey"                   , 0x02900F },
+	{ "Europe/Helsinki"                   , 0x02953A },
+	{ "Europe/Isle_of_Man"                , 0x0297E4 },
+	{ "Europe/Istanbul"                   , 0x029D0F },
+	{ "Europe/Jersey"                     , 0x02A0F0 },
+	{ "Europe/Kaliningrad"                , 0x02A61B },
+	{ "Europe/Kiev"                       , 0x02A95B },
+	{ "Europe/Lisbon"                     , 0x02AC58 },
+	{ "Europe/Ljubljana"                  , 0x02B148 },
+	{ "Europe/London"                     , 0x02B400 },
+	{ "Europe/Luxembourg"                 , 0x02B92B },
+	{ "Europe/Madrid"                     , 0x02BD75 },
+	{ "Europe/Malta"                      , 0x02C127 },
+	{ "Europe/Mariehamn"                  , 0x02C4D4 },
+	{ "Europe/Minsk"                      , 0x02C77E },
+	{ "Europe/Monaco"                     , 0x02CA7D },
+	{ "Europe/Moscow"                     , 0x02CEAC },
+	{ "Europe/Nicosia"                    , 0x02D1DB },
+	{ "Europe/Oslo"                       , 0x02D4B7 },
+	{ "Europe/Paris"                      , 0x02D7DD },
+	{ "Europe/Podgorica"                  , 0x02DC17 },
+	{ "Europe/Prague"                     , 0x02DECF },
+	{ "Europe/Riga"                       , 0x02E1F5 },
+	{ "Europe/Rome"                       , 0x02E52E },
+	{ "Europe/Samara"                     , 0x02E8E5 },
+	{ "Europe/San_Marino"                 , 0x02EBE9 },
+	{ "Europe/Sarajevo"                   , 0x02EFA0 },
+	{ "Europe/Simferopol"                 , 0x02F258 },
+	{ "Europe/Skopje"                     , 0x02F569 },
+	{ "Europe/Sofia"                      , 0x02F821 },
+	{ "Europe/Stockholm"                  , 0x02FB10 },
+	{ "Europe/Tallinn"                    , 0x02FDB3 },
+	{ "Europe/Tirane"                     , 0x0300E1 },
+	{ "Europe/Tiraspol"                   , 0x0303DB },
+	{ "Europe/Uzhgorod"                   , 0x03075D },
+	{ "Europe/Vaduz"                      , 0x030A60 },
+	{ "Europe/Vatican"                    , 0x030CE7 },
+	{ "Europe/Vienna"                     , 0x03109E },
+	{ "Europe/Vilnius"                    , 0x0313BF },
+	{ "Europe/Volgograd"                  , 0x0316F2 },
+	{ "Europe/Warsaw"                     , 0x0319D8 },
+	{ "Europe/Zagreb"                     , 0x031DAD },
+	{ "Europe/Zaporozhye"                 , 0x032065 },
+	{ "Europe/Zurich"                     , 0x03236C },
+	{ "Factory"                           , 0x032619 },
+	{ "GB"                                , 0x03267E },
+	{ "GB-Eire"                           , 0x032BA9 },
+	{ "GMT"                               , 0x0330D4 },
+	{ "GMT+0"                             , 0x03317C },
+	{ "GMT-0"                             , 0x033144 },
+	{ "GMT0"                              , 0x03310C },
+	{ "Greenwich"                         , 0x0331B4 },
+	{ "Hongkong"                          , 0x0331EC },
+	{ "HST"                               , 0x033396 },
+	{ "Iceland"                           , 0x0333CE },
+	{ "Indian/Antananarivo"               , 0x03357B },
+	{ "Indian/Chagos"                     , 0x0335E3 },
+	{ "Indian/Christmas"                  , 0x033639 },
+	{ "Indian/Cocos"                      , 0x033671 },
+	{ "Indian/Comoro"                     , 0x0336A9 },
+	{ "Indian/Kerguelen"                  , 0x0336F2 },
+	{ "Indian/Mahe"                       , 0x03373B },
+	{ "Indian/Maldives"                   , 0x033784 },
+	{ "Indian/Mauritius"                  , 0x0337CD },
+	{ "Indian/Mayotte"                    , 0x033816 },
+	{ "Indian/Reunion"                    , 0x03385F },
+	{ "Iran"                              , 0x0338A8 },
+	{ "Israel"                            , 0x0339DE },
+	{ "Jamaica"                           , 0x033D01 },
+	{ "Japan"                             , 0x033DBA },
+	{ "Kwajalein"                         , 0x033E37 },
+	{ "Libya"                             , 0x033E8E },
+	{ "MET"                               , 0x033F7C },
+	{ "Mexico/BajaNorte"                  , 0x03426F },
+	{ "Mexico/BajaSur"                    , 0x0345CC },
+	{ "Mexico/General"                    , 0x034805 },
+	{ "MST"                               , 0x034A57 },
+	{ "MST7MDT"                           , 0x034A8F },
+	{ "Navajo"                            , 0x034DD4 },
+	{ "NZ"                                , 0x035141 },
+	{ "NZ-CHAT"                           , 0x0354B3 },
+	{ "Pacific/Apia"                      , 0x03578F },
+	{ "Pacific/Auckland"                  , 0x0357EA },
+	{ "Pacific/Chatham"                   , 0x035B5C },
+	{ "Pacific/Easter"                    , 0x035E38 },
+	{ "Pacific/Efate"                     , 0x03616E },
+	{ "Pacific/Enderbury"                 , 0x036228 },
+	{ "Pacific/Fakaofo"                   , 0x03627B },
+	{ "Pacific/Fiji"                      , 0x0362B3 },
+	{ "Pacific/Funafuti"                  , 0x03631D },
+	{ "Pacific/Galapagos"                 , 0x036355 },
+	{ "Pacific/Gambier"                   , 0x0363B0 },
+	{ "Pacific/Guadalcanal"               , 0x0363FA },
+	{ "Pacific/Guam"                      , 0x036443 },
+	{ "Pacific/Honolulu"                  , 0x03648D },
+	{ "Pacific/Johnston"                  , 0x03650F },
+	{ "Pacific/Kiritimati"                , 0x036547 },
+	{ "Pacific/Kosrae"                    , 0x03659A },
+	{ "Pacific/Kwajalein"                 , 0x0365E5 },
+	{ "Pacific/Majuro"                    , 0x03663C },
+	{ "Pacific/Marquesas"                 , 0x036681 },
+	{ "Pacific/Midway"                    , 0x0366CB },
+	{ "Pacific/Nauru"                     , 0x03673B },
+	{ "Pacific/Niue"                      , 0x0367A7 },
+	{ "Pacific/Norfolk"                   , 0x0367F9 },
+	{ "Pacific/Noumea"                    , 0x036842 },
+	{ "Pacific/Pago_Pago"                 , 0x0368C6 },
+	{ "Pacific/Palau"                     , 0x036943 },
+	{ "Pacific/Pitcairn"                  , 0x03697B },
+	{ "Pacific/Ponape"                    , 0x0369C4 },
+	{ "Pacific/Port_Moresby"              , 0x0369FD },
+	{ "Pacific/Rarotonga"                 , 0x036A35 },
+	{ "Pacific/Saipan"                    , 0x036B05 },
+	{ "Pacific/Samoa"                     , 0x036B5C },
+	{ "Pacific/Tahiti"                    , 0x036BD9 },
+	{ "Pacific/Tarawa"                    , 0x036C23 },
+	{ "Pacific/Tongatapu"                 , 0x036C5C },
+	{ "Pacific/Truk"                      , 0x036CDC },
+	{ "Pacific/Wake"                      , 0x036D15 },
+	{ "Pacific/Wallis"                    , 0x036D4E },
+	{ "Pacific/Yap"                       , 0x036D86 },
+	{ "Poland"                            , 0x036DBF },
+	{ "Portugal"                          , 0x037194 },
+	{ "PRC"                               , 0x037684 },
+	{ "PST8PDT"                           , 0x037729 },
+	{ "ROC"                               , 0x037A6E },
+	{ "ROK"                               , 0x037B7A },
+	{ "Singapore"                         , 0x037C12 },
+	{ "Turkey"                            , 0x037CBD },
+	{ "UCT"                               , 0x03809E },
+	{ "Universal"                         , 0x0380D6 },
+	{ "US/Alaska"                         , 0x03810E },
+	{ "US/Aleutian"                       , 0x03846B },
+	{ "US/Arizona"                        , 0x0387C5 },
+	{ "US/Central"                        , 0x038847 },
+	{ "US/East-Indiana"                   , 0x039239 },
+	{ "US/Eastern"                        , 0x038D46 },
+	{ "US/Hawaii"                         , 0x039497 },
+	{ "US/Indiana-Starke"                 , 0x039519 },
+	{ "US/Michigan"                       , 0x03987E },
+	{ "US/Mountain"                       , 0x039BA9 },
+	{ "US/Pacific"                        , 0x039F16 },
+	{ "US/Pacific-New"                    , 0x03A30F },
+	{ "US/Samoa"                          , 0x03A708 },
+	{ "UTC"                               , 0x03A785 },
+	{ "W-SU"                              , 0x03AA64 },
+	{ "WET"                               , 0x03A7BD },
+	{ "Zulu"                              , 0x03AD93 },
 };
 /* This is a generated file, do not modify */
-const unsigned char timelib_timezone_db_data_builtin[242029] = {
+const unsigned char timelib_timezone_db_data_builtin[241099] = {
 
 
 /* Africa/Abidjan */
@@ -1945,54 +1946,54 @@ const unsigned char timelib_timezone_db_
 
 /* America/Cambridge_Bay */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x21, 0x9E, 0xB8, 0xAF, 0x90, 
-0x9F, 0xBB, 0x07, 0x80, 0xA0, 0xCF, 0xF0, 0x90, 0xA1, 0xA2, 0xB6, 0x60, 0xCB, 0x89, 0x0C, 0x90, 
-0xD2, 0x23, 0xF4, 0x70, 0xD2, 0x61, 0x18, 0x00, 0xF7, 0x2F, 0x5A, 0x70, 0xF8, 0x28, 0x85, 0xF0, 
-0x13, 0x69, 0x64, 0x10, 0x14, 0x59, 0x47, 0x00, 0x15, 0x49, 0x46, 0x10, 0x16, 0x39, 0x29, 0x00, 
-0x17, 0x29, 0x28, 0x10, 0x18, 0x22, 0x45, 0x80, 0x19, 0x09, 0x0A, 0x10, 0x1A, 0x02, 0x27, 0x80, 
-0x1A, 0xF2, 0x26, 0x90, 0x1B, 0xE2, 0x09, 0x80, 0x1C, 0xD2, 0x08, 0x90, 0x1D, 0xC1, 0xEB, 0x80, 
-0x1E, 0xB1, 0xEA, 0x90, 0x1F, 0xA1, 0xCD, 0x80, 0x20, 0x76, 0x1D, 0x10, 0x21, 0x81, 0xAF, 0x80, 
-0x22, 0x55, 0xFF, 0x10, 0x23, 0x6A, 0xCC, 0x00, 0x24, 0x35, 0xE1, 0x10, 0x25, 0x4A, 0xAE, 0x00, 
-0x26, 0x15, 0xC3, 0x10, 0x27, 0x2A, 0x90, 0x00, 0x27, 0xFE, 0xDF, 0x90, 0x29, 0x0A, 0x72, 0x00, 
-0x29, 0xDE, 0xC1, 0x90, 0x2A, 0xEA, 0x54, 0x00, 0x2B, 0xBE, 0xA3, 0x90, 0x2C, 0xD3, 0x70, 0x80, 
-0x2D, 0x9E, 0x85, 0x90, 0x2E, 0xB3, 0x52, 0x80, 0x2F, 0x7E, 0x67, 0x90, 0x30, 0x93, 0x34, 0x80, 
-0x31, 0x67, 0x84, 0x10, 0x32, 0x73, 0x16, 0x80, 0x33, 0x47, 0x66, 0x10, 0x34, 0x52, 0xF8, 0x80, 
-0x35, 0x27, 0x48, 0x10, 0x36, 0x32, 0xDA, 0x80, 0x37, 0x07, 0x2A, 0x10, 0x38, 0x1B, 0xF7, 0x00, 
-0x38, 0xE6, 0xFE, 0x00, 0x39, 0xFB, 0xCA, 0xF0, 0x3A, 0x04, 0xE9, 0x50, 0x3A, 0xC6, 0xEE, 0x10, 
-0x3B, 0xDB, 0xBB, 0x00, 0x3C, 0xB0, 0x0A, 0x90, 0x3D, 0xBB, 0x9D, 0x00, 0x3E, 0x8F, 0xEC, 0x90, 
-0x3F, 0x9B, 0x7F, 0x00, 0x40, 0x6F, 0xCE, 0x90, 0x41, 0x84, 0x9B, 0x80, 0x42, 0x4F, 0xB0, 0x90, 
-0x43, 0x64, 0x7D, 0x80, 0x44, 0x2F, 0x92, 0x90, 0x45, 0x44, 0x5F, 0x80, 0x45, 0xF3, 0xC5, 0x10, 
-0x47, 0x2D, 0x7C, 0x00, 0x47, 0xD3, 0xA7, 0x10, 0x49, 0x0D, 0x5E, 0x00, 0x49, 0xB3, 0x89, 0x10, 
-0x4A, 0xED, 0x40, 0x00, 0x4B, 0x9C, 0xA5, 0x90, 0x4C, 0xD6, 0x5C, 0x80, 0x4D, 0x7C, 0x87, 0x90, 
-0x4E, 0xB6, 0x3E, 0x80, 0x4F, 0x5C, 0x69, 0x90, 0x50, 0x96, 0x20, 0x80, 0x51, 0x3C, 0x4B, 0x90, 
-0x52, 0x76, 0x02, 0x80, 0x53, 0x1C, 0x2D, 0x90, 0x54, 0x55, 0xE4, 0x80, 0x54, 0xFC, 0x0F, 0x90, 
-0x56, 0x35, 0xC6, 0x80, 0x56, 0xE5, 0x2C, 0x10, 0x58, 0x1E, 0xE3, 0x00, 0x58, 0xC5, 0x0E, 0x10, 
-0x59, 0xFE, 0xC5, 0x00, 0x5A, 0xA4, 0xF0, 0x10, 0x5B, 0xDE, 0xA7, 0x00, 0x5C, 0x84, 0xD2, 0x10, 
-0x5D, 0xBE, 0x89, 0x00, 0x5E, 0x64, 0xB4, 0x10, 0x5F, 0x9E, 0x6B, 0x00, 0x60, 0x4D, 0xD0, 0x90, 
-0x61, 0x87, 0x87, 0x80, 0x62, 0x2D, 0xB2, 0x90, 0x63, 0x67, 0x69, 0x80, 0x64, 0x0D, 0x94, 0x90, 
-0x65, 0x47, 0x4B, 0x80, 0x65, 0xED, 0x76, 0x90, 0x67, 0x27, 0x2D, 0x80, 0x67, 0xCD, 0x58, 0x90, 
-0x69, 0x07, 0x0F, 0x80, 0x69, 0xAD, 0x3A, 0x90, 0x6A, 0xE6, 0xF1, 0x80, 0x6B, 0x96, 0x57, 0x10, 
-0x6C, 0xD0, 0x0E, 0x00, 0x6D, 0x76, 0x39, 0x10, 0x6E, 0xAF, 0xF0, 0x00, 0x6F, 0x56, 0x1B, 0x10, 
-0x70, 0x8F, 0xD2, 0x00, 0x71, 0x35, 0xFD, 0x10, 0x72, 0x6F, 0xB4, 0x00, 0x73, 0x15, 0xDF, 0x10, 
-0x74, 0x4F, 0x96, 0x00, 0x74, 0xFE, 0xFB, 0x90, 0x76, 0x38, 0xB2, 0x80, 0x76, 0xDE, 0xDD, 0x90, 
-0x78, 0x18, 0x94, 0x80, 0x78, 0xBE, 0xBF, 0x90, 0x79, 0xF8, 0x76, 0x80, 0x7A, 0x9E, 0xA1, 0x90, 
-0x7B, 0xD8, 0x58, 0x80, 0x7C, 0x7E, 0x83, 0x90, 0x7D, 0xB8, 0x3A, 0x80, 0x7E, 0x5E, 0x65, 0x90, 
-0x7F, 0x98, 0x1C, 0x80, 0x00, 0x01, 0x00, 0x01, 0x02, 0x03, 0x01, 0x04, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x06, 0x05, 0x07, 0x06, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-0x00, 0x01, 0xFF, 0xFF, 0xAB, 0xA0, 0x01, 0x00, 0xFF, 0xFF, 0x9D, 0x90, 0x00, 0x04, 0xFF, 0xFF, 
-0xAB, 0xA0, 0x01, 0x08, 0xFF, 0xFF, 0xAB, 0xA0, 0x01, 0x0C, 0xFF, 0xFF, 0xB9, 0xB0, 0x01, 0x10, 
-0xFF, 0xFF, 0xB9, 0xB0, 0x01, 0x15, 0xFF, 0xFF, 0xAB, 0xA0, 0x00, 0x19, 0xFF, 0xFF, 0xB9, 0xB0, 
-0x00, 0x1D, 0x4D, 0x44, 0x54, 0x00, 0x4D, 0x53, 0x54, 0x00, 0x4D, 0x57, 0x54, 0x00, 0x4D, 0x50, 
-0x54, 0x00, 0x4D, 0x44, 0x44, 0x54, 0x00, 0x43, 0x44, 0x54, 0x00, 0x43, 0x53, 0x54, 0x00, 0x45, 
-0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 
-0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x7B, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x25, 0xA1, 0xF2, 0xCD, 0x80, 
+0xCB, 0x89, 0x0C, 0x90, 0xD2, 0x23, 0xF4, 0x70, 0xD2, 0x61, 0x18, 0x00, 0xF7, 0x2F, 0x5A, 0x70, 
+0xF8, 0x28, 0x85, 0xF0, 0x13, 0x69, 0x64, 0x10, 0x14, 0x59, 0x47, 0x00, 0x15, 0x49, 0x46, 0x10, 
+0x16, 0x39, 0x29, 0x00, 0x17, 0x29, 0x28, 0x10, 0x18, 0x22, 0x45, 0x80, 0x19, 0x09, 0x0A, 0x10, 
+0x1A, 0x02, 0x27, 0x80, 0x1A, 0xF2, 0x26, 0x90, 0x1B, 0xE2, 0x09, 0x80, 0x1C, 0xD2, 0x08, 0x90, 
+0x1D, 0xC1, 0xEB, 0x80, 0x1E, 0xB1, 0xEA, 0x90, 0x1F, 0xA1, 0xCD, 0x80, 0x20, 0x76, 0x1D, 0x10, 
+0x21, 0x81, 0xAF, 0x80, 0x22, 0x55, 0xFF, 0x10, 0x23, 0x6A, 0xCC, 0x00, 0x24, 0x35, 0xE1, 0x10, 
+0x25, 0x4A, 0xAE, 0x00, 0x26, 0x15, 0xC3, 0x10, 0x27, 0x2A, 0x90, 0x00, 0x27, 0xFE, 0xDF, 0x90, 
+0x29, 0x0A, 0x72, 0x00, 0x29, 0xDE, 0xC1, 0x90, 0x2A, 0xEA, 0x54, 0x00, 0x2B, 0xBE, 0xA3, 0x90, 
+0x2C, 0xD3, 0x70, 0x80, 0x2D, 0x9E, 0x85, 0x90, 0x2E, 0xB3, 0x52, 0x80, 0x2F, 0x7E, 0x67, 0x90, 
+0x30, 0x93, 0x34, 0x80, 0x31, 0x67, 0x84, 0x10, 0x32, 0x73, 0x16, 0x80, 0x33, 0x47, 0x66, 0x10, 
+0x34, 0x52, 0xF8, 0x80, 0x35, 0x27, 0x48, 0x10, 0x36, 0x32, 0xDA, 0x80, 0x37, 0x07, 0x2A, 0x10, 
+0x38, 0x1B, 0xF7, 0x00, 0x38, 0xE6, 0xFE, 0x00, 0x39, 0xFB, 0xCA, 0xF0, 0x3A, 0x04, 0xE9, 0x50, 
+0x3A, 0xC6, 0xEE, 0x10, 0x3B, 0xDB, 0xBB, 0x00, 0x3C, 0xB0, 0x0A, 0x90, 0x3D, 0xBB, 0x9D, 0x00, 
+0x3E, 0x8F, 0xEC, 0x90, 0x3F, 0x9B, 0x7F, 0x00, 0x40, 0x6F, 0xCE, 0x90, 0x41, 0x84, 0x9B, 0x80, 
+0x42, 0x4F, 0xB0, 0x90, 0x43, 0x64, 0x7D, 0x80, 0x44, 0x2F, 0x92, 0x90, 0x45, 0x44, 0x5F, 0x80, 
+0x45, 0xF3, 0xC5, 0x10, 0x47, 0x2D, 0x7C, 0x00, 0x47, 0xD3, 0xA7, 0x10, 0x49, 0x0D, 0x5E, 0x00, 
+0x49, 0xB3, 0x89, 0x10, 0x4A, 0xED, 0x40, 0x00, 0x4B, 0x9C, 0xA5, 0x90, 0x4C, 0xD6, 0x5C, 0x80, 
+0x4D, 0x7C, 0x87, 0x90, 0x4E, 0xB6, 0x3E, 0x80, 0x4F, 0x5C, 0x69, 0x90, 0x50, 0x96, 0x20, 0x80, 
+0x51, 0x3C, 0x4B, 0x90, 0x52, 0x76, 0x02, 0x80, 0x53, 0x1C, 0x2D, 0x90, 0x54, 0x55, 0xE4, 0x80, 
+0x54, 0xFC, 0x0F, 0x90, 0x56, 0x35, 0xC6, 0x80, 0x56, 0xE5, 0x2C, 0x10, 0x58, 0x1E, 0xE3, 0x00, 
+0x58, 0xC5, 0x0E, 0x10, 0x59, 0xFE, 0xC5, 0x00, 0x5A, 0xA4, 0xF0, 0x10, 0x5B, 0xDE, 0xA7, 0x00, 
+0x5C, 0x84, 0xD2, 0x10, 0x5D, 0xBE, 0x89, 0x00, 0x5E, 0x64, 0xB4, 0x10, 0x5F, 0x9E, 0x6B, 0x00, 
+0x60, 0x4D, 0xD0, 0x90, 0x61, 0x87, 0x87, 0x80, 0x62, 0x2D, 0xB2, 0x90, 0x63, 0x67, 0x69, 0x80, 
+0x64, 0x0D, 0x94, 0x90, 0x65, 0x47, 0x4B, 0x80, 0x65, 0xED, 0x76, 0x90, 0x67, 0x27, 0x2D, 0x80, 
+0x67, 0xCD, 0x58, 0x90, 0x69, 0x07, 0x0F, 0x80, 0x69, 0xAD, 0x3A, 0x90, 0x6A, 0xE6, 0xF1, 0x80, 
+0x6B, 0x96, 0x57, 0x10, 0x6C, 0xD0, 0x0E, 0x00, 0x6D, 0x76, 0x39, 0x10, 0x6E, 0xAF, 0xF0, 0x00, 
+0x6F, 0x56, 0x1B, 0x10, 0x70, 0x8F, 0xD2, 0x00, 0x71, 0x35, 0xFD, 0x10, 0x72, 0x6F, 0xB4, 0x00, 
+0x73, 0x15, 0xDF, 0x10, 0x74, 0x4F, 0x96, 0x00, 0x74, 0xFE, 0xFB, 0x90, 0x76, 0x38, 0xB2, 0x80, 
+0x76, 0xDE, 0xDD, 0x90, 0x78, 0x18, 0x94, 0x80, 0x78, 0xBE, 0xBF, 0x90, 0x79, 0xF8, 0x76, 0x80, 
+0x7A, 0x9E, 0xA1, 0x90, 0x7B, 0xD8, 0x58, 0x80, 0x7C, 0x7E, 0x83, 0x90, 0x7D, 0xB8, 0x3A, 0x80, 
+0x7E, 0x5E, 0x65, 0x90, 0x7F, 0x98, 0x1C, 0x80, 0x03, 0x01, 0x02, 0x03, 0x04, 0x03, 0x05, 0x03, 
+0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 
+0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 
+0x05, 0x03, 0x05, 0x03, 0x05, 0x07, 0x06, 0x08, 0x07, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 
+0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 
+0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 
+0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 
+0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 
+0x03, 0x05, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xAB, 0xA0, 0x01, 0x04, 0xFF, 
+0xFF, 0xAB, 0xA0, 0x01, 0x08, 0xFF, 0xFF, 0x9D, 0x90, 0x00, 0x0C, 0xFF, 0xFF, 0xB9, 0xB0, 0x01, 
+0x10, 0xFF, 0xFF, 0xAB, 0xA0, 0x01, 0x15, 0xFF, 0xFF, 0xB9, 0xB0, 0x01, 0x19, 0xFF, 0xFF, 0xAB, 
+0xA0, 0x00, 0x1D, 0xFF, 0xFF, 0xB9, 0xB0, 0x00, 0x21, 0x7A, 0x7A, 0x7A, 0x00, 0x4D, 0x57, 0x54, 
+0x00, 0x4D, 0x50, 0x54, 0x00, 0x4D, 0x53, 0x54, 0x00, 0x4D, 0x44, 0x44, 0x54, 0x00, 0x4D, 0x44, 
+0x54, 0x00, 0x43, 0x44, 0x54, 0x00, 0x43, 0x53, 0x54, 0x00, 0x45, 0x53, 0x54, 0x00, 0x00, 0x00, 
+0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+
 
 /* America/Campo_Grande */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
@@ -3130,22 +3131,22 @@ const unsigned char timelib_timezone_db_
 0x36, 0xFD, 0xB7, 0x50, 0x38, 0x1B, 0xCC, 0xD0, 0x38, 0xE6, 0xD3, 0xD0, 0x39, 0xFB, 0xAE, 0xD0, 
 0x3A, 0xC6, 0xB5, 0xD0, 0x3B, 0xDB, 0x90, 0xD0, 0x3C, 0xAF, 0xD2, 0x50, 0x3D, 0xBB, 0x72, 0xD0, 
 0x3E, 0x8F, 0xB4, 0x50, 0x3F, 0x9B, 0x54, 0xD0, 0x40, 0x6F, 0x96, 0x50, 0x45, 0x44, 0x35, 0x50, 
-0x46, 0x0F, 0x3C, 0x50, 0x47, 0x24, 0x17, 0x50, 0x47, 0xF8, 0x58, 0xD0, 0x49, 0x03, 0xF9, 0x50, 
-0x49, 0xD8, 0x3A, 0xD0, 0x4A, 0xE3, 0xDB, 0x50, 0x4B, 0xB8, 0x1C, 0xD0, 0x4C, 0xCC, 0xF7, 0xD0, 
-0x4D, 0x97, 0xFE, 0xD0, 0x4E, 0xAC, 0xD9, 0xD0, 0x4F, 0x77, 0xE0, 0xD0, 0x50, 0x8C, 0xBB, 0xD0, 
-0x51, 0x60, 0xFD, 0x50, 0x52, 0x6C, 0x9D, 0xD0, 0x53, 0x40, 0xDF, 0x50, 0x54, 0x4C, 0x7F, 0xD0, 
-0x55, 0x20, 0xC1, 0x50, 0x56, 0x2C, 0x61, 0xD0, 0x57, 0x00, 0xA3, 0x50, 0x58, 0x15, 0x7E, 0x50, 
-0x58, 0xE0, 0x85, 0x50, 0x59, 0xF5, 0x60, 0x50, 0x5A, 0xC0, 0x67, 0x50, 0x5B, 0xD5, 0x42, 0x50, 
-0x5C, 0xA9, 0x83, 0xD0, 0x5D, 0xB5, 0x24, 0x50, 0x5E, 0x89, 0x65, 0xD0, 0x5F, 0x95, 0x06, 0x50, 
-0x60, 0x69, 0x47, 0xD0, 0x61, 0x7E, 0x22, 0xD0, 0x62, 0x49, 0x29, 0xD0, 0x63, 0x5E, 0x04, 0xD0, 
-0x64, 0x29, 0x0B, 0xD0, 0x65, 0x3D, 0xE6, 0xD0, 0x66, 0x12, 0x28, 0x50, 0x67, 0x1D, 0xC8, 0xD0, 
-0x67, 0xF2, 0x0A, 0x50, 0x68, 0xFD, 0xAA, 0xD0, 0x69, 0xD1, 0xEC, 0x50, 0x6A, 0xDD, 0x8C, 0xD0, 
-0x6B, 0xB1, 0xCE, 0x50, 0x6C, 0xC6, 0xA9, 0x50, 0x6D, 0x91, 0xB0, 0x50, 0x6E, 0xA6, 0x8B, 0x50, 
-0x6F, 0x71, 0x92, 0x50, 0x70, 0x86, 0x6D, 0x50, 0x71, 0x5A, 0xAE, 0xD0, 0x72, 0x66, 0x4F, 0x50, 
-0x73, 0x3A, 0x90, 0xD0, 0x74, 0x46, 0x31, 0x50, 0x75, 0x1A, 0x72, 0xD0, 0x76, 0x2F, 0x4D, 0xD0, 
-0x76, 0xFA, 0x54, 0xD0, 0x78, 0x0F, 0x2F, 0xD0, 0x78, 0xDA, 0x36, 0xD0, 0x79, 0xEF, 0x11, 0xD0, 
-0x7A, 0xBA, 0x18, 0xD0, 0x7B, 0xCE, 0xF3, 0xD0, 0x7C, 0xA3, 0x35, 0x50, 0x7D, 0xAE, 0xD5, 0xD0, 
-0x7E, 0x83, 0x17, 0x50, 0x7F, 0x8E, 0xB7, 0xD0, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
+0x45, 0xF3, 0x8C, 0xD0, 0x47, 0x2D, 0x51, 0xD0, 0x47, 0xD3, 0x6E, 0xD0, 0x49, 0x0D, 0x33, 0xD0, 
+0x49, 0xB3, 0x50, 0xD0, 0x4A, 0xED, 0x15, 0xD0, 0x4B, 0x9C, 0x6D, 0x50, 0x4C, 0xD6, 0x32, 0x50, 
+0x4D, 0x7C, 0x4F, 0x50, 0x4E, 0xB6, 0x14, 0x50, 0x4F, 0x5C, 0x31, 0x50, 0x50, 0x95, 0xF6, 0x50, 
+0x51, 0x3C, 0x13, 0x50, 0x52, 0x75, 0xD8, 0x50, 0x53, 0x1B, 0xF5, 0x50, 0x54, 0x55, 0xBA, 0x50, 
+0x54, 0xFB, 0xD7, 0x50, 0x56, 0x35, 0x9C, 0x50, 0x56, 0xE4, 0xF3, 0xD0, 0x58, 0x1E, 0xB8, 0xD0, 
+0x58, 0xC4, 0xD5, 0xD0, 0x59, 0xFE, 0x9A, 0xD0, 0x5A, 0xA4, 0xB7, 0xD0, 0x5B, 0xDE, 0x7C, 0xD0, 
+0x5C, 0x84, 0x99, 0xD0, 0x5D, 0xBE, 0x5E, 0xD0, 0x5E, 0x64, 0x7B, 0xD0, 0x5F, 0x9E, 0x40, 0xD0, 
+0x60, 0x4D, 0x98, 0x50, 0x61, 0x87, 0x5D, 0x50, 0x62, 0x2D, 0x7A, 0x50, 0x63, 0x67, 0x3F, 0x50, 
+0x64, 0x0D, 0x5C, 0x50, 0x65, 0x47, 0x21, 0x50, 0x65, 0xED, 0x3E, 0x50, 0x67, 0x27, 0x03, 0x50, 
+0x67, 0xCD, 0x20, 0x50, 0x69, 0x06, 0xE5, 0x50, 0x69, 0xAD, 0x02, 0x50, 0x6A, 0xE6, 0xC7, 0x50, 
+0x6B, 0x96, 0x1E, 0xD0, 0x6C, 0xCF, 0xE3, 0xD0, 0x6D, 0x76, 0x00, 0xD0, 0x6E, 0xAF, 0xC5, 0xD0, 
+0x6F, 0x55, 0xE2, 0xD0, 0x70, 0x8F, 0xA7, 0xD0, 0x71, 0x35, 0xC4, 0xD0, 0x72, 0x6F, 0x89, 0xD0, 
+0x73, 0x15, 0xA6, 0xD0, 0x74, 0x4F, 0x6B, 0xD0, 0x74, 0xFE, 0xC3, 0x50, 0x76, 0x38, 0x88, 0x50, 
+0x76, 0xDE, 0xA5, 0x50, 0x78, 0x18, 0x6A, 0x50, 0x78, 0xBE, 0x87, 0x50, 0x79, 0xF8, 0x4C, 0x50, 
+0x7A, 0x9E, 0x69, 0x50, 0x7B, 0xD8, 0x2E, 0x50, 0x7C, 0x7E, 0x4B, 0x50, 0x7D, 0xB8, 0x10, 0x50, 
+0x7E, 0x5E, 0x2D, 0x50, 0x7F, 0x97, 0xF2, 0x50, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
@@ -3519,59 +3520,55 @@ const unsigned char timelib_timezone_db_
 
 /* America/Inuvik */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1D, 0x9E, 0xB8, 0xBD, 0xA0, 
-0x9F, 0xBB, 0x15, 0x90, 0xA0, 0xCF, 0xFE, 0xA0, 0xA1, 0xA2, 0xC4, 0x70, 0xCB, 0x89, 0x1A, 0xA0, 
-0xD2, 0x23, 0xF4, 0x70, 0xD2, 0x61, 0x26, 0x10, 0xF7, 0x2F, 0x68, 0x80, 0xF8, 0x28, 0x94, 0x00, 
-0x11, 0x89, 0x90, 0x20, 0x13, 0x69, 0x64, 0x10, 0x14, 0x59, 0x47, 0x00, 0x15, 0x49, 0x46, 0x10, 
-0x16, 0x39, 0x29, 0x00, 0x17, 0x29, 0x28, 0x10, 0x18, 0x22, 0x45, 0x80, 0x19, 0x09, 0x0A, 0x10, 
-0x1A, 0x02, 0x27, 0x80, 0x1A, 0xF2, 0x26, 0x90, 0x1B, 0xE2, 0x09, 0x80, 0x1C, 0xD2, 0x08, 0x90, 
-0x1D, 0xC1, 0xEB, 0x80, 0x1E, 0xB1, 0xEA, 0x90, 0x1F, 0xA1, 0xCD, 0x80, 0x20, 0x76, 0x1D, 0x10, 
-0x21, 0x81, 0xAF, 0x80, 0x22, 0x55, 0xFF, 0x10, 0x23, 0x6A, 0xCC, 0x00, 0x24, 0x35, 0xE1, 0x10, 
-0x25, 0x4A, 0xAE, 0x00, 0x26, 0x15, 0xC3, 0x10, 0x27, 0x2A, 0x90, 0x00, 0x27, 0xFE, 0xDF, 0x90, 
-0x29, 0x0A, 0x72, 0x00, 0x29, 0xDE, 0xC1, 0x90, 0x2A, 0xEA, 0x54, 0x00, 0x2B, 0xBE, 0xA3, 0x90, 
-0x2C, 0xD3, 0x70, 0x80, 0x2D, 0x9E, 0x85, 0x90, 0x2E, 0xB3, 0x52, 0x80, 0x2F, 0x7E, 0x67, 0x90, 
-0x30, 0x93, 0x34, 0x80, 0x31, 0x67, 0x84, 0x10, 0x32, 0x73, 0x16, 0x80, 0x33, 0x47, 0x66, 0x10, 
-0x34, 0x52, 0xF8, 0x80, 0x35, 0x27, 0x48, 0x10, 0x36, 0x32, 0xDA, 0x80, 0x37, 0x07, 0x2A, 0x10, 
-0x38, 0x1B, 0xF7, 0x00, 0x38, 0xE7, 0x0C, 0x10, 0x39, 0xFB, 0xD9, 0x00, 0x3A, 0xC6, 0xEE, 0x10, 
-0x3B, 0xDB, 0xBB, 0x00, 0x3C, 0xB0, 0x0A, 0x90, 0x3D, 0xBB, 0x9D, 0x00, 0x3E, 0x8F, 0xEC, 0x90, 
-0x3F, 0x9B, 0x7F, 0x00, 0x40, 0x6F, 0xCE, 0x90, 0x41, 0x84, 0x9B, 0x80, 0x42, 0x4F, 0xB0, 0x90, 
-0x43, 0x64, 0x7D, 0x80, 0x44, 0x2F, 0x92, 0x90, 0x45, 0x44, 0x5F, 0x80, 0x45, 0xF3, 0xC5, 0x10, 
-0x47, 0x2D, 0x7C, 0x00, 0x47, 0xD3, 0xA7, 0x10, 0x49, 0x0D, 0x5E, 0x00, 0x49, 0xB3, 0x89, 0x10, 
-0x4A, 0xED, 0x40, 0x00, 0x4B, 0x9C, 0xA5, 0x90, 0x4C, 0xD6, 0x5C, 0x80, 0x4D, 0x7C, 0x87, 0x90, 
-0x4E, 0xB6, 0x3E, 0x80, 0x4F, 0x5C, 0x69, 0x90, 0x50, 0x96, 0x20, 0x80, 0x51, 0x3C, 0x4B, 0x90, 
-0x52, 0x76, 0x02, 0x80, 0x53, 0x1C, 0x2D, 0x90, 0x54, 0x55, 0xE4, 0x80, 0x54, 0xFC, 0x0F, 0x90, 
-0x56, 0x35, 0xC6, 0x80, 0x56, 0xE5, 0x2C, 0x10, 0x58, 0x1E, 0xE3, 0x00, 0x58, 0xC5, 0x0E, 0x10, 
-0x59, 0xFE, 0xC5, 0x00, 0x5A, 0xA4, 0xF0, 0x10, 0x5B, 0xDE, 0xA7, 0x00, 0x5C, 0x84, 0xD2, 0x10, 
-0x5D, 0xBE, 0x89, 0x00, 0x5E, 0x64, 0xB4, 0x10, 0x5F, 0x9E, 0x6B, 0x00, 0x60, 0x4D, 0xD0, 0x90, 
-0x61, 0x87, 0x87, 0x80, 0x62, 0x2D, 0xB2, 0x90, 0x63, 0x67, 0x69, 0x80, 0x64, 0x0D, 0x94, 0x90, 
-0x65, 0x47, 0x4B, 0x80, 0x65, 0xED, 0x76, 0x90, 0x67, 0x27, 0x2D, 0x80, 0x67, 0xCD, 0x58, 0x90, 
-0x69, 0x07, 0x0F, 0x80, 0x69, 0xAD, 0x3A, 0x90, 0x6A, 0xE6, 0xF1, 0x80, 0x6B, 0x96, 0x57, 0x10, 
-0x6C, 0xD0, 0x0E, 0x00, 0x6D, 0x76, 0x39, 0x10, 0x6E, 0xAF, 0xF0, 0x00, 0x6F, 0x56, 0x1B, 0x10, 
-0x70, 0x8F, 0xD2, 0x00, 0x71, 0x35, 0xFD, 0x10, 0x72, 0x6F, 0xB4, 0x00, 0x73, 0x15, 0xDF, 0x10, 
-0x74, 0x4F, 0x96, 0x00, 0x74, 0xFE, 0xFB, 0x90, 0x76, 0x38, 0xB2, 0x80, 0x76, 0xDE, 0xDD, 0x90, 
-0x78, 0x18, 0x94, 0x80, 0x78, 0xBE, 0xBF, 0x90, 0x79, 0xF8, 0x76, 0x80, 0x7A, 0x9E, 0xA1, 0x90, 
-0x7B, 0xD8, 0x58, 0x80, 0x7C, 0x7E, 0x83, 0x90, 0x7D, 0xB8, 0x3A, 0x80, 0x7E, 0x5E, 0x65, 0x90, 
-0x7F, 0x98, 0x1C, 0x80, 0x00, 0x01, 0x00, 0x01, 0x02, 0x03, 0x01, 0x04, 0x01, 0x05, 0x06, 0x05, 
-0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 
-0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 
-0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 
-0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 
-0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 
-0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 
-0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 
-0x06, 0x05, 0xFF, 0xFF, 0x9D, 0x90, 0x01, 0x00, 0xFF, 0xFF, 0x8F, 0x80, 0x00, 0x04, 0xFF, 0xFF, 
-0x9D, 0x90, 0x01, 0x08, 0xFF, 0xFF, 0x9D, 0x90, 0x01, 0x0C, 0xFF, 0xFF, 0xAB, 0xA0, 0x01, 0x10, 
-0xFF, 0xFF, 0x9D, 0x90, 0x00, 0x15, 0xFF, 0xFF, 0xAB, 0xA0, 0x01, 0x19, 0x50, 0x44, 0x54, 0x00, 
-0x50, 0x53, 0x54, 0x00, 0x50, 0x57, 0x54, 0x00, 0x50, 0x50, 0x54, 0x00, 0x50, 0x44, 0x44, 0x54, 
-0x00, 0x4D, 0x53, 0x54, 0x00, 0x4D, 0x44, 0x54, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x15, 0xE0, 0x06, 0x4E, 0x80, 
+0xF7, 0x2F, 0x68, 0x80, 0xF8, 0x28, 0x94, 0x00, 0x11, 0x89, 0x90, 0x20, 0x13, 0x69, 0x64, 0x10, 
+0x14, 0x59, 0x47, 0x00, 0x15, 0x49, 0x46, 0x10, 0x16, 0x39, 0x29, 0x00, 0x17, 0x29, 0x28, 0x10, 
+0x18, 0x22, 0x45, 0x80, 0x19, 0x09, 0x0A, 0x10, 0x1A, 0x02, 0x27, 0x80, 0x1A, 0xF2, 0x26, 0x90, 
+0x1B, 0xE2, 0x09, 0x80, 0x1C, 0xD2, 0x08, 0x90, 0x1D, 0xC1, 0xEB, 0x80, 0x1E, 0xB1, 0xEA, 0x90, 
+0x1F, 0xA1, 0xCD, 0x80, 0x20, 0x76, 0x1D, 0x10, 0x21, 0x81, 0xAF, 0x80, 0x22, 0x55, 0xFF, 0x10, 
+0x23, 0x6A, 0xCC, 0x00, 0x24, 0x35, 0xE1, 0x10, 0x25, 0x4A, 0xAE, 0x00, 0x26, 0x15, 0xC3, 0x10, 
+0x27, 0x2A, 0x90, 0x00, 0x27, 0xFE, 0xDF, 0x90, 0x29, 0x0A, 0x72, 0x00, 0x29, 0xDE, 0xC1, 0x90, 
+0x2A, 0xEA, 0x54, 0x00, 0x2B, 0xBE, 0xA3, 0x90, 0x2C, 0xD3, 0x70, 0x80, 0x2D, 0x9E, 0x85, 0x90, 
+0x2E, 0xB3, 0x52, 0x80, 0x2F, 0x7E, 0x67, 0x90, 0x30, 0x93, 0x34, 0x80, 0x31, 0x67, 0x84, 0x10, 
+0x32, 0x73, 0x16, 0x80, 0x33, 0x47, 0x66, 0x10, 0x34, 0x52, 0xF8, 0x80, 0x35, 0x27, 0x48, 0x10, 
+0x36, 0x32, 0xDA, 0x80, 0x37, 0x07, 0x2A, 0x10, 0x38, 0x1B, 0xF7, 0x00, 0x38, 0xE7, 0x0C, 0x10, 
+0x39, 0xFB, 0xD9, 0x00, 0x3A, 0xC6, 0xEE, 0x10, 0x3B, 0xDB, 0xBB, 0x00, 0x3C, 0xB0, 0x0A, 0x90, 
+0x3D, 0xBB, 0x9D, 0x00, 0x3E, 0x8F, 0xEC, 0x90, 0x3F, 0x9B, 0x7F, 0x00, 0x40, 0x6F, 0xCE, 0x90, 
+0x41, 0x84, 0x9B, 0x80, 0x42, 0x4F, 0xB0, 0x90, 0x43, 0x64, 0x7D, 0x80, 0x44, 0x2F, 0x92, 0x90, 
+0x45, 0x44, 0x5F, 0x80, 0x45, 0xF3, 0xC5, 0x10, 0x47, 0x2D, 0x7C, 0x00, 0x47, 0xD3, 0xA7, 0x10, 
+0x49, 0x0D, 0x5E, 0x00, 0x49, 0xB3, 0x89, 0x10, 0x4A, 0xED, 0x40, 0x00, 0x4B, 0x9C, 0xA5, 0x90, 
+0x4C, 0xD6, 0x5C, 0x80, 0x4D, 0x7C, 0x87, 0x90, 0x4E, 0xB6, 0x3E, 0x80, 0x4F, 0x5C, 0x69, 0x90, 
+0x50, 0x96, 0x20, 0x80, 0x51, 0x3C, 0x4B, 0x90, 0x52, 0x76, 0x02, 0x80, 0x53, 0x1C, 0x2D, 0x90, 
+0x54, 0x55, 0xE4, 0x80, 0x54, 0xFC, 0x0F, 0x90, 0x56, 0x35, 0xC6, 0x80, 0x56, 0xE5, 0x2C, 0x10, 
+0x58, 0x1E, 0xE3, 0x00, 0x58, 0xC5, 0x0E, 0x10, 0x59, 0xFE, 0xC5, 0x00, 0x5A, 0xA4, 0xF0, 0x10, 
+0x5B, 0xDE, 0xA7, 0x00, 0x5C, 0x84, 0xD2, 0x10, 0x5D, 0xBE, 0x89, 0x00, 0x5E, 0x64, 0xB4, 0x10, 
+0x5F, 0x9E, 0x6B, 0x00, 0x60, 0x4D, 0xD0, 0x90, 0x61, 0x87, 0x87, 0x80, 0x62, 0x2D, 0xB2, 0x90, 
+0x63, 0x67, 0x69, 0x80, 0x64, 0x0D, 0x94, 0x90, 0x65, 0x47, 0x4B, 0x80, 0x65, 0xED, 0x76, 0x90, 
+0x67, 0x27, 0x2D, 0x80, 0x67, 0xCD, 0x58, 0x90, 0x69, 0x07, 0x0F, 0x80, 0x69, 0xAD, 0x3A, 0x90, 
+0x6A, 0xE6, 0xF1, 0x80, 0x6B, 0x96, 0x57, 0x10, 0x6C, 0xD0, 0x0E, 0x00, 0x6D, 0x76, 0x39, 0x10, 
+0x6E, 0xAF, 0xF0, 0x00, 0x6F, 0x56, 0x1B, 0x10, 0x70, 0x8F, 0xD2, 0x00, 0x71, 0x35, 0xFD, 0x10, 
+0x72, 0x6F, 0xB4, 0x00, 0x73, 0x15, 0xDF, 0x10, 0x74, 0x4F, 0x96, 0x00, 0x74, 0xFE, 0xFB, 0x90, 
+0x76, 0x38, 0xB2, 0x80, 0x76, 0xDE, 0xDD, 0x90, 0x78, 0x18, 0x94, 0x80, 0x78, 0xBE, 0xBF, 0x90, 
+0x79, 0xF8, 0x76, 0x80, 0x7A, 0x9E, 0xA1, 0x90, 0x7B, 0xD8, 0x58, 0x80, 0x7C, 0x7E, 0x83, 0x90, 
+0x7D, 0xB8, 0x3A, 0x80, 0x7E, 0x5E, 0x65, 0x90, 0x7F, 0x98, 0x1C, 0x80, 0x02, 0x01, 0x02, 0x03, 
+0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 
+0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 
+0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 
+0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 
+0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 
+0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 
+0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 
+0x04, 0x03, 0x04, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xAB, 0xA0, 0x01, 0x04, 
+0xFF, 0xFF, 0x8F, 0x80, 0x00, 0x09, 0xFF, 0xFF, 0x9D, 0x90, 0x00, 0x0D, 0xFF, 0xFF, 0xAB, 0xA0, 
+0x01, 0x11, 0x7A, 0x7A, 0x7A, 0x00, 0x50, 0x44, 0x44, 0x54, 0x00, 0x50, 0x53, 0x54, 0x00, 0x4D, 
+0x53, 0x54, 0x00, 0x4D, 0x44, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 
 
 /* America/Iqaluit */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x7D, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1D, 0x9E, 0xB8, 0x93, 0x70, 
-0x9F, 0xBA, 0xEB, 0x60, 0xA0, 0xCF, 0xD4, 0x70, 0xA1, 0xA2, 0x9A, 0x40, 0xCB, 0x88, 0xF0, 0x70, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x21, 0xCC, 0x6C, 0xA1, 0x80, 
 0xD2, 0x23, 0xF4, 0x70, 0xD2, 0x60, 0xFB, 0xE0, 0xF7, 0x2F, 0x3E, 0x50, 0xF8, 0x28, 0x69, 0xD0, 
 0x13, 0x69, 0x47, 0xF0, 0x14, 0x59, 0x2A, 0xE0, 0x15, 0x49, 0x29, 0xF0, 0x16, 0x39, 0x0C, 0xE0, 
 0x17, 0x29, 0x0B, 0xF0, 0x18, 0x22, 0x29, 0x60, 0x19, 0x08, 0xED, 0xF0, 0x1A, 0x02, 0x0B, 0x60, 
@@ -3602,20 +3599,20 @@ const unsigned char timelib_timezone_db_
 0x74, 0xFE, 0xDF, 0x70, 0x76, 0x38, 0x96, 0x60, 0x76, 0xDE, 0xC1, 0x70, 0x78, 0x18, 0x78, 0x60, 
 0x78, 0xBE, 0xA3, 0x70, 0x79, 0xF8, 0x5A, 0x60, 0x7A, 0x9E, 0x85, 0x70, 0x7B, 0xD8, 0x3C, 0x60, 
 0x7C, 0x7E, 0x67, 0x70, 0x7D, 0xB8, 0x1E, 0x60, 0x7E, 0x5E, 0x49, 0x70, 0x7F, 0x98, 0x00, 0x60, 
-0x00, 0x01, 0x00, 0x01, 0x02, 0x03, 0x01, 0x04, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x05, 0x06, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xFF, 0xFF, 0xC7, 
-0xC0, 0x01, 0x00, 0xFF, 0xFF, 0xB9, 0xB0, 0x00, 0x04, 0xFF, 0xFF, 0xC7, 0xC0, 0x01, 0x08, 0xFF, 
-0xFF, 0xC7, 0xC0, 0x01, 0x0C, 0xFF, 0xFF, 0xD5, 0xD0, 0x01, 0x10, 0xFF, 0xFF, 0xAB, 0xA0, 0x00, 
-0x15, 0xFF, 0xFF, 0xB9, 0xB0, 0x01, 0x19, 0x45, 0x44, 0x54, 0x00, 0x45, 0x53, 0x54, 0x00, 0x45, 
-0x57, 0x54, 0x00, 0x45, 0x50, 0x54, 0x00, 0x45, 0x44, 0x44, 0x54, 0x00, 0x43, 0x53, 0x54, 0x00, 
-0x43, 0x44, 0x54, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 
-0x00, 0x00, 
+0x05, 0x01, 0x02, 0x03, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 
+0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 
+0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x06, 0x07, 0x02, 0x04, 
+0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 
+0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 
+0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 
+0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 
+0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
+0xFF, 0xC7, 0xC0, 0x01, 0x04, 0xFF, 0xFF, 0xB9, 0xB0, 0x00, 0x08, 0xFF, 0xFF, 0xD5, 0xD0, 0x01, 
+0x0C, 0xFF, 0xFF, 0xC7, 0xC0, 0x01, 0x11, 0xFF, 0xFF, 0xC7, 0xC0, 0x01, 0x15, 0xFF, 0xFF, 0xAB, 
+0xA0, 0x00, 0x19, 0xFF, 0xFF, 0xB9, 0xB0, 0x01, 0x1D, 0x7A, 0x7A, 0x7A, 0x00, 0x45, 0x50, 0x54, 
+0x00, 0x45, 0x53, 0x54, 0x00, 0x45, 0x44, 0x44, 0x54, 0x00, 0x45, 0x44, 0x54, 0x00, 0x45, 0x57, 
+0x54, 0x00, 0x43, 0x53, 0x54, 0x00, 0x43, 0x44, 0x54, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 
 /* America/Jamaica */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
@@ -4968,54 +4965,54 @@ const unsigned char timelib_timezone_db_
 
 /* America/Pangnirtung */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x7D, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x25, 0x9E, 0xB8, 0x85, 0x60, 
-0x9F, 0xBA, 0xDD, 0x50, 0xA0, 0xCF, 0xC6, 0x60, 0xA1, 0xA2, 0x8C, 0x30, 0xCB, 0x88, 0xE2, 0x60, 
-0xD2, 0x23, 0xF4, 0x70, 0xD2, 0x60, 0xED, 0xD0, 0xF7, 0x2F, 0x30, 0x40, 0xF8, 0x28, 0x5B, 0xC0, 
-0x13, 0x69, 0x39, 0xE0, 0x14, 0x59, 0x1C, 0xD0, 0x15, 0x49, 0x1B, 0xE0, 0x16, 0x38, 0xFE, 0xD0, 
-0x17, 0x28, 0xFD, 0xE0, 0x18, 0x22, 0x1B, 0x50, 0x19, 0x08, 0xDF, 0xE0, 0x1A, 0x01, 0xFD, 0x50, 
-0x1A, 0xF1, 0xFC, 0x60, 0x1B, 0xE1, 0xDF, 0x50, 0x1C, 0xD1, 0xDE, 0x60, 0x1D, 0xC1, 0xC1, 0x50, 
-0x1E, 0xB1, 0xC0, 0x60, 0x1F, 0xA1, 0xA3, 0x50, 0x20, 0x75, 0xF2, 0xE0, 0x21, 0x81, 0x85, 0x50, 
-0x22, 0x55, 0xD4, 0xE0, 0x23, 0x6A, 0xA1, 0xD0, 0x24, 0x35, 0xB6, 0xE0, 0x25, 0x4A, 0x83, 0xD0, 
-0x26, 0x15, 0x98, 0xE0, 0x27, 0x2A, 0x65, 0xD0, 0x27, 0xFE, 0xB5, 0x60, 0x29, 0x0A, 0x47, 0xD0, 
-0x29, 0xDE, 0x97, 0x60, 0x2A, 0xEA, 0x29, 0xD0, 0x2B, 0xBE, 0x79, 0x60, 0x2C, 0xD3, 0x46, 0x50, 
-0x2D, 0x9E, 0x5B, 0x60, 0x2E, 0xB3, 0x28, 0x50, 0x2F, 0x7E, 0x3D, 0x60, 0x30, 0x93, 0x18, 0x60, 
-0x31, 0x67, 0x67, 0xF0, 0x32, 0x72, 0xFA, 0x60, 0x33, 0x47, 0x49, 0xF0, 0x34, 0x52, 0xDC, 0x60, 
-0x35, 0x27, 0x2B, 0xF0, 0x36, 0x32, 0xBE, 0x60, 0x37, 0x07, 0x0D, 0xF0, 0x38, 0x1B, 0xDA, 0xE0, 
-0x38, 0xE6, 0xFE, 0x00, 0x39, 0xFB, 0xCA, 0xF0, 0x3A, 0xC6, 0xD1, 0xF0, 0x3B, 0xDB, 0x9E, 0xE0, 
-0x3C, 0xAF, 0xEE, 0x70, 0x3D, 0xBB, 0x80, 0xE0, 0x3E, 0x8F, 0xD0, 0x70, 0x3F, 0x9B, 0x62, 0xE0, 
-0x40, 0x6F, 0xB2, 0x70, 0x41, 0x84, 0x7F, 0x60, 0x42, 0x4F, 0x94, 0x70, 0x43, 0x64, 0x61, 0x60, 
-0x44, 0x2F, 0x76, 0x70, 0x45, 0x44, 0x43, 0x60, 0x45, 0xF3, 0xA8, 0xF0, 0x47, 0x2D, 0x5F, 0xE0, 
-0x47, 0xD3, 0x8A, 0xF0, 0x49, 0x0D, 0x41, 0xE0, 0x49, 0xB3, 0x6C, 0xF0, 0x4A, 0xED, 0x23, 0xE0, 
-0x4B, 0x9C, 0x89, 0x70, 0x4C, 0xD6, 0x40, 0x60, 0x4D, 0x7C, 0x6B, 0x70, 0x4E, 0xB6, 0x22, 0x60, 
-0x4F, 0x5C, 0x4D, 0x70, 0x50, 0x96, 0x04, 0x60, 0x51, 0x3C, 0x2F, 0x70, 0x52, 0x75, 0xE6, 0x60, 
-0x53, 0x1C, 0x11, 0x70, 0x54, 0x55, 0xC8, 0x60, 0x54, 0xFB, 0xF3, 0x70, 0x56, 0x35, 0xAA, 0x60, 
-0x56, 0xE5, 0x0F, 0xF0, 0x58, 0x1E, 0xC6, 0xE0, 0x58, 0xC4, 0xF1, 0xF0, 0x59, 0xFE, 0xA8, 0xE0, 
-0x5A, 0xA4, 0xD3, 0xF0, 0x5B, 0xDE, 0x8A, 0xE0, 0x5C, 0x84, 0xB5, 0xF0, 0x5D, 0xBE, 0x6C, 0xE0, 
-0x5E, 0x64, 0x97, 0xF0, 0x5F, 0x9E, 0x4E, 0xE0, 0x60, 0x4D, 0xB4, 0x70, 0x61, 0x87, 0x6B, 0x60, 
-0x62, 0x2D, 0x96, 0x70, 0x63, 0x67, 0x4D, 0x60, 0x64, 0x0D, 0x78, 0x70, 0x65, 0x47, 0x2F, 0x60, 
-0x65, 0xED, 0x5A, 0x70, 0x67, 0x27, 0x11, 0x60, 0x67, 0xCD, 0x3C, 0x70, 0x69, 0x06, 0xF3, 0x60, 
-0x69, 0xAD, 0x1E, 0x70, 0x6A, 0xE6, 0xD5, 0x60, 0x6B, 0x96, 0x3A, 0xF0, 0x6C, 0xCF, 0xF1, 0xE0, 
-0x6D, 0x76, 0x1C, 0xF0, 0x6E, 0xAF, 0xD3, 0xE0, 0x6F, 0x55, 0xFE, 0xF0, 0x70, 0x8F, 0xB5, 0xE0, 
-0x71, 0x35, 0xE0, 0xF0, 0x72, 0x6F, 0x97, 0xE0, 0x73, 0x15, 0xC2, 0xF0, 0x74, 0x4F, 0x79, 0xE0, 
-0x74, 0xFE, 0xDF, 0x70, 0x76, 0x38, 0x96, 0x60, 0x76, 0xDE, 0xC1, 0x70, 0x78, 0x18, 0x78, 0x60, 
-0x78, 0xBE, 0xA3, 0x70, 0x79, 0xF8, 0x5A, 0x60, 0x7A, 0x9E, 0x85, 0x70, 0x7B, 0xD8, 0x3C, 0x60, 
-0x7C, 0x7E, 0x67, 0x70, 0x7D, 0xB8, 0x1E, 0x60, 0x7E, 0x5E, 0x49, 0x70, 0x7F, 0x98, 0x00, 0x60, 
-0x00, 0x01, 0x00, 0x01, 0x02, 0x03, 0x01, 0x04, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 
-0x07, 0x08, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 
-0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 
-0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 
-0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 
-0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0xFF, 0xFF, 0xD5, 
-0xD0, 0x01, 0x00, 0xFF, 0xFF, 0xC7, 0xC0, 0x00, 0x04, 0xFF, 0xFF, 0xD5, 0xD0, 0x01, 0x08, 0xFF, 
-0xFF, 0xD5, 0xD0, 0x01, 0x0C, 0xFF, 0xFF, 0xE3, 0xE0, 0x01, 0x10, 0xFF, 0xFF, 0xC7, 0xC0, 0x01, 
-0x15, 0xFF, 0xFF, 0xB9, 0xB0, 0x00, 0x19, 0xFF, 0xFF, 0xAB, 0xA0, 0x00, 0x1D, 0xFF, 0xFF, 0xB9, 
-0xB0, 0x01, 0x21, 0x41, 0x44, 0x54, 0x00, 0x41, 0x53, 0x54, 0x00, 0x41, 0x57, 0x54, 0x00, 0x41, 
-0x50, 0x54, 0x00, 0x41, 0x44, 0x44, 0x54, 0x00, 0x45, 0x44, 0x54, 0x00, 0x45, 0x53, 0x54, 0x00, 
-0x43, 0x53, 0x54, 0x00, 0x43, 0x44, 0x54, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x7A, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x29, 0xA3, 0xD5, 0x52, 0x80, 
+0xCB, 0x88, 0xE2, 0x60, 0xD2, 0x23, 0xF4, 0x70, 0xD2, 0x60, 0xED, 0xD0, 0xF7, 0x2F, 0x30, 0x40, 
+0xF8, 0x28, 0x5B, 0xC0, 0x13, 0x69, 0x39, 0xE0, 0x14, 0x59, 0x1C, 0xD0, 0x15, 0x49, 0x1B, 0xE0, 
+0x16, 0x38, 0xFE, 0xD0, 0x17, 0x28, 0xFD, 0xE0, 0x18, 0x22, 0x1B, 0x50, 0x19, 0x08, 0xDF, 0xE0, 
+0x1A, 0x01, 0xFD, 0x50, 0x1A, 0xF1, 0xFC, 0x60, 0x1B, 0xE1, 0xDF, 0x50, 0x1C, 0xD1, 0xDE, 0x60, 
+0x1D, 0xC1, 0xC1, 0x50, 0x1E, 0xB1, 0xC0, 0x60, 0x1F, 0xA1, 0xA3, 0x50, 0x20, 0x75, 0xF2, 0xE0, 
+0x21, 0x81, 0x85, 0x50, 0x22, 0x55, 0xD4, 0xE0, 0x23, 0x6A, 0xA1, 0xD0, 0x24, 0x35, 0xB6, 0xE0, 
+0x25, 0x4A, 0x83, 0xD0, 0x26, 0x15, 0x98, 0xE0, 0x27, 0x2A, 0x65, 0xD0, 0x27, 0xFE, 0xB5, 0x60, 
+0x29, 0x0A, 0x47, 0xD0, 0x29, 0xDE, 0x97, 0x60, 0x2A, 0xEA, 0x29, 0xD0, 0x2B, 0xBE, 0x79, 0x60, 
+0x2C, 0xD3, 0x46, 0x50, 0x2D, 0x9E, 0x5B, 0x60, 0x2E, 0xB3, 0x28, 0x50, 0x2F, 0x7E, 0x3D, 0x60, 
+0x30, 0x93, 0x18, 0x60, 0x31, 0x67, 0x67, 0xF0, 0x32, 0x72, 0xFA, 0x60, 0x33, 0x47, 0x49, 0xF0, 
+0x34, 0x52, 0xDC, 0x60, 0x35, 0x27, 0x2B, 0xF0, 0x36, 0x32, 0xBE, 0x60, 0x37, 0x07, 0x0D, 0xF0, 
+0x38, 0x1B, 0xDA, 0xE0, 0x38, 0xE6, 0xFE, 0x00, 0x39, 0xFB, 0xCA, 0xF0, 0x3A, 0xC6, 0xD1, 0xF0, 
+0x3B, 0xDB, 0x9E, 0xE0, 0x3C, 0xAF, 0xEE, 0x70, 0x3D, 0xBB, 0x80, 0xE0, 0x3E, 0x8F, 0xD0, 0x70, 
+0x3F, 0x9B, 0x62, 0xE0, 0x40, 0x6F, 0xB2, 0x70, 0x41, 0x84, 0x7F, 0x60, 0x42, 0x4F, 0x94, 0x70, 
+0x43, 0x64, 0x61, 0x60, 0x44, 0x2F, 0x76, 0x70, 0x45, 0x44, 0x43, 0x60, 0x45, 0xF3, 0xA8, 0xF0, 
+0x47, 0x2D, 0x5F, 0xE0, 0x47, 0xD3, 0x8A, 0xF0, 0x49, 0x0D, 0x41, 0xE0, 0x49, 0xB3, 0x6C, 0xF0, 
+0x4A, 0xED, 0x23, 0xE0, 0x4B, 0x9C, 0x89, 0x70, 0x4C, 0xD6, 0x40, 0x60, 0x4D, 0x7C, 0x6B, 0x70, 
+0x4E, 0xB6, 0x22, 0x60, 0x4F, 0x5C, 0x4D, 0x70, 0x50, 0x96, 0x04, 0x60, 0x51, 0x3C, 0x2F, 0x70, 
+0x52, 0x75, 0xE6, 0x60, 0x53, 0x1C, 0x11, 0x70, 0x54, 0x55, 0xC8, 0x60, 0x54, 0xFB, 0xF3, 0x70, 
+0x56, 0x35, 0xAA, 0x60, 0x56, 0xE5, 0x0F, 0xF0, 0x58, 0x1E, 0xC6, 0xE0, 0x58, 0xC4, 0xF1, 0xF0, 
+0x59, 0xFE, 0xA8, 0xE0, 0x5A, 0xA4, 0xD3, 0xF0, 0x5B, 0xDE, 0x8A, 0xE0, 0x5C, 0x84, 0xB5, 0xF0, 
+0x5D, 0xBE, 0x6C, 0xE0, 0x5E, 0x64, 0x97, 0xF0, 0x5F, 0x9E, 0x4E, 0xE0, 0x60, 0x4D, 0xB4, 0x70, 
+0x61, 0x87, 0x6B, 0x60, 0x62, 0x2D, 0x96, 0x70, 0x63, 0x67, 0x4D, 0x60, 0x64, 0x0D, 0x78, 0x70, 
+0x65, 0x47, 0x2F, 0x60, 0x65, 0xED, 0x5A, 0x70, 0x67, 0x27, 0x11, 0x60, 0x67, 0xCD, 0x3C, 0x70, 
+0x69, 0x06, 0xF3, 0x60, 0x69, 0xAD, 0x1E, 0x70, 0x6A, 0xE6, 0xD5, 0x60, 0x6B, 0x96, 0x3A, 0xF0, 
+0x6C, 0xCF, 0xF1, 0xE0, 0x6D, 0x76, 0x1C, 0xF0, 0x6E, 0xAF, 0xD3, 0xE0, 0x6F, 0x55, 0xFE, 0xF0, 
+0x70, 0x8F, 0xB5, 0xE0, 0x71, 0x35, 0xE0, 0xF0, 0x72, 0x6F, 0x97, 0xE0, 0x73, 0x15, 0xC2, 0xF0, 
+0x74, 0x4F, 0x79, 0xE0, 0x74, 0xFE, 0xDF, 0x70, 0x76, 0x38, 0x96, 0x60, 0x76, 0xDE, 0xC1, 0x70, 
+0x78, 0x18, 0x78, 0x60, 0x78, 0xBE, 0xA3, 0x70, 0x79, 0xF8, 0x5A, 0x60, 0x7A, 0x9E, 0x85, 0x70, 
+0x7B, 0xD8, 0x3C, 0x60, 0x7C, 0x7E, 0x67, 0x70, 0x7D, 0xB8, 0x1E, 0x60, 0x7E, 0x5E, 0x49, 0x70, 
+0x7F, 0x98, 0x00, 0x60, 0x03, 0x01, 0x02, 0x03, 0x04, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 
+0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 
+0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 
+0x06, 0x08, 0x09, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 
+0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 
+0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 
+0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 
+0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x06, 0x07, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xD5, 0xD0, 0x01, 0x04, 0xFF, 0xFF, 0xD5, 0xD0, 0x01, 0x08, 
+0xFF, 0xFF, 0xC7, 0xC0, 0x00, 0x0C, 0xFF, 0xFF, 0xE3, 0xE0, 0x01, 0x10, 0xFF, 0xFF, 0xD5, 0xD0, 
+0x01, 0x15, 0xFF, 0xFF, 0xC7, 0xC0, 0x01, 0x19, 0xFF, 0xFF, 0xB9, 0xB0, 0x00, 0x1D, 0xFF, 0xFF, 
+0xAB, 0xA0, 0x00, 0x21, 0xFF, 0xFF, 0xB9, 0xB0, 0x01, 0x25, 0x7A, 0x7A, 0x7A, 0x00, 0x41, 0x57, 
+0x54, 0x00, 0x41, 0x50, 0x54, 0x00, 0x41, 0x53, 0x54, 0x00, 0x41, 0x44, 0x44, 0x54, 0x00, 0x41, 
+0x44, 0x54, 0x00, 0x45, 0x44, 0x54, 0x00, 0x45, 0x53, 0x54, 0x00, 0x43, 0x53, 0x54, 0x00, 0x43, 
+0x44, 0x54, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 
 /* America/Paramaribo */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
@@ -5179,52 +5176,49 @@ const unsigned char timelib_timezone_db_
 
 /* America/Rankin_Inlet */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x7D, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x19, 0x9E, 0xB8, 0xA1, 0x80, 
-0x9F, 0xBA, 0xF9, 0x70, 0xA0, 0xCF, 0xE2, 0x80, 0xA1, 0xA2, 0xA8, 0x50, 0xCB, 0x88, 0xFE, 0x80, 
-0xD2, 0x23, 0xF4, 0x70, 0xD2, 0x61, 0x09, 0xF0, 0xF7, 0x2F, 0x4C, 0x60, 0xF8, 0x28, 0x77, 0xE0, 
-0x13, 0x69, 0x56, 0x00, 0x14, 0x59, 0x38, 0xF0, 0x15, 0x49, 0x38, 0x00, 0x16, 0x39, 0x1A, 0xF0, 
-0x17, 0x29, 0x1A, 0x00, 0x18, 0x22, 0x37, 0x70, 0x19, 0x08, 0xFC, 0x00, 0x1A, 0x02, 0x19, 0x70, 
-0x1A, 0xF2, 0x18, 0x80, 0x1B, 0xE1, 0xFB, 0x70, 0x1C, 0xD1, 0xFA, 0x80, 0x1D, 0xC1, 0xDD, 0x70, 
-0x1E, 0xB1, 0xDC, 0x80, 0x1F, 0xA1, 0xBF, 0x70, 0x20, 0x76, 0x0F, 0x00, 0x21, 0x81, 0xA1, 0x70, 
-0x22, 0x55, 0xF1, 0x00, 0x23, 0x6A, 0xBD, 0xF0, 0x24, 0x35, 0xD3, 0x00, 0x25, 0x4A, 0x9F, 0xF0, 
-0x26, 0x15, 0xB5, 0x00, 0x27, 0x2A, 0x81, 0xF0, 0x27, 0xFE, 0xD1, 0x80, 0x29, 0x0A, 0x63, 0xF0, 
-0x29, 0xDE, 0xB3, 0x80, 0x2A, 0xEA, 0x45, 0xF0, 0x2B, 0xBE, 0x95, 0x80, 0x2C, 0xD3, 0x62, 0x70, 
-0x2D, 0x9E, 0x77, 0x80, 0x2E, 0xB3, 0x44, 0x70, 0x2F, 0x7E, 0x59, 0x80, 0x30, 0x93, 0x26, 0x70, 
-0x31, 0x67, 0x76, 0x00, 0x32, 0x73, 0x08, 0x70, 0x33, 0x47, 0x58, 0x00, 0x34, 0x52, 0xEA, 0x70, 
-0x35, 0x27, 0x3A, 0x00, 0x36, 0x32, 0xCC, 0x70, 0x37, 0x07, 0x1C, 0x00, 0x38, 0x1B, 0xE8, 0xF0, 
-0x38, 0xE6, 0xFE, 0x00, 0x39, 0xFB, 0xCA, 0xF0, 0x3A, 0xC6, 0xE0, 0x00, 0x3B, 0xDB, 0xAC, 0xF0, 
-0x3C, 0xAF, 0xFC, 0x80, 0x3D, 0xBB, 0x8E, 0xF0, 0x3E, 0x8F, 0xDE, 0x80, 0x3F, 0x9B, 0x70, 0xF0, 
-0x40, 0x6F, 0xC0, 0x80, 0x41, 0x84, 0x8D, 0x70, 0x42, 0x4F, 0xA2, 0x80, 0x43, 0x64, 0x6F, 0x70, 
-0x44, 0x2F, 0x84, 0x80, 0x45, 0x44, 0x51, 0x70, 0x45, 0xF3, 0xB7, 0x00, 0x47, 0x2D, 0x6D, 0xF0, 
-0x47, 0xD3, 0x99, 0x00, 0x49, 0x0D, 0x4F, 0xF0, 0x49, 0xB3, 0x7B, 0x00, 0x4A, 0xED, 0x31, 0xF0, 
-0x4B, 0x9C, 0x97, 0x80, 0x4C, 0xD6, 0x4E, 0x70, 0x4D, 0x7C, 0x79, 0x80, 0x4E, 0xB6, 0x30, 0x70, 
-0x4F, 0x5C, 0x5B, 0x80, 0x50, 0x96, 0x12, 0x70, 0x51, 0x3C, 0x3D, 0x80, 0x52, 0x75, 0xF4, 0x70, 
-0x53, 0x1C, 0x1F, 0x80, 0x54, 0x55, 0xD6, 0x70, 0x54, 0xFC, 0x01, 0x80, 0x56, 0x35, 0xB8, 0x70, 
-0x56, 0xE5, 0x1E, 0x00, 0x58, 0x1E, 0xD4, 0xF0, 0x58, 0xC5, 0x00, 0x00, 0x59, 0xFE, 0xB6, 0xF0, 
-0x5A, 0xA4, 0xE2, 0x00, 0x5B, 0xDE, 0x98, 0xF0, 0x5C, 0x84, 0xC4, 0x00, 0x5D, 0xBE, 0x7A, 0xF0, 
-0x5E, 0x64, 0xA6, 0x00, 0x5F, 0x9E, 0x5C, 0xF0, 0x60, 0x4D, 0xC2, 0x80, 0x61, 0x87, 0x79, 0x70, 
-0x62, 0x2D, 0xA4, 0x80, 0x63, 0x67, 0x5B, 0x70, 0x64, 0x0D, 0x86, 0x80, 0x65, 0x47, 0x3D, 0x70, 
-0x65, 0xED, 0x68, 0x80, 0x67, 0x27, 0x1F, 0x70, 0x67, 0xCD, 0x4A, 0x80, 0x69, 0x07, 0x01, 0x70, 
-0x69, 0xAD, 0x2C, 0x80, 0x6A, 0xE6, 0xE3, 0x70, 0x6B, 0x96, 0x49, 0x00, 0x6C, 0xCF, 0xFF, 0xF0, 
-0x6D, 0x76, 0x2B, 0x00, 0x6E, 0xAF, 0xE1, 0xF0, 0x6F, 0x56, 0x0D, 0x00, 0x70, 0x8F, 0xC3, 0xF0, 
-0x71, 0x35, 0xEF, 0x00, 0x72, 0x6F, 0xA5, 0xF0, 0x73, 0x15, 0xD1, 0x00, 0x74, 0x4F, 0x87, 0xF0, 
-0x74, 0xFE, 0xED, 0x80, 0x76, 0x38, 0xA4, 0x70, 0x76, 0xDE, 0xCF, 0x80, 0x78, 0x18, 0x86, 0x70, 
-0x78, 0xBE, 0xB1, 0x80, 0x79, 0xF8, 0x68, 0x70, 0x7A, 0x9E, 0x93, 0x80, 0x7B, 0xD8, 0x4A, 0x70, 
-0x7C, 0x7E, 0x75, 0x80, 0x7D, 0xB8, 0x2C, 0x70, 0x7E, 0x5E, 0x57, 0x80, 0x7F, 0x98, 0x0E, 0x70, 
-0x00, 0x01, 0x00, 0x01, 0x02, 0x03, 0x01, 0x04, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x05, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xFF, 0xFF, 0xB9, 
-0xB0, 0x01, 0x00, 0xFF, 0xFF, 0xAB, 0xA0, 0x00, 0x04, 0xFF, 0xFF, 0xB9, 0xB0, 0x01, 0x08, 0xFF, 
-0xFF, 0xB9, 0xB0, 0x01, 0x0C, 0xFF, 0xFF, 0xC7, 0xC0, 0x01, 0x10, 0xFF, 0xFF, 0xB9, 0xB0, 0x00, 
-0x15, 0x43, 0x44, 0x54, 0x00, 0x43, 0x53, 0x54, 0x00, 0x43, 0x57, 0x54, 0x00, 0x43, 0x50, 0x54, 
-0x00, 0x43, 0x44, 0x44, 0x54, 0x00, 0x45, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x15, 0xE7, 0x8C, 0x6E, 0x00, 
+0xF7, 0x2F, 0x4C, 0x60, 0xF8, 0x28, 0x77, 0xE0, 0x13, 0x69, 0x56, 0x00, 0x14, 0x59, 0x38, 0xF0, 
+0x15, 0x49, 0x38, 0x00, 0x16, 0x39, 0x1A, 0xF0, 0x17, 0x29, 0x1A, 0x00, 0x18, 0x22, 0x37, 0x70, 
+0x19, 0x08, 0xFC, 0x00, 0x1A, 0x02, 0x19, 0x70, 0x1A, 0xF2, 0x18, 0x80, 0x1B, 0xE1, 0xFB, 0x70, 
+0x1C, 0xD1, 0xFA, 0x80, 0x1D, 0xC1, 0xDD, 0x70, 0x1E, 0xB1, 0xDC, 0x80, 0x1F, 0xA1, 0xBF, 0x70, 
+0x20, 0x76, 0x0F, 0x00, 0x21, 0x81, 0xA1, 0x70, 0x22, 0x55, 0xF1, 0x00, 0x23, 0x6A, 0xBD, 0xF0, 
+0x24, 0x35, 0xD3, 0x00, 0x25, 0x4A, 0x9F, 0xF0, 0x26, 0x15, 0xB5, 0x00, 0x27, 0x2A, 0x81, 0xF0, 
+0x27, 0xFE, 0xD1, 0x80, 0x29, 0x0A, 0x63, 0xF0, 0x29, 0xDE, 0xB3, 0x80, 0x2A, 0xEA, 0x45, 0xF0, 
+0x2B, 0xBE, 0x95, 0x80, 0x2C, 0xD3, 0x62, 0x70, 0x2D, 0x9E, 0x77, 0x80, 0x2E, 0xB3, 0x44, 0x70, 
+0x2F, 0x7E, 0x59, 0x80, 0x30, 0x93, 0x26, 0x70, 0x31, 0x67, 0x76, 0x00, 0x32, 0x73, 0x08, 0x70, 
+0x33, 0x47, 0x58, 0x00, 0x34, 0x52, 0xEA, 0x70, 0x35, 0x27, 0x3A, 0x00, 0x36, 0x32, 0xCC, 0x70, 
+0x37, 0x07, 0x1C, 0x00, 0x38, 0x1B, 0xE8, 0xF0, 0x38, 0xE6, 0xFE, 0x00, 0x39, 0xFB, 0xCA, 0xF0, 
+0x3A, 0xC6, 0xE0, 0x00, 0x3B, 0xDB, 0xAC, 0xF0, 0x3C, 0xAF, 0xFC, 0x80, 0x3D, 0xBB, 0x8E, 0xF0, 
+0x3E, 0x8F, 0xDE, 0x80, 0x3F, 0x9B, 0x70, 0xF0, 0x40, 0x6F, 0xC0, 0x80, 0x41, 0x84, 0x8D, 0x70, 
+0x42, 0x4F, 0xA2, 0x80, 0x43, 0x64, 0x6F, 0x70, 0x44, 0x2F, 0x84, 0x80, 0x45, 0x44, 0x51, 0x70, 
+0x45, 0xF3, 0xB7, 0x00, 0x47, 0x2D, 0x6D, 0xF0, 0x47, 0xD3, 0x99, 0x00, 0x49, 0x0D, 0x4F, 0xF0, 
+0x49, 0xB3, 0x7B, 0x00, 0x4A, 0xED, 0x31, 0xF0, 0x4B, 0x9C, 0x97, 0x80, 0x4C, 0xD6, 0x4E, 0x70, 
+0x4D, 0x7C, 0x79, 0x80, 0x4E, 0xB6, 0x30, 0x70, 0x4F, 0x5C, 0x5B, 0x80, 0x50, 0x96, 0x12, 0x70, 
+0x51, 0x3C, 0x3D, 0x80, 0x52, 0x75, 0xF4, 0x70, 0x53, 0x1C, 0x1F, 0x80, 0x54, 0x55, 0xD6, 0x70, 
+0x54, 0xFC, 0x01, 0x80, 0x56, 0x35, 0xB8, 0x70, 0x56, 0xE5, 0x1E, 0x00, 0x58, 0x1E, 0xD4, 0xF0, 
+0x58, 0xC5, 0x00, 0x00, 0x59, 0xFE, 0xB6, 0xF0, 0x5A, 0xA4, 0xE2, 0x00, 0x5B, 0xDE, 0x98, 0xF0, 
+0x5C, 0x84, 0xC4, 0x00, 0x5D, 0xBE, 0x7A, 0xF0, 0x5E, 0x64, 0xA6, 0x00, 0x5F, 0x9E, 0x5C, 0xF0, 
+0x60, 0x4D, 0xC2, 0x80, 0x61, 0x87, 0x79, 0x70, 0x62, 0x2D, 0xA4, 0x80, 0x63, 0x67, 0x5B, 0x70, 
+0x64, 0x0D, 0x86, 0x80, 0x65, 0x47, 0x3D, 0x70, 0x65, 0xED, 0x68, 0x80, 0x67, 0x27, 0x1F, 0x70, 
+0x67, 0xCD, 0x4A, 0x80, 0x69, 0x07, 0x01, 0x70, 0x69, 0xAD, 0x2C, 0x80, 0x6A, 0xE6, 0xE3, 0x70, 
+0x6B, 0x96, 0x49, 0x00, 0x6C, 0xCF, 0xFF, 0xF0, 0x6D, 0x76, 0x2B, 0x00, 0x6E, 0xAF, 0xE1, 0xF0, 
+0x6F, 0x56, 0x0D, 0x00, 0x70, 0x8F, 0xC3, 0xF0, 0x71, 0x35, 0xEF, 0x00, 0x72, 0x6F, 0xA5, 0xF0, 
+0x73, 0x15, 0xD1, 0x00, 0x74, 0x4F, 0x87, 0xF0, 0x74, 0xFE, 0xED, 0x80, 0x76, 0x38, 0xA4, 0x70, 
+0x76, 0xDE, 0xCF, 0x80, 0x78, 0x18, 0x86, 0x70, 0x78, 0xBE, 0xB1, 0x80, 0x79, 0xF8, 0x68, 0x70, 
+0x7A, 0x9E, 0x93, 0x80, 0x7B, 0xD8, 0x4A, 0x70, 0x7C, 0x7E, 0x75, 0x80, 0x7D, 0xB8, 0x2C, 0x70, 
+0x7E, 0x5E, 0x57, 0x80, 0x7F, 0x98, 0x0E, 0x70, 0x02, 0x01, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
+0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
+0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
+0x02, 0x03, 0x02, 0x03, 0x04, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
+0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
+0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
+0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
+0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xC7, 0xC0, 0x01, 0x04, 0xFF, 0xFF, 0xAB, 0xA0, 0x00, 
+0x09, 0xFF, 0xFF, 0xB9, 0xB0, 0x01, 0x0D, 0xFF, 0xFF, 0xB9, 0xB0, 0x00, 0x11, 0x7A, 0x7A, 0x7A, 
+0x00, 0x43, 0x44, 0x44, 0x54, 0x00, 0x43, 0x53, 0x54, 0x00, 0x43, 0x44, 0x54, 0x00, 0x45, 0x53, 
+0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 
 /* America/Recife */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
@@ -5272,6 +5266,33 @@ const unsigned char timelib_timezone_db_
 0x00, 0x4D, 0x53, 0x54, 0x00, 0x4D, 0x57, 0x54, 0x00, 0x4D, 0x50, 0x54, 0x00, 0x43, 0x53, 0x54, 
 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 
 
+/* America/Resolute */
+0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x15, 0xD5, 0xFB, 0x81, 0x80, 
+0xF7, 0x2F, 0x4C, 0x60, 0xF8, 0x28, 0x77, 0xE0, 0x13, 0x69, 0x56, 0x00, 0x14, 0x59, 0x38, 0xF0, 
+0x15, 0x49, 0x38, 0x00, 0x16, 0x39, 0x1A, 0xF0, 0x17, 0x29, 0x1A, 0x00, 0x18, 0x22, 0x37, 0x70, 
+0x19, 0x08, 0xFC, 0x00, 0x1A, 0x02, 0x19, 0x70, 0x1A, 0xF2, 0x18, 0x80, 0x1B, 0xE1, 0xFB, 0x70, 
+0x1C, 0xD1, 0xFA, 0x80, 0x1D, 0xC1, 0xDD, 0x70, 0x1E, 0xB1, 0xDC, 0x80, 0x1F, 0xA1, 0xBF, 0x70, 
+0x20, 0x76, 0x0F, 0x00, 0x21, 0x81, 0xA1, 0x70, 0x22, 0x55, 0xF1, 0x00, 0x23, 0x6A, 0xBD, 0xF0, 
+0x24, 0x35, 0xD3, 0x00, 0x25, 0x4A, 0x9F, 0xF0, 0x26, 0x15, 0xB5, 0x00, 0x27, 0x2A, 0x81, 0xF0, 
+0x27, 0xFE, 0xD1, 0x80, 0x29, 0x0A, 0x63, 0xF0, 0x29, 0xDE, 0xB3, 0x80, 0x2A, 0xEA, 0x45, 0xF0, 
+0x2B, 0xBE, 0x95, 0x80, 0x2C, 0xD3, 0x62, 0x70, 0x2D, 0x9E, 0x77, 0x80, 0x2E, 0xB3, 0x44, 0x70, 
+0x2F, 0x7E, 0x59, 0x80, 0x30, 0x93, 0x26, 0x70, 0x31, 0x67, 0x76, 0x00, 0x32, 0x73, 0x08, 0x70, 
+0x33, 0x47, 0x58, 0x00, 0x34, 0x52, 0xEA, 0x70, 0x35, 0x27, 0x3A, 0x00, 0x36, 0x32, 0xCC, 0x70, 
+0x37, 0x07, 0x1C, 0x00, 0x38, 0x1B, 0xE8, 0xF0, 0x38, 0xE6, 0xFE, 0x00, 0x39, 0xFB, 0xCA, 0xF0, 
+0x3A, 0xC6, 0xE0, 0x00, 0x3B, 0xDB, 0xAC, 0xF0, 0x3C, 0xAF, 0xFC, 0x80, 0x3D, 0xBB, 0x8E, 0xF0, 
+0x3E, 0x8F, 0xDE, 0x80, 0x3F, 0x9B, 0x70, 0xF0, 0x40, 0x6F, 0xC0, 0x80, 0x41, 0x84, 0x8D, 0x70, 
+0x42, 0x4F, 0xA2, 0x80, 0x43, 0x64, 0x6F, 0x70, 0x44, 0x2F, 0x84, 0x80, 0x45, 0x44, 0x51, 0x70, 
+0x02, 0x01, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
+0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
+0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x04, 0x03, 0x02, 0x03, 
+0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
+0xFF, 0xC7, 0xC0, 0x01, 0x04, 0xFF, 0xFF, 0xAB, 0xA0, 0x00, 0x09, 0xFF, 0xFF, 0xB9, 0xB0, 0x01, 
+0x0D, 0xFF, 0xFF, 0xB9, 0xB0, 0x00, 0x11, 0x7A, 0x7A, 0x7A, 0x00, 0x43, 0x44, 0x44, 0x54, 0x00, 
+0x43, 0x53, 0x54, 0x00, 0x43, 0x44, 0x54, 0x00, 0x45, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+
 /* America/Rio_Branco */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
@@ -5673,14 +5694,12 @@ const unsigned char timelib_timezone_db_
 /* America/Tegucigalpa */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0C, 0xA4, 0x4C, 0x4B, 0x44, 
+0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0C, 0xA4, 0x4C, 0x4B, 0x44, 
 0x20, 0x9A, 0xDC, 0xE0, 0x21, 0x5C, 0x9B, 0x50, 0x22, 0x7A, 0xBE, 0xE0, 0x23, 0x3C, 0x7D, 0x50, 
-0x44, 0x5D, 0x8C, 0xE0, 0x44, 0xD6, 0xC8, 0xD0, 0x46, 0x3D, 0x6E, 0xE0, 0x46, 0xB6, 0xAA, 0xD0, 
-0x48, 0x1D, 0x50, 0xE0, 0x48, 0x96, 0x8C, 0xD0, 0x49, 0xFD, 0x32, 0xE0, 0x4A, 0x76, 0x6E, 0xD0, 
-0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0xFF, 0xFF, 0xAE, 
-0x3C, 0x00, 0x00, 0xFF, 0xFF, 0xB9, 0xB0, 0x01, 0x04, 0xFF, 0xFF, 0xAB, 0xA0, 0x00, 0x08, 0x4C, 
-0x4D, 0x54, 0x00, 0x43, 0x44, 0x54, 0x00, 0x43, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-0x00, 
+0x44, 0x5D, 0x8C, 0xE0, 0x44, 0xD6, 0xC8, 0xD0, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0xFF, 
+0xFF, 0xAE, 0x3C, 0x00, 0x00, 0xFF, 0xFF, 0xB9, 0xB0, 0x01, 0x04, 0xFF, 0xFF, 0xAB, 0xA0, 0x00, 
+0x08, 0x4C, 0x4D, 0x54, 0x00, 0x43, 0x44, 0x54, 0x00, 0x43, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 
 
 /* America/Thule */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
@@ -6162,51 +6181,51 @@ const unsigned char timelib_timezone_db_
 
 /* America/Yellowknife */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x7D, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x15, 0x9E, 0xB8, 0xAF, 0x90, 
-0x9F, 0xBB, 0x07, 0x80, 0xA0, 0xCF, 0xF0, 0x90, 0xA1, 0xA2, 0xB6, 0x60, 0xCB, 0x89, 0x0C, 0x90, 
-0xD2, 0x23, 0xF4, 0x70, 0xD2, 0x61, 0x18, 0x00, 0xF7, 0x2F, 0x5A, 0x70, 0xF8, 0x28, 0x85, 0xF0, 
-0x13, 0x69, 0x64, 0x10, 0x14, 0x59, 0x47, 0x00, 0x15, 0x49, 0x46, 0x10, 0x16, 0x39, 0x29, 0x00, 
-0x17, 0x29, 0x28, 0x10, 0x18, 0x22, 0x45, 0x80, 0x19, 0x09, 0x0A, 0x10, 0x1A, 0x02, 0x27, 0x80, 
-0x1A, 0xF2, 0x26, 0x90, 0x1B, 0xE2, 0x09, 0x80, 0x1C, 0xD2, 0x08, 0x90, 0x1D, 0xC1, 0xEB, 0x80, 
-0x1E, 0xB1, 0xEA, 0x90, 0x1F, 0xA1, 0xCD, 0x80, 0x20, 0x76, 0x1D, 0x10, 0x21, 0x81, 0xAF, 0x80, 
-0x22, 0x55, 0xFF, 0x10, 0x23, 0x6A, 0xCC, 0x00, 0x24, 0x35, 0xE1, 0x10, 0x25, 0x4A, 0xAE, 0x00, 
-0x26, 0x15, 0xC3, 0x10, 0x27, 0x2A, 0x90, 0x00, 0x27, 0xFE, 0xDF, 0x90, 0x29, 0x0A, 0x72, 0x00, 
-0x29, 0xDE, 0xC1, 0x90, 0x2A, 0xEA, 0x54, 0x00, 0x2B, 0xBE, 0xA3, 0x90, 0x2C, 0xD3, 0x70, 0x80, 
-0x2D, 0x9E, 0x85, 0x90, 0x2E, 0xB3, 0x52, 0x80, 0x2F, 0x7E, 0x67, 0x90, 0x30, 0x93, 0x34, 0x80, 
-0x31, 0x67, 0x84, 0x10, 0x32, 0x73, 0x16, 0x80, 0x33, 0x47, 0x66, 0x10, 0x34, 0x52, 0xF8, 0x80, 
-0x35, 0x27, 0x48, 0x10, 0x36, 0x32, 0xDA, 0x80, 0x37, 0x07, 0x2A, 0x10, 0x38, 0x1B, 0xF7, 0x00, 
-0x38, 0xE7, 0x0C, 0x10, 0x39, 0xFB, 0xD9, 0x00, 0x3A, 0xC6, 0xEE, 0x10, 0x3B, 0xDB, 0xBB, 0x00, 
-0x3C, 0xB0, 0x0A, 0x90, 0x3D, 0xBB, 0x9D, 0x00, 0x3E, 0x8F, 0xEC, 0x90, 0x3F, 0x9B, 0x7F, 0x00, 
-0x40, 0x6F, 0xCE, 0x90, 0x41, 0x84, 0x9B, 0x80, 0x42, 0x4F, 0xB0, 0x90, 0x43, 0x64, 0x7D, 0x80, 
-0x44, 0x2F, 0x92, 0x90, 0x45, 0x44, 0x5F, 0x80, 0x45, 0xF3, 0xC5, 0x10, 0x47, 0x2D, 0x7C, 0x00, 
-0x47, 0xD3, 0xA7, 0x10, 0x49, 0x0D, 0x5E, 0x00, 0x49, 0xB3, 0x89, 0x10, 0x4A, 0xED, 0x40, 0x00, 
-0x4B, 0x9C, 0xA5, 0x90, 0x4C, 0xD6, 0x5C, 0x80, 0x4D, 0x7C, 0x87, 0x90, 0x4E, 0xB6, 0x3E, 0x80, 
-0x4F, 0x5C, 0x69, 0x90, 0x50, 0x96, 0x20, 0x80, 0x51, 0x3C, 0x4B, 0x90, 0x52, 0x76, 0x02, 0x80, 
-0x53, 0x1C, 0x2D, 0x90, 0x54, 0x55, 0xE4, 0x80, 0x54, 0xFC, 0x0F, 0x90, 0x56, 0x35, 0xC6, 0x80, 
-0x56, 0xE5, 0x2C, 0x10, 0x58, 0x1E, 0xE3, 0x00, 0x58, 0xC5, 0x0E, 0x10, 0x59, 0xFE, 0xC5, 0x00, 
-0x5A, 0xA4, 0xF0, 0x10, 0x5B, 0xDE, 0xA7, 0x00, 0x5C, 0x84, 0xD2, 0x10, 0x5D, 0xBE, 0x89, 0x00, 
-0x5E, 0x64, 0xB4, 0x10, 0x5F, 0x9E, 0x6B, 0x00, 0x60, 0x4D, 0xD0, 0x90, 0x61, 0x87, 0x87, 0x80, 
-0x62, 0x2D, 0xB2, 0x90, 0x63, 0x67, 0x69, 0x80, 0x64, 0x0D, 0x94, 0x90, 0x65, 0x47, 0x4B, 0x80, 
-0x65, 0xED, 0x76, 0x90, 0x67, 0x27, 0x2D, 0x80, 0x67, 0xCD, 0x58, 0x90, 0x69, 0x07, 0x0F, 0x80, 
-0x69, 0xAD, 0x3A, 0x90, 0x6A, 0xE6, 0xF1, 0x80, 0x6B, 0x96, 0x57, 0x10, 0x6C, 0xD0, 0x0E, 0x00, 
-0x6D, 0x76, 0x39, 0x10, 0x6E, 0xAF, 0xF0, 0x00, 0x6F, 0x56, 0x1B, 0x10, 0x70, 0x8F, 0xD2, 0x00, 
-0x71, 0x35, 0xFD, 0x10, 0x72, 0x6F, 0xB4, 0x00, 0x73, 0x15, 0xDF, 0x10, 0x74, 0x4F, 0x96, 0x00, 
-0x74, 0xFE, 0xFB, 0x90, 0x76, 0x38, 0xB2, 0x80, 0x76, 0xDE, 0xDD, 0x90, 0x78, 0x18, 0x94, 0x80, 
-0x78, 0xBE, 0xBF, 0x90, 0x79, 0xF8, 0x76, 0x80, 0x7A, 0x9E, 0xA1, 0x90, 0x7B, 0xD8, 0x58, 0x80, 
-0x7C, 0x7E, 0x83, 0x90, 0x7D, 0xB8, 0x3A, 0x80, 0x7E, 0x5E, 0x65, 0x90, 0x7F, 0x98, 0x1C, 0x80, 
-0x00, 0x01, 0x00, 0x01, 0x02, 0x03, 0x01, 0x04, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
-0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xFF, 0xFF, 0xAB, 
-0xA0, 0x01, 0x00, 0xFF, 0xFF, 0x9D, 0x90, 0x00, 0x04, 0xFF, 0xFF, 0xAB, 0xA0, 0x01, 0x08, 0xFF, 
-0xFF, 0xAB, 0xA0, 0x01, 0x0C, 0xFF, 0xFF, 0xB9, 0xB0, 0x01, 0x10, 0x4D, 0x44, 0x54, 0x00, 0x4D, 
-0x53, 0x54, 0x00, 0x4D, 0x57, 0x54, 0x00, 0x4D, 0x50, 0x54, 0x00, 0x4D, 0x44, 0x44, 0x54, 0x00, 
-0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x7A, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x19, 0xBE, 0x2A, 0x18, 0x00, 
+0xCB, 0x89, 0x0C, 0x90, 0xD2, 0x23, 0xF4, 0x70, 0xD2, 0x61, 0x18, 0x00, 0xF7, 0x2F, 0x5A, 0x70, 
+0xF8, 0x28, 0x85, 0xF0, 0x13, 0x69, 0x64, 0x10, 0x14, 0x59, 0x47, 0x00, 0x15, 0x49, 0x46, 0x10, 
+0x16, 0x39, 0x29, 0x00, 0x17, 0x29, 0x28, 0x10, 0x18, 0x22, 0x45, 0x80, 0x19, 0x09, 0x0A, 0x10, 
+0x1A, 0x02, 0x27, 0x80, 0x1A, 0xF2, 0x26, 0x90, 0x1B, 0xE2, 0x09, 0x80, 0x1C, 0xD2, 0x08, 0x90, 
+0x1D, 0xC1, 0xEB, 0x80, 0x1E, 0xB1, 0xEA, 0x90, 0x1F, 0xA1, 0xCD, 0x80, 0x20, 0x76, 0x1D, 0x10, 
+0x21, 0x81, 0xAF, 0x80, 0x22, 0x55, 0xFF, 0x10, 0x23, 0x6A, 0xCC, 0x00, 0x24, 0x35, 0xE1, 0x10, 
+0x25, 0x4A, 0xAE, 0x00, 0x26, 0x15, 0xC3, 0x10, 0x27, 0x2A, 0x90, 0x00, 0x27, 0xFE, 0xDF, 0x90, 
+0x29, 0x0A, 0x72, 0x00, 0x29, 0xDE, 0xC1, 0x90, 0x2A, 0xEA, 0x54, 0x00, 0x2B, 0xBE, 0xA3, 0x90, 
+0x2C, 0xD3, 0x70, 0x80, 0x2D, 0x9E, 0x85, 0x90, 0x2E, 0xB3, 0x52, 0x80, 0x2F, 0x7E, 0x67, 0x90, 
+0x30, 0x93, 0x34, 0x80, 0x31, 0x67, 0x84, 0x10, 0x32, 0x73, 0x16, 0x80, 0x33, 0x47, 0x66, 0x10, 
+0x34, 0x52, 0xF8, 0x80, 0x35, 0x27, 0x48, 0x10, 0x36, 0x32, 0xDA, 0x80, 0x37, 0x07, 0x2A, 0x10, 
+0x38, 0x1B, 0xF7, 0x00, 0x38, 0xE7, 0x0C, 0x10, 0x39, 0xFB, 0xD9, 0x00, 0x3A, 0xC6, 0xEE, 0x10, 
+0x3B, 0xDB, 0xBB, 0x00, 0x3C, 0xB0, 0x0A, 0x90, 0x3D, 0xBB, 0x9D, 0x00, 0x3E, 0x8F, 0xEC, 0x90, 
+0x3F, 0x9B, 0x7F, 0x00, 0x40, 0x6F, 0xCE, 0x90, 0x41, 0x84, 0x9B, 0x80, 0x42, 0x4F, 0xB0, 0x90, 
+0x43, 0x64, 0x7D, 0x80, 0x44, 0x2F, 0x92, 0x90, 0x45, 0x44, 0x5F, 0x80, 0x45, 0xF3, 0xC5, 0x10, 
+0x47, 0x2D, 0x7C, 0x00, 0x47, 0xD3, 0xA7, 0x10, 0x49, 0x0D, 0x5E, 0x00, 0x49, 0xB3, 0x89, 0x10, 
+0x4A, 0xED, 0x40, 0x00, 0x4B, 0x9C, 0xA5, 0x90, 0x4C, 0xD6, 0x5C, 0x80, 0x4D, 0x7C, 0x87, 0x90, 
+0x4E, 0xB6, 0x3E, 0x80, 0x4F, 0x5C, 0x69, 0x90, 0x50, 0x96, 0x20, 0x80, 0x51, 0x3C, 0x4B, 0x90, 
+0x52, 0x76, 0x02, 0x80, 0x53, 0x1C, 0x2D, 0x90, 0x54, 0x55, 0xE4, 0x80, 0x54, 0xFC, 0x0F, 0x90, 
+0x56, 0x35, 0xC6, 0x80, 0x56, 0xE5, 0x2C, 0x10, 0x58, 0x1E, 0xE3, 0x00, 0x58, 0xC5, 0x0E, 0x10, 
+0x59, 0xFE, 0xC5, 0x00, 0x5A, 0xA4, 0xF0, 0x10, 0x5B, 0xDE, 0xA7, 0x00, 0x5C, 0x84, 0xD2, 0x10, 
+0x5D, 0xBE, 0x89, 0x00, 0x5E, 0x64, 0xB4, 0x10, 0x5F, 0x9E, 0x6B, 0x00, 0x60, 0x4D, 0xD0, 0x90, 
+0x61, 0x87, 0x87, 0x80, 0x62, 0x2D, 0xB2, 0x90, 0x63, 0x67, 0x69, 0x80, 0x64, 0x0D, 0x94, 0x90, 
+0x65, 0x47, 0x4B, 0x80, 0x65, 0xED, 0x76, 0x90, 0x67, 0x27, 0x2D, 0x80, 0x67, 0xCD, 0x58, 0x90, 
+0x69, 0x07, 0x0F, 0x80, 0x69, 0xAD, 0x3A, 0x90, 0x6A, 0xE6, 0xF1, 0x80, 0x6B, 0x96, 0x57, 0x10, 
+0x6C, 0xD0, 0x0E, 0x00, 0x6D, 0x76, 0x39, 0x10, 0x6E, 0xAF, 0xF0, 0x00, 0x6F, 0x56, 0x1B, 0x10, 
+0x70, 0x8F, 0xD2, 0x00, 0x71, 0x35, 0xFD, 0x10, 0x72, 0x6F, 0xB4, 0x00, 0x73, 0x15, 0xDF, 0x10, 
+0x74, 0x4F, 0x96, 0x00, 0x74, 0xFE, 0xFB, 0x90, 0x76, 0x38, 0xB2, 0x80, 0x76, 0xDE, 0xDD, 0x90, 
+0x78, 0x18, 0x94, 0x80, 0x78, 0xBE, 0xBF, 0x90, 0x79, 0xF8, 0x76, 0x80, 0x7A, 0x9E, 0xA1, 0x90, 
+0x7B, 0xD8, 0x58, 0x80, 0x7C, 0x7E, 0x83, 0x90, 0x7D, 0xB8, 0x3A, 0x80, 0x7E, 0x5E, 0x65, 0x90, 
+0x7F, 0x98, 0x1C, 0x80, 0x03, 0x01, 0x02, 0x03, 0x04, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 
+0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 
+0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 
+0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 
+0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 
+0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 
+0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 
+0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x05, 0x03, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xAB, 0xA0, 0x01, 0x04, 0xFF, 0xFF, 0xAB, 0xA0, 0x01, 0x08, 
+0xFF, 0xFF, 0x9D, 0x90, 0x00, 0x0C, 0xFF, 0xFF, 0xB9, 0xB0, 0x01, 0x10, 0xFF, 0xFF, 0xAB, 0xA0, 
+0x01, 0x15, 0x7A, 0x7A, 0x7A, 0x00, 0x4D, 0x57, 0x54, 0x00, 0x4D, 0x50, 0x54, 0x00, 0x4D, 0x53, 
+0x54, 0x00, 0x4D, 0x44, 0x44, 0x54, 0x00, 0x4D, 0x44, 0x54, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
 
 /* Antarctica/Casey */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
@@ -6890,7 +6909,7 @@ const unsigned char timelib_timezone_db_
 /* Asia/Choibalsan */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x14, 0x86, 0xD3, 0xE7, 0x28, 
+0x00, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x14, 0x86, 0xD3, 0xE7, 0x28, 
 0x0F, 0x0B, 0xDC, 0x90, 0x18, 0xE9, 0xC8, 0x80, 0x19, 0xDA, 0xEE, 0xE0, 0x1A, 0xCC, 0x3F, 0x70, 
 0x1B, 0xBC, 0x22, 0x60, 0x1C, 0xAC, 0x21, 0x70, 0x1D, 0x9C, 0x04, 0x60, 0x1E, 0x8C, 0x03, 0x70, 
 0x1F, 0x7B, 0xE6, 0x60, 0x20, 0x6B, 0xE5, 0x70, 0x21, 0x5B, 0xC8, 0x60, 0x22, 0x4B, 0xC7, 0x70, 
@@ -6902,33 +6921,13 @@ const unsigned char timelib_timezone_db_
 0x36, 0x0C, 0xF3, 0x60, 0x3A, 0xE9, 0xA5, 0x90, 0x3B, 0xB4, 0x9E, 0x80, 0x3C, 0xA4, 0x9D, 0x90, 
 0x3D, 0x94, 0x80, 0x80, 0x3E, 0x84, 0x7F, 0x90, 0x3F, 0x74, 0x62, 0x80, 0x40, 0x64, 0x61, 0x90, 
 0x41, 0x54, 0x44, 0x80, 0x42, 0x44, 0x43, 0x90, 0x43, 0x34, 0x26, 0x80, 0x44, 0x24, 0x25, 0x90, 
-0x45, 0x1D, 0x43, 0x00, 0x46, 0x0D, 0x42, 0x10, 0x46, 0xFD, 0x25, 0x00, 0x47, 0xED, 0x24, 0x10, 
-0x48, 0xDD, 0x07, 0x00, 0x49, 0xCD, 0x06, 0x10, 0x4A, 0xBC, 0xE9, 0x00, 0x4B, 0xAC, 0xE8, 0x10, 
-0x4C, 0x9C, 0xCB, 0x00, 0x4D, 0x8C, 0xCA, 0x10, 0x4E, 0x7C, 0xAD, 0x00, 0x4F, 0x75, 0xE6, 0x90, 
-0x50, 0x65, 0xC9, 0x80, 0x51, 0x55, 0xC8, 0x90, 0x52, 0x45, 0xAB, 0x80, 0x53, 0x35, 0xAA, 0x90, 
-0x54, 0x25, 0x8D, 0x80, 0x55, 0x15, 0x8C, 0x90, 0x56, 0x05, 0x6F, 0x80, 0x56, 0xF5, 0x6E, 0x90, 
-0x57, 0xE5, 0x51, 0x80, 0x58, 0xD5, 0x50, 0x90, 0x59, 0xCE, 0x6E, 0x00, 0x5A, 0xBE, 0x6D, 0x10, 
-0x5B, 0xAE, 0x50, 0x00, 0x5C, 0x9E, 0x4F, 0x10, 0x5D, 0x8E, 0x32, 0x00, 0x5E, 0x7E, 0x31, 0x10, 
-0x5F, 0x6E, 0x14, 0x00, 0x60, 0x5E, 0x13, 0x10, 0x61, 0x4D, 0xF6, 0x00, 0x62, 0x3D, 0xF5, 0x10, 
-0x63, 0x2D, 0xD8, 0x00, 0x64, 0x1D, 0xD7, 0x10, 0x65, 0x16, 0xF4, 0x80, 0x66, 0x06, 0xF3, 0x90, 
-0x66, 0xF6, 0xD6, 0x80, 0x67, 0xE6, 0xD5, 0x90, 0x68, 0xD6, 0xB8, 0x80, 0x69, 0xC6, 0xB7, 0x90, 
-0x6A, 0xB6, 0x9A, 0x80, 0x6B, 0xA6, 0x99, 0x90, 0x6C, 0x96, 0x7C, 0x80, 0x6D, 0x86, 0x7B, 0x90, 
-0x6E, 0x7F, 0x99, 0x00, 0x6F, 0x6F, 0x98, 0x10, 0x70, 0x5F, 0x7B, 0x00, 0x71, 0x4F, 0x7A, 0x10, 
-0x72, 0x3F, 0x5D, 0x00, 0x73, 0x2F, 0x5C, 0x10, 0x74, 0x1F, 0x3F, 0x00, 0x75, 0x0F, 0x3E, 0x10, 
-0x75, 0xFF, 0x21, 0x00, 0x76, 0xEF, 0x20, 0x10, 0x77, 0xDF, 0x03, 0x00, 0x78, 0xCF, 0x02, 0x10, 
-0x79, 0xC8, 0x1F, 0x80, 0x7A, 0xB8, 0x1E, 0x90, 0x7B, 0xA8, 0x01, 0x80, 0x7C, 0x98, 0x00, 0x90, 
-0x7D, 0x87, 0xE3, 0x80, 0x7E, 0x77, 0xE2, 0x90, 0x7F, 0x67, 0xC5, 0x80, 0x01, 0x02, 0x04, 0x03, 
-0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 
-0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 
-0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 
-0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 
+0x45, 0x1D, 0x43, 0x00, 0x01, 0x02, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 
 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 
 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 
-0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x00, 0x00, 0x6B, 0x58, 0x00, 0x00, 0x00, 0x00, 
-0x62, 0x70, 0x00, 0x04, 0x00, 0x00, 0x70, 0x80, 0x00, 0x04, 0x00, 0x00, 0x7E, 0x90, 0x00, 0x09, 
-0x00, 0x00, 0x8C, 0xA0, 0x01, 0x0E, 0x4C, 0x4D, 0x54, 0x00, 0x55, 0x4C, 0x41, 0x54, 0x00, 0x43, 
-0x48, 0x4F, 0x54, 0x00, 0x43, 0x48, 0x4F, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x00, 
+0x04, 0x03, 0x00, 0x00, 0x6B, 0x58, 0x00, 0x00, 0x00, 0x00, 0x62, 0x70, 0x00, 0x04, 0x00, 0x00, 
+0x70, 0x80, 0x00, 0x04, 0x00, 0x00, 0x7E, 0x90, 0x00, 0x09, 0x00, 0x00, 0x8C, 0xA0, 0x01, 0x0E, 
+0x4C, 0x4D, 0x54, 0x00, 0x55, 0x4C, 0x41, 0x54, 0x00, 0x43, 0x48, 0x4F, 0x54, 0x00, 0x43, 0x48, 
+0x4F, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 
 /* Asia/Chongqing */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
@@ -7005,22 +7004,22 @@ const unsigned char timelib_timezone_db_
 0x3A, 0xC6, 0x53, 0x60, 0x3B, 0xB7, 0x87, 0xD0, 0x3C, 0xA7, 0x86, 0xE0, 0x3D, 0x98, 0xBB, 0x50, 
 0x3E, 0x88, 0xBA, 0x60, 0x3F, 0x79, 0xEE, 0xD0, 0x40, 0x6B, 0x3F, 0x60, 0x41, 0x5C, 0x73, 0xD0, 
 0x42, 0x4C, 0x72, 0xE0, 0x43, 0x3D, 0xA7, 0x50, 0x44, 0x2D, 0xA6, 0x60, 0x45, 0x12, 0xFD, 0x50, 
-0x46, 0x0E, 0xD9, 0xE0, 0x47, 0x00, 0x0E, 0x50, 0x47, 0xF1, 0x5E, 0xE0, 0x48, 0xE2, 0x93, 0x50, 
-0x49, 0xD2, 0x92, 0x60, 0x4A, 0xC3, 0xC6, 0xD0, 0x4B, 0xB3, 0xC5, 0xE0, 0x4C, 0xA4, 0xFA, 0x50, 
-0x4D, 0x94, 0xF9, 0x60, 0x4E, 0x86, 0x2D, 0xD0, 0x4F, 0x77, 0x7E, 0x60, 0x50, 0x68, 0xB2, 0xD0, 
-0x51, 0x58, 0xB1, 0xE0, 0x52, 0x49, 0xE6, 0x50, 0x53, 0x39, 0xE5, 0x60, 0x54, 0x2B, 0x19, 0xD0, 
-0x55, 0x1B, 0x18, 0xE0, 0x56, 0x0C, 0x4D, 0x50, 0x56, 0xFD, 0x9D, 0xE0, 0x57, 0xEE, 0xD2, 0x50, 
-0x58, 0xDE, 0xD1, 0x60, 0x59, 0xD0, 0x05, 0xD0, 0x5A, 0xC0, 0x04, 0xE0, 0x5B, 0xB1, 0x39, 0x50, 
-0x5C, 0xA1, 0x38, 0x60, 0x5D, 0x92, 0x6C, 0xD0, 0x5E, 0x83, 0xBD, 0x60, 0x5F, 0x74, 0xF1, 0xD0, 
-0x60, 0x64, 0xF0, 0xE0, 0x61, 0x56, 0x25, 0x50, 0x62, 0x46, 0x24, 0x60, 0x63, 0x37, 0x58, 0xD0, 
-0x64, 0x27, 0x57, 0xE0, 0x65, 0x18, 0x8C, 0x50, 0x66, 0x09, 0xDC, 0xE0, 0x66, 0xFB, 0x11, 0x50, 
-0x67, 0xEB, 0x10, 0x60, 0x68, 0xDC, 0x44, 0xD0, 0x69, 0xCC, 0x43, 0xE0, 0x6A, 0xBD, 0x78, 0x50, 
-0x6B, 0xAD, 0x77, 0x60, 0x6C, 0x9E, 0xAB, 0xD0, 0x6D, 0x8F, 0xFC, 0x60, 0x6E, 0x81, 0x30, 0xD0, 
-0x6F, 0x71, 0x2F, 0xE0, 0x70, 0x62, 0x64, 0x50, 0x71, 0x52, 0x63, 0x60, 0x72, 0x43, 0x97, 0xD0, 
-0x73, 0x33, 0x96, 0xE0, 0x74, 0x24, 0xCB, 0x50, 0x75, 0x16, 0x1B, 0xE0, 0x76, 0x07, 0x50, 0x50, 
-0x76, 0xF7, 0x4F, 0x60, 0x77, 0xE8, 0x83, 0xD0, 0x78, 0xD8, 0x82, 0xE0, 0x79, 0xC9, 0xB7, 0x50, 
-0x7A, 0xB9, 0xB6, 0x60, 0x7B, 0xAA, 0xEA, 0xD0, 0x7C, 0x9C, 0x3B, 0x60, 0x7D, 0x8D, 0x6F, 0xD0, 
-0x7E, 0x7D, 0x6E, 0xE0, 0x7F, 0x6E, 0xA3, 0x50, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
+0x46, 0x0C, 0x36, 0xE0, 0x47, 0x00, 0x0E, 0x50, 0x47, 0xEC, 0x18, 0xE0, 0x48, 0xE2, 0x93, 0x50, 
+0x49, 0xCB, 0xFA, 0xE0, 0x4A, 0xC3, 0xC6, 0xD0, 0x4B, 0xAB, 0xDC, 0xE0, 0x4C, 0xA4, 0xFA, 0x50, 
+0x4D, 0x8B, 0xBE, 0xE0, 0x4E, 0x86, 0x2D, 0xD0, 0x4F, 0x74, 0xDB, 0x60, 0x50, 0x68, 0xB2, 0xD0, 
+0x51, 0x54, 0xBD, 0x60, 0x52, 0x49, 0xE6, 0x50, 0x53, 0x34, 0x9F, 0x60, 0x54, 0x2B, 0x19, 0xD0, 
+0x55, 0x14, 0x81, 0x60, 0x56, 0x0C, 0x4D, 0x50, 0x56, 0xF4, 0x63, 0x60, 0x57, 0xEE, 0xD2, 0x50, 
+0x58, 0xDD, 0x7F, 0xE0, 0x59, 0xD0, 0x05, 0xD0, 0x5A, 0xBD, 0x61, 0xE0, 0x5B, 0xB1, 0x39, 0x50, 
+0x5C, 0x9D, 0x43, 0xE0, 0x5D, 0x92, 0x6C, 0xD0, 0x5E, 0x7D, 0x25, 0xE0, 0x5F, 0x74, 0xF1, 0xD0, 
+0x60, 0x5D, 0x07, 0xE0, 0x61, 0x56, 0x25, 0x50, 0x62, 0x3C, 0xE9, 0xE0, 0x63, 0x37, 0x58, 0xD0, 
+0x64, 0x26, 0x06, 0x60, 0x65, 0x18, 0x8C, 0x50, 0x66, 0x05, 0xE8, 0x60, 0x66, 0xFB, 0x11, 0x50, 
+0x67, 0xE5, 0xCA, 0x60, 0x68, 0xDC, 0x44, 0xD0, 0x69, 0xC5, 0xAC, 0x60, 0x6A, 0xBD, 0x78, 0x50, 
+0x6B, 0xA5, 0x8E, 0x60, 0x6C, 0x9E, 0xAB, 0xD0, 0x6D, 0x8E, 0xAA, 0xE0, 0x6E, 0x81, 0x30, 0xD0, 
+0x6F, 0x6E, 0x8C, 0xE0, 0x70, 0x62, 0x64, 0x50, 0x71, 0x4E, 0x6E, 0xE0, 0x72, 0x43, 0x97, 0xD0, 
+0x73, 0x2E, 0x50, 0xE0, 0x74, 0x24, 0xCB, 0x50, 0x75, 0x0E, 0x32, 0xE0, 0x76, 0x07, 0x50, 0x50, 
+0x76, 0xEE, 0x14, 0xE0, 0x77, 0xE8, 0x83, 0xD0, 0x78, 0xD7, 0x31, 0x60, 0x79, 0xC9, 0xB7, 0x50, 
+0x7A, 0xB7, 0x13, 0x60, 0x7B, 0xAA, 0xEA, 0xD0, 0x7C, 0x96, 0xF5, 0x60, 0x7D, 0x8D, 0x6F, 0xD0, 
+0x7E, 0x76, 0xD7, 0x60, 0x7F, 0x6E, 0xA3, 0x50, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
@@ -7049,7 +7048,7 @@ const unsigned char timelib_timezone_db_
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x10, 0x92, 0xE6, 0x18, 0xC4, 
-0xCB, 0x99, 0x32, 0xF0, 0xD2, 0x11, 0x0E, 0xF0, 0x0B, 0xEA, 0x30, 0x70, 0x39, 0xC3, 0x99, 0x00, 
+0xCB, 0x99, 0x32, 0xF0, 0xD2, 0x56, 0xEE, 0x70, 0x0B, 0xEA, 0x30, 0x70, 0x39, 0xC3, 0x99, 0x00, 
 0x01, 0x02, 0x03, 0x04, 0x03, 0x00, 0x00, 0x75, 0xBC, 0x00, 0x00, 0x00, 0x00, 0x70, 0x80, 0x00, 
 0x04, 0x00, 0x00, 0x7E, 0x90, 0x00, 0x08, 0x00, 0x00, 0x7E, 0x90, 0x00, 0x04, 0x00, 0x00, 0x70, 
 0x80, 0x00, 0x0C, 0x4C, 0x4D, 0x54, 0x00, 0x54, 0x4C, 0x54, 0x00, 0x4A, 0x53, 0x54, 0x00, 0x43, 
@@ -7180,7 +7179,7 @@ const unsigned char timelib_timezone_db_
 /* Asia/Hovd */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0F, 0x86, 0xD3, 0xFC, 0x94, 
+0x00, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0F, 0x86, 0xD3, 0xFC, 0x94, 
 0x0F, 0x0B, 0xEA, 0xA0, 0x18, 0xE9, 0xD6, 0x90, 0x19, 0xDB, 0x0B, 0x00, 0x1A, 0xCC, 0x5B, 0x90, 
 0x1B, 0xBC, 0x3E, 0x80, 0x1C, 0xAC, 0x3D, 0x90, 0x1D, 0x9C, 0x20, 0x80, 0x1E, 0x8C, 0x1F, 0x90, 
 0x1F, 0x7C, 0x02, 0x80, 0x20, 0x6C, 0x01, 0x90, 0x21, 0x5B, 0xE4, 0x80, 0x22, 0x4B, 0xE3, 0x90, 
@@ -7192,32 +7191,13 @@ const unsigned char timelib_timezone_db_
 0x36, 0x0D, 0x0F, 0x80, 0x3A, 0xE9, 0xC1, 0xB0, 0x3B, 0xB4, 0xBA, 0xA0, 0x3C, 0xA4, 0xB9, 0xB0, 
 0x3D, 0x94, 0x9C, 0xA0, 0x3E, 0x84, 0x9B, 0xB0, 0x3F, 0x74, 0x7E, 0xA0, 0x40, 0x64, 0x7D, 0xB0, 
 0x41, 0x54, 0x60, 0xA0, 0x42, 0x44, 0x5F, 0xB0, 0x43, 0x34, 0x42, 0xA0, 0x44, 0x24, 0x41, 0xB0, 
-0x45, 0x1D, 0x5F, 0x20, 0x46, 0x0D, 0x5E, 0x30, 0x46, 0xFD, 0x41, 0x20, 0x47, 0xED, 0x40, 0x30, 
-0x48, 0xDD, 0x23, 0x20, 0x49, 0xCD, 0x22, 0x30, 0x4A, 0xBD, 0x05, 0x20, 0x4B, 0xAD, 0x04, 0x30, 
-0x4C, 0x9C, 0xE7, 0x20, 0x4D, 0x8C, 0xE6, 0x30, 0x4E, 0x7C, 0xC9, 0x20, 0x4F, 0x76, 0x02, 0xB0, 
-0x50, 0x65, 0xE5, 0xA0, 0x51, 0x55, 0xE4, 0xB0, 0x52, 0x45, 0xC7, 0xA0, 0x53, 0x35, 0xC6, 0xB0, 
-0x54, 0x25, 0xA9, 0xA0, 0x55, 0x15, 0xA8, 0xB0, 0x56, 0x05, 0x8B, 0xA0, 0x56, 0xF5, 0x8A, 0xB0, 
-0x57, 0xE5, 0x6D, 0xA0, 0x58, 0xD5, 0x6C, 0xB0, 0x59, 0xCE, 0x8A, 0x20, 0x5A, 0xBE, 0x89, 0x30, 
-0x5B, 0xAE, 0x6C, 0x20, 0x5C, 0x9E, 0x6B, 0x30, 0x5D, 0x8E, 0x4E, 0x20, 0x5E, 0x7E, 0x4D, 0x30, 
-0x5F, 0x6E, 0x30, 0x20, 0x60, 0x5E, 0x2F, 0x30, 0x61, 0x4E, 0x12, 0x20, 0x62, 0x3E, 0x11, 0x30, 
-0x63, 0x2D, 0xF4, 0x20, 0x64, 0x1D, 0xF3, 0x30, 0x65, 0x17, 0x10, 0xA0, 0x66, 0x07, 0x0F, 0xB0, 
-0x66, 0xF6, 0xF2, 0xA0, 0x67, 0xE6, 0xF1, 0xB0, 0x68, 0xD6, 0xD4, 0xA0, 0x69, 0xC6, 0xD3, 0xB0, 
-0x6A, 0xB6, 0xB6, 0xA0, 0x6B, 0xA6, 0xB5, 0xB0, 0x6C, 0x96, 0x98, 0xA0, 0x6D, 0x86, 0x97, 0xB0, 
-0x6E, 0x7F, 0xB5, 0x20, 0x6F, 0x6F, 0xB4, 0x30, 0x70, 0x5F, 0x97, 0x20, 0x71, 0x4F, 0x96, 0x30, 
-0x72, 0x3F, 0x79, 0x20, 0x73, 0x2F, 0x78, 0x30, 0x74, 0x1F, 0x5B, 0x20, 0x75, 0x0F, 0x5A, 0x30, 
-0x75, 0xFF, 0x3D, 0x20, 0x76, 0xEF, 0x3C, 0x30, 0x77, 0xDF, 0x1F, 0x20, 0x78, 0xCF, 0x1E, 0x30, 
-0x79, 0xC8, 0x3B, 0xA0, 0x7A, 0xB8, 0x3A, 0xB0, 0x7B, 0xA8, 0x1D, 0xA0, 0x7C, 0x98, 0x1C, 0xB0, 
-0x7D, 0x87, 0xFF, 0xA0, 0x7E, 0x77, 0xFE, 0xB0, 0x7F, 0x67, 0xE1, 0xA0, 0x01, 0x03, 0x02, 0x03, 
-0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
-0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
-0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
-0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
+0x45, 0x1D, 0x5F, 0x20, 0x01, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
-0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x00, 0x00, 0x55, 0xEC, 0x00, 0x00, 0x00, 0x00, 
-0x54, 0x60, 0x00, 0x04, 0x00, 0x00, 0x70, 0x80, 0x01, 0x09, 0x00, 0x00, 0x62, 0x70, 0x00, 0x04, 
-0x4C, 0x4D, 0x54, 0x00, 0x48, 0x4F, 0x56, 0x54, 0x00, 0x48, 0x4F, 0x56, 0x53, 0x54, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x02, 0x03, 0x00, 0x00, 0x55, 0xEC, 0x00, 0x00, 0x00, 0x00, 0x54, 0x60, 0x00, 0x04, 0x00, 0x00, 
+0x70, 0x80, 0x01, 0x09, 0x00, 0x00, 0x62, 0x70, 0x00, 0x04, 0x4C, 0x4D, 0x54, 0x00, 0x48, 0x4F, 
+0x56, 0x54, 0x00, 0x48, 0x4F, 0x56, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 
 
 /* Asia/Irkutsk */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
@@ -7268,8 +7248,8 @@ const unsigned char timelib_timezone_db_
 
 /* Asia/Istanbul */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0xAA, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x16, 0x90, 0x8B, 0xF5, 0x98, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0xAB, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x16, 0x90, 0x8B, 0xF5, 0x98, 
 0x9B, 0x0C, 0x17, 0x60, 0x9B, 0xD5, 0xBE, 0xD0, 0xA2, 0x65, 0x63, 0xE0, 0xA3, 0x7B, 0x82, 0x50, 
 0xA4, 0x4E, 0x80, 0x60, 0xA5, 0x3F, 0xB4, 0xD0, 0xA6, 0x25, 0x27, 0xE0, 0xA7, 0x27, 0x7F, 0xD0, 
 0xAA, 0x28, 0x28, 0x60, 0xAA, 0xE1, 0xFD, 0xD0, 0xAB, 0xF9, 0x89, 0xE0, 0xAC, 0xC3, 0x31, 0x50, 
@@ -7296,44 +7276,46 @@ const unsigned char timelib_timezone_db_
 0x38, 0x1B, 0x78, 0x70, 0x38, 0xDD, 0x44, 0xF0, 0x39, 0xFB, 0x5A, 0x70, 0x3A, 0xBD, 0x26, 0xF0, 
 0x3B, 0xDB, 0x3C, 0x70, 0x3C, 0xA6, 0x43, 0x70, 0x3D, 0xBB, 0x1E, 0x70, 0x3E, 0x86, 0x25, 0x70, 
 0x3F, 0x9B, 0x00, 0x70, 0x40, 0x66, 0x07, 0x70, 0x41, 0x84, 0x1C, 0xF0, 0x42, 0x45, 0xE9, 0x70, 
-0x43, 0x63, 0xFE, 0xF0, 0x44, 0x25, 0xCB, 0x70, 0x45, 0x43, 0xE0, 0xF0, 0x46, 0x05, 0xAD, 0x70, 
-0x47, 0x23, 0xC2, 0xF0, 0x47, 0xEE, 0xC9, 0xF0, 0x49, 0x03, 0xA4, 0xF0, 0x49, 0xCE, 0xAB, 0xF0, 
-0x4A, 0xE3, 0x86, 0xF0, 0x4B, 0xAE, 0x8D, 0xF0, 0x4C, 0xCC, 0xA3, 0x70, 0x4D, 0x8E, 0x6F, 0xF0, 
-0x4E, 0xAC, 0x85, 0x70, 0x4F, 0x6E, 0x51, 0xF0, 0x50, 0x8C, 0x67, 0x70, 0x51, 0x57, 0x6E, 0x70, 
-0x52, 0x6C, 0x49, 0x70, 0x53, 0x37, 0x50, 0x70, 0x54, 0x4C, 0x2B, 0x70, 0x55, 0x17, 0x32, 0x70, 
-0x56, 0x2C, 0x0D, 0x70, 0x56, 0xF7, 0x14, 0x70, 0x58, 0x15, 0x29, 0xF0, 0x58, 0xD6, 0xF6, 0x70, 
-0x59, 0xF5, 0x0B, 0xF0, 0x5A, 0xB6, 0xD8, 0x70, 0x5B, 0xD4, 0xED, 0xF0, 0x5C, 0x9F, 0xF4, 0xF0, 
-0x5D, 0xB4, 0xCF, 0xF0, 0x5E, 0x7F, 0xD6, 0xF0, 0x5F, 0x94, 0xB1, 0xF0, 0x60, 0x5F, 0xB8, 0xF0, 
-0x61, 0x7D, 0xCE, 0x70, 0x62, 0x3F, 0x9A, 0xF0, 0x63, 0x5D, 0xB0, 0x70, 0x64, 0x1F, 0x7C, 0xF0, 
-0x65, 0x3D, 0x92, 0x70, 0x66, 0x08, 0x99, 0x70, 0x67, 0x1D, 0x74, 0x70, 0x67, 0xE8, 0x7B, 0x70, 
-0x68, 0xFD, 0x56, 0x70, 0x69, 0xC8, 0x5D, 0x70, 0x6A, 0xDD, 0x38, 0x70, 0x6B, 0xA8, 0x3F, 0x70, 
-0x6C, 0xC6, 0x54, 0xF0, 0x6D, 0x88, 0x21, 0x70, 0x6E, 0xA6, 0x36, 0xF0, 0x6F, 0x68, 0x03, 0x70, 
-0x70, 0x86, 0x18, 0xF0, 0x71, 0x51, 0x1F, 0xF0, 0x72, 0x65, 0xFA, 0xF0, 0x73, 0x31, 0x01, 0xF0, 
-0x74, 0x45, 0xDC, 0xF0, 0x75, 0x10, 0xE3, 0xF0, 0x76, 0x2E, 0xF9, 0x70, 0x76, 0xF0, 0xC5, 0xF0, 
-0x78, 0x0E, 0xDB, 0x70, 0x78, 0xD0, 0xA7, 0xF0, 0x79, 0xEE, 0xBD, 0x70, 0x7A, 0xB0, 0x89, 0xF0, 
-0x7B, 0xCE, 0x9F, 0x70, 0x7C, 0x99, 0xA6, 0x70, 0x7D, 0xAE, 0x81, 0x70, 0x7E, 0x79, 0x88, 0x70, 
-0x7F, 0x8E, 0x63, 0x70, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
+0x43, 0x63, 0xFE, 0xF0, 0x44, 0x25, 0xCB, 0x70, 0x45, 0x43, 0xE0, 0xF0, 0x45, 0x98, 0x32, 0xE0, 
+0x46, 0x05, 0xC9, 0x90, 0x47, 0x23, 0xDF, 0x10, 0x47, 0xEE, 0xE6, 0x10, 0x49, 0x03, 0xC1, 0x10, 
+0x49, 0xCE, 0xC8, 0x10, 0x4A, 0xE3, 0xA3, 0x10, 0x4B, 0xAE, 0xAA, 0x10, 0x4C, 0xCC, 0xBF, 0x90, 
+0x4D, 0x8E, 0x8C, 0x10, 0x4E, 0xAC, 0xA1, 0x90, 0x4F, 0x6E, 0x6E, 0x10, 0x50, 0x8C, 0x83, 0x90, 
+0x51, 0x57, 0x8A, 0x90, 0x52, 0x6C, 0x65, 0x90, 0x53, 0x37, 0x6C, 0x90, 0x54, 0x4C, 0x47, 0x90, 
+0x55, 0x17, 0x4E, 0x90, 0x56, 0x2C, 0x29, 0x90, 0x56, 0xF7, 0x30, 0x90, 0x58, 0x15, 0x46, 0x10, 
+0x58, 0xD7, 0x12, 0x90, 0x59, 0xF5, 0x28, 0x10, 0x5A, 0xB6, 0xF4, 0x90, 0x5B, 0xD5, 0x0A, 0x10, 
+0x5C, 0xA0, 0x11, 0x10, 0x5D, 0xB4, 0xEC, 0x10, 0x5E, 0x7F, 0xF3, 0x10, 0x5F, 0x94, 0xCE, 0x10, 
+0x60, 0x5F, 0xD5, 0x10, 0x61, 0x7D, 0xEA, 0x90, 0x62, 0x3F, 0xB7, 0x10, 0x63, 0x5D, 0xCC, 0x90, 
+0x64, 0x1F, 0x99, 0x10, 0x65, 0x3D, 0xAE, 0x90, 0x66, 0x08, 0xB5, 0x90, 0x67, 0x1D, 0x90, 0x90, 
+0x67, 0xE8, 0x97, 0x90, 0x68, 0xFD, 0x72, 0x90, 0x69, 0xC8, 0x79, 0x90, 0x6A, 0xDD, 0x54, 0x90, 
+0x6B, 0xA8, 0x5B, 0x90, 0x6C, 0xC6, 0x71, 0x10, 0x6D, 0x88, 0x3D, 0x90, 0x6E, 0xA6, 0x53, 0x10, 
+0x6F, 0x68, 0x1F, 0x90, 0x70, 0x86, 0x35, 0x10, 0x71, 0x51, 0x3C, 0x10, 0x72, 0x66, 0x17, 0x10, 
+0x73, 0x31, 0x1E, 0x10, 0x74, 0x45, 0xF9, 0x10, 0x75, 0x11, 0x00, 0x10, 0x76, 0x2F, 0x15, 0x90, 
+0x76, 0xF0, 0xE2, 0x10, 0x78, 0x0E, 0xF7, 0x90, 0x78, 0xD0, 0xC4, 0x10, 0x79, 0xEE, 0xD9, 0x90, 
+0x7A, 0xB0, 0xA6, 0x10, 0x7B, 0xCE, 0xBB, 0x90, 0x7C, 0x99, 0xC2, 0x90, 0x7D, 0xAE, 0x9D, 0x90, 
+0x7E, 0x79, 0xA4, 0x90, 0x7F, 0x8E, 0x7F, 0x90, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
-0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 
-0x03, 0x04, 0x03, 0x04, 0x01, 0x02, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
-0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
-0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
-0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
+0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x03, 0x04, 
+0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x01, 0x02, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
-0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x00, 0x00, 
-0x1B, 0x68, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x30, 0x01, 0x04, 0x00, 0x00, 0x1C, 0x20, 0x00, 0x09, 
-0x00, 0x00, 0x38, 0x40, 0x01, 0x0D, 0x00, 0x00, 0x2A, 0x30, 0x00, 0x12, 0x00, 0x00, 0x2A, 0x30, 
-0x01, 0x04, 0x00, 0x00, 0x1C, 0x20, 0x00, 0x09, 0x49, 0x4D, 0x54, 0x00, 0x45, 0x45, 0x53, 0x54, 
-0x00, 0x45, 0x45, 0x54, 0x00, 0x54, 0x52, 0x53, 0x54, 0x00, 0x54, 0x52, 0x54, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x05, 0x06, 0x05, 0x06, 0x02, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 
+0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 
+0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 
+0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 
+0x08, 0x07, 0x08, 0x00, 0x00, 0x1B, 0x68, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x30, 0x01, 0x04, 0x00, 
+0x00, 0x1C, 0x20, 0x00, 0x09, 0x00, 0x00, 0x38, 0x40, 0x01, 0x0D, 0x00, 0x00, 0x2A, 0x30, 0x00, 
+0x12, 0x00, 0x00, 0x2A, 0x30, 0x01, 0x04, 0x00, 0x00, 0x1C, 0x20, 0x00, 0x09, 0x00, 0x00, 0x2A, 
+0x30, 0x01, 0x04, 0x00, 0x00, 0x1C, 0x20, 0x00, 0x09, 0x49, 0x4D, 0x54, 0x00, 0x45, 0x45, 0x53, 
+0x54, 0x00, 0x45, 0x45, 0x54, 0x00, 0x54, 0x52, 0x53, 0x54, 0x00, 0x54, 0x52, 0x54, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
+0x01, 
 
 /* Asia/Jakarta */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x11, 0xA9, 0x78, 0x85, 0xE0, 
-0xBA, 0x16, 0xDE, 0x60, 0xCB, 0xBF, 0x83, 0x88, 0xD2, 0x11, 0x0E, 0xF0, 0xD7, 0x3C, 0xC6, 0x08, 
+0xBA, 0x16, 0xDE, 0x60, 0xCB, 0xBF, 0x83, 0x88, 0xD2, 0x56, 0xEE, 0x70, 0xD7, 0x3C, 0xC6, 0x08, 
 0xDA, 0xFF, 0x26, 0x00, 0xF4, 0xB5, 0xBE, 0x88, 0x01, 0x02, 0x03, 0x02, 0x04, 0x02, 0x05, 0x00, 
 0x00, 0x64, 0x20, 0x00, 0x00, 0x00, 0x00, 0x67, 0x20, 0x00, 0x04, 0x00, 0x00, 0x69, 0x78, 0x00, 
 0x09, 0x00, 0x00, 0x7E, 0x90, 0x00, 0x0D, 0x00, 0x00, 0x70, 0x80, 0x00, 0x09, 0x00, 0x00, 0x62, 
@@ -7345,7 +7327,7 @@ const unsigned char timelib_timezone_db_
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0C, 0xBA, 0x16, 0xC1, 0x98, 
-0xCF, 0x17, 0x0B, 0xF0, 0xF4, 0xB5, 0xA2, 0x68, 0x01, 0x02, 0x01, 0x00, 0x00, 0x83, 0xE8, 0x00, 
+0xD0, 0x58, 0xB9, 0xF0, 0xF4, 0xB5, 0xA2, 0x68, 0x01, 0x02, 0x01, 0x00, 0x00, 0x83, 0xE8, 0x00, 
 0x00, 0x00, 0x00, 0x7E, 0x90, 0x00, 0x04, 0x00, 0x00, 0x85, 0x98, 0x00, 0x08, 0x4C, 0x4D, 0x54, 
 0x00, 0x45, 0x49, 0x54, 0x00, 0x43, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 
@@ -7665,7 +7647,7 @@ const unsigned char timelib_timezone_db_
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0xA1, 0xF2, 0x5D, 0x90, 
-0xBA, 0x16, 0xD5, 0x90, 0xCB, 0x88, 0x1D, 0x80, 0xD2, 0x11, 0x0E, 0xF0, 0x01, 0x02, 0x03, 0x02, 
+0xBA, 0x16, 0xD5, 0x90, 0xCB, 0x88, 0x1D, 0x80, 0xD2, 0x56, 0xEE, 0x70, 0x01, 0x02, 0x03, 0x02, 
 0x00, 0x00, 0x6F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x6F, 0xF0, 0x00, 0x04, 0x00, 0x00, 0x70, 0x80, 
 0x00, 0x08, 0x00, 0x00, 0x7E, 0x90, 0x00, 0x0C, 0x4C, 0x4D, 0x54, 0x00, 0x4D, 0x4D, 0x54, 0x00, 
 0x43, 0x49, 0x54, 0x00, 0x4A, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
@@ -7874,7 +7856,7 @@ const unsigned char timelib_timezone_db_
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x14, 0x8B, 0xFF, 0x8E, 0x00, 
-0xBA, 0x16, 0xDF, 0x00, 0xCB, 0x79, 0xA4, 0x08, 0xD2, 0x11, 0x0E, 0xF0, 0xD7, 0x3C, 0xC6, 0x08, 
+0xBA, 0x16, 0xDF, 0x00, 0xCB, 0x79, 0xA4, 0x08, 0xD2, 0x56, 0xEE, 0x70, 0xD7, 0x3C, 0xC6, 0x08, 
 0xDA, 0xFF, 0x26, 0x00, 0xF4, 0xB5, 0xBE, 0x88, 0x21, 0xDA, 0x74, 0x80, 0x01, 0x02, 0x03, 0x02, 
 0x04, 0x02, 0x05, 0x06, 0x00, 0x00, 0x66, 0x80, 0x00, 0x00, 0x00, 0x00, 0x66, 0x80, 0x00, 0x04, 
 0x00, 0x00, 0x69, 0x78, 0x00, 0x08, 0x00, 0x00, 0x7E, 0x90, 0x00, 0x0C, 0x00, 0x00, 0x70, 0x80, 
@@ -8233,7 +8215,7 @@ const unsigned char timelib_timezone_db_
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0xA1, 0xF2, 0x5D, 0x90, 
-0xBA, 0x16, 0xD5, 0x90, 0xCB, 0x88, 0x1D, 0x80, 0xD2, 0x11, 0x0E, 0xF0, 0x01, 0x02, 0x03, 0x02, 
+0xBA, 0x16, 0xD5, 0x90, 0xCB, 0x88, 0x1D, 0x80, 0xD2, 0x56, 0xEE, 0x70, 0x01, 0x02, 0x03, 0x02, 
 0x00, 0x00, 0x6F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x6F, 0xF0, 0x00, 0x04, 0x00, 0x00, 0x70, 0x80, 
 0x00, 0x08, 0x00, 0x00, 0x7E, 0x90, 0x00, 0x0C, 0x4C, 0x4D, 0x54, 0x00, 0x4D, 0x4D, 0x54, 0x00, 
 0x43, 0x49, 0x54, 0x00, 0x4A, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
@@ -8242,7 +8224,7 @@ const unsigned char timelib_timezone_db_
 /* Asia/Ulaanbaatar */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0F, 0x86, 0xD3, 0xEE, 0x4C, 
+0x00, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0F, 0x86, 0xD3, 0xEE, 0x4C, 
 0x0F, 0x0B, 0xDC, 0x90, 0x18, 0xE9, 0xC8, 0x80, 0x19, 0xDA, 0xFC, 0xF0, 0x1A, 0xCC, 0x4D, 0x80, 
 0x1B, 0xBC, 0x30, 0x70, 0x1C, 0xAC, 0x2F, 0x80, 0x1D, 0x9C, 0x12, 0x70, 0x1E, 0x8C, 0x11, 0x80, 
 0x1F, 0x7B, 0xF4, 0x70, 0x20, 0x6B, 0xF3, 0x80, 0x21, 0x5B, 0xD6, 0x70, 0x22, 0x4B, 0xD5, 0x80, 
@@ -8254,37 +8236,18 @@ const unsigned char timelib_timezone_db_
 0x36, 0x0D, 0x01, 0x70, 0x3A, 0xE9, 0xB3, 0xA0, 0x3B, 0xB4, 0xAC, 0x90, 0x3C, 0xA4, 0xAB, 0xA0, 
 0x3D, 0x94, 0x8E, 0x90, 0x3E, 0x84, 0x8D, 0xA0, 0x3F, 0x74, 0x70, 0x90, 0x40, 0x64, 0x6F, 0xA0, 
 0x41, 0x54, 0x52, 0x90, 0x42, 0x44, 0x51, 0xA0, 0x43, 0x34, 0x34, 0x90, 0x44, 0x24, 0x33, 0xA0, 
-0x45, 0x1D, 0x51, 0x10, 0x46, 0x0D, 0x50, 0x20, 0x46, 0xFD, 0x33, 0x10, 0x47, 0xED, 0x32, 0x20, 
-0x48, 0xDD, 0x15, 0x10, 0x49, 0xCD, 0x14, 0x20, 0x4A, 0xBC, 0xF7, 0x10, 0x4B, 0xAC, 0xF6, 0x20, 
-0x4C, 0x9C, 0xD9, 0x10, 0x4D, 0x8C, 0xD8, 0x20, 0x4E, 0x7C, 0xBB, 0x10, 0x4F, 0x75, 0xF4, 0xA0, 
-0x50, 0x65, 0xD7, 0x90, 0x51, 0x55, 0xD6, 0xA0, 0x52, 0x45, 0xB9, 0x90, 0x53, 0x35, 0xB8, 0xA0, 
-0x54, 0x25, 0x9B, 0x90, 0x55, 0x15, 0x9A, 0xA0, 0x56, 0x05, 0x7D, 0x90, 0x56, 0xF5, 0x7C, 0xA0, 
-0x57, 0xE5, 0x5F, 0x90, 0x58, 0xD5, 0x5E, 0xA0, 0x59, 0xCE, 0x7C, 0x10, 0x5A, 0xBE, 0x7B, 0x20, 
-0x5B, 0xAE, 0x5E, 0x10, 0x5C, 0x9E, 0x5D, 0x20, 0x5D, 0x8E, 0x40, 0x10, 0x5E, 0x7E, 0x3F, 0x20, 
-0x5F, 0x6E, 0x22, 0x10, 0x60, 0x5E, 0x21, 0x20, 0x61, 0x4E, 0x04, 0x10, 0x62, 0x3E, 0x03, 0x20, 
-0x63, 0x2D, 0xE6, 0x10, 0x64, 0x1D, 0xE5, 0x20, 0x65, 0x17, 0x02, 0x90, 0x66, 0x07, 0x01, 0xA0, 
-0x66, 0xF6, 0xE4, 0x90, 0x67, 0xE6, 0xE3, 0xA0, 0x68, 0xD6, 0xC6, 0x90, 0x69, 0xC6, 0xC5, 0xA0, 
-0x6A, 0xB6, 0xA8, 0x90, 0x6B, 0xA6, 0xA7, 0xA0, 0x6C, 0x96, 0x8A, 0x90, 0x6D, 0x86, 0x89, 0xA0, 
-0x6E, 0x7F, 0xA7, 0x10, 0x6F, 0x6F, 0xA6, 0x20, 0x70, 0x5F, 0x89, 0x10, 0x71, 0x4F, 0x88, 0x20, 
-0x72, 0x3F, 0x6B, 0x10, 0x73, 0x2F, 0x6A, 0x20, 0x74, 0x1F, 0x4D, 0x10, 0x75, 0x0F, 0x4C, 0x20, 
-0x75, 0xFF, 0x2F, 0x10, 0x76, 0xEF, 0x2E, 0x20, 0x77, 0xDF, 0x11, 0x10, 0x78, 0xCF, 0x10, 0x20, 
-0x79, 0xC8, 0x2D, 0x90, 0x7A, 0xB8, 0x2C, 0xA0, 0x7B, 0xA8, 0x0F, 0x90, 0x7C, 0x98, 0x0E, 0xA0, 
-0x7D, 0x87, 0xF1, 0x90, 0x7E, 0x77, 0xF0, 0xA0, 0x7F, 0x67, 0xD3, 0x90, 0x01, 0x03, 0x02, 0x03, 
-0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
-0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
-0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
-0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
+0x45, 0x1D, 0x51, 0x10, 0x01, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
-0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x00, 0x00, 0x64, 0x34, 0x00, 0x00, 0x00, 0x00, 
-0x62, 0x70, 0x00, 0x04, 0x00, 0x00, 0x7E, 0x90, 0x01, 0x09, 0x00, 0x00, 0x70, 0x80, 0x00, 0x04, 
-0x4C, 0x4D, 0x54, 0x00, 0x55, 0x4C, 0x41, 0x54, 0x00, 0x55, 0x4C, 0x41, 0x53, 0x54, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x02, 0x03, 0x00, 0x00, 0x64, 0x34, 0x00, 0x00, 0x00, 0x00, 0x62, 0x70, 0x00, 0x04, 0x00, 0x00, 
+0x7E, 0x90, 0x01, 0x09, 0x00, 0x00, 0x70, 0x80, 0x00, 0x04, 0x4C, 0x4D, 0x54, 0x00, 0x55, 0x4C, 
+0x41, 0x54, 0x00, 0x55, 0x4C, 0x41, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 
 
 /* Asia/Ulan_Bator */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0F, 0x86, 0xD3, 0xEE, 0x4C, 
+0x00, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0F, 0x86, 0xD3, 0xEE, 0x4C, 
 0x0F, 0x0B, 0xDC, 0x90, 0x18, 0xE9, 0xC8, 0x80, 0x19, 0xDA, 0xFC, 0xF0, 0x1A, 0xCC, 0x4D, 0x80, 
 0x1B, 0xBC, 0x30, 0x70, 0x1C, 0xAC, 0x2F, 0x80, 0x1D, 0x9C, 0x12, 0x70, 0x1E, 0x8C, 0x11, 0x80, 
 0x1F, 0x7B, 0xF4, 0x70, 0x20, 0x6B, 0xF3, 0x80, 0x21, 0x5B, 0xD6, 0x70, 0x22, 0x4B, 0xD5, 0x80, 
@@ -8296,32 +8259,13 @@ const unsigned char timelib_timezone_db_
 0x36, 0x0D, 0x01, 0x70, 0x3A, 0xE9, 0xB3, 0xA0, 0x3B, 0xB4, 0xAC, 0x90, 0x3C, 0xA4, 0xAB, 0xA0, 
 0x3D, 0x94, 0x8E, 0x90, 0x3E, 0x84, 0x8D, 0xA0, 0x3F, 0x74, 0x70, 0x90, 0x40, 0x64, 0x6F, 0xA0, 
 0x41, 0x54, 0x52, 0x90, 0x42, 0x44, 0x51, 0xA0, 0x43, 0x34, 0x34, 0x90, 0x44, 0x24, 0x33, 0xA0, 
-0x45, 0x1D, 0x51, 0x10, 0x46, 0x0D, 0x50, 0x20, 0x46, 0xFD, 0x33, 0x10, 0x47, 0xED, 0x32, 0x20, 
-0x48, 0xDD, 0x15, 0x10, 0x49, 0xCD, 0x14, 0x20, 0x4A, 0xBC, 0xF7, 0x10, 0x4B, 0xAC, 0xF6, 0x20, 
-0x4C, 0x9C, 0xD9, 0x10, 0x4D, 0x8C, 0xD8, 0x20, 0x4E, 0x7C, 0xBB, 0x10, 0x4F, 0x75, 0xF4, 0xA0, 
-0x50, 0x65, 0xD7, 0x90, 0x51, 0x55, 0xD6, 0xA0, 0x52, 0x45, 0xB9, 0x90, 0x53, 0x35, 0xB8, 0xA0, 
-0x54, 0x25, 0x9B, 0x90, 0x55, 0x15, 0x9A, 0xA0, 0x56, 0x05, 0x7D, 0x90, 0x56, 0xF5, 0x7C, 0xA0, 
-0x57, 0xE5, 0x5F, 0x90, 0x58, 0xD5, 0x5E, 0xA0, 0x59, 0xCE, 0x7C, 0x10, 0x5A, 0xBE, 0x7B, 0x20, 
-0x5B, 0xAE, 0x5E, 0x10, 0x5C, 0x9E, 0x5D, 0x20, 0x5D, 0x8E, 0x40, 0x10, 0x5E, 0x7E, 0x3F, 0x20, 
-0x5F, 0x6E, 0x22, 0x10, 0x60, 0x5E, 0x21, 0x20, 0x61, 0x4E, 0x04, 0x10, 0x62, 0x3E, 0x03, 0x20, 
-0x63, 0x2D, 0xE6, 0x10, 0x64, 0x1D, 0xE5, 0x20, 0x65, 0x17, 0x02, 0x90, 0x66, 0x07, 0x01, 0xA0, 
-0x66, 0xF6, 0xE4, 0x90, 0x67, 0xE6, 0xE3, 0xA0, 0x68, 0xD6, 0xC6, 0x90, 0x69, 0xC6, 0xC5, 0xA0, 
-0x6A, 0xB6, 0xA8, 0x90, 0x6B, 0xA6, 0xA7, 0xA0, 0x6C, 0x96, 0x8A, 0x90, 0x6D, 0x86, 0x89, 0xA0, 
-0x6E, 0x7F, 0xA7, 0x10, 0x6F, 0x6F, 0xA6, 0x20, 0x70, 0x5F, 0x89, 0x10, 0x71, 0x4F, 0x88, 0x20, 
-0x72, 0x3F, 0x6B, 0x10, 0x73, 0x2F, 0x6A, 0x20, 0x74, 0x1F, 0x4D, 0x10, 0x75, 0x0F, 0x4C, 0x20, 
-0x75, 0xFF, 0x2F, 0x10, 0x76, 0xEF, 0x2E, 0x20, 0x77, 0xDF, 0x11, 0x10, 0x78, 0xCF, 0x10, 0x20, 
-0x79, 0xC8, 0x2D, 0x90, 0x7A, 0xB8, 0x2C, 0xA0, 0x7B, 0xA8, 0x0F, 0x90, 0x7C, 0x98, 0x0E, 0xA0, 
-0x7D, 0x87, 0xF1, 0x90, 0x7E, 0x77, 0xF0, 0xA0, 0x7F, 0x67, 0xD3, 0x90, 0x01, 0x03, 0x02, 0x03, 
-0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
-0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
-0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
-0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
+0x45, 0x1D, 0x51, 0x10, 0x01, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 
-0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x02, 0x03, 0x00, 0x00, 0x64, 0x34, 0x00, 0x00, 0x00, 0x00, 
-0x62, 0x70, 0x00, 0x04, 0x00, 0x00, 0x7E, 0x90, 0x01, 0x09, 0x00, 0x00, 0x70, 0x80, 0x00, 0x04, 
-0x4C, 0x4D, 0x54, 0x00, 0x55, 0x4C, 0x41, 0x54, 0x00, 0x55, 0x4C, 0x41, 0x53, 0x54, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x02, 0x03, 0x00, 0x00, 0x64, 0x34, 0x00, 0x00, 0x00, 0x00, 0x62, 0x70, 0x00, 0x04, 0x00, 0x00, 
+0x7E, 0x90, 0x01, 0x09, 0x00, 0x00, 0x70, 0x80, 0x00, 0x04, 0x4C, 0x4D, 0x54, 0x00, 0x55, 0x4C, 
+0x41, 0x54, 0x00, 0x55, 0x4C, 0x41, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 
 
 /* Asia/Urumqi */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
@@ -10782,22 +10726,22 @@ const unsigned char timelib_timezone_db_
 0x36, 0xFD, 0xB7, 0x50, 0x38, 0x1B, 0xCC, 0xD0, 0x38, 0xE6, 0xD3, 0xD0, 0x39, 0xFB, 0xAE, 0xD0, 
 0x3A, 0xC6, 0xB5, 0xD0, 0x3B, 0xDB, 0x90, 0xD0, 0x3C, 0xAF, 0xD2, 0x50, 0x3D, 0xBB, 0x72, 0xD0, 
 0x3E, 0x8F, 0xB4, 0x50, 0x3F, 0x9B, 0x54, 0xD0, 0x40, 0x6F, 0x96, 0x50, 0x45, 0x44, 0x35, 0x50, 
-0x46, 0x0F, 0x3C, 0x50, 0x47, 0x24, 0x17, 0x50, 0x47, 0xF8, 0x58, 0xD0, 0x49, 0x03, 0xF9, 0x50, 
-0x49, 0xD8, 0x3A, 0xD0, 0x4A, 0xE3, 0xDB, 0x50, 0x4B, 0xB8, 0x1C, 0xD0, 0x4C, 0xCC, 0xF7, 0xD0, 
-0x4D, 0x97, 0xFE, 0xD0, 0x4E, 0xAC, 0xD9, 0xD0, 0x4F, 0x77, 0xE0, 0xD0, 0x50, 0x8C, 0xBB, 0xD0, 
-0x51, 0x60, 0xFD, 0x50, 0x52, 0x6C, 0x9D, 0xD0, 0x53, 0x40, 0xDF, 0x50, 0x54, 0x4C, 0x7F, 0xD0, 
-0x55, 0x20, 0xC1, 0x50, 0x56, 0x2C, 0x61, 0xD0, 0x57, 0x00, 0xA3, 0x50, 0x58, 0x15, 0x7E, 0x50, 
-0x58, 0xE0, 0x85, 0x50, 0x59, 0xF5, 0x60, 0x50, 0x5A, 0xC0, 0x67, 0x50, 0x5B, 0xD5, 0x42, 0x50, 
-0x5C, 0xA9, 0x83, 0xD0, 0x5D, 0xB5, 0x24, 0x50, 0x5E, 0x89, 0x65, 0xD0, 0x5F, 0x95, 0x06, 0x50, 
-0x60, 0x69, 0x47, 0xD0, 0x61, 0x7E, 0x22, 0xD0, 0x62, 0x49, 0x29, 0xD0, 0x63, 0x5E, 0x04, 0xD0, 
-0x64, 0x29, 0x0B, 0xD0, 0x65, 0x3D, 0xE6, 0xD0, 0x66, 0x12, 0x28, 0x50, 0x67, 0x1D, 0xC8, 0xD0, 
-0x67, 0xF2, 0x0A, 0x50, 0x68, 0xFD, 0xAA, 0xD0, 0x69, 0xD1, 0xEC, 0x50, 0x6A, 0xDD, 0x8C, 0xD0, 
-0x6B, 0xB1, 0xCE, 0x50, 0x6C, 0xC6, 0xA9, 0x50, 0x6D, 0x91, 0xB0, 0x50, 0x6E, 0xA6, 0x8B, 0x50, 
-0x6F, 0x71, 0x92, 0x50, 0x70, 0x86, 0x6D, 0x50, 0x71, 0x5A, 0xAE, 0xD0, 0x72, 0x66, 0x4F, 0x50, 
-0x73, 0x3A, 0x90, 0xD0, 0x74, 0x46, 0x31, 0x50, 0x75, 0x1A, 0x72, 0xD0, 0x76, 0x2F, 0x4D, 0xD0, 
-0x76, 0xFA, 0x54, 0xD0, 0x78, 0x0F, 0x2F, 0xD0, 0x78, 0xDA, 0x36, 0xD0, 0x79, 0xEF, 0x11, 0xD0, 
-0x7A, 0xBA, 0x18, 0xD0, 0x7B, 0xCE, 0xF3, 0xD0, 0x7C, 0xA3, 0x35, 0x50, 0x7D, 0xAE, 0xD5, 0xD0, 
-0x7E, 0x83, 0x17, 0x50, 0x7F, 0x8E, 0xB7, 0xD0, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
+0x45, 0xF3, 0x8C, 0xD0, 0x47, 0x2D, 0x51, 0xD0, 0x47, 0xD3, 0x6E, 0xD0, 0x49, 0x0D, 0x33, 0xD0, 
+0x49, 0xB3, 0x50, 0xD0, 0x4A, 0xED, 0x15, 0xD0, 0x4B, 0x9C, 0x6D, 0x50, 0x4C, 0xD6, 0x32, 0x50, 
+0x4D, 0x7C, 0x4F, 0x50, 0x4E, 0xB6, 0x14, 0x50, 0x4F, 0x5C, 0x31, 0x50, 0x50, 0x95, 0xF6, 0x50, 
+0x51, 0x3C, 0x13, 0x50, 0x52, 0x75, 0xD8, 0x50, 0x53, 0x1B, 0xF5, 0x50, 0x54, 0x55, 0xBA, 0x50, 
+0x54, 0xFB, 0xD7, 0x50, 0x56, 0x35, 0x9C, 0x50, 0x56, 0xE4, 0xF3, 0xD0, 0x58, 0x1E, 0xB8, 0xD0, 
+0x58, 0xC4, 0xD5, 0xD0, 0x59, 0xFE, 0x9A, 0xD0, 0x5A, 0xA4, 0xB7, 0xD0, 0x5B, 0xDE, 0x7C, 0xD0, 
+0x5C, 0x84, 0x99, 0xD0, 0x5D, 0xBE, 0x5E, 0xD0, 0x5E, 0x64, 0x7B, 0xD0, 0x5F, 0x9E, 0x40, 0xD0, 
+0x60, 0x4D, 0x98, 0x50, 0x61, 0x87, 0x5D, 0x50, 0x62, 0x2D, 0x7A, 0x50, 0x63, 0x67, 0x3F, 0x50, 
+0x64, 0x0D, 0x5C, 0x50, 0x65, 0x47, 0x21, 0x50, 0x65, 0xED, 0x3E, 0x50, 0x67, 0x27, 0x03, 0x50, 
+0x67, 0xCD, 0x20, 0x50, 0x69, 0x06, 0xE5, 0x50, 0x69, 0xAD, 0x02, 0x50, 0x6A, 0xE6, 0xC7, 0x50, 
+0x6B, 0x96, 0x1E, 0xD0, 0x6C, 0xCF, 0xE3, 0xD0, 0x6D, 0x76, 0x00, 0xD0, 0x6E, 0xAF, 0xC5, 0xD0, 
+0x6F, 0x55, 0xE2, 0xD0, 0x70, 0x8F, 0xA7, 0xD0, 0x71, 0x35, 0xC4, 0xD0, 0x72, 0x6F, 0x89, 0xD0, 
+0x73, 0x15, 0xA6, 0xD0, 0x74, 0x4F, 0x6B, 0xD0, 0x74, 0xFE, 0xC3, 0x50, 0x76, 0x38, 0x88, 0x50, 
+0x76, 0xDE, 0xA5, 0x50, 0x78, 0x18, 0x6A, 0x50, 0x78, 0xBE, 0x87, 0x50, 0x79, 0xF8, 0x4C, 0x50, 
+0x7A, 0x9E, 0x69, 0x50, 0x7B, 0xD8, 0x2E, 0x50, 0x7C, 0x7E, 0x4B, 0x50, 0x7D, 0xB8, 0x10, 0x50, 
+0x7E, 0x5E, 0x2D, 0x50, 0x7F, 0x97, 0xF2, 0x50, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
@@ -12336,8 +12280,8 @@ const unsigned char timelib_timezone_db_
 
 /* Europe/Istanbul */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0xAA, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x16, 0x90, 0x8B, 0xF5, 0x98, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0xAB, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x16, 0x90, 0x8B, 0xF5, 0x98, 
 0x9B, 0x0C, 0x17, 0x60, 0x9B, 0xD5, 0xBE, 0xD0, 0xA2, 0x65, 0x63, 0xE0, 0xA3, 0x7B, 0x82, 0x50, 
 0xA4, 0x4E, 0x80, 0x60, 0xA5, 0x3F, 0xB4, 0xD0, 0xA6, 0x25, 0x27, 0xE0, 0xA7, 0x27, 0x7F, 0xD0, 
 0xAA, 0x28, 0x28, 0x60, 0xAA, 0xE1, 0xFD, 0xD0, 0xAB, 0xF9, 0x89, 0xE0, 0xAC, 0xC3, 0x31, 0x50, 
@@ -12364,38 +12308,40 @@ const unsigned char timelib_timezone_db_
 0x38, 0x1B, 0x78, 0x70, 0x38, 0xDD, 0x44, 0xF0, 0x39, 0xFB, 0x5A, 0x70, 0x3A, 0xBD, 0x26, 0xF0, 
 0x3B, 0xDB, 0x3C, 0x70, 0x3C, 0xA6, 0x43, 0x70, 0x3D, 0xBB, 0x1E, 0x70, 0x3E, 0x86, 0x25, 0x70, 
 0x3F, 0x9B, 0x00, 0x70, 0x40, 0x66, 0x07, 0x70, 0x41, 0x84, 0x1C, 0xF0, 0x42, 0x45, 0xE9, 0x70, 
-0x43, 0x63, 0xFE, 0xF0, 0x44, 0x25, 0xCB, 0x70, 0x45, 0x43, 0xE0, 0xF0, 0x46, 0x05, 0xAD, 0x70, 
-0x47, 0x23, 0xC2, 0xF0, 0x47, 0xEE, 0xC9, 0xF0, 0x49, 0x03, 0xA4, 0xF0, 0x49, 0xCE, 0xAB, 0xF0, 
-0x4A, 0xE3, 0x86, 0xF0, 0x4B, 0xAE, 0x8D, 0xF0, 0x4C, 0xCC, 0xA3, 0x70, 0x4D, 0x8E, 0x6F, 0xF0, 
-0x4E, 0xAC, 0x85, 0x70, 0x4F, 0x6E, 0x51, 0xF0, 0x50, 0x8C, 0x67, 0x70, 0x51, 0x57, 0x6E, 0x70, 
-0x52, 0x6C, 0x49, 0x70, 0x53, 0x37, 0x50, 0x70, 0x54, 0x4C, 0x2B, 0x70, 0x55, 0x17, 0x32, 0x70, 
-0x56, 0x2C, 0x0D, 0x70, 0x56, 0xF7, 0x14, 0x70, 0x58, 0x15, 0x29, 0xF0, 0x58, 0xD6, 0xF6, 0x70, 
-0x59, 0xF5, 0x0B, 0xF0, 0x5A, 0xB6, 0xD8, 0x70, 0x5B, 0xD4, 0xED, 0xF0, 0x5C, 0x9F, 0xF4, 0xF0, 
-0x5D, 0xB4, 0xCF, 0xF0, 0x5E, 0x7F, 0xD6, 0xF0, 0x5F, 0x94, 0xB1, 0xF0, 0x60, 0x5F, 0xB8, 0xF0, 
-0x61, 0x7D, 0xCE, 0x70, 0x62, 0x3F, 0x9A, 0xF0, 0x63, 0x5D, 0xB0, 0x70, 0x64, 0x1F, 0x7C, 0xF0, 
-0x65, 0x3D, 0x92, 0x70, 0x66, 0x08, 0x99, 0x70, 0x67, 0x1D, 0x74, 0x70, 0x67, 0xE8, 0x7B, 0x70, 
-0x68, 0xFD, 0x56, 0x70, 0x69, 0xC8, 0x5D, 0x70, 0x6A, 0xDD, 0x38, 0x70, 0x6B, 0xA8, 0x3F, 0x70, 
-0x6C, 0xC6, 0x54, 0xF0, 0x6D, 0x88, 0x21, 0x70, 0x6E, 0xA6, 0x36, 0xF0, 0x6F, 0x68, 0x03, 0x70, 
-0x70, 0x86, 0x18, 0xF0, 0x71, 0x51, 0x1F, 0xF0, 0x72, 0x65, 0xFA, 0xF0, 0x73, 0x31, 0x01, 0xF0, 
-0x74, 0x45, 0xDC, 0xF0, 0x75, 0x10, 0xE3, 0xF0, 0x76, 0x2E, 0xF9, 0x70, 0x76, 0xF0, 0xC5, 0xF0, 
-0x78, 0x0E, 0xDB, 0x70, 0x78, 0xD0, 0xA7, 0xF0, 0x79, 0xEE, 0xBD, 0x70, 0x7A, 0xB0, 0x89, 0xF0, 
-0x7B, 0xCE, 0x9F, 0x70, 0x7C, 0x99, 0xA6, 0x70, 0x7D, 0xAE, 0x81, 0x70, 0x7E, 0x79, 0x88, 0x70, 
-0x7F, 0x8E, 0x63, 0x70, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
+0x43, 0x63, 0xFE, 0xF0, 0x44, 0x25, 0xCB, 0x70, 0x45, 0x43, 0xE0, 0xF0, 0x45, 0x98, 0x32, 0xE0, 
+0x46, 0x05, 0xC9, 0x90, 0x47, 0x23, 0xDF, 0x10, 0x47, 0xEE, 0xE6, 0x10, 0x49, 0x03, 0xC1, 0x10, 
+0x49, 0xCE, 0xC8, 0x10, 0x4A, 0xE3, 0xA3, 0x10, 0x4B, 0xAE, 0xAA, 0x10, 0x4C, 0xCC, 0xBF, 0x90, 
+0x4D, 0x8E, 0x8C, 0x10, 0x4E, 0xAC, 0xA1, 0x90, 0x4F, 0x6E, 0x6E, 0x10, 0x50, 0x8C, 0x83, 0x90, 
+0x51, 0x57, 0x8A, 0x90, 0x52, 0x6C, 0x65, 0x90, 0x53, 0x37, 0x6C, 0x90, 0x54, 0x4C, 0x47, 0x90, 
+0x55, 0x17, 0x4E, 0x90, 0x56, 0x2C, 0x29, 0x90, 0x56, 0xF7, 0x30, 0x90, 0x58, 0x15, 0x46, 0x10, 
+0x58, 0xD7, 0x12, 0x90, 0x59, 0xF5, 0x28, 0x10, 0x5A, 0xB6, 0xF4, 0x90, 0x5B, 0xD5, 0x0A, 0x10, 
+0x5C, 0xA0, 0x11, 0x10, 0x5D, 0xB4, 0xEC, 0x10, 0x5E, 0x7F, 0xF3, 0x10, 0x5F, 0x94, 0xCE, 0x10, 
+0x60, 0x5F, 0xD5, 0x10, 0x61, 0x7D, 0xEA, 0x90, 0x62, 0x3F, 0xB7, 0x10, 0x63, 0x5D, 0xCC, 0x90, 
+0x64, 0x1F, 0x99, 0x10, 0x65, 0x3D, 0xAE, 0x90, 0x66, 0x08, 0xB5, 0x90, 0x67, 0x1D, 0x90, 0x90, 
+0x67, 0xE8, 0x97, 0x90, 0x68, 0xFD, 0x72, 0x90, 0x69, 0xC8, 0x79, 0x90, 0x6A, 0xDD, 0x54, 0x90, 
+0x6B, 0xA8, 0x5B, 0x90, 0x6C, 0xC6, 0x71, 0x10, 0x6D, 0x88, 0x3D, 0x90, 0x6E, 0xA6, 0x53, 0x10, 
+0x6F, 0x68, 0x1F, 0x90, 0x70, 0x86, 0x35, 0x10, 0x71, 0x51, 0x3C, 0x10, 0x72, 0x66, 0x17, 0x10, 
+0x73, 0x31, 0x1E, 0x10, 0x74, 0x45, 0xF9, 0x10, 0x75, 0x11, 0x00, 0x10, 0x76, 0x2F, 0x15, 0x90, 
+0x76, 0xF0, 0xE2, 0x10, 0x78, 0x0E, 0xF7, 0x90, 0x78, 0xD0, 0xC4, 0x10, 0x79, 0xEE, 0xD9, 0x90, 
+0x7A, 0xB0, 0xA6, 0x10, 0x7B, 0xCE, 0xBB, 0x90, 0x7C, 0x99, 0xC2, 0x90, 0x7D, 0xAE, 0x9D, 0x90, 
+0x7E, 0x79, 0xA4, 0x90, 0x7F, 0x8E, 0x7F, 0x90, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
-0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 
-0x03, 0x04, 0x03, 0x04, 0x01, 0x02, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
-0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
-0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
-0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
+0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x03, 0x04, 
+0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x01, 0x02, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
-0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x00, 0x00, 
-0x1B, 0x68, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x30, 0x01, 0x04, 0x00, 0x00, 0x1C, 0x20, 0x00, 0x09, 
-0x00, 0x00, 0x38, 0x40, 0x01, 0x0D, 0x00, 0x00, 0x2A, 0x30, 0x00, 0x12, 0x00, 0x00, 0x2A, 0x30, 
-0x01, 0x04, 0x00, 0x00, 0x1C, 0x20, 0x00, 0x09, 0x49, 0x4D, 0x54, 0x00, 0x45, 0x45, 0x53, 0x54, 
-0x00, 0x45, 0x45, 0x54, 0x00, 0x54, 0x52, 0x53, 0x54, 0x00, 0x54, 0x52, 0x54, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x05, 0x06, 0x05, 0x06, 0x02, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 
+0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 
+0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 
+0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 
+0x08, 0x07, 0x08, 0x00, 0x00, 0x1B, 0x68, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x30, 0x01, 0x04, 0x00, 
+0x00, 0x1C, 0x20, 0x00, 0x09, 0x00, 0x00, 0x38, 0x40, 0x01, 0x0D, 0x00, 0x00, 0x2A, 0x30, 0x00, 
+0x12, 0x00, 0x00, 0x2A, 0x30, 0x01, 0x04, 0x00, 0x00, 0x1C, 0x20, 0x00, 0x09, 0x00, 0x00, 0x2A, 
+0x30, 0x01, 0x04, 0x00, 0x00, 0x1C, 0x20, 0x00, 0x09, 0x49, 0x4D, 0x54, 0x00, 0x45, 0x45, 0x53, 
+0x54, 0x00, 0x45, 0x45, 0x54, 0x00, 0x54, 0x52, 0x53, 0x54, 0x00, 0x54, 0x52, 0x54, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
+0x01, 
 
 /* Europe/Jersey */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
@@ -16227,8 +16173,8 @@ const unsigned char timelib_timezone_db_
 
 /* Turkey */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0xAA, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x16, 0x90, 0x8B, 0xF5, 0x98, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0xAB, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x16, 0x90, 0x8B, 0xF5, 0x98, 
 0x9B, 0x0C, 0x17, 0x60, 0x9B, 0xD5, 0xBE, 0xD0, 0xA2, 0x65, 0x63, 0xE0, 0xA3, 0x7B, 0x82, 0x50, 
 0xA4, 0x4E, 0x80, 0x60, 0xA5, 0x3F, 0xB4, 0xD0, 0xA6, 0x25, 0x27, 0xE0, 0xA7, 0x27, 0x7F, 0xD0, 
 0xAA, 0x28, 0x28, 0x60, 0xAA, 0xE1, 0xFD, 0xD0, 0xAB, 0xF9, 0x89, 0xE0, 0xAC, 0xC3, 0x31, 0x50, 
@@ -16255,38 +16201,40 @@ const unsigned char timelib_timezone_db_
 0x38, 0x1B, 0x78, 0x70, 0x38, 0xDD, 0x44, 0xF0, 0x39, 0xFB, 0x5A, 0x70, 0x3A, 0xBD, 0x26, 0xF0, 
 0x3B, 0xDB, 0x3C, 0x70, 0x3C, 0xA6, 0x43, 0x70, 0x3D, 0xBB, 0x1E, 0x70, 0x3E, 0x86, 0x25, 0x70, 
 0x3F, 0x9B, 0x00, 0x70, 0x40, 0x66, 0x07, 0x70, 0x41, 0x84, 0x1C, 0xF0, 0x42, 0x45, 0xE9, 0x70, 
-0x43, 0x63, 0xFE, 0xF0, 0x44, 0x25, 0xCB, 0x70, 0x45, 0x43, 0xE0, 0xF0, 0x46, 0x05, 0xAD, 0x70, 
-0x47, 0x23, 0xC2, 0xF0, 0x47, 0xEE, 0xC9, 0xF0, 0x49, 0x03, 0xA4, 0xF0, 0x49, 0xCE, 0xAB, 0xF0, 
-0x4A, 0xE3, 0x86, 0xF0, 0x4B, 0xAE, 0x8D, 0xF0, 0x4C, 0xCC, 0xA3, 0x70, 0x4D, 0x8E, 0x6F, 0xF0, 
-0x4E, 0xAC, 0x85, 0x70, 0x4F, 0x6E, 0x51, 0xF0, 0x50, 0x8C, 0x67, 0x70, 0x51, 0x57, 0x6E, 0x70, 
-0x52, 0x6C, 0x49, 0x70, 0x53, 0x37, 0x50, 0x70, 0x54, 0x4C, 0x2B, 0x70, 0x55, 0x17, 0x32, 0x70, 
-0x56, 0x2C, 0x0D, 0x70, 0x56, 0xF7, 0x14, 0x70, 0x58, 0x15, 0x29, 0xF0, 0x58, 0xD6, 0xF6, 0x70, 
-0x59, 0xF5, 0x0B, 0xF0, 0x5A, 0xB6, 0xD8, 0x70, 0x5B, 0xD4, 0xED, 0xF0, 0x5C, 0x9F, 0xF4, 0xF0, 
-0x5D, 0xB4, 0xCF, 0xF0, 0x5E, 0x7F, 0xD6, 0xF0, 0x5F, 0x94, 0xB1, 0xF0, 0x60, 0x5F, 0xB8, 0xF0, 
-0x61, 0x7D, 0xCE, 0x70, 0x62, 0x3F, 0x9A, 0xF0, 0x63, 0x5D, 0xB0, 0x70, 0x64, 0x1F, 0x7C, 0xF0, 
-0x65, 0x3D, 0x92, 0x70, 0x66, 0x08, 0x99, 0x70, 0x67, 0x1D, 0x74, 0x70, 0x67, 0xE8, 0x7B, 0x70, 
-0x68, 0xFD, 0x56, 0x70, 0x69, 0xC8, 0x5D, 0x70, 0x6A, 0xDD, 0x38, 0x70, 0x6B, 0xA8, 0x3F, 0x70, 
-0x6C, 0xC6, 0x54, 0xF0, 0x6D, 0x88, 0x21, 0x70, 0x6E, 0xA6, 0x36, 0xF0, 0x6F, 0x68, 0x03, 0x70, 
-0x70, 0x86, 0x18, 0xF0, 0x71, 0x51, 0x1F, 0xF0, 0x72, 0x65, 0xFA, 0xF0, 0x73, 0x31, 0x01, 0xF0, 
-0x74, 0x45, 0xDC, 0xF0, 0x75, 0x10, 0xE3, 0xF0, 0x76, 0x2E, 0xF9, 0x70, 0x76, 0xF0, 0xC5, 0xF0, 
-0x78, 0x0E, 0xDB, 0x70, 0x78, 0xD0, 0xA7, 0xF0, 0x79, 0xEE, 0xBD, 0x70, 0x7A, 0xB0, 0x89, 0xF0, 
-0x7B, 0xCE, 0x9F, 0x70, 0x7C, 0x99, 0xA6, 0x70, 0x7D, 0xAE, 0x81, 0x70, 0x7E, 0x79, 0x88, 0x70, 
-0x7F, 0x8E, 0x63, 0x70, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
+0x43, 0x63, 0xFE, 0xF0, 0x44, 0x25, 0xCB, 0x70, 0x45, 0x43, 0xE0, 0xF0, 0x45, 0x98, 0x32, 0xE0, 
+0x46, 0x05, 0xC9, 0x90, 0x47, 0x23, 0xDF, 0x10, 0x47, 0xEE, 0xE6, 0x10, 0x49, 0x03, 0xC1, 0x10, 
+0x49, 0xCE, 0xC8, 0x10, 0x4A, 0xE3, 0xA3, 0x10, 0x4B, 0xAE, 0xAA, 0x10, 0x4C, 0xCC, 0xBF, 0x90, 
+0x4D, 0x8E, 0x8C, 0x10, 0x4E, 0xAC, 0xA1, 0x90, 0x4F, 0x6E, 0x6E, 0x10, 0x50, 0x8C, 0x83, 0x90, 
+0x51, 0x57, 0x8A, 0x90, 0x52, 0x6C, 0x65, 0x90, 0x53, 0x37, 0x6C, 0x90, 0x54, 0x4C, 0x47, 0x90, 
+0x55, 0x17, 0x4E, 0x90, 0x56, 0x2C, 0x29, 0x90, 0x56, 0xF7, 0x30, 0x90, 0x58, 0x15, 0x46, 0x10, 
+0x58, 0xD7, 0x12, 0x90, 0x59, 0xF5, 0x28, 0x10, 0x5A, 0xB6, 0xF4, 0x90, 0x5B, 0xD5, 0x0A, 0x10, 
+0x5C, 0xA0, 0x11, 0x10, 0x5D, 0xB4, 0xEC, 0x10, 0x5E, 0x7F, 0xF3, 0x10, 0x5F, 0x94, 0xCE, 0x10, 
+0x60, 0x5F, 0xD5, 0x10, 0x61, 0x7D, 0xEA, 0x90, 0x62, 0x3F, 0xB7, 0x10, 0x63, 0x5D, 0xCC, 0x90, 
+0x64, 0x1F, 0x99, 0x10, 0x65, 0x3D, 0xAE, 0x90, 0x66, 0x08, 0xB5, 0x90, 0x67, 0x1D, 0x90, 0x90, 
+0x67, 0xE8, 0x97, 0x90, 0x68, 0xFD, 0x72, 0x90, 0x69, 0xC8, 0x79, 0x90, 0x6A, 0xDD, 0x54, 0x90, 
+0x6B, 0xA8, 0x5B, 0x90, 0x6C, 0xC6, 0x71, 0x10, 0x6D, 0x88, 0x3D, 0x90, 0x6E, 0xA6, 0x53, 0x10, 
+0x6F, 0x68, 0x1F, 0x90, 0x70, 0x86, 0x35, 0x10, 0x71, 0x51, 0x3C, 0x10, 0x72, 0x66, 0x17, 0x10, 
+0x73, 0x31, 0x1E, 0x10, 0x74, 0x45, 0xF9, 0x10, 0x75, 0x11, 0x00, 0x10, 0x76, 0x2F, 0x15, 0x90, 
+0x76, 0xF0, 0xE2, 0x10, 0x78, 0x0E, 0xF7, 0x90, 0x78, 0xD0, 0xC4, 0x10, 0x79, 0xEE, 0xD9, 0x90, 
+0x7A, 0xB0, 0xA6, 0x10, 0x7B, 0xCE, 0xBB, 0x90, 0x7C, 0x99, 0xC2, 0x90, 0x7D, 0xAE, 0x9D, 0x90, 
+0x7E, 0x79, 0xA4, 0x90, 0x7F, 0x8E, 0x7F, 0x90, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
-0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 
-0x03, 0x04, 0x03, 0x04, 0x01, 0x02, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
-0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
-0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
-0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
+0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x03, 0x04, 
+0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x03, 0x04, 0x01, 0x02, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 
-0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x05, 0x06, 0x00, 0x00, 
-0x1B, 0x68, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x30, 0x01, 0x04, 0x00, 0x00, 0x1C, 0x20, 0x00, 0x09, 
-0x00, 0x00, 0x38, 0x40, 0x01, 0x0D, 0x00, 0x00, 0x2A, 0x30, 0x00, 0x12, 0x00, 0x00, 0x2A, 0x30, 
-0x01, 0x04, 0x00, 0x00, 0x1C, 0x20, 0x00, 0x09, 0x49, 0x4D, 0x54, 0x00, 0x45, 0x45, 0x53, 0x54, 
-0x00, 0x45, 0x45, 0x54, 0x00, 0x54, 0x52, 0x53, 0x54, 0x00, 0x54, 0x52, 0x54, 0x00, 0x00, 0x00, 
-0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x05, 0x06, 0x05, 0x06, 0x02, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 
+0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 
+0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 
+0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 
+0x08, 0x07, 0x08, 0x00, 0x00, 0x1B, 0x68, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x30, 0x01, 0x04, 0x00, 
+0x00, 0x1C, 0x20, 0x00, 0x09, 0x00, 0x00, 0x38, 0x40, 0x01, 0x0D, 0x00, 0x00, 0x2A, 0x30, 0x00, 
+0x12, 0x00, 0x00, 0x2A, 0x30, 0x01, 0x04, 0x00, 0x00, 0x1C, 0x20, 0x00, 0x09, 0x00, 0x00, 0x2A, 
+0x30, 0x01, 0x04, 0x00, 0x00, 0x1C, 0x20, 0x00, 0x09, 0x49, 0x4D, 0x54, 0x00, 0x45, 0x45, 0x53, 
+0x54, 0x00, 0x45, 0x45, 0x54, 0x00, 0x54, 0x52, 0x53, 0x54, 0x00, 0x54, 0x52, 0x54, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
+0x01, 
 
 /* UCT */
 0x54, 0x5A, 0x69, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
@@ -17057,4 +17005,4 @@ const unsigned char timelib_timezone_db_
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 
 0x00, 0x00, 0x55, 0x54, 0x43, 0x00, 0x00, 0x00, };
 
-const timelib_tzdb timezonedb_builtin = { "2007.3", 550, timezonedb_idx_builtin, timelib_timezone_db_data_builtin };
+const timelib_tzdb timezonedb_builtin = { "2007.5", 551, timezonedb_idx_builtin, timelib_timezone_db_data_builtin };
Index: ext/date/tests/bug35885.phpt
===================================================================
RCS file: /repository/php-src/ext/date/tests/bug35885.phpt,v
retrieving revision 1.1.2.2
retrieving revision 1.1.2.2.2.1
diff -u -p -d -r1.1.2.2 -r1.1.2.2.2.1
--- ext/date/tests/bug35885.phpt	4 Jan 2006 21:31:35 -0000	1.1.2.2
+++ ext/date/tests/bug35885.phpt	11 Apr 2007 22:34:48 -0000	1.1.2.2.2.1
@@ -7,7 +7,13 @@ date_default_timezone_set("UTC");
 $ts = date(DATE_ISO8601, strtotime('NOW'));
 $ts2 = date(DATE_ISO8601, time());
 
-var_dump($ts == $ts2);
+$res = ($ts == $ts2);
+var_dump($res);
+
+if (!$res) {
+	var_dump($ts);
+	var_dump($ts2);
+}
 
 ?>
 --EXPECT--
Index: ext/date/tests/bug40861.phpt
===================================================================
RCS file: /repository/php-src/ext/date/tests/bug40861.phpt,v
retrieving revision 1.1.2.2
retrieving revision 1.1.2.3
diff -u -p -d -r1.1.2.2 -r1.1.2.3
--- ext/date/tests/bug40861.phpt	22 Mar 2007 23:34:14 -0000	1.1.2.2
+++ ext/date/tests/bug40861.phpt	11 Apr 2007 14:37:42 -0000	1.1.2.3
@@ -29,5 +29,5 @@ echo $result . "\n";
 --EXPECT--
 2000-01-01 13:00:00
 2000-01-01 11:00:00
-2000-01-01 11:00:00
+2000-01-01 13:00:00
 2000-01-01 13:00:00
Index: ext/date/tests/date_sun_info_001.phpt
===================================================================
RCS file: /repository/php-src/ext/date/tests/date_sun_info_001.phpt,v
retrieving revision 1.1.2.2
retrieving revision 1.1.2.3
diff -u -p -d -r1.1.2.2 -r1.1.2.3
--- ext/date/tests/date_sun_info_001.phpt	22 Dec 2006 13:07:53 -0000	1.1.2.2
+++ ext/date/tests/date_sun_info_001.phpt	13 Apr 2007 08:33:48 -0000	1.1.2.3
@@ -11,22 +11,22 @@ echo "Done\n";
 --EXPECTF--	
 array(9) {
   ["sunrise"]=>
-  int(1165899133)
+  int(1165897782)
   ["sunset"]=>
-  int(1165934481)
+  int(1165934168)
   ["transit"]=>
-  int(1165916807)
+  int(1165915975)
   ["civil_twilight_begin"]=>
-  int(1165897449)
+  int(1165896176)
   ["civil_twilight_end"]=>
-  int(1165936165)
+  int(1165935773)
   ["nautical_twilight_begin"]=>
-  int(1165895547)
+  int(1165894353)
   ["nautical_twilight_end"]=>
-  int(1165938067)
+  int(1165937597)
   ["astronomical_twilight_begin"]=>
-  int(1165893693)
+  int(1165892570)
   ["astronomical_twilight_end"]=>
-  int(1165939921)
+  int(1165939380)
 }
 Done
Index: ext/dba/libcdb/cdb.c
===================================================================
RCS file: /repository/php-src/ext/dba/libcdb/cdb.c,v
retrieving revision 1.10.2.1.2.2
retrieving revision 1.10.2.1.2.3
diff -u -p -d -r1.10.2.1.2.2 -r1.10.2.1.2.3
--- ext/dba/libcdb/cdb.c	1 Jan 2007 09:36:00 -0000	1.10.2.1.2.2
+++ ext/dba/libcdb/cdb.c	14 Apr 2007 11:15:13 -0000	1.10.2.1.2.3
@@ -68,7 +68,7 @@ static int cdb_match(struct cdb *c, char
 uint32 cdb_hash(char *buf, unsigned int len)
 {
 	uint32 h;
-	const unsigned char * b = buf;
+	const unsigned char * b = (unsigned char *)buf;
 
 	h = CDB_HASHSTART;
 	while (len--) {
Index: ext/dba/tests/dba007.phpt
===================================================================
RCS file: /repository/php-src/ext/dba/tests/dba007.phpt,v
retrieving revision 1.4
retrieving revision 1.4.6.1
diff -u -p -d -r1.4 -r1.4.6.1
--- ext/dba/tests/dba007.phpt	19 Jun 2003 15:48:06 -0000	1.4
+++ ext/dba/tests/dba007.phpt	18 Apr 2007 08:06:29 -0000	1.4.6.1
@@ -37,9 +37,9 @@ database file created
 database file created
 array(3) {
   [%d]=>
-  string(%d) "%s/dba/tests/test0.dbm"
+  string(%d) "%stest0.dbm"
   [%d]=>
-  string(%d) "%s/dba/tests/test1.dbm"
+  string(%d) "%stest1.dbm"
   [%d]=>
-  string(%d) "%s/dba/tests/test2.dbm"
-}
\ No newline at end of file
+  string(%d) "%stest2.dbm"
+}
Index: ext/filter/tests/007.phpt
===================================================================
RCS file: /repository/php-src/ext/filter/tests/007.phpt,v
retrieving revision 1.1.2.4
retrieving revision 1.1.2.5
diff -u -p -d -r1.1.2.4 -r1.1.2.5
--- ext/filter/tests/007.phpt	19 Dec 2006 14:16:23 -0000	1.1.2.4
+++ ext/filter/tests/007.phpt	18 Apr 2007 07:55:52 -0000	1.1.2.5
@@ -38,7 +38,7 @@ bool(false)
 bool(false)
 bool(false)
 
-Warning: filter_has_var() expects parameter 2 to be string, array given in %s/007.php on line %d
+Warning: filter_has_var() expects parameter 2 to be string, array given in %s007.php on line %d
 bool(false)
 bool(true)
 bool(true)
@@ -46,19 +46,19 @@ bool(false)
 bool(false)
 bool(false)
 
-Warning: filter_has_var() expects parameter 2 to be string, array given in %s/007.php on line %d
+Warning: filter_has_var() expects parameter 2 to be string, array given in %s007.php on line %d
 bool(false)
 bool(false)
 
-Warning: filter_has_var() expects parameter 1 to be long, string given in %s/007.php on line %d
+Warning: filter_has_var() expects parameter 1 to be long, string given in %s007.php on line %d
 bool(false)
 
-Warning: filter_has_var() expects parameter 1 to be long, array given in %s/007.php on line %d
+Warning: filter_has_var() expects parameter 1 to be long, array given in %s007.php on line %d
 bool(false)
 
-Warning: filter_has_var() expects parameter 1 to be long, array given in %s/007.php on line %d
+Warning: filter_has_var() expects parameter 1 to be long, array given in %s007.php on line %d
 bool(false)
 
-Warning: filter_has_var() expects parameter 1 to be long, string given in %s/007.php on line %d
+Warning: filter_has_var() expects parameter 1 to be long, string given in %s007.php on line %d
 bool(false)
 Done
Index: ext/filter/tests/011.phpt
===================================================================
RCS file: /repository/php-src/ext/filter/tests/011.phpt,v
retrieving revision 1.2.2.4
retrieving revision 1.2.2.5
diff -u -p -d -r1.2.2.4 -r1.2.2.5
--- ext/filter/tests/011.phpt	19 Dec 2006 14:16:23 -0000	1.2.2.4
+++ ext/filter/tests/011.phpt	18 Apr 2007 07:55:52 -0000	1.2.2.5
@@ -31,22 +31,22 @@ string(4) "test"
 string(18) "http://example.com"
 string(27) "&#60;b&#62;test&#60;/b&#62;"
 
-Notice: Object of class stdClass could not be converted to int in %s/011.php on line %d
+Notice: Object of class stdClass could not be converted to int in %s011.php on line %d
 bool(false)
 string(6) "string"
 float(12345.7)
 string(29) "&#60;p&#62;string&#60;/p&#62;"
 bool(false)
 
-Warning: filter_var() expects parameter 2 to be long, string given in %s/011.php on line %d
+Warning: filter_var() expects parameter 2 to be long, string given in %s011.php on line %d
 NULL
 
-Warning: filter_input() expects parameter 3 to be long, string given in %s/011.php on line %d
+Warning: filter_input() expects parameter 3 to be long, string given in %s011.php on line %d
 NULL
 
-Warning: filter_var() expects at most 3 parameters, 5 given in %s/011.php on line %d
+Warning: filter_var() expects at most 3 parameters, 5 given in %s011.php on line %d
 NULL
 
-Warning: filter_var() expects at most 3 parameters, 5 given in %s/011.php on line %d
+Warning: filter_var() expects at most 3 parameters, 5 given in %s011.php on line %d
 NULL
 Done
Index: ext/filter/tests/bug7715.phpt
===================================================================
RCS file: /repository/php-src/ext/filter/tests/bug7715.phpt,v
retrieving revision 1.1.2.3
retrieving revision 1.1.2.4
diff -u -p -d -r1.1.2.3 -r1.1.2.4
--- ext/filter/tests/bug7715.phpt	19 Dec 2006 14:16:23 -0000	1.1.2.3
+++ ext/filter/tests/bug7715.phpt	20 Apr 2007 08:00:52 -0000	1.1.2.4
@@ -26,6 +26,6 @@ float(-42)
 float(42)
 float(0.4)
 float(-0.4)
-float(1.0E+12)
-float(-1.0E+12)
+float(1000000000000)
+float(-1000000000000)
 float(2.324)
Index: ext/gd/config.w32
===================================================================
RCS file: /repository/php-src/ext/gd/config.w32,v
retrieving revision 1.10.4.2
retrieving revision 1.10.4.4
diff -u -p -d -r1.10.4.2 -r1.10.4.4
--- ext/gd/config.w32	6 Apr 2007 15:38:35 -0000	1.10.4.2
+++ ext/gd/config.w32	17 Apr 2007 15:31:45 -0000	1.10.4.4
@@ -24,6 +24,9 @@ if (PHP_GD != "no") {
 			CHECK_LIB("zlib.lib", "gd", PHP_GD);
 		}
 
+		CHECK_LIB("User32.lib", "gd", PHP_GD);
+		CHECK_LIB("Gdi32.lib", "gd", PHP_GD);
+
 		EXTENSION("gd", "gd.c gdttf.c", null, "-Iext/gd/libgd", "php_gd2.dll");
 		ADD_SOURCES("ext/gd/libgd", "gd2copypal.c gd_arc_f_buggy.c gd.c \
 			gdcache.c gdfontg.c gdfontl.c gdfontmb.c gdfonts.c gdfontt.c \
@@ -40,6 +43,7 @@ if (PHP_GD != "no") {
 /D HAVE_GDIMAGECOLORRESOLVE=1  \
 /D HAVE_GD_IMAGESETBRUSH=1  \
 /D HAVE_GD_IMAGESETTILE=1 \
+/D HAVE_GD_FONTCACHESHUTDOWN=1 \
 /D HAVE_GD_FONTMUTEX=1 \
 /D HAVE_LIBFREETYPE=1 \
 /D HAVE_GD_JPG  \
Index: ext/gd/gd.c
===================================================================
RCS file: /repository/php-src/ext/gd/gd.c,v
retrieving revision 1.312.2.20.2.20
retrieving revision 1.312.2.20.2.23
diff -u -p -d -r1.312.2.20.2.20 -r1.312.2.20.2.23
--- ext/gd/gd.c	6 Apr 2007 15:38:35 -0000	1.312.2.20.2.20
+++ ext/gd/gd.c	17 Apr 2007 15:44:23 -0000	1.312.2.20.2.23
@@ -52,6 +52,9 @@
 #ifdef PHP_WIN32
 # include <io.h>
 # include <fcntl.h>
+#include <windows.h>
+#include <Winuser.h>
+#include <Wingdi.h>
 #endif
 
 #if HAVE_LIBGD
@@ -314,6 +317,18 @@ ZEND_BEGIN_ARG_INFO(arginfo_imagecopyres
 ZEND_END_ARG_INFO()
 #endif
 
+#ifdef PHP_WIN32
+static
+ZEND_BEGIN_ARG_INFO_EX(arginfo_imagegrabwindow, 0, 0, 1)
+	ZEND_ARG_INFO(0, handle)
+	ZEND_ARG_INFO(0, client_area)
+ZEND_END_ARG_INFO()
+
+static
+ZEND_BEGIN_ARG_INFO(arginfo_imagegrabscreen, 0)
+ZEND_END_ARG_INFO()
+#endif
+
 #ifdef HAVE_GD_BUNDLED
 static
 ZEND_BEGIN_ARG_INFO_EX(arginfo_imagerotate, 0, 0, 3)
@@ -1020,6 +1035,11 @@ zend_function_entry gd_functions[] = {
 	PHP_FE(imagecopyresampled,						arginfo_imagecopyresampled)
 #endif
 
+#ifdef PHP_WIN32
+	PHP_FE(imagegrabwindow,							arginfo_imagegrabwindow)
+	PHP_FE(imagegrabscreen,							arginfo_imagegrabscreen)
+#endif
+
 #ifdef HAVE_GD_BUNDLED
 	PHP_FE(imagerotate,     						arginfo_imagerotate)
 	PHP_FE(imageantialias,							arginfo_imageantialias)
@@ -2069,6 +2089,155 @@ PHP_FUNCTION(imagecopyresampled)
 /* }}} */
 #endif
 
+#ifdef PHP_WIN32
+/* {{{ proto resource imagegrabwindow(int window_handle [, int client_area])
+   Grab a window or its client area using a windows handle (HWND property in COM instance) */
+PHP_FUNCTION(imagegrabwindow)
+{
+	HWND window;
+	long client_area = 0;
+	RECT rc = {0};
+	RECT rc_win = {0};
+	int Width, Height;
+	HDC		hdc;
+	HDC memDC;
+	HBITMAP memBM;
+	HBITMAP hOld;
+	HINSTANCE handle;
+	long lwindow_handle;
+	typedef BOOL (WINAPI *tPrintWindow)(HWND, HDC,UINT);
+	tPrintWindow pPrintWindow = 0;
+	gdImagePtr im;
+
+	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "l|l", &lwindow_handle, &client_area) == FAILURE) {
+		RETURN_FALSE;
+	}
+
+	window = (HWND) lwindow_handle;
+
+	if (!IsWindow(window)) {
+		php_error_docref(NULL TSRMLS_CC, E_NOTICE, "Invalid window handle");
+		RETURN_FALSE;
+	}
+
+	hdc		= GetDC(0);
+
+	if (client_area) {
+		GetClientRect(window, &rc);
+		Width = rc.right;
+		Height = rc.bottom;
+	} else {
+		GetWindowRect(window, &rc);
+		Width	= rc.right - rc.left;
+		Height	= rc.bottom - rc.top;
+	}
+
+	Width		= (Width/4)*4;
+
+	memDC	= CreateCompatibleDC(hdc);
+	memBM	= CreateCompatibleBitmap(hdc, Width, Height);
+	hOld	= (HBITMAP) SelectObject (memDC, memBM);
+
+
+	handle = LoadLibrary("User32.dll");
+	if ( handle == 0 ) {
+		goto clean;
+	}
+	pPrintWindow = (tPrintWindow) GetProcAddress(handle, "PrintWindow");  
+
+	if ( pPrintWindow )  {
+		pPrintWindow(window, memDC, (UINT) client_area);
+	} else {
+		php_error_docref(NULL TSRMLS_CC, E_WARNING, "Windows API too old");
+		RETURN_FALSE;
+		goto clean;
+	}
+
+	FreeLibrary(handle);
+
+	im = gdImageCreateTrueColor(Width, Height);
+	if (im) {
+		int x,y;
+		for (y=0; y <= Height; y++) {
+			for (x=0; x <= Width; x++) {
+				int c = GetPixel(memDC, x,y);
+				gdImageSetPixel(im, x, y, gdTrueColor(GetRValue(c), GetGValue(c), GetBValue(c)));
+			}
+		}
+	}
+
+clean:
+	SelectObject(memDC,hOld);
+	DeleteObject(memBM);
+	DeleteDC(memDC);
+	ReleaseDC( 0, hdc );
+
+	if (!im) {
+		RETURN_FALSE;
+	} else {
+		ZEND_REGISTER_RESOURCE(return_value, im, le_gd);
+	}
+}
+/* }}} */
+
+/* {{{ proto resource imagegrabscreen()
+   Grab a screenshot */
+PHP_FUNCTION(imagegrabscreen)
+{
+	HWND window = GetDesktopWindow();
+	RECT rc = {0};
+	int Width, Height;
+	HDC		hdc;
+	HDC memDC;
+	HBITMAP memBM;
+	HBITMAP hOld;
+	HINSTANCE handle;
+	long lwindow_handle;
+	typedef BOOL (WINAPI *tPrintWindow)(HWND, HDC,UINT);
+	tPrintWindow pPrintWindow = 0;
+	gdImagePtr im;
+	hdc		= GetDC(0);
+
+	if (!hdc) {
+		RETURN_FALSE;
+	}
+
+	GetWindowRect(window, &rc);
+	Width	= rc.right - rc.left;
+	Height	= rc.bottom - rc.top;
+
+	Width		= (Width/4)*4;
+
+	memDC	= CreateCompatibleDC(hdc);
+	memBM	= CreateCompatibleBitmap(hdc, Width, Height);
+	hOld	= (HBITMAP) SelectObject (memDC, memBM);
+	BitBlt( memDC, 0, 0, Width, Height , hdc, rc.left, rc.top , SRCCOPY );
+
+	im = gdImageCreateTrueColor(Width, Height);
+	if (im) {
+		int x,y;
+		for (y=0; y <= Height; y++) {
+			for (x=0; x <= Width; x++) {
+				int c = GetPixel(memDC, x,y);
+				gdImageSetPixel(im, x, y, gdTrueColor(GetRValue(c), GetGValue(c), GetBValue(c)));
+			}
+		}
+	}
+
+	SelectObject(memDC,hOld);
+	DeleteObject(memBM);
+	DeleteDC(memDC);
+	ReleaseDC( 0, hdc );
+
+	if (!im) {
+		RETURN_FALSE;
+	} else {
+		ZEND_REGISTER_RESOURCE(return_value, im, le_gd);
+	}
+}
+/* }}} */
+#endif PHP_WIN32
+
 #ifdef HAVE_GD_BUNDLED
 /* {{{ proto resource imagerotate(resource src_im, float angle, int bgdcolor [, int ignoretransparent])
    Rotate an image using a custom angle */
Index: ext/gd/php_gd.h
===================================================================
RCS file: /repository/php-src/ext/gd/php_gd.h,v
retrieving revision 1.59.2.3.2.4
retrieving revision 1.59.2.3.2.5
diff -u -p -d -r1.59.2.3.2.4 -r1.59.2.3.2.5
--- ext/gd/php_gd.h	4 Apr 2007 01:58:24 -0000	1.59.2.3.2.4
+++ ext/gd/php_gd.h	17 Apr 2007 15:31:45 -0000	1.59.2.3.2.5
@@ -114,6 +114,11 @@ PHP_FUNCTION(imagecolorexactalpha);
 PHP_FUNCTION(imagecopyresampled);
 #endif
 
+#ifdef PHP_WIN32
+PHP_FUNCTION(imagegrabwindow);
+PHP_FUNCTION(imagegrabscreen);
+#endif
+
 #ifdef HAVE_GD_BUNDLED
 PHP_FUNCTION(imagerotate);
 PHP_FUNCTION(imageantialias);
Index: ext/gd/libgd/gd.c
===================================================================
RCS file: /repository/php-src/ext/gd/libgd/gd.c,v
retrieving revision 1.90.2.1.2.10
retrieving revision 1.90.2.1.2.11
diff -u -p -d -r1.90.2.1.2.10 -r1.90.2.1.2.11
--- ext/gd/libgd/gd.c	9 Mar 2007 01:18:40 -0000	1.90.2.1.2.10
+++ ext/gd/libgd/gd.c	14 Apr 2007 17:33:15 -0000	1.90.2.1.2.11
@@ -1645,6 +1645,14 @@ void gdImageFilledArc (gdImagePtr im, in
 	int lx = 0, ly = 0;
 	int fx = 0, fy = 0;
 
+	if (s > 360) {
+		s = s % 360;
+	}
+
+	if (e > 360) {
+		e = e % 360;
+	}
+
 	while (s<0) {
 		s += 360;
 	}
Index: ext/gmp/gmp.c
===================================================================
RCS file: /repository/php-src/ext/gmp/gmp.c,v
retrieving revision 1.49.2.2.2.8
retrieving revision 1.49.2.2.2.10
diff -u -p -d -r1.49.2.2.2.8 -r1.49.2.2.2.10
--- ext/gmp/gmp.c	12 Jan 2007 12:32:15 -0000	1.49.2.2.2.8
+++ ext/gmp/gmp.c	18 Apr 2007 20:53:28 -0000	1.49.2.2.2.10
@@ -1484,6 +1484,11 @@ ZEND_FUNCTION(gmp_setbit)
 			break;
 	}
 
+	if (index < 0) {
+		php_error_docref(NULL TSRMLS_CC, E_WARNING, "Index must be greater than or equal to zero");
+		return;
+	}
+
 	if (set) {
 		mpz_setbit(*gmpnum_a, index);
 	} else {
@@ -1508,6 +1513,11 @@ ZEND_FUNCTION(gmp_clrbit)
 
 	convert_to_long_ex(ind_arg);
 	index = Z_LVAL_PP(ind_arg);
+	
+	if (index < 0) {
+		php_error_docref(NULL TSRMLS_CC, E_WARNING, "Index must be greater than or equal to zero");
+		return;
+	}
 
 	mpz_clrbit(*gmpnum_a, index);
 }
@@ -1562,6 +1572,11 @@ ZEND_FUNCTION(gmp_scan0)
 	FETCH_GMP_ZVAL(gmpnum_a, a_arg);
 	convert_to_long_ex(start_arg);
 
+	if (Z_LVAL_PP(start_arg) < 0) {
+		php_error_docref(NULL TSRMLS_CC, E_WARNING, "Starting index must be greater than or equal to zero");
+		RETURN_FALSE;
+	}
+
 	RETURN_LONG(mpz_scan0(*gmpnum_a, Z_LVAL_PP(start_arg)));
 }
 /* }}} */
@@ -1579,6 +1594,11 @@ ZEND_FUNCTION(gmp_scan1)
 
 	FETCH_GMP_ZVAL(gmpnum_a, a_arg);
 	convert_to_long_ex(start_arg);
+	
+	if (Z_LVAL_PP(start_arg) < 0) {
+		php_error_docref(NULL TSRMLS_CC, E_WARNING, "Starting index must be greater than or equal to zero");
+		RETURN_FALSE;
+	}
 
 	RETURN_LONG(mpz_scan1(*gmpnum_a, Z_LVAL_PP(start_arg)));
 }
Index: ext/json/JSON_parser.c
===================================================================
RCS file: /repository/php-src/ext/json/JSON_parser.c,v
retrieving revision 1.1.2.4
retrieving revision 1.1.2.6
diff -u -p -d -r1.1.2.4 -r1.1.2.6
--- ext/json/JSON_parser.c	25 Jul 2006 09:06:55 -0000	1.1.2.4
+++ ext/json/JSON_parser.c	16 Apr 2007 22:31:05 -0000	1.1.2.6
@@ -169,7 +169,7 @@ static const int ascii_class[128] = {
     accepted if the end of the text is in state 9 and mode is MODE_DONE.
 */
 static const int state_transition_table[30][31] = {
-/* 0*/ { 0, 0,-8,-1,-6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
+/* 0*/ { 0, 0,-8,-1,-6,-1,-1,-1, 3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
 /* 1*/ { 1, 1,-1,-9,-1,-1,-1,-1, 3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
 /* 2*/ { 2, 2,-8,-1,-6,-5,-1,-1, 3,-1,-1,-1,20,-1,21,22,-1,-1,-1,-1,-1,13,-1,17,-1,-1,10,-1,-1,-1,-1},
 /* 3*/ { 3,-1, 3, 3, 3, 3, 3, 3,-4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
@@ -316,6 +316,25 @@ static void utf16_to_utf8(smart_str *buf
         smart_str_appendc(buf, 0xc0 | (utf16 >> 6));
         smart_str_appendc(buf, 0x80 | (utf16 & 0x3f));
     }
+    else if ((utf16 & 0xfc00) == 0xdc00
+                && buf->len >= 3
+                && ((unsigned char) buf->c[buf->len - 3]) == 0xed
+                && ((unsigned char) buf->c[buf->len - 2] & 0xf0) == 0xa0
+                && ((unsigned char) buf->c[buf->len - 1] & 0xc0) == 0x80)
+    {
+        /* found surrogate pair */
+        unsigned long utf32;
+
+        utf32 = (((buf->c[buf->len - 2] & 0xf) << 16)
+                    | ((buf->c[buf->len - 1] & 0x3f) << 10)
+                    | (utf16 & 0x3ff)) + 0x10000;
+        buf->len -= 3;
+
+        smart_str_appendc(buf, 0xf0 | (utf32 >> 18));
+        smart_str_appendc(buf, 0x80 | ((utf32 >> 12) & 0x3f));
+        smart_str_appendc(buf, 0x80 | ((utf32 >> 6) & 0x3f));
+        smart_str_appendc(buf, 0x80 | (utf32 & 0x3f));
+    }
     else
     {
         smart_str_appendc(buf, 0xe0 | (utf16 >> 12));
@@ -577,6 +596,14 @@ JSON_parser(zval *z, unsigned short p[],
                 case MODE_OBJECT:
                     the_state = 9;
                     break;
+				case MODE_DONE:
+					if (type == IS_STRING) {
+						smart_str_0(&buf);
+						ZVAL_STRINGL(z, buf.c, buf.len, 1);
+						the_state = 9;
+						break;
+					}
+					/* fall through if not IS_STRING */
                 default:
                     FREE_BUFFERS();
                     return false;
Index: ext/json/json.c
===================================================================
RCS file: /repository/php-src/ext/json/json.c,v
retrieving revision 1.9.2.12
retrieving revision 1.9.2.14
diff -u -p -d -r1.9.2.12 -r1.9.2.14
--- ext/json/json.c	18 Feb 2007 16:54:59 -0000	1.9.2.12
+++ ext/json/json.c	13 Apr 2007 21:34:12 -0000	1.9.2.14
@@ -177,7 +177,7 @@ static void json_encode_array(smart_str 
                     json_encode_r(buf, *data TSRMLS_CC);
                 } else if (r == 1) {
                     if (i == HASH_KEY_IS_STRING) {
-                        if (key[0] == '\0') {
+                        if (key[0] == '\0' && Z_TYPE_PP(val) == IS_OBJECT) {
                             /* Skip protected and private members. */
                             continue;
                         }
@@ -303,7 +303,7 @@ static void json_escape_string(smart_str
                 break;
             default:
                 {
-                    if (us < ' ' || (us & 127) == us)
+                    if (us >= ' ' && (us & 127) == us)
                     {
                         smart_str_appendc(buf, (unsigned char) us);
                     }
Index: ext/json/tests/002.phpt
===================================================================
RCS file: /repository/php-src/ext/json/tests/002.phpt,v
retrieving revision 1.1.2.2
retrieving revision 1.1.2.3
diff -u -p -d -r1.1.2.2 -r1.1.2.3
--- ext/json/tests/002.phpt	20 Jul 2006 08:56:57 -0000	1.1.2.2
+++ ext/json/tests/002.phpt	12 Apr 2007 19:40:38 -0000	1.1.2.3
@@ -21,7 +21,7 @@ echo "Done\n";
 string(2) """"
 string(4) "null"
 string(4) "true"
-string(2) "{}"
+string(7) "{"":""}"
 string(5) "[[1]]"
 string(1) "1"
 string(38) ""\u0440\u0443\u0441\u0441\u0438\u0448""
Index: ext/json/tests/pass001.1.phpt
===================================================================
RCS file: /repository/php-src/ext/json/tests/pass001.1.phpt,v
retrieving revision 1.3.2.1
retrieving revision 1.3.2.3
diff -u -p -d -r1.3.2.1 -r1.3.2.3
--- ext/json/tests/pass001.1.phpt	7 Aug 2006 23:28:05 -0000	1.3.2.1
+++ ext/json/tests/pass001.1.phpt	20 Apr 2007 10:16:46 -0000	1.3.2.3
@@ -101,7 +101,7 @@ $arr = json_decode($arr_enc, true);
 var_dump($arr);
 
 ?>
---EXPECT--
+--EXPECTF--
 Testing: 
 [
     "JSON Test Pattern pass1",
@@ -170,7 +170,7 @@ array(14) {
   [0]=>
   string(23) "JSON Test Pattern pass1"
   [1]=>
-  object(stdClass)#1 (1) {
+  object(stdClass)#%d (1) {
     ["object with 1 member"]=>
     array(1) {
       [0]=>
@@ -178,7 +178,7 @@ array(14) {
     }
   }
   [2]=>
-  object(stdClass)#2 (0) {
+  object(stdClass)#%d (0) {
   }
   [3]=>
   array(0) {
@@ -192,7 +192,7 @@ array(14) {
   [7]=>
   NULL
   [8]=>
-  object(stdClass)#3 (36) {
+  object(stdClass)#%d (36) {
     ["integer"]=>
     int(1234567890)
     ["real"]=>
@@ -204,7 +204,7 @@ array(14) {
     ["_empty_"]=>
     float(INF)
     ["E no ."]=>
-    float(4.0E+12)
+    float(4000000000000)
     ["zero"]=>
     int(0)
     ["one"]=>
@@ -246,14 +246,14 @@ array(14) {
     array(0) {
     }
     ["object"]=>
-    object(stdClass)#4 (0) {
+    object(stdClass)#%d (0) {
     }
     ["123"]=>
-    object(stdClass)#5 (1) {
+    object(stdClass)#%d (1) {
       ["456"]=>
-      object(stdClass)#6 (1) {
+      object(stdClass)#%d (1) {
         ["abc"]=>
-        object(stdClass)#7 (3) {
+        object(stdClass)#%d (3) {
           ["789"]=>
           string(3) "def"
           ["012"]=>
@@ -383,7 +383,7 @@ array(14) {
     ["_empty_"]=>
     float(INF)
     ["E no ."]=>
-    float(4.0E+12)
+    float(4000000000000)
     ["zero"]=>
     int(0)
     ["one"]=>
@@ -532,7 +532,7 @@ array(14) {
   [0]=>
   string(23) "JSON Test Pattern pass1"
   [1]=>
-  object(stdClass)#8 (1) {
+  object(stdClass)#%d (1) {
     ["object with 1 member"]=>
     array(1) {
       [0]=>
@@ -540,7 +540,7 @@ array(14) {
     }
   }
   [2]=>
-  object(stdClass)#9 (0) {
+  object(stdClass)#%d (0) {
   }
   [3]=>
   array(0) {
@@ -554,7 +554,7 @@ array(14) {
   [7]=>
   NULL
   [8]=>
-  object(stdClass)#10 (36) {
+  object(stdClass)#%d (36) {
     ["integer"]=>
     int(1234567890)
     ["real"]=>
@@ -566,7 +566,7 @@ array(14) {
     ["_empty_"]=>
     int(0)
     ["E no ."]=>
-    float(4.0E+12)
+    float(4000000000000)
     ["zero"]=>
     int(0)
     ["one"]=>
@@ -608,14 +608,14 @@ array(14) {
     array(0) {
     }
     ["object"]=>
-    object(stdClass)#11 (0) {
+    object(stdClass)#%d (0) {
     }
     ["123"]=>
-    object(stdClass)#12 (1) {
+    object(stdClass)#%d (1) {
       ["456"]=>
-      object(stdClass)#13 (1) {
+      object(stdClass)#%d (1) {
         ["abc"]=>
-        object(stdClass)#14 (3) {
+        object(stdClass)#%d (3) {
           ["789"]=>
           string(3) "def"
           ["012"]=>
@@ -745,7 +745,7 @@ array(14) {
     ["_empty_"]=>
     int(0)
     ["E no ."]=>
-    float(4.0E+12)
+    float(4000000000000)
     ["zero"]=>
     int(0)
     ["one"]=>
Index: ext/mcrypt/tests/bug35496.phpt
===================================================================
RCS file: /repository/php-src/ext/mcrypt/tests/bug35496.phpt,v
retrieving revision 1.1.2.1
retrieving revision 1.1.2.1.2.1
diff -u -p -d -r1.1.2.1 -r1.1.2.1.2.1
--- ext/mcrypt/tests/bug35496.phpt	30 Nov 2005 23:51:25 -0000	1.1.2.1
+++ ext/mcrypt/tests/bug35496.phpt	18 Apr 2007 08:06:29 -0000	1.1.2.1.2.1
@@ -9,6 +9,6 @@ mcrypt_generic($td, "foobar");
 mdecrypt_generic($td, "baz");
 ?>
 --EXPECTF--
-Warning: mcrypt_generic(): Operation disallowed prior to mcrypt_generic_init(). in %s/bug35496.php on line 3
+Warning: mcrypt_generic(): Operation disallowed prior to mcrypt_generic_init(). in %sbug35496.php on line 3
 
-Warning: mdecrypt_generic(): Operation disallowed prior to mcrypt_generic_init(). in %s/bug35496.php on line 4
+Warning: mdecrypt_generic(): Operation disallowed prior to mcrypt_generic_init(). in %sbug35496.php on line 4
Index: ext/mysql/php_mysql.c
===================================================================
RCS file: /repository/php-src/ext/mysql/php_mysql.c,v
retrieving revision 1.213.2.6.2.7
retrieving revision 1.213.2.6.2.8
diff -u -p -d -r1.213.2.6.2.7 -r1.213.2.6.2.8
--- ext/mysql/php_mysql.c	24 Feb 2007 02:17:25 -0000	1.213.2.6.2.7
+++ ext/mysql/php_mysql.c	14 Apr 2007 10:19:19 -0000	1.213.2.6.2.8
@@ -487,6 +487,9 @@ static void php_mysql_do_connect(INTERNA
 #if MYSQL_VERSION_ID <= 32230
 	void (*handler) (int);
 #endif
+#if MYSQL_VERSION_ID > 50012
+	my_bool my_true = 1;
+#endif
 	zval **z_host=NULL, **z_user=NULL, **z_passwd=NULL, **z_new_link=NULL, **z_client_flags=NULL;
 	zend_bool free_host=0, new_link=0;
 	long connect_timeout;
@@ -669,8 +672,14 @@ static void php_mysql_do_connect(INTERNA
 #if MYSQL_VERSION_ID > 32199 /* this lets us set the port number */
 			mysql_init(&mysql->conn);
 
-			if (connect_timeout != -1)
+#if MYSQL_VERSION_ID > 50012
+			/* Reconnect has been off by default since MySQL 5.0.3; 
+			   this option is new in 5.0.13 and provides a way to set reconnection behavior explicitly. */
+			mysql_options(&mysql->conn, MYSQL_OPT_RECONNECT, (const char *)&my_true);
+#endif
+			if (connect_timeout != -1) {
 				mysql_options(&mysql->conn, MYSQL_OPT_CONNECT_TIMEOUT, (const char *)&connect_timeout);
+			}
 
 			if (mysql_real_connect(&mysql->conn, host, user, passwd, NULL, port, socket, client_flags)==NULL) {
 #else
@@ -774,8 +783,15 @@ static void php_mysql_do_connect(INTERNA
 #if MYSQL_VERSION_ID > 32199 /* this lets us set the port number */
 		mysql_init(&mysql->conn);
 
-		if (connect_timeout != -1)
-				mysql_options(&mysql->conn, MYSQL_OPT_CONNECT_TIMEOUT, (const char *)&connect_timeout);
+#if MYSQL_VERSION_ID > 50012
+		/* Reconnect has been off by default since MySQL 5.0.3; 
+		 this option is new in 5.0.13 and provides a way to set reconnection behavior explicitly. */
+		mysql_options(&mysql->conn, MYSQL_OPT_RECONNECT, (const char *)&my_true);
+#endif
+
+		if (connect_timeout != -1) {
+			mysql_options(&mysql->conn, MYSQL_OPT_CONNECT_TIMEOUT, (const char *)&connect_timeout);
+		}
 
 		if (mysql_real_connect(&mysql->conn, host, user, passwd, NULL, port, socket, client_flags)==NULL) {
 #else
Index: ext/mysqli/CREDITS
===================================================================
RCS file: /repository/php-src/ext/mysqli/CREDITS,v
retrieving revision 1.1
retrieving revision 1.1.6.1
diff -u -p -d -r1.1 -r1.1.6.1
--- ext/mysqli/CREDITS	12 Feb 2003 00:45:53 -0000	1.1
+++ ext/mysqli/CREDITS	19 Apr 2007 09:49:28 -0000	1.1.6.1
@@ -1,2 +1,2 @@
 MySQLi
-Zak Greant, Georg Richter
+Zak Greant, Georg Richter, Andrey Hristov, Ulf Wendel
Index: ext/mysqli/mysqli_nonapi.c
===================================================================
RCS file: /repository/php-src/ext/mysqli/mysqli_nonapi.c,v
retrieving revision 1.54.2.7.2.2
retrieving revision 1.54.2.7.2.3
diff -u -p -d -r1.54.2.7.2.2 -r1.54.2.7.2.3
--- ext/mysqli/mysqli_nonapi.c	1 Jan 2007 09:36:03 -0000	1.54.2.7.2.2
+++ ext/mysqli/mysqli_nonapi.c	14 Apr 2007 10:35:05 -0000	1.54.2.7.2.3
@@ -39,6 +39,9 @@ PHP_FUNCTION(mysqli_connect)
 	char 				*hostname = NULL, *username=NULL, *passwd=NULL, *dbname=NULL, *socket=NULL;
 	unsigned int 		hostname_len = 0, username_len = 0, passwd_len = 0, dbname_len = 0, socket_len = 0;
 	long				port=0;
+#if MYSQL_VERSION_ID > 50012
+	my_bool				my_true = 1;
+#endif
 
 	if (getThis() && !ZEND_NUM_ARGS()) {
 		RETURN_NULL();
@@ -84,6 +87,10 @@ PHP_FUNCTION(mysqli_connect)
 	}
 #endif
 
+#if MYSQL_VERSION_ID > 50012
+	mysql_options(mysql->mysql, MYSQL_OPT_RECONNECT, (const char *)&my_true);
+#endif
+
 	if (!socket) {
 		socket = MyG(default_socket);
 	}
Index: ext/ncurses/ncurses.c
===================================================================
RCS file: /repository/php-src/ext/ncurses/Attic/ncurses.c,v
retrieving revision 1.30.2.1.2.2
retrieving revision 1.30.2.1.2.4
diff -u -p -d -r1.30.2.1.2.2 -r1.30.2.1.2.4
--- ext/ncurses/ncurses.c	12 Jan 2007 12:17:32 -0000	1.30.2.1.2.2
+++ ext/ncurses/ncurses.c	11 Apr 2007 22:19:11 -0000	1.30.2.1.2.4
@@ -98,11 +98,12 @@ PHP_MINIT_FUNCTION(ncurses)
 	PHP_NCURSES_CONST(KEY_UP);
 	PHP_NCURSES_CONST(KEY_LEFT);
 	PHP_NCURSES_CONST(KEY_RIGHT);
+	PHP_NCURSES_CONST(KEY_HOME);
+	PHP_NCURSES_CONST(KEY_END);
 	PHP_NCURSES_CONST(KEY_BACKSPACE);
 	PHP_NCURSES_CONST(KEY_MOUSE);
 	PHP_NCURSES_CONST(KEY_F0);
 
-
 	/* TODO:this macro sux, we have 65 function key,
 	   so we need a little loop */
 	PHP_NCURSES_FKEY_CONST(1);
@@ -150,7 +151,6 @@ PHP_MINIT_FUNCTION(ncurses)
 	PHP_NCURSES_CONST(KEY_COMMAND);
 	PHP_NCURSES_CONST(KEY_COPY);
 	PHP_NCURSES_CONST(KEY_CREATE);
-	PHP_NCURSES_CONST(KEY_END);
 	PHP_NCURSES_CONST(KEY_EXIT);
 	PHP_NCURSES_CONST(KEY_FIND);
 	PHP_NCURSES_CONST(KEY_HELP);
Index: ext/pdo/pdo_stmt.c
===================================================================
RCS file: /repository/php-src/ext/pdo/pdo_stmt.c,v
retrieving revision 1.118.2.38.2.15
retrieving revision 1.118.2.38.2.16
diff -u -p -d -r1.118.2.38.2.15 -r1.118.2.38.2.16
--- ext/pdo/pdo_stmt.c	7 Mar 2007 09:03:07 -0000	1.118.2.38.2.15
+++ ext/pdo/pdo_stmt.c	17 Apr 2007 17:00:16 -0000	1.118.2.38.2.16
@@ -2525,28 +2525,18 @@ static void row_prop_or_dim_delete(zval 
 
 static HashTable *row_get_properties(zval *object TSRMLS_DC)
 {
-	zval *tmp;
 	pdo_stmt_t * stmt = (pdo_stmt_t *) zend_object_store_get_object(object TSRMLS_CC);
 	int i;
-	HashTable *ht;
-
-	MAKE_STD_ZVAL(tmp);
-	array_init(tmp);
 
 	for (i = 0; i < stmt->column_count; i++) {
 		zval *val;
 		MAKE_STD_ZVAL(val);
 		fetch_value(stmt, val, i, NULL TSRMLS_CC);
 
-		add_assoc_zval(tmp, stmt->columns[i].name, val);
+		zend_hash_update(stmt->properties, stmt->columns[i].name, stmt->columns[i].namelen + 1, (void *)&val, sizeof(zval *), NULL);
 	}
 
-	ht = Z_ARRVAL_P(tmp);
-
-	ZVAL_NULL(tmp);
-	FREE_ZVAL(tmp);
-
-	return ht;
+	return stmt->properties;
 }
 
 static union _zend_function *row_method_get(
Index: ext/pdo_mysql/mysql_statement.c
===================================================================
RCS file: /repository/php-src/ext/pdo_mysql/mysql_statement.c,v
retrieving revision 1.48.2.14.2.4
retrieving revision 1.48.2.14.2.5
diff -u -p -d -r1.48.2.14.2.4 -r1.48.2.14.2.5
--- ext/pdo_mysql/mysql_statement.c	8 Apr 2007 15:26:21 -0000	1.48.2.14.2.4
+++ ext/pdo_mysql/mysql_statement.c	15 Apr 2007 16:50:42 -0000	1.48.2.14.2.5
@@ -413,6 +413,7 @@ static int pdo_mysql_stmt_fetch(pdo_stmt
 #endif
 
 	if (!S->result) {
+		strcpy(stmt->error_code, "HY000");
 		return 0;	
 	}
 	if ((S->current_data = mysql_fetch_row(S->result)) == NULL) {
Index: ext/pdo_mysql/tests/bug_37445.phpt
===================================================================
RCS file: /repository/php-src/ext/pdo_mysql/tests/bug_37445.phpt,v
retrieving revision 1.1.2.2
retrieving revision 1.1.2.3
diff -u -p -d -r1.1.2.2 -r1.1.2.3
--- ext/pdo_mysql/tests/bug_37445.phpt	12 Dec 2006 08:13:31 -0000	1.1.2.2
+++ ext/pdo_mysql/tests/bug_37445.phpt	18 Apr 2007 08:06:29 -0000	1.1.2.3
@@ -16,5 +16,6 @@ $db->setAttribute(PDO :: ATTR_EMULATE_PR
 $stmt = $db->prepare("SELECT 1");
 $stmt->bindParam(':a', 'b');
 
+?>
 --EXPECTF--
-Fatal error: Cannot pass parameter 2 by reference in %s/bug_37445.php on line %d
+Fatal error: Cannot pass parameter 2 by reference in %sbug_37445.php on line %d
Index: ext/pdo_pgsql/pgsql_statement.c
===================================================================
RCS file: /repository/php-src/ext/pdo_pgsql/pgsql_statement.c,v
retrieving revision 1.31.2.12.2.6
retrieving revision 1.31.2.12.2.7
diff -u -p -d -r1.31.2.12.2.6 -r1.31.2.12.2.7
--- ext/pdo_pgsql/pgsql_statement.c	1 Jan 2007 09:36:05 -0000	1.31.2.12.2.6
+++ ext/pdo_pgsql/pgsql_statement.c	17 Apr 2007 15:29:13 -0000	1.31.2.12.2.7
@@ -306,6 +306,7 @@ static int pgsql_stmt_param_hook(pdo_stm
 						S->param_lengths[param->paramno] = 1;
 						S->param_formats[param->paramno] = 0;
 					} else {
+						SEPARATE_ZVAL_IF_NOT_REF(&param->parameter);
 						convert_to_string(param->parameter);
 						S->param_values[param->paramno] = Z_STRVAL_P(param->parameter);
 						S->param_lengths[param->paramno] = Z_STRLEN_P(param->parameter);
Index: ext/pdo_sqlite/sqlite/VERSION
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/VERSION,v
retrieving revision 1.3.2.3.2.4
retrieving revision 1.3.2.3.2.5
diff -u -p -d -r1.3.2.3.2.4 -r1.3.2.3.2.5
--- ext/pdo_sqlite/sqlite/VERSION	9 Apr 2007 16:35:11 -0000	1.3.2.3.2.4
+++ ext/pdo_sqlite/sqlite/VERSION	18 Apr 2007 22:53:45 -0000	1.3.2.3.2.5
@@ -1 +1 @@
-3.3.15
+3.3.16
Index: ext/pdo_sqlite/sqlite/src/btree.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/btree.c,v
retrieving revision 1.3.2.2.2.4
retrieving revision 1.3.2.2.2.5
diff -u -p -d -r1.3.2.2.2.4 -r1.3.2.2.2.5
--- ext/pdo_sqlite/sqlite/src/btree.c	9 Apr 2007 16:35:11 -0000	1.3.2.2.2.4
+++ ext/pdo_sqlite/sqlite/src/btree.c	18 Apr 2007 22:53:45 -0000	1.3.2.2.2.5
@@ -1396,13 +1396,20 @@ static void zeroPage(MemPage *pPage, int
 /*
 ** Get a page from the pager.  Initialize the MemPage.pBt and
 ** MemPage.aData elements if needed.
+**
+** If the noContent flag is set, it means that we do not care about
+** the content of the page at this time.  So do not go to the disk
+** to fetch the content.  Just fill in the content with zeros for now.
+** If in the future we call sqlite3PagerWrite() on this page, that
+** means we have started to be concerned about content and the disk
+** read should occur at that point.
 */
-static int getPage(BtShared *pBt, Pgno pgno, MemPage **ppPage, int clrFlag){
+static int getPage(BtShared *pBt, Pgno pgno, MemPage **ppPage, int noContent){
   int rc;
   MemPage *pPage;
   DbPage *pDbPage;
 
-  rc = sqlite3PagerAcquire(pBt->pPager, pgno, (DbPage**)&pDbPage, clrFlag);
+  rc = sqlite3PagerAcquire(pBt->pPager, pgno, (DbPage**)&pDbPage, noContent);
   if( rc ) return rc;
   pPage = (MemPage *)sqlite3PagerGetExtra(pDbPage);
   pPage->aData = sqlite3PagerGetData(pDbPage);
@@ -1411,9 +1418,6 @@ static int getPage(BtShared *pBt, Pgno p
   pPage->pgno = pgno;
   pPage->hdrOffset = pPage->pgno==1 ? 100 : 0;
   *ppPage = pPage;
-  if( clrFlag ){
-    sqlite3PagerDontRollback(pPage->pDbPage);
-  }
   return SQLITE_OK;
 }
 
@@ -3830,6 +3834,7 @@ static int allocateBtreePage(
           put4byte(&aData[4], k-1);
           rc = getPage(pBt, *pPgno, ppPage, 1);
           if( rc==SQLITE_OK ){
+            sqlite3PagerDontRollback((*ppPage)->pDbPage);
             rc = sqlite3PagerWrite((*ppPage)->pDbPage);
             if( rc!=SQLITE_OK ){
               releasePage(*ppPage);
@@ -3948,7 +3953,7 @@ static int freePage(MemPage *pPage){
         put4byte(&pTrunk->aData[4], k+1);
         put4byte(&pTrunk->aData[8+k*4], pPage->pgno);
 #ifndef SQLITE_SECURE_DELETE
-        sqlite3PagerDontWrite(pBt->pPager, pPage->pgno);
+        sqlite3PagerDontWrite(pPage->pDbPage);
 #endif
       }
       TRACE(("FREE-PAGE: %d leaf on trunk page %d\n",pPage->pgno,pTrunk->pgno));
@@ -3982,7 +3987,7 @@ static int clearCell(MemPage *pPage, uns
     if( ovflPgno==0 || ovflPgno>sqlite3PagerPagecount(pBt->pPager) ){
       return SQLITE_CORRUPT_BKPT;
     }
-    rc = getPage(pBt, ovflPgno, &pOvfl, 0);
+    rc = getPage(pBt, ovflPgno, &pOvfl, nOvfl==0);
     if( rc ) return rc;
     if( nOvfl ){
       ovflPgno = get4byte(pOvfl->aData);
@@ -6561,18 +6566,31 @@ int sqlite3BtreeCopyFile(Btree *pTo, Btr
     rc = sqlite3PagerOverwrite(pBtTo->pPager, i, sqlite3PagerGetData(pDbPage));
     sqlite3PagerUnref(pDbPage);
   }
+
+  /* If the file is shrinking, journal the pages that are being truncated
+  ** so that they can be rolled back if the commit fails.
+  */
   for(i=nPage+1; rc==SQLITE_OK && i<=nToPage; i++){
     DbPage *pDbPage;
     if( i==iSkip ) continue;
     rc = sqlite3PagerGet(pBtTo->pPager, i, &pDbPage);
     if( rc ) break;
     rc = sqlite3PagerWrite(pDbPage);
+    sqlite3PagerDontWrite(pDbPage);
+    /* Yeah.  It seems wierd to call DontWrite() right after Write().  But
+    ** that is because the names of those procedures do not exactly 
+    ** represent what they do.  Write() really means "put this page in the
+    ** rollback journal and mark it as dirty so that it will be written
+    ** to the database file later."  DontWrite() undoes the second part of
+    ** that and prevents the page from being written to the database.  The
+    ** page is still on the rollback journal, though.  And that is the whole
+    ** point of this loop: to put pages on the rollback journal. */
     sqlite3PagerUnref(pDbPage);
-    sqlite3PagerDontWrite(pBtTo->pPager, i);
   }
   if( !rc && nPage<nToPage ){
     rc = sqlite3PagerTruncate(pBtTo->pPager, nPage);
   }
+
   if( rc ){
     sqlite3BtreeRollback(pTo);
   }
Index: ext/pdo_sqlite/sqlite/src/build.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/build.c,v
retrieving revision 1.3.2.2.2.4
retrieving revision 1.3.2.2.2.5
diff -u -p -d -r1.3.2.2.2.4 -r1.3.2.2.2.5
--- ext/pdo_sqlite/sqlite/src/build.c	9 Apr 2007 16:35:11 -0000	1.3.2.2.2.4
+++ ext/pdo_sqlite/sqlite/src/build.c	18 Apr 2007 22:53:45 -0000	1.3.2.2.2.5
@@ -478,18 +478,11 @@ static void sqliteResetColumnNames(Table
 ** foreign keys from the sqlite.aFKey hash table.  But it does destroy
 ** memory structures of the indices and foreign keys associated with 
 ** the table.
-**
-** Indices associated with the table are unlinked from the "db"
-** data structure if db!=NULL.  If db==NULL, indices attached to
-** the table are deleted, but it is assumed they have already been
-** unlinked.
 */
-void sqlite3DeleteTable(sqlite3 *db, Table *pTable){
+void sqlite3DeleteTable(Table *pTable){
   Index *pIndex, *pNext;
   FKey *pFKey, *pNextFKey;
 
-  db = 0;
-
   if( pTable==0 ) return;
 
   /* Do not delete the table until the reference count reaches zero. */
@@ -509,7 +502,7 @@ void sqlite3DeleteTable(sqlite3 *db, Tab
 
 #ifndef SQLITE_OMIT_FOREIGN_KEY
   /* Delete all foreign keys associated with this table.  The keys
-  ** should have already been unlinked from the db->aFKey hash table 
+  ** should have already been unlinked from the pSchema->aFKey hash table 
   */
   for(pFKey=pTable->pFKey; pFKey; pFKey=pNextFKey){
     pNextFKey = pFKey->pNextFrom;
@@ -561,7 +554,7 @@ void sqlite3UnlinkAndDeleteTable(sqlite3
       }
     }
 #endif
-    sqlite3DeleteTable(db, p);
+    sqlite3DeleteTable(p);
   }
   db->flags |= SQLITE_InternChanges;
 }
@@ -810,7 +803,7 @@ void sqlite3StartTable(
   pTable->iPKey = -1;
   pTable->pSchema = db->aDb[iDb].pSchema;
   pTable->nRef = 1;
-  if( pParse->pNewTable ) sqlite3DeleteTable(db, pParse->pNewTable);
+  if( pParse->pNewTable ) sqlite3DeleteTable(pParse->pNewTable);
   pParse->pNewTable = pTable;
 
   /* If this is the magic sqlite_sequence table used by autoincrement,
@@ -1484,7 +1477,7 @@ void sqlite3EndTable(
         p->aCol = pSelTab->aCol;
         pSelTab->nCol = 0;
         pSelTab->aCol = 0;
-        sqlite3DeleteTable(0, pSelTab);
+        sqlite3DeleteTable(pSelTab);
       }
     }
 
@@ -1712,7 +1705,7 @@ int sqlite3ViewGetColumnNames(Parse *pPa
       pTable->aCol = pSelTab->aCol;
       pSelTab->nCol = 0;
       pSelTab->aCol = 0;
-      sqlite3DeleteTable(0, pSelTab);
+      sqlite3DeleteTable(pSelTab);
       pTable->pSchema->flags |= DB_UnresetViews;
     }else{
       pTable->nCol = 0;
@@ -2210,7 +2203,7 @@ static void sqlite3RefillIndex(Parse *pP
     sqlite3VdbeAddOp(v, OP_IsUnique, iIdx, addr2);
     sqlite3VdbeOp3(v, OP_Halt, SQLITE_CONSTRAINT, OE_Abort,
                     "indexed columns are not unique", P3_STATIC);
-    assert( addr2==sqlite3VdbeCurrentAddr(v) );
+    assert( sqlite3MallocFailed() || addr2==sqlite3VdbeCurrentAddr(v) );
   }
   sqlite3VdbeAddOp(v, OP_IdxInsert, iIdx, 0);
   sqlite3VdbeAddOp(v, OP_Next, iTab, addr1+1);
@@ -2959,7 +2952,7 @@ void sqlite3SrcListDelete(SrcList *pList
     sqliteFree(pItem->zDatabase);
     sqliteFree(pItem->zName);
     sqliteFree(pItem->zAlias);
-    sqlite3DeleteTable(0, pItem->pTab);
+    sqlite3DeleteTable(pItem->pTab);
     sqlite3SelectDelete(pItem->pSelect);
     sqlite3ExprDelete(pItem->pOn);
     sqlite3IdListDelete(pItem->pUsing);
Index: ext/pdo_sqlite/sqlite/src/callback.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/callback.c,v
retrieving revision 1.1.2.2.2.2
retrieving revision 1.1.2.2.2.3
diff -u -p -d -r1.1.2.2.2.2 -r1.1.2.2.2.3
--- ext/pdo_sqlite/sqlite/src/callback.c	20 Feb 2007 00:09:42 -0000	1.1.2.2.2.2
+++ ext/pdo_sqlite/sqlite/src/callback.c	18 Apr 2007 22:53:45 -0000	1.1.2.2.2.3
@@ -344,7 +344,7 @@ void sqlite3SchemaFree(void *p){
   sqlite3HashInit(&pSchema->tblHash, SQLITE_HASH_STRING, 0);
   for(pElem=sqliteHashFirst(&temp1); pElem; pElem=sqliteHashNext(pElem)){
     Table *pTab = sqliteHashData(pElem);
-    sqlite3DeleteTable(0, pTab);
+    sqlite3DeleteTable(pTab);
   }
   sqlite3HashClear(&temp1);
   pSchema->pSeqTab = 0;
Index: ext/pdo_sqlite/sqlite/src/delete.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/delete.c,v
retrieving revision 1.3.2.2.2.2
retrieving revision 1.3.2.2.2.3
diff -u -p -d -r1.3.2.2.2.2 -r1.3.2.2.2.3
--- ext/pdo_sqlite/sqlite/src/delete.c	20 Feb 2007 00:09:42 -0000	1.3.2.2.2.2
+++ ext/pdo_sqlite/sqlite/src/delete.c	18 Apr 2007 22:53:45 -0000	1.3.2.2.2.3
@@ -27,7 +27,7 @@ Table *sqlite3SrcListLookup(Parse *pPars
   struct SrcList_item *pItem;
   for(i=0, pItem=pSrc->a; i<pSrc->nSrc; i++, pItem++){
     pTab = sqlite3LocateTable(pParse, pItem->zName, pItem->zDatabase);
-    sqlite3DeleteTable(pParse->db, pItem->pTab);
+    sqlite3DeleteTable(pItem->pTab);
     pItem->pTab = pTab;
     if( pTab ){
       pTab->nRef++;
Index: ext/pdo_sqlite/sqlite/src/expr.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/expr.c,v
retrieving revision 1.3.2.2.2.4
retrieving revision 1.3.2.2.2.5
diff -u -p -d -r1.3.2.2.2.4 -r1.3.2.2.2.5
--- ext/pdo_sqlite/sqlite/src/expr.c	9 Apr 2007 16:35:11 -0000	1.3.2.2.2.4
+++ ext/pdo_sqlite/sqlite/src/expr.c	18 Apr 2007 22:53:45 -0000	1.3.2.2.2.5
@@ -1420,7 +1420,9 @@ void sqlite3CodeSubselect(Parse *pParse,
         int iParm = pExpr->iTable +  (((int)affinity)<<16);
         ExprList *pEList;
         assert( (pExpr->iTable&0x0000FFFF)==pExpr->iTable );
-        sqlite3Select(pParse, pExpr->pSelect, SRT_Set, iParm, 0, 0, 0, 0);
+        if( sqlite3Select(pParse, pExpr->pSelect, SRT_Set, iParm, 0, 0, 0, 0) ){
+          return;
+        }
         pEList = pExpr->pSelect->pEList;
         if( pEList && pEList->nExpr>0 ){ 
           keyInfo.aColl[0] = binaryCompareCollSeq(pParse, pExpr->pLeft,
@@ -1491,7 +1493,9 @@ void sqlite3CodeSubselect(Parse *pParse,
       }
       sqlite3ExprDelete(pSel->pLimit);
       pSel->pLimit = sqlite3Expr(TK_INTEGER, 0, 0, &one);
-      sqlite3Select(pParse, pSel, sop, iMem, 0, 0, 0, 0);
+      if( sqlite3Select(pParse, pSel, sop, iMem, 0, 0, 0, 0) ){
+        return;
+      }
       break;
     }
   }
Index: ext/pdo_sqlite/sqlite/src/func.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/func.c,v
retrieving revision 1.3.2.2.2.4
retrieving revision 1.3.2.2.2.5
diff -u -p -d -r1.3.2.2.2.4 -r1.3.2.2.2.5
--- ext/pdo_sqlite/sqlite/src/func.c	9 Apr 2007 16:35:11 -0000	1.3.2.2.2.4
+++ ext/pdo_sqlite/sqlite/src/func.c	18 Apr 2007 22:53:46 -0000	1.3.2.2.2.5
@@ -655,8 +655,8 @@ static void hexFunc(
   const unsigned char *pBlob;
   char *zHex, *z;
   assert( argc==1 );
-  pBlob = sqlite3_value_blob(argv[0]);
   n = sqlite3_value_bytes(argv[0]);
+  pBlob = sqlite3_value_blob(argv[0]);
   z = zHex = sqlite3_malloc(n*2 + 1);
   if( zHex==0 ) return;
   for(i=0; i<n; i++, pBlob++){
Index: ext/pdo_sqlite/sqlite/src/insert.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/insert.c,v
retrieving revision 1.3.2.2.2.3
retrieving revision 1.3.2.2.2.4
diff -u -p -d -r1.3.2.2.2.3 -r1.3.2.2.2.4
--- ext/pdo_sqlite/sqlite/src/insert.c	9 Apr 2007 16:35:11 -0000	1.3.2.2.2.3
+++ ext/pdo_sqlite/sqlite/src/insert.c	18 Apr 2007 22:53:46 -0000	1.3.2.2.2.4
@@ -705,7 +705,7 @@ void sqlite3Insert(
         VdbeOp *pOp;
         sqlite3ExprCode(pParse, pList->a[keyColumn].pExpr);
         pOp = sqlite3VdbeGetOp(v, sqlite3VdbeCurrentAddr(v) - 1);
-        if( pOp->opcode==OP_Null ){
+        if( pOp && pOp->opcode==OP_Null ){
           appendFlag = 1;
           pOp->opcode = OP_NewRowid;
           pOp->p1 = base;
@@ -1374,10 +1374,10 @@ static int xferOptimization(
   int addr1, addr2;                /* Loop addresses */
   int emptyDestTest;               /* Address of test for empty pDest */
   int emptySrcTest;                /* Address of test for empty pSrc */
-  int memRowid = 0;                /* A memcell containing a rowid from pSrc */
   Vdbe *v;                         /* The VDBE we are building */
   KeyInfo *pKey;                   /* Key information for an index */
   int counterMem;                  /* Memory register used by AUTOINC */
+  int destHasUniqueIdx = 0;        /* True if pDest has a UNIQUE index */
 
   if( pSelect==0 ){
     return 0;   /* Must be of the form  INSERT INTO ... SELECT ... */
@@ -1474,6 +1474,9 @@ static int xferOptimization(
     }
   }
   for(pDestIdx=pDest->pIndex; pDestIdx; pDestIdx=pDestIdx->pNext){
+    if( pDestIdx->onError!=OE_None ){
+      destHasUniqueIdx = 1;
+    }
     for(pSrcIdx=pSrc->pIndex; pSrcIdx; pSrcIdx=pSrcIdx->pNext){
       if( xferCompatibleIndex(pDestIdx, pSrcIdx) ) break;
     }
@@ -1504,11 +1507,16 @@ static int xferOptimization(
   iDest = pParse->nTab++;
   counterMem = autoIncBegin(pParse, iDbDest, pDest);
   sqlite3OpenTable(pParse, iDest, iDbDest, pDest, OP_OpenWrite);
-  if( pDest->iPKey<0 && pDest->pIndex!=0 ){
+  if( (pDest->iPKey<0 && pDest->pIndex!=0) || destHasUniqueIdx ){
     /* If tables do not have an INTEGER PRIMARY KEY and there
     ** are indices to be copied and the destination is not empty,
     ** we have to disallow the transfer optimization because the
     ** the rowids might change which will mess up indexing.
+    **
+    ** Or if the destination has a UNIQUE index and is not empty,
+    ** we also disallow the transfer optimization because we cannot
+    ** insure that all entries in the union of DEST and SRC will be
+    ** unique.
     */
     addr1 = sqlite3VdbeAddOp(v, OP_Rewind, iDest, 0);
     emptyDestTest = sqlite3VdbeAddOp(v, OP_Goto, 0, 0);
@@ -1518,11 +1526,6 @@ static int xferOptimization(
   }
   sqlite3OpenTable(pParse, iSrc, iDbSrc, pSrc, OP_OpenRead);
   emptySrcTest = sqlite3VdbeAddOp(v, OP_Rewind, iSrc, 0);
-  if( pDest->pIndex!=0 ){
-    sqlite3VdbeAddOp(v, OP_Rowid, iSrc, 0);
-    memRowid = pParse->nMem++;
-    sqlite3VdbeAddOp(v, OP_MemStore, memRowid, pDest->iPKey>=0);
-  }
   if( pDest->iPKey>=0 ){
     addr1 = sqlite3VdbeAddOp(v, OP_Rowid, iSrc, 0);
     sqlite3VdbeAddOp(v, OP_Dup, 0, 0);
@@ -1562,13 +1565,6 @@ static int xferOptimization(
                    (char*)pKey, P3_KEYINFO_HANDOFF);
     addr1 = sqlite3VdbeAddOp(v, OP_Rewind, iSrc, 0);
     sqlite3VdbeAddOp(v, OP_RowKey, iSrc, 0);
-    if( pDestIdx->onError!=OE_None ){
-      sqlite3VdbeAddOp(v, OP_MemLoad, memRowid, 0);
-      addr2 = sqlite3VdbeAddOp(v, OP_IsUnique, iDest, 0);
-      sqlite3VdbeOp3(v, OP_Halt, SQLITE_CONSTRAINT, onError, 
-                    "UNIQUE constraint failed", P3_STATIC);
-      sqlite3VdbeJumpHere(v, addr2);
-    }
     sqlite3VdbeAddOp(v, OP_IdxInsert, iDest, 1);
     sqlite3VdbeAddOp(v, OP_Next, iSrc, addr1+1);
     sqlite3VdbeJumpHere(v, addr1);
Index: ext/pdo_sqlite/sqlite/src/main.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/main.c,v
retrieving revision 1.3.2.2.2.3
retrieving revision 1.3.2.2.2.4
diff -u -p -d -r1.3.2.2.2.3 -r1.3.2.2.2.4
--- ext/pdo_sqlite/sqlite/src/main.c	9 Apr 2007 16:35:11 -0000	1.3.2.2.2.3
+++ ext/pdo_sqlite/sqlite/src/main.c	18 Apr 2007 22:53:46 -0000	1.3.2.2.2.4
@@ -127,8 +127,18 @@ int sqlite3_close(sqlite3 *db){
   }
 #endif 
 
-  /* If there are any outstanding VMs, return SQLITE_BUSY. */
   sqlite3ResetInternalSchema(db, 0);
+
+  /* If a transaction is open, the ResetInternalSchema() call above
+  ** will not have called the xDisconnect() method on any virtual
+  ** tables in the db->aVTrans[] array. The following sqlite3VtabRollback()
+  ** call will do so. We need to do this before the check for active
+  ** SQL statements below, as the v-table implementation may be storing
+  ** some prepared statements internally.
+  */
+  sqlite3VtabRollback(db);
+
+  /* If there are any outstanding VMs, return SQLITE_BUSY. */
   if( db->pVdbe ){
     sqlite3Error(db, SQLITE_BUSY, 
         "Unable to close due to unfinalised statements");
@@ -149,8 +159,6 @@ int sqlite3_close(sqlite3 *db){
     return SQLITE_ERROR;
   }
 
-  sqlite3VtabRollback(db);
-
   for(j=0; j<db->nDb; j++){
     struct Db *pDb = &db->aDb[j];
     if( pDb->pBt ){
Index: ext/pdo_sqlite/sqlite/src/os_common.h
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/os_common.h,v
retrieving revision 1.1.2.1.2.3
retrieving revision 1.1.2.1.2.4
diff -u -p -d -r1.1.2.1.2.3 -r1.1.2.1.2.4
--- ext/pdo_sqlite/sqlite/src/os_common.h	9 Apr 2007 16:35:11 -0000	1.1.2.1.2.3
+++ ext/pdo_sqlite/sqlite/src/os_common.h	18 Apr 2007 22:53:46 -0000	1.1.2.1.2.4
@@ -97,6 +97,7 @@ int sqlite3_diskfull = 0;
          || (sqlite3_io_error_persist && sqlite3_io_error_hit) ) \
                 { local_ioerr(); CODE; }
 static void local_ioerr(){
+  IOTRACE(("IOERR\n"));
   sqlite3_io_error_hit = 1;
 }
 #define SimulateDiskfullError(CODE) \
Index: ext/pdo_sqlite/sqlite/src/os_win.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/os_win.c,v
retrieving revision 1.3.2.1.2.3
retrieving revision 1.3.2.1.2.4
diff -u -p -d -r1.3.2.1.2.3 -r1.3.2.1.2.4
--- ext/pdo_sqlite/sqlite/src/os_win.c	9 Apr 2007 16:35:11 -0000	1.3.2.1.2.3
+++ ext/pdo_sqlite/sqlite/src/os_win.c	18 Apr 2007 22:53:46 -0000	1.3.2.1.2.4
@@ -408,6 +408,12 @@ static void winceDestroyLock(winFile *pF
     UnmapViewOfFile(pFile->shared);
     CloseHandle(pFile->hShared);
 
+    if( pFile->zDeleteOnClose ){
+      DeleteFileW(pFile->zDeleteOnClose);
+      sqliteFree(pFile->zDeleteOnClose);
+      pFile->zDeleteOnClose = 0;
+    }
+
     /* Done with the mutex */
     winceMutexRelease(pFile->hMutex);    
     CloseHandle(pFile->hMutex);
@@ -975,10 +981,6 @@ static int winClose(OsFile **pId){
     }while( rc==0 && cnt++ < MX_CLOSE_ATTEMPT && (Sleep(100), 1) );
 #if OS_WINCE
     winceDestroyLock(pFile);
-    if( pFile->zDeleteOnClose ){
-      DeleteFileW(pFile->zDeleteOnClose);
-      sqliteFree(pFile->zDeleteOnClose);
-    }
 #endif
     OpenCounter(-1);
     sqliteFree(pFile);
Index: ext/pdo_sqlite/sqlite/src/pager.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/pager.c,v
retrieving revision 1.3.2.3.2.3
retrieving revision 1.3.2.3.2.4
diff -u -p -d -r1.3.2.3.2.3 -r1.3.2.3.2.4
--- ext/pdo_sqlite/sqlite/src/pager.c	9 Apr 2007 16:35:11 -0000	1.3.2.3.2.3
+++ ext/pdo_sqlite/sqlite/src/pager.c	18 Apr 2007 22:53:46 -0000	1.3.2.3.2.4
@@ -162,6 +162,7 @@ struct PgHdr {
   u8 dirty;                      /* TRUE if we need to write back changes */
   u8 needSync;                   /* Sync journal before writing this page */
   u8 alwaysRollback;             /* Disable DontRollback() for this page */
+  u8 needRead;                   /* Read content if PagerWrite() is called */
   short int nRef;                /* Number of users of this page */
   PgHdr *pDirty, *pPrevDirty;    /* Dirty pages */
   u32 notUsed;                   /* Buffer space */
@@ -293,19 +294,26 @@ struct Pager {
   Pager *pNext;               /* Linked list of pagers in this thread */
 #endif
   char *pTmpSpace;            /* Pager.pageSize bytes of space for tmp use */
-  u32 iChangeCount;           /* Db change-counter for which cache is valid */
+  char dbFileVers[16];        /* Changes whenever database file changes */
 };
 
 /*
-** If SQLITE_TEST is defined then increment the variable given in
-** the argument
+** The following global variables hold counters used for
+** testing purposes only.  These variables do not exist in
+** a non-testing build.  These variables are not thread-safe.
 */
 #ifdef SQLITE_TEST
-# define TEST_INCR(x)  x++
+int sqlite3_pager_readdb_count = 0;    /* Number of full pages read from DB */
+int sqlite3_pager_writedb_count = 0;   /* Number of full pages written to DB */
+int sqlite3_pager_writej_count = 0;    /* Number of pages written to journal */
+int sqlite3_pager_pgfree_count = 0;    /* Number of cache pages freed */
+# define PAGER_INCR(v)  v++
 #else
-# define TEST_INCR(x)
+# define PAGER_INCR(v)
 #endif
 
+
+
 /*
 ** Journal files begin with the following magic string.  The data
 ** was obtained from /dev/random.  It is used only as a sanity check.
@@ -898,6 +906,8 @@ static void pager_reset(Pager *pPager){
   PgHdr *pPg, *pNext;
   if( pPager->errCode ) return;
   for(pPg=pPager->pAll; pPg; pPg=pNext){
+    IOTRACE(("PGFREE %p %d\n", pPager, pPg->pgno));
+    PAGER_INCR(sqlite3_pager_pgfree_count);
     pNext = pPg->pNextAll;
     sqliteFree(pPg);
   }
@@ -1121,12 +1131,14 @@ static int pager_playback_one_page(Pager
 #ifdef SQLITE_CHECK_PAGES
     pPg->pageHash = pager_pagehash(pPg);
 #endif
-    CODEC1(pPager, pData, pPg->pgno, 3);
-
-    /* If this was page 1, then restore the value of Pager.iChangeCount */
+    /* If this was page 1, then restore the value of Pager.dbFileVers.
+    ** Do this before any decoding. */
     if( pgno==1 ){
-      pPager->iChangeCount = retrieve32bits(pPg, 24);
+      memcpy(&pPager->dbFileVers, &((u8*)pData)[24],sizeof(pPager->dbFileVers));
     }
+
+    /* Decode the page just read from disk */
+    CODEC1(pPager, pData, pPg->pgno, 3);
   }
   return rc;
 }
@@ -1219,51 +1231,6 @@ delmaster_out:
   return rc;
 }
 
-#if 0
-/*
-** Make every page in the cache agree with what is on disk.  In other words,
-** reread the disk to reset the state of the cache.
-**
-** This routine is called after a rollback in which some of the dirty cache
-** pages had never been written out to disk.  We need to roll back the
-** cache content and the easiest way to do that is to reread the old content
-** back from the disk.
-*/
-static int pager_reload_cache(Pager *pPager){
-  PgHdr *pPg;
-  int rc = SQLITE_OK;
-  for(pPg=pPager->pAll; pPg; pPg=pPg->pNextAll){
-    char *zBuf = pPager->pTmpSpace;        /* Temp storage for one page */
-    if( !pPg->dirty ) continue;
-    if( (int)pPg->pgno <= pPager->origDbSize ){
-      rc = sqlite3OsSeek(pPager->fd, pPager->pageSize*(i64)(pPg->pgno-1));
-      if( rc==SQLITE_OK ){
-        rc = sqlite3OsRead(pPager->fd, zBuf, pPager->pageSize);
-      }
-      PAGERTRACE3("REFETCH %d page %d\n", PAGERID(pPager), pPg->pgno);
-      if( rc ) break;
-      CODEC1(pPager, zBuf, pPg->pgno, 2);
-    }else{
-      memset(zBuf, 0, pPager->pageSize);
-    }
-    if( pPg->nRef==0 || memcmp(zBuf, PGHDR_TO_DATA(pPg), pPager->pageSize) ){
-      memcpy(PGHDR_TO_DATA(pPg), zBuf, pPager->pageSize);
-      if( pPager->xReiniter ){
-        pPager->xReiniter(pPg, pPager->pageSize);
-      }else{
-        memset(PGHDR_TO_EXTRA(pPg, pPager), 0, pPager->nExtra);
-      }
-    }
-    pPg->needSync = 0;
-    pPg->dirty = 0;
-#ifdef SQLITE_CHECK_PAGES
-    pPg->pageHash = pager_pagehash(pPg);
-#endif
-  }
-  pPager->pDirty = 0;
-  return rc;
-}
-#endif
 
 static void pager_truncate_cache(Pager *pPager);
 
@@ -2049,6 +2016,8 @@ static void pager_truncate_cache(Pager *
       ppPg = &pPg->pNextAll;
     }else{
       *ppPg = pPg->pNextAll;
+      IOTRACE(("PGFREE %p %d\n", pPager, pPg->pgno));
+      PAGER_INCR(sqlite3_pager_pgfree_count);
       unlinkPage(pPg);
       makeClean(pPg);
       sqliteFree(pPg);
@@ -2470,9 +2439,13 @@ static int pager_write_pagelist(PgHdr *p
     if( pList->pgno<=pPager->dbSize ){
       char *pData = CODEC2(pPager, PGHDR_TO_DATA(pList), pList->pgno, 6);
       PAGERTRACE3("STORE %d page %d\n", PAGERID(pPager), pList->pgno);
-      IOTRACE(("PGOUT %p %d\n", pPager, pList->pgno))
+      IOTRACE(("PGOUT %p %d\n", pPager, pList->pgno));
       rc = sqlite3OsWrite(pPager->fd, pData, pPager->pageSize);
-      TEST_INCR(pPager->nWrite);
+      PAGER_INCR(sqlite3_pager_writedb_count);
+      PAGER_INCR(pPager->nWrite);
+      if( pList->pgno==1 ){
+        memcpy(&pPager->dbFileVers, &pData[24], sizeof(pPager->dbFileVers));
+      }
     }
 #ifndef NDEBUG
     else{
@@ -2674,6 +2647,8 @@ int sqlite3PagerReleaseMemory(int nReq){
           pTmp->pNextAll = pPg->pNextAll;
         }
         nReleased += sqliteAllocSize(pPg);
+        IOTRACE(("PGFREE %p %d\n", pPager, pPg->pgno));
+        PAGER_INCR(sqlite3_pager_pgfree_count);
         sqliteFree(pPg);
       }
 
@@ -2706,8 +2681,14 @@ static int readDbPage(Pager *pPager, PgH
     rc = sqlite3OsRead(pPager->fd, PGHDR_TO_DATA(pPg),
                           pPager->pageSize);
   }
-  IOTRACE(("PGIN %p %d\n", pPager, pgno))
+  PAGER_INCR(sqlite3_pager_readdb_count);
+  PAGER_INCR(pPager->nRead);
+  IOTRACE(("PGIN %p %d\n", pPager, pgno));
   PAGERTRACE3("FETCH %d page %d\n", PAGERID(pPager), pPg->pgno);
+  if( pgno==1 ){
+    memcpy(&pPager->dbFileVers, &((u8*)PGHDR_TO_DATA(pPg))[24],
+                                              sizeof(pPager->dbFileVers));
+  }
   CODEC1(pPager, PGHDR_TO_DATA(pPg), pPg->pgno, 3);
   return rc;
 }
@@ -2808,16 +2789,21 @@ static int pagerSharedLock(Pager *pPager
       if( pPager->pAll ){
         /* The shared-lock has just been acquired on the database file
         ** and there are already pages in the cache (from a previous
-        ** read or write transaction). If the value of the change-counter
-        ** stored in Pager.iChangeCount matches that found on page 1 of
-        ** the database file, then no database changes have occured since
-        ** the cache was last valid and it is safe to retain the cached
-        ** pages. Otherwise, if Pager.iChangeCount does not match the
-        ** change-counter on page 1 of the file, the current cache contents
-        ** must be discarded.
+        ** read or write transaction).  Check to see if the database
+        ** has been modified.  If the database has changed, flush the
+        ** cache.
+        **
+        ** Database changes is detected by looking at 15 bytes beginning
+        ** at offset 24 into the file.  The first 4 of these 16 bytes are
+        ** a 32-bit counter that is incremented with each change.  The
+        ** other bytes change randomly with each file change when
+        ** a codec is in use.
+        ** 
+        ** There is a vanishingly small chance that a change will not be 
+        ** deteched.  The chance of an undetected change is so small that
+        ** it can be neglected.
         */
-        u8 zC[4];
-        u32 iChangeCounter = 0;
+        char dbFileVers[sizeof(pPager->dbFileVers)];
         sqlite3PagerPagecount(pPager);
 
         if( pPager->errCode ){
@@ -2825,19 +2811,19 @@ static int pagerSharedLock(Pager *pPager
         }
 
         if( pPager->dbSize>0 ){
-          /* Read the 4-byte change counter directly from the file. */
           rc = sqlite3OsSeek(pPager->fd, 24);
           if( rc!=SQLITE_OK ){
             return rc;
           }
-          rc = sqlite3OsRead(pPager->fd, zC, 4);
+          rc = sqlite3OsRead(pPager->fd, &dbFileVers, sizeof(dbFileVers));
           if( rc!=SQLITE_OK ){
             return rc;
           }
-          iChangeCounter = (zC[0]<<24) + (zC[1]<<16) + (zC[2]<<8) + zC[3];
+        }else{
+          memset(dbFileVers, 0, sizeof(dbFileVers));
         }
 
-        if( iChangeCounter!=pPager->iChangeCount ){
+        if( memcmp(pPager->dbFileVers, dbFileVers, sizeof(dbFileVers))!=0 ){
           pager_reset(pPager);
         }
       }
@@ -2959,12 +2945,20 @@ pager_allocate_out:
 ** Since _lookup() never goes to disk, it never has to deal with locks
 ** or journal files.
 **
-** If clrFlag is false, the page contents are actually read from disk.
-** If clfFlag is true, it means the page is about to be erased and
-** rewritten without first being read so there is no point it doing
-** the disk I/O.
+** If noContent is false, the page contents are actually read from disk.
+** If noContent is true, it means that we do not care about the contents
+** of the page at this time, so do not do a disk read.  Just fill in the
+** page content with zeros.  But mark the fact that we have not read the
+** content by setting the PgHdr.needRead flag.  Later on, if 
+** sqlite3PagerWrite() is called on this page, that means that the
+** content is needed and the disk read should occur at that point.
 */
-int sqlite3PagerAcquire(Pager *pPager, Pgno pgno, DbPage **ppPage, int clrFlag){
+int sqlite3PagerAcquire(
+  Pager *pPager,      /* The pager open on the database file */
+  Pgno pgno,          /* Page number to fetch */
+  DbPage **ppPage,    /* Write a pointer to the page here */
+  int noContent       /* Do not bother reading content from disk if true */
+){
   PgHdr *pPg;
   int rc;
 
@@ -3000,7 +2994,7 @@ int sqlite3PagerAcquire(Pager *pPager, P
     /* The requested page is not in the page cache. */
     int nMax;
     int h;
-    TEST_INCR(pPager->nMiss);
+    PAGER_INCR(pPager->nMiss);
     rc = pagerAllocatePage(pPager, &pPg);
     if( rc!=SQLITE_OK ){
       return rc;
@@ -3036,16 +3030,16 @@ int sqlite3PagerAcquire(Pager *pPager, P
     /* Populate the page with data, either by reading from the database
     ** file, or by setting the entire page to zero.
     */
-    if( nMax<(int)pgno || MEMDB || (clrFlag && !pPager->alwaysRollback) ){
+    if( nMax<(int)pgno || MEMDB || (noContent && !pPager->alwaysRollback) ){
       memset(PGHDR_TO_DATA(pPg), 0, pPager->pageSize);
+      pPg->needRead = noContent && !pPager->alwaysRollback;
+      IOTRACE(("ZERO %p %d\n", pPager, pgno));
     }else{
       rc = readDbPage(pPager, pPg, pgno);
       if( rc!=SQLITE_OK && rc!=SQLITE_IOERR_SHORT_READ ){
         pPg->pgno = 0;
         sqlite3PagerUnref(pPg);
         return rc;
-      }else{
-        TEST_INCR(pPager->nRead);
       }
     }
 
@@ -3065,7 +3059,7 @@ int sqlite3PagerAcquire(Pager *pPager, P
   }else{
     /* The requested page is in the page cache. */
     assert(pPager->nRef>0 || pgno==1);
-    TEST_INCR(pPager->nHit);
+    PAGER_INCR(pPager->nHit);
     page_ref(pPg);
   }
   *ppPage = pPg;
@@ -3365,6 +3359,23 @@ static int pager_write(PgHdr *pPg){
 
   CHECK_PAGE(pPg);
 
+  /* If this page was previously acquired with noContent==1, that means
+  ** we didn't really read in the content of the page.  This can happen
+  ** (for example) when the page is being moved to the freelist.  But
+  ** now we are (perhaps) moving the page off of the freelist for
+  ** reuse and we need to know its original content so that content
+  ** can be stored in the rollback journal.  So do the read at this
+  ** time.
+  */
+  if( pPg->needRead ){
+    rc = readDbPage(pPager, pPg, pPg->pgno);
+    if( rc==SQLITE_OK ){
+      pPg->needRead = 0;
+    }else{
+      return rc;
+    }
+  }
+
   /* Mark the page as dirty.  If the page has already been written
   ** to the journal then we can return right away.
   */
@@ -3425,7 +3436,8 @@ static int pager_write(PgHdr *pPg){
           put32bits(pData2, pPg->pgno);
           rc = sqlite3OsWrite(pPager->jfd, pData2, szPg);
           IOTRACE(("JOUT %p %d %lld %d\n", pPager, pPg->pgno,
-                   pPager->journalOff, szPg))
+                   pPager->journalOff, szPg));
+          PAGER_INCR(sqlite3_pager_writej_count);
           pPager->journalOff += szPg;
           PAGERTRACE4("JOURNAL %d page %d needSync=%d\n",
                   PAGERID(pPager), pPg->pgno, pPg->needSync);
@@ -3608,7 +3620,7 @@ int sqlite3PagerOverwrite(Pager *pPager,
 
 /*
 ** A call to this routine tells the pager that it is not necessary to
-** write the information on page "pgno" back to the disk, even though
+** write the information on page pPg back to the disk, even though
 ** that page might be marked as dirty.
 **
 ** The overlying software layer calls this routine when all of the data
@@ -3630,13 +3642,11 @@ int sqlite3PagerOverwrite(Pager *pPager,
 ** page contains critical data, we still need to be sure it gets
 ** rolled back in spite of the sqlite3PagerDontRollback() call.
 */
-void sqlite3PagerDontWrite(Pager *pPager, Pgno pgno){
-  PgHdr *pPg;
+void sqlite3PagerDontWrite(DbPage *pDbPage){
+  PgHdr *pPg = pDbPage;
+  Pager *pPager = pPg->pPager;
 
   if( MEMDB ) return;
-
-  pPg = pager_lookup(pPager, pgno);
-  assert( pPg!=0 );  /* We never call _dont_write unless the page is in mem */
   pPg->alwaysRollback = 1;
   if( pPg->dirty && !pPager->stmtInUse ){
     assert( pPager->state>=PAGER_SHARED );
@@ -3650,8 +3660,8 @@ void sqlite3PagerDontWrite(Pager *pPager
       ** corruption during the next transaction.
       */
     }else{
-      PAGERTRACE3("DONT_WRITE page %d of %d\n", pgno, PAGERID(pPager));
-      IOTRACE(("CLEAN %p %d\n", pPager, pgno))
+      PAGERTRACE3("DONT_WRITE page %d of %d\n", pPg->pgno, PAGERID(pPager));
+      IOTRACE(("CLEAN %p %d\n", pPager, pPg->pgno))
       makeClean(pPg);
 #ifdef SQLITE_CHECK_PAGES
       pPg->pageHash = pager_pagehash(pPg);
@@ -3665,6 +3675,11 @@ void sqlite3PagerDontWrite(Pager *pPager
 ** it is not necessary to restore the data on the given page.  This
 ** means that the pager does not have to record the given page in the
 ** rollback journal.
+**
+** If we have not yet actually read the content of this page (if
+** the PgHdr.needRead flag is set) then this routine acts as a promise
+** that we will never need to read the page content in the future.
+** so the needRead flag can be cleared at this point.
 */
 void sqlite3PagerDontRollback(DbPage *pPg){
   Pager *pPager = pPg->pPager;
@@ -3676,6 +3691,7 @@ void sqlite3PagerDontRollback(DbPage *pP
     assert( pPager->aInJournal!=0 );
     pPager->aInJournal[pPg->pgno/8] |= 1<<(pPg->pgno&7);
     pPg->inJournal = 1;
+    pPg->needRead = 0;
     if( pPager->stmtInUse ){
       pPager->aInStmt[pPg->pgno/8] |= 1<<(pPg->pgno&7);
     }
@@ -3715,7 +3731,6 @@ static int pager_incr_changecounter(Page
     /* Increment the value just read and write it back to byte 24. */
     change_counter++;
     put32bits(((char*)PGHDR_TO_DATA(pPgHdr))+24, change_counter);
-    pPager->iChangeCount = change_counter;
   
     /* Release the page reference. */
     sqlite3PagerUnref(pPgHdr);
Index: ext/pdo_sqlite/sqlite/src/pager.h
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/pager.h,v
retrieving revision 1.3.2.2.2.3
retrieving revision 1.3.2.2.2.4
diff -u -p -d -r1.3.2.2.2.3 -r1.3.2.2.2.4
--- ext/pdo_sqlite/sqlite/src/pager.h	9 Apr 2007 16:35:11 -0000	1.3.2.2.2.3
+++ ext/pdo_sqlite/sqlite/src/pager.h	18 Apr 2007 22:53:46 -0000	1.3.2.2.2.4
@@ -109,7 +109,7 @@ int sqlite3PagerStmtBegin(Pager*);
 int sqlite3PagerStmtCommit(Pager*);
 int sqlite3PagerStmtRollback(Pager*);
 void sqlite3PagerDontRollback(DbPage*);
-void sqlite3PagerDontWrite(Pager*, Pgno);
+void sqlite3PagerDontWrite(DbPage*);
 int sqlite3PagerRefcount(Pager*);
 int *sqlite3PagerStats(Pager*);
 void sqlite3PagerSetSafetyLevel(Pager*,int,int);
Index: ext/pdo_sqlite/sqlite/src/parse.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/parse.c,v
retrieving revision 1.6.2.5.2.7
retrieving revision 1.6.2.5.2.8
diff -u -p -d -r1.6.2.5.2.7 -r1.6.2.5.2.8
--- ext/pdo_sqlite/sqlite/src/parse.c	9 Apr 2007 16:35:11 -0000	1.6.2.5.2.7
+++ ext/pdo_sqlite/sqlite/src/parse.c	20 Apr 2007 14:51:16 -0000	1.6.2.5.2.8
@@ -4,7 +4,7 @@
 /* First off, code is include which follows the "include" declaration
 ** in the input file. */
 #include <stdio.h>
-#line 56 "parse.y"
+#line 56 "ext/pdo_sqlite/sqlite/src/parse.y"
 
 #include "sqliteInt.h"
 #include "parse.h"
@@ -43,7 +43,7 @@ struct TrigEvent { int a; IdList * b; };
 */
 struct AttachKey { int type;  Token key; };
 
-#line 48 "parse.c"
+#line 48 "ext/pdo_sqlite/sqlite/src/parse.c"
 /* Next is all token values, in a form suitable for use by makeheaders.
 ** This section will be null unless lemon is run with the -m switch.
 */
@@ -1267,9 +1267,9 @@ static void yy_destructor(YYCODETYPE yym
     case 155:
     case 189:
     case 206:
-#line 374 "parse.y"
+#line 374 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3SelectDelete((yypminor->yy219));}
-#line 1274 "parse.c"
+#line 1274 "ext/pdo_sqlite/sqlite/src/parse.c"
       break;
     case 169:
     case 170:
@@ -1282,9 +1282,9 @@ static void yy_destructor(YYCODETYPE yym
     case 222:
     case 223:
     case 235:
-#line 623 "parse.y"
+#line 623 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3ExprDelete((yypminor->yy172));}
-#line 1289 "parse.c"
+#line 1289 "ext/pdo_sqlite/sqlite/src/parse.c"
       break;
     case 174:
     case 182:
@@ -1297,40 +1297,40 @@ static void yy_destructor(YYCODETYPE yym
     case 212:
     case 215:
     case 221:
-#line 863 "parse.y"
+#line 863 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3ExprListDelete((yypminor->yy174));}
-#line 1304 "parse.c"
+#line 1304 "ext/pdo_sqlite/sqlite/src/parse.c"
       break;
     case 188:
     case 193:
     case 201:
     case 202:
-#line 487 "parse.y"
+#line 487 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3SrcListDelete((yypminor->yy373));}
-#line 1312 "parse.c"
+#line 1312 "ext/pdo_sqlite/sqlite/src/parse.c"
       break;
     case 205:
     case 208:
     case 214:
-#line 504 "parse.y"
+#line 504 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3IdListDelete((yypminor->yy432));}
-#line 1319 "parse.c"
+#line 1319 "ext/pdo_sqlite/sqlite/src/parse.c"
       break;
     case 231:
     case 236:
-#line 964 "parse.y"
+#line 964 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3DeleteTriggerStep((yypminor->yy243));}
-#line 1325 "parse.c"
+#line 1325 "ext/pdo_sqlite/sqlite/src/parse.c"
       break;
     case 233:
-#line 950 "parse.y"
+#line 950 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3IdListDelete((yypminor->yy370).b);}
-#line 1330 "parse.c"
+#line 1330 "ext/pdo_sqlite/sqlite/src/parse.c"
       break;
     case 238:
-#line 1037 "parse.y"
+#line 1037 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3ExprDelete((yypminor->yy386));}
-#line 1335 "parse.c"
+#line 1335 "ext/pdo_sqlite/sqlite/src/parse.c"
       break;
     default:  break;   /* If no destructor action specified: do nothing */
   }
@@ -1489,11 +1489,11 @@ static void yyStackOverflow(yyParser *yy
    while( yypParser->yyidx>=0 ) yy_pop_parser_stack(yypParser);
    /* Here code is inserted which will execute if the parser
    ** stack every overflows */
-#line 44 "parse.y"
+#line 44 "ext/pdo_sqlite/sqlite/src/parse.y"
 
   sqlite3ErrorMsg(pParse, "parser stack overflow");
   pParse->parseError = 1;
-#line 1499 "parse.c"
+#line 1499 "ext/pdo_sqlite/sqlite/src/parse.c"
    sqlite3ParserARG_STORE; /* Suppress warning about unused %extra_argument var */
 }
 
@@ -1944,67 +1944,67 @@ static void yy_reduce(
       case 303:
       case 305:
       case 309:
-#line 97 "parse.y"
+#line 97 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
 }
-#line 1953 "parse.c"
+#line 1953 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 3:
-#line 100 "parse.y"
+#line 100 "ext/pdo_sqlite/sqlite/src/parse.y"
 { sqlite3FinishCoding(pParse); }
-#line 1958 "parse.c"
+#line 1958 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 6:
-#line 103 "parse.y"
+#line 103 "ext/pdo_sqlite/sqlite/src/parse.y"
 { sqlite3BeginParse(pParse, 0); }
-#line 1963 "parse.c"
+#line 1963 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 7:
-#line 105 "parse.y"
+#line 105 "ext/pdo_sqlite/sqlite/src/parse.y"
 { sqlite3BeginParse(pParse, 1); }
-#line 1968 "parse.c"
+#line 1968 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 8:
-#line 106 "parse.y"
+#line 106 "ext/pdo_sqlite/sqlite/src/parse.y"
 { sqlite3BeginParse(pParse, 2); }
-#line 1973 "parse.c"
+#line 1973 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 9:
-#line 112 "parse.y"
+#line 112 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3BeginTransaction(pParse, yymsp[-1].minor.yy46);}
-#line 1978 "parse.c"
+#line 1978 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 13:
-#line 117 "parse.y"
+#line 117 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy46 = TK_DEFERRED;}
-#line 1983 "parse.c"
+#line 1983 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 14:
       case 15:
       case 16:
       case 107:
       case 109:
-#line 118 "parse.y"
+#line 118 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy46 = yymsp[0].major;}
-#line 1992 "parse.c"
+#line 1992 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 17:
       case 18:
-#line 121 "parse.y"
+#line 121 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3CommitTransaction(pParse);}
-#line 1998 "parse.c"
+#line 1998 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 19:
-#line 123 "parse.y"
+#line 123 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3RollbackTransaction(pParse);}
-#line 2003 "parse.c"
+#line 2003 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 21:
-#line 128 "parse.y"
+#line 128 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
    sqlite3StartTable(pParse,&yymsp[-1].minor.yy410,&yymsp[0].minor.yy410,yymsp[-4].minor.yy46,0,0,yymsp[-2].minor.yy46);
 }
-#line 2010 "parse.c"
+#line 2010 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 22:
       case 25:
@@ -2017,9 +2017,9 @@ static void yy_reduce(
       case 113:
       case 212:
       case 215:
-#line 132 "parse.y"
+#line 132 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy46 = 0;}
-#line 2025 "parse.c"
+#line 2025 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 23:
       case 24:
@@ -2029,40 +2029,40 @@ static void yy_reduce(
       case 111:
       case 213:
       case 216:
-#line 133 "parse.y"
+#line 133 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy46 = 1;}
-#line 2037 "parse.c"
+#line 2037 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 26:
-#line 139 "parse.y"
+#line 139 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   sqlite3EndTable(pParse,&yymsp[-1].minor.yy410,&yymsp[0].minor.yy0,0);
 }
-#line 2044 "parse.c"
+#line 2044 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 27:
-#line 142 "parse.y"
+#line 142 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   sqlite3EndTable(pParse,0,0,yymsp[0].minor.yy219);
   sqlite3SelectDelete(yymsp[0].minor.yy219);
 }
-#line 2052 "parse.c"
+#line 2052 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 30:
-#line 154 "parse.y"
+#line 154 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy410.z = yymsp[-2].minor.yy410.z;
   yygotominor.yy410.n = (pParse->sLastToken.z-yymsp[-2].minor.yy410.z) + pParse->sLastToken.n;
 }
-#line 2060 "parse.c"
+#line 2060 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 31:
-#line 158 "parse.y"
+#line 158 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   sqlite3AddColumn(pParse,&yymsp[0].minor.yy410);
   yygotominor.yy410 = yymsp[0].minor.yy410;
 }
-#line 2068 "parse.c"
+#line 2068 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 32:
       case 33:
@@ -2070,14 +2070,14 @@ static void yy_reduce(
       case 35:
       case 36:
       case 255:
-#line 168 "parse.y"
+#line 168 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy410 = yymsp[0].minor.yy0;}
-#line 2078 "parse.c"
+#line 2078 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 38:
-#line 229 "parse.y"
+#line 229 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3AddColumnType(pParse,&yymsp[0].minor.yy410);}
-#line 2083 "parse.c"
+#line 2083 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 39:
       case 42:
@@ -2090,142 +2090,142 @@ static void yy_reduce(
       case 252:
       case 253:
       case 254:
-#line 230 "parse.y"
+#line 230 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy410 = yymsp[0].minor.yy410;}
-#line 2098 "parse.c"
+#line 2098 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 40:
-#line 231 "parse.y"
+#line 231 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy410.z = yymsp[-3].minor.yy410.z;
   yygotominor.yy410.n = &yymsp[0].minor.yy0.z[yymsp[0].minor.yy0.n] - yymsp[-3].minor.yy410.z;
 }
-#line 2106 "parse.c"
+#line 2106 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 41:
-#line 235 "parse.y"
+#line 235 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy410.z = yymsp[-5].minor.yy410.z;
   yygotominor.yy410.n = &yymsp[0].minor.yy0.z[yymsp[0].minor.yy0.n] - yymsp[-5].minor.yy410.z;
 }
-#line 2114 "parse.c"
+#line 2114 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 43:
-#line 241 "parse.y"
+#line 241 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy410.z=yymsp[-1].minor.yy410.z; yygotominor.yy410.n=yymsp[0].minor.yy410.n+(yymsp[0].minor.yy410.z-yymsp[-1].minor.yy410.z);}
-#line 2119 "parse.c"
+#line 2119 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 50:
       case 52:
-#line 252 "parse.y"
+#line 252 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3AddDefaultValue(pParse,yymsp[0].minor.yy172);}
-#line 2125 "parse.c"
+#line 2125 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 51:
-#line 253 "parse.y"
+#line 253 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3AddDefaultValue(pParse,yymsp[-1].minor.yy172);}
-#line 2130 "parse.c"
+#line 2130 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 53:
-#line 255 "parse.y"
+#line 255 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   Expr *p = sqlite3Expr(TK_UMINUS, yymsp[0].minor.yy172, 0, 0);
   sqlite3AddDefaultValue(pParse,p);
 }
-#line 2138 "parse.c"
+#line 2138 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 54:
-#line 259 "parse.y"
+#line 259 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   Expr *p = sqlite3Expr(TK_STRING, 0, 0, &yymsp[0].minor.yy410);
   sqlite3AddDefaultValue(pParse,p);
 }
-#line 2146 "parse.c"
+#line 2146 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 56:
-#line 268 "parse.y"
+#line 268 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3AddNotNull(pParse, yymsp[0].minor.yy46);}
-#line 2151 "parse.c"
+#line 2151 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 57:
-#line 270 "parse.y"
+#line 270 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3AddPrimaryKey(pParse,0,yymsp[-1].minor.yy46,yymsp[0].minor.yy46,yymsp[-2].minor.yy46);}
-#line 2156 "parse.c"
+#line 2156 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 58:
-#line 271 "parse.y"
+#line 271 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3CreateIndex(pParse,0,0,0,0,yymsp[0].minor.yy46,0,0,0,0);}
-#line 2161 "parse.c"
+#line 2161 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 59:
-#line 272 "parse.y"
+#line 272 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3AddCheckConstraint(pParse,yymsp[-1].minor.yy172);}
-#line 2166 "parse.c"
+#line 2166 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 60:
-#line 274 "parse.y"
+#line 274 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3CreateForeignKey(pParse,0,&yymsp[-2].minor.yy410,yymsp[-1].minor.yy174,yymsp[0].minor.yy46);}
-#line 2171 "parse.c"
+#line 2171 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 61:
-#line 275 "parse.y"
+#line 275 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3DeferForeignKey(pParse,yymsp[0].minor.yy46);}
-#line 2176 "parse.c"
+#line 2176 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 62:
-#line 276 "parse.y"
+#line 276 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3AddCollateType(pParse, (char*)yymsp[0].minor.yy410.z, yymsp[0].minor.yy410.n);}
-#line 2181 "parse.c"
+#line 2181 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 65:
-#line 289 "parse.y"
+#line 289 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy46 = OE_Restrict * 0x010101; }
-#line 2186 "parse.c"
+#line 2186 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 66:
-#line 290 "parse.y"
+#line 290 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy46 = (yymsp[-1].minor.yy46 & yymsp[0].minor.yy405.mask) | yymsp[0].minor.yy405.value; }
-#line 2191 "parse.c"
+#line 2191 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 67:
-#line 292 "parse.y"
+#line 292 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy405.value = 0;     yygotominor.yy405.mask = 0x000000; }
-#line 2196 "parse.c"
+#line 2196 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 68:
-#line 293 "parse.y"
+#line 293 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy405.value = yymsp[0].minor.yy46;     yygotominor.yy405.mask = 0x0000ff; }
-#line 2201 "parse.c"
+#line 2201 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 69:
-#line 294 "parse.y"
+#line 294 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy405.value = yymsp[0].minor.yy46<<8;  yygotominor.yy405.mask = 0x00ff00; }
-#line 2206 "parse.c"
+#line 2206 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 70:
-#line 295 "parse.y"
+#line 295 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy405.value = yymsp[0].minor.yy46<<16; yygotominor.yy405.mask = 0xff0000; }
-#line 2211 "parse.c"
+#line 2211 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 71:
-#line 297 "parse.y"
+#line 297 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy46 = OE_SetNull; }
-#line 2216 "parse.c"
+#line 2216 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 72:
-#line 298 "parse.y"
+#line 298 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy46 = OE_SetDflt; }
-#line 2221 "parse.c"
+#line 2221 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 73:
-#line 299 "parse.y"
+#line 299 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy46 = OE_Cascade; }
-#line 2226 "parse.c"
+#line 2226 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 74:
-#line 300 "parse.y"
+#line 300 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy46 = OE_Restrict; }
-#line 2231 "parse.c"
+#line 2231 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 75:
       case 76:
@@ -2234,97 +2234,97 @@ static void yy_reduce(
       case 95:
       case 96:
       case 166:
-#line 302 "parse.y"
+#line 302 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy46 = yymsp[0].minor.yy46;}
-#line 2242 "parse.c"
+#line 2242 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 80:
-#line 312 "parse.y"
+#line 312 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy410.n = 0; yygotominor.yy410.z = 0;}
-#line 2247 "parse.c"
+#line 2247 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 81:
-#line 313 "parse.y"
+#line 313 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy410 = yymsp[-1].minor.yy0;}
-#line 2252 "parse.c"
+#line 2252 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 86:
-#line 319 "parse.y"
+#line 319 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3AddPrimaryKey(pParse,yymsp[-3].minor.yy174,yymsp[0].minor.yy46,yymsp[-2].minor.yy46,0);}
-#line 2257 "parse.c"
+#line 2257 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 87:
-#line 321 "parse.y"
+#line 321 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3CreateIndex(pParse,0,0,0,yymsp[-2].minor.yy174,yymsp[0].minor.yy46,0,0,0,0);}
-#line 2262 "parse.c"
+#line 2262 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 88:
-#line 322 "parse.y"
+#line 322 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3AddCheckConstraint(pParse,yymsp[-2].minor.yy172);}
-#line 2267 "parse.c"
+#line 2267 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 89:
-#line 324 "parse.y"
+#line 324 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
     sqlite3CreateForeignKey(pParse, yymsp[-6].minor.yy174, &yymsp[-3].minor.yy410, yymsp[-2].minor.yy174, yymsp[-1].minor.yy46);
     sqlite3DeferForeignKey(pParse, yymsp[0].minor.yy46);
 }
-#line 2275 "parse.c"
+#line 2275 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 92:
       case 94:
-#line 338 "parse.y"
+#line 338 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy46 = OE_Default;}
-#line 2281 "parse.c"
+#line 2281 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 97:
-#line 343 "parse.y"
+#line 343 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy46 = OE_Ignore;}
-#line 2286 "parse.c"
+#line 2286 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 98:
       case 167:
-#line 344 "parse.y"
+#line 344 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy46 = OE_Replace;}
-#line 2292 "parse.c"
+#line 2292 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 99:
-#line 348 "parse.y"
+#line 348 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   sqlite3DropTable(pParse, yymsp[0].minor.yy373, 0, yymsp[-1].minor.yy46);
 }
-#line 2299 "parse.c"
+#line 2299 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 102:
-#line 358 "parse.y"
+#line 358 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   sqlite3CreateView(pParse, &yymsp[-7].minor.yy0, &yymsp[-3].minor.yy410, &yymsp[-2].minor.yy410, yymsp[0].minor.yy219, yymsp[-6].minor.yy46, yymsp[-4].minor.yy46);
 }
-#line 2306 "parse.c"
+#line 2306 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 103:
-#line 361 "parse.y"
+#line 361 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   sqlite3DropTable(pParse, yymsp[0].minor.yy373, 1, yymsp[-1].minor.yy46);
 }
-#line 2313 "parse.c"
+#line 2313 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 104:
-#line 368 "parse.y"
+#line 368 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   sqlite3Select(pParse, yymsp[0].minor.yy219, SRT_Callback, 0, 0, 0, 0, 0);
   sqlite3SelectDelete(yymsp[0].minor.yy219);
 }
-#line 2321 "parse.c"
+#line 2321 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 105:
       case 128:
-#line 378 "parse.y"
+#line 378 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy219 = yymsp[0].minor.yy219;}
-#line 2327 "parse.c"
+#line 2327 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 106:
-#line 380 "parse.y"
+#line 380 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   if( yymsp[0].minor.yy219 ){
     yymsp[0].minor.yy219->op = yymsp[-1].minor.yy46;
@@ -2332,139 +2332,139 @@ static void yy_reduce(
   }
   yygotominor.yy219 = yymsp[0].minor.yy219;
 }
-#line 2338 "parse.c"
+#line 2338 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 108:
-#line 389 "parse.y"
+#line 389 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy46 = TK_ALL;}
-#line 2343 "parse.c"
+#line 2343 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 110:
-#line 393 "parse.y"
+#line 393 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy219 = sqlite3SelectNew(yymsp[-6].minor.yy174,yymsp[-5].minor.yy373,yymsp[-4].minor.yy172,yymsp[-3].minor.yy174,yymsp[-2].minor.yy172,yymsp[-1].minor.yy174,yymsp[-7].minor.yy46,yymsp[0].minor.yy234.pLimit,yymsp[0].minor.yy234.pOffset);
 }
-#line 2350 "parse.c"
+#line 2350 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 114:
       case 237:
-#line 414 "parse.y"
+#line 414 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy174 = yymsp[-1].minor.yy174;}
-#line 2356 "parse.c"
+#line 2356 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 115:
       case 141:
       case 149:
       case 236:
-#line 415 "parse.y"
+#line 415 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy174 = 0;}
-#line 2364 "parse.c"
+#line 2364 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 116:
-#line 416 "parse.y"
+#line 416 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
    yygotominor.yy174 = sqlite3ExprListAppend(yymsp[-2].minor.yy174,yymsp[-1].minor.yy172,yymsp[0].minor.yy410.n?&yymsp[0].minor.yy410:0);
 }
-#line 2371 "parse.c"
+#line 2371 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 117:
-#line 419 "parse.y"
+#line 419 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy174 = sqlite3ExprListAppend(yymsp[-1].minor.yy174, sqlite3Expr(TK_ALL, 0, 0, 0), 0);
 }
-#line 2378 "parse.c"
+#line 2378 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 118:
-#line 422 "parse.y"
+#line 422 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   Expr *pRight = sqlite3Expr(TK_ALL, 0, 0, 0);
   Expr *pLeft = sqlite3Expr(TK_ID, 0, 0, &yymsp[-2].minor.yy410);
   yygotominor.yy174 = sqlite3ExprListAppend(yymsp[-3].minor.yy174, sqlite3Expr(TK_DOT, pLeft, pRight, 0), 0);
 }
-#line 2387 "parse.c"
+#line 2387 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 121:
-#line 434 "parse.y"
+#line 434 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy410.n = 0;}
-#line 2392 "parse.c"
+#line 2392 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 122:
-#line 446 "parse.y"
+#line 446 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy373 = sqliteMalloc(sizeof(*yygotominor.yy373));}
-#line 2397 "parse.c"
+#line 2397 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 123:
-#line 447 "parse.y"
+#line 447 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy373 = yymsp[0].minor.yy373;
   sqlite3SrcListShiftJoinType(yygotominor.yy373);
 }
-#line 2405 "parse.c"
+#line 2405 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 124:
-#line 455 "parse.y"
+#line 455 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
    yygotominor.yy373 = yymsp[-1].minor.yy373;
    if( yygotominor.yy373 && yygotominor.yy373->nSrc>0 ) yygotominor.yy373->a[yygotominor.yy373->nSrc-1].jointype = yymsp[0].minor.yy46;
 }
-#line 2413 "parse.c"
+#line 2413 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 125:
-#line 459 "parse.y"
+#line 459 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy373 = 0;}
-#line 2418 "parse.c"
+#line 2418 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 126:
-#line 460 "parse.y"
+#line 460 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy373 = sqlite3SrcListAppendFromTerm(yymsp[-5].minor.yy373,&yymsp[-4].minor.yy410,&yymsp[-3].minor.yy410,&yymsp[-2].minor.yy410,0,yymsp[-1].minor.yy172,yymsp[0].minor.yy432);
 }
-#line 2425 "parse.c"
+#line 2425 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 127:
-#line 465 "parse.y"
+#line 465 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
     yygotominor.yy373 = sqlite3SrcListAppendFromTerm(yymsp[-6].minor.yy373,0,0,&yymsp[-2].minor.yy410,yymsp[-4].minor.yy219,yymsp[-1].minor.yy172,yymsp[0].minor.yy432);
   }
-#line 2432 "parse.c"
+#line 2432 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 129:
-#line 476 "parse.y"
+#line 476 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
      sqlite3SrcListShiftJoinType(yymsp[0].minor.yy373);
      yygotominor.yy219 = sqlite3SelectNew(0,yymsp[0].minor.yy373,0,0,0,0,0,0,0);
   }
-#line 2440 "parse.c"
+#line 2440 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 130:
-#line 483 "parse.y"
+#line 483 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy410.z=0; yygotominor.yy410.n=0;}
-#line 2445 "parse.c"
+#line 2445 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 132:
-#line 488 "parse.y"
+#line 488 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy373 = sqlite3SrcListAppend(0,&yymsp[-1].minor.yy410,&yymsp[0].minor.yy410);}
-#line 2450 "parse.c"
+#line 2450 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 133:
-#line 492 "parse.y"
+#line 492 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy46 = JT_INNER; }
-#line 2455 "parse.c"
+#line 2455 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 134:
-#line 493 "parse.y"
+#line 493 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy46 = sqlite3JoinType(pParse,&yymsp[-1].minor.yy0,0,0); }
-#line 2460 "parse.c"
+#line 2460 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 135:
-#line 494 "parse.y"
+#line 494 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy46 = sqlite3JoinType(pParse,&yymsp[-2].minor.yy0,&yymsp[-1].minor.yy410,0); }
-#line 2465 "parse.c"
+#line 2465 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 136:
-#line 496 "parse.y"
+#line 496 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy46 = sqlite3JoinType(pParse,&yymsp[-3].minor.yy0,&yymsp[-2].minor.yy410,&yymsp[-1].minor.yy410); }
-#line 2470 "parse.c"
+#line 2470 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 137:
       case 145:
@@ -2475,9 +2475,9 @@ static void yy_reduce(
       case 225:
       case 227:
       case 231:
-#line 500 "parse.y"
+#line 500 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy172 = yymsp[0].minor.yy172;}
-#line 2483 "parse.c"
+#line 2483 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 138:
       case 151:
@@ -2486,161 +2486,161 @@ static void yy_reduce(
       case 226:
       case 228:
       case 232:
-#line 501 "parse.y"
+#line 501 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy172 = 0;}
-#line 2494 "parse.c"
+#line 2494 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 139:
       case 171:
-#line 505 "parse.y"
+#line 505 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy432 = yymsp[-1].minor.yy432;}
-#line 2500 "parse.c"
+#line 2500 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 140:
       case 170:
-#line 506 "parse.y"
+#line 506 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy432 = 0;}
-#line 2506 "parse.c"
+#line 2506 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 142:
       case 150:
-#line 517 "parse.y"
+#line 517 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy174 = yymsp[0].minor.yy174;}
-#line 2512 "parse.c"
+#line 2512 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 143:
-#line 518 "parse.y"
+#line 518 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy174 = sqlite3ExprListAppend(yymsp[-3].minor.yy174,yymsp[-1].minor.yy172,0);
   if( yygotominor.yy174 ) yygotominor.yy174->a[yygotominor.yy174->nExpr-1].sortOrder = yymsp[0].minor.yy46;
 }
-#line 2520 "parse.c"
+#line 2520 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 144:
-#line 522 "parse.y"
+#line 522 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy174 = sqlite3ExprListAppend(0,yymsp[-1].minor.yy172,0);
   if( yygotominor.yy174 && yygotominor.yy174->a ) yygotominor.yy174->a[0].sortOrder = yymsp[0].minor.yy46;
 }
-#line 2528 "parse.c"
+#line 2528 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 146:
       case 148:
-#line 530 "parse.y"
+#line 530 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy46 = SQLITE_SO_ASC;}
-#line 2534 "parse.c"
+#line 2534 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 147:
-#line 531 "parse.y"
+#line 531 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy46 = SQLITE_SO_DESC;}
-#line 2539 "parse.c"
+#line 2539 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 153:
-#line 557 "parse.y"
+#line 557 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy234.pLimit = 0; yygotominor.yy234.pOffset = 0;}
-#line 2544 "parse.c"
+#line 2544 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 154:
-#line 558 "parse.y"
+#line 558 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy234.pLimit = yymsp[0].minor.yy172; yygotominor.yy234.pOffset = 0;}
-#line 2549 "parse.c"
+#line 2549 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 155:
-#line 560 "parse.y"
+#line 560 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy234.pLimit = yymsp[-2].minor.yy172; yygotominor.yy234.pOffset = yymsp[0].minor.yy172;}
-#line 2554 "parse.c"
+#line 2554 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 156:
-#line 562 "parse.y"
+#line 562 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy234.pOffset = yymsp[-2].minor.yy172; yygotominor.yy234.pLimit = yymsp[0].minor.yy172;}
-#line 2559 "parse.c"
+#line 2559 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 157:
-#line 566 "parse.y"
+#line 566 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3DeleteFrom(pParse,yymsp[-1].minor.yy373,yymsp[0].minor.yy172);}
-#line 2564 "parse.c"
+#line 2564 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 160:
-#line 577 "parse.y"
+#line 577 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3Update(pParse,yymsp[-3].minor.yy373,yymsp[-1].minor.yy174,yymsp[0].minor.yy172,yymsp[-4].minor.yy46);}
-#line 2569 "parse.c"
+#line 2569 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 161:
-#line 583 "parse.y"
+#line 583 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy174 = sqlite3ExprListAppend(yymsp[-4].minor.yy174,yymsp[0].minor.yy172,&yymsp[-2].minor.yy410);}
-#line 2574 "parse.c"
+#line 2574 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 162:
-#line 584 "parse.y"
+#line 584 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy174 = sqlite3ExprListAppend(0,yymsp[0].minor.yy172,&yymsp[-2].minor.yy410);}
-#line 2579 "parse.c"
+#line 2579 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 163:
-#line 590 "parse.y"
+#line 590 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3Insert(pParse, yymsp[-5].minor.yy373, yymsp[-1].minor.yy174, 0, yymsp[-4].minor.yy432, yymsp[-7].minor.yy46);}
-#line 2584 "parse.c"
+#line 2584 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 164:
-#line 592 "parse.y"
+#line 592 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3Insert(pParse, yymsp[-2].minor.yy373, 0, yymsp[0].minor.yy219, yymsp[-1].minor.yy432, yymsp[-4].minor.yy46);}
-#line 2589 "parse.c"
+#line 2589 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 165:
-#line 594 "parse.y"
+#line 594 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3Insert(pParse, yymsp[-3].minor.yy373, 0, 0, yymsp[-2].minor.yy432, yymsp[-5].minor.yy46);}
-#line 2594 "parse.c"
+#line 2594 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 168:
       case 229:
-#line 604 "parse.y"
+#line 604 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy174 = sqlite3ExprListAppend(yymsp[-2].minor.yy174,yymsp[0].minor.yy172,0);}
-#line 2600 "parse.c"
+#line 2600 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 169:
       case 230:
-#line 605 "parse.y"
+#line 605 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy174 = sqlite3ExprListAppend(0,yymsp[0].minor.yy172,0);}
-#line 2606 "parse.c"
+#line 2606 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 172:
-#line 614 "parse.y"
+#line 614 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy432 = sqlite3IdListAppend(yymsp[-2].minor.yy432,&yymsp[0].minor.yy410);}
-#line 2611 "parse.c"
+#line 2611 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 173:
-#line 615 "parse.y"
+#line 615 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy432 = sqlite3IdListAppend(0,&yymsp[0].minor.yy410);}
-#line 2616 "parse.c"
+#line 2616 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 175:
-#line 626 "parse.y"
+#line 626 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy172 = yymsp[-1].minor.yy172; sqlite3ExprSpan(yygotominor.yy172,&yymsp[-2].minor.yy0,&yymsp[0].minor.yy0); }
-#line 2621 "parse.c"
+#line 2621 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 176:
       case 181:
       case 182:
-#line 627 "parse.y"
+#line 627 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy172 = sqlite3Expr(yymsp[0].major, 0, 0, &yymsp[0].minor.yy0);}
-#line 2628 "parse.c"
+#line 2628 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 177:
       case 178:
-#line 628 "parse.y"
+#line 628 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy172 = sqlite3Expr(TK_ID, 0, 0, &yymsp[0].minor.yy0);}
-#line 2634 "parse.c"
+#line 2634 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 179:
-#line 630 "parse.y"
+#line 630 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   Expr *temp1 = sqlite3Expr(TK_ID, 0, 0, &yymsp[-2].minor.yy410);
   Expr *temp2 = sqlite3Expr(TK_ID, 0, 0, &yymsp[0].minor.yy410);
   yygotominor.yy172 = sqlite3Expr(TK_DOT, temp1, temp2, 0);
 }
-#line 2643 "parse.c"
+#line 2643 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 180:
-#line 635 "parse.y"
+#line 635 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   Expr *temp1 = sqlite3Expr(TK_ID, 0, 0, &yymsp[-4].minor.yy410);
   Expr *temp2 = sqlite3Expr(TK_ID, 0, 0, &yymsp[-2].minor.yy410);
@@ -2648,39 +2648,39 @@ static void yy_reduce(
   Expr *temp4 = sqlite3Expr(TK_DOT, temp2, temp3, 0);
   yygotominor.yy172 = sqlite3Expr(TK_DOT, temp1, temp4, 0);
 }
-#line 2654 "parse.c"
+#line 2654 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 183:
-#line 644 "parse.y"
+#line 644 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy172 = sqlite3RegisterExpr(pParse, &yymsp[0].minor.yy0);}
-#line 2659 "parse.c"
+#line 2659 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 184:
-#line 645 "parse.y"
+#line 645 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   Token *pToken = &yymsp[0].minor.yy0;
   Expr *pExpr = yygotominor.yy172 = sqlite3Expr(TK_VARIABLE, 0, 0, pToken);
   sqlite3ExprAssignVarNumber(pParse, pExpr);
 }
-#line 2668 "parse.c"
+#line 2668 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 185:
-#line 650 "parse.y"
+#line 650 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy172 = sqlite3ExprSetColl(pParse, yymsp[-2].minor.yy172, &yymsp[0].minor.yy410);
 }
-#line 2675 "parse.c"
+#line 2675 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 186:
-#line 654 "parse.y"
+#line 654 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy172 = sqlite3Expr(TK_CAST, yymsp[-3].minor.yy172, 0, &yymsp[-1].minor.yy410);
   sqlite3ExprSpan(yygotominor.yy172,&yymsp[-5].minor.yy0,&yymsp[0].minor.yy0);
 }
-#line 2683 "parse.c"
+#line 2683 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 187:
-#line 659 "parse.y"
+#line 659 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy172 = sqlite3ExprFunction(yymsp[-1].minor.yy174, &yymsp[-4].minor.yy0);
   sqlite3ExprSpan(yygotominor.yy172,&yymsp[-4].minor.yy0,&yymsp[0].minor.yy0);
@@ -2688,18 +2688,18 @@ static void yy_reduce(
     yygotominor.yy172->flags |= EP_Distinct;
   }
 }
-#line 2694 "parse.c"
+#line 2694 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 188:
-#line 666 "parse.y"
+#line 666 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy172 = sqlite3ExprFunction(0, &yymsp[-3].minor.yy0);
   sqlite3ExprSpan(yygotominor.yy172,&yymsp[-3].minor.yy0,&yymsp[0].minor.yy0);
 }
-#line 2702 "parse.c"
+#line 2702 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 189:
-#line 670 "parse.y"
+#line 670 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   /* The CURRENT_TIME, CURRENT_DATE, and CURRENT_TIMESTAMP values are
   ** treated as functions that return constants */
@@ -2709,7 +2709,7 @@ static void yy_reduce(
     yygotominor.yy172->span = yymsp[0].minor.yy0;
   }
 }
-#line 2715 "parse.c"
+#line 2715 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 190:
       case 191:
@@ -2719,24 +2719,24 @@ static void yy_reduce(
       case 195:
       case 196:
       case 197:
-#line 679 "parse.y"
+#line 679 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy172 = sqlite3Expr(yymsp[-1].major, yymsp[-2].minor.yy172, yymsp[0].minor.yy172, 0);}
-#line 2727 "parse.c"
+#line 2727 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 198:
       case 200:
-#line 689 "parse.y"
+#line 689 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy72.eOperator = yymsp[0].minor.yy0; yygotominor.yy72.not = 0;}
-#line 2733 "parse.c"
+#line 2733 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 199:
       case 201:
-#line 690 "parse.y"
+#line 690 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy72.eOperator = yymsp[0].minor.yy0; yygotominor.yy72.not = 1;}
-#line 2739 "parse.c"
+#line 2739 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 204:
-#line 697 "parse.y"
+#line 697 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   ExprList *pList;
   pList = sqlite3ExprListAppend(0, yymsp[-1].minor.yy172, 0);
@@ -2749,66 +2749,66 @@ static void yy_reduce(
   sqlite3ExprSpan(yygotominor.yy172, &yymsp[-3].minor.yy172->span, &yymsp[-1].minor.yy172->span);
   if( yygotominor.yy172 ) yygotominor.yy172->flags |= EP_InfixFunc;
 }
-#line 2755 "parse.c"
+#line 2755 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 205:
-#line 710 "parse.y"
+#line 710 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy172 = sqlite3Expr(yymsp[0].major, yymsp[-1].minor.yy172, 0, 0);
   sqlite3ExprSpan(yygotominor.yy172,&yymsp[-1].minor.yy172->span,&yymsp[0].minor.yy0);
 }
-#line 2763 "parse.c"
+#line 2763 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 206:
-#line 714 "parse.y"
+#line 714 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy172 = sqlite3Expr(TK_ISNULL, yymsp[-2].minor.yy172, 0, 0);
   sqlite3ExprSpan(yygotominor.yy172,&yymsp[-2].minor.yy172->span,&yymsp[0].minor.yy0);
 }
-#line 2771 "parse.c"
+#line 2771 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 207:
-#line 718 "parse.y"
+#line 718 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy172 = sqlite3Expr(TK_NOTNULL, yymsp[-2].minor.yy172, 0, 0);
   sqlite3ExprSpan(yygotominor.yy172,&yymsp[-2].minor.yy172->span,&yymsp[0].minor.yy0);
 }
-#line 2779 "parse.c"
+#line 2779 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 208:
-#line 722 "parse.y"
+#line 722 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy172 = sqlite3Expr(TK_NOTNULL, yymsp[-3].minor.yy172, 0, 0);
   sqlite3ExprSpan(yygotominor.yy172,&yymsp[-3].minor.yy172->span,&yymsp[0].minor.yy0);
 }
-#line 2787 "parse.c"
+#line 2787 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 209:
-#line 726 "parse.y"
+#line 726 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy172 = sqlite3Expr(yymsp[-1].major, yymsp[0].minor.yy172, 0, 0);
   sqlite3ExprSpan(yygotominor.yy172,&yymsp[-1].minor.yy0,&yymsp[0].minor.yy172->span);
 }
-#line 2795 "parse.c"
+#line 2795 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 210:
-#line 730 "parse.y"
+#line 730 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy172 = sqlite3Expr(TK_UMINUS, yymsp[0].minor.yy172, 0, 0);
   sqlite3ExprSpan(yygotominor.yy172,&yymsp[-1].minor.yy0,&yymsp[0].minor.yy172->span);
 }
-#line 2803 "parse.c"
+#line 2803 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 211:
-#line 734 "parse.y"
+#line 734 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy172 = sqlite3Expr(TK_UPLUS, yymsp[0].minor.yy172, 0, 0);
   sqlite3ExprSpan(yygotominor.yy172,&yymsp[-1].minor.yy0,&yymsp[0].minor.yy172->span);
 }
-#line 2811 "parse.c"
+#line 2811 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 214:
-#line 741 "parse.y"
+#line 741 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   ExprList *pList = sqlite3ExprListAppend(0, yymsp[-2].minor.yy172, 0);
   pList = sqlite3ExprListAppend(pList, yymsp[0].minor.yy172, 0);
@@ -2821,10 +2821,10 @@ static void yy_reduce(
   if( yymsp[-3].minor.yy46 ) yygotominor.yy172 = sqlite3Expr(TK_NOT, yygotominor.yy172, 0, 0);
   sqlite3ExprSpan(yygotominor.yy172,&yymsp[-4].minor.yy172->span,&yymsp[0].minor.yy172->span);
 }
-#line 2827 "parse.c"
+#line 2827 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 217:
-#line 757 "parse.y"
+#line 757 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
     yygotominor.yy172 = sqlite3Expr(TK_IN, yymsp[-4].minor.yy172, 0, 0);
     if( yygotominor.yy172 ){
@@ -2835,10 +2835,10 @@ static void yy_reduce(
     if( yymsp[-3].minor.yy46 ) yygotominor.yy172 = sqlite3Expr(TK_NOT, yygotominor.yy172, 0, 0);
     sqlite3ExprSpan(yygotominor.yy172,&yymsp[-4].minor.yy172->span,&yymsp[0].minor.yy0);
   }
-#line 2841 "parse.c"
+#line 2841 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 218:
-#line 767 "parse.y"
+#line 767 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
     yygotominor.yy172 = sqlite3Expr(TK_SELECT, 0, 0, 0);
     if( yygotominor.yy172 ){
@@ -2848,10 +2848,10 @@ static void yy_reduce(
     }
     sqlite3ExprSpan(yygotominor.yy172,&yymsp[-2].minor.yy0,&yymsp[0].minor.yy0);
   }
-#line 2854 "parse.c"
+#line 2854 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 219:
-#line 776 "parse.y"
+#line 776 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
     yygotominor.yy172 = sqlite3Expr(TK_IN, yymsp[-4].minor.yy172, 0, 0);
     if( yygotominor.yy172 ){
@@ -2862,10 +2862,10 @@ static void yy_reduce(
     if( yymsp[-3].minor.yy46 ) yygotominor.yy172 = sqlite3Expr(TK_NOT, yygotominor.yy172, 0, 0);
     sqlite3ExprSpan(yygotominor.yy172,&yymsp[-4].minor.yy172->span,&yymsp[0].minor.yy0);
   }
-#line 2868 "parse.c"
+#line 2868 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 220:
-#line 786 "parse.y"
+#line 786 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
     SrcList *pSrc = sqlite3SrcListAppend(0,&yymsp[-1].minor.yy410,&yymsp[0].minor.yy410);
     yygotominor.yy172 = sqlite3Expr(TK_IN, yymsp[-3].minor.yy172, 0, 0);
@@ -2877,10 +2877,10 @@ static void yy_reduce(
     if( yymsp[-2].minor.yy46 ) yygotominor.yy172 = sqlite3Expr(TK_NOT, yygotominor.yy172, 0, 0);
     sqlite3ExprSpan(yygotominor.yy172,&yymsp[-3].minor.yy172->span,yymsp[0].minor.yy410.z?&yymsp[0].minor.yy410:&yymsp[-1].minor.yy410);
   }
-#line 2883 "parse.c"
+#line 2883 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 221:
-#line 797 "parse.y"
+#line 797 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
     Expr *p = yygotominor.yy172 = sqlite3Expr(TK_EXISTS, 0, 0, 0);
     if( p ){
@@ -2890,10 +2890,10 @@ static void yy_reduce(
       sqlite3SelectDelete(yymsp[-1].minor.yy219);
     }
   }
-#line 2896 "parse.c"
+#line 2896 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 222:
-#line 809 "parse.y"
+#line 809 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy172 = sqlite3Expr(TK_CASE, yymsp[-3].minor.yy172, yymsp[-1].minor.yy172, 0);
   if( yygotominor.yy172 ){
@@ -2903,45 +2903,45 @@ static void yy_reduce(
   }
   sqlite3ExprSpan(yygotominor.yy172, &yymsp[-4].minor.yy0, &yymsp[0].minor.yy0);
 }
-#line 2909 "parse.c"
+#line 2909 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 223:
-#line 820 "parse.y"
+#line 820 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy174 = sqlite3ExprListAppend(yymsp[-4].minor.yy174, yymsp[-2].minor.yy172, 0);
   yygotominor.yy174 = sqlite3ExprListAppend(yygotominor.yy174, yymsp[0].minor.yy172, 0);
 }
-#line 2917 "parse.c"
+#line 2917 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 224:
-#line 824 "parse.y"
+#line 824 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy174 = sqlite3ExprListAppend(0, yymsp[-2].minor.yy172, 0);
   yygotominor.yy174 = sqlite3ExprListAppend(yygotominor.yy174, yymsp[0].minor.yy172, 0);
 }
-#line 2925 "parse.c"
+#line 2925 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 233:
-#line 851 "parse.y"
+#line 851 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   sqlite3CreateIndex(pParse, &yymsp[-6].minor.yy410, &yymsp[-5].minor.yy410, sqlite3SrcListAppend(0,&yymsp[-3].minor.yy410,0), yymsp[-1].minor.yy174, yymsp[-9].minor.yy46,
                       &yymsp[-10].minor.yy0, &yymsp[0].minor.yy0, SQLITE_SO_ASC, yymsp[-7].minor.yy46);
 }
-#line 2933 "parse.c"
+#line 2933 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 234:
       case 281:
-#line 857 "parse.y"
+#line 857 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy46 = OE_Abort;}
-#line 2939 "parse.c"
+#line 2939 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 235:
-#line 858 "parse.y"
+#line 858 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy46 = OE_None;}
-#line 2944 "parse.c"
+#line 2944 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 238:
-#line 868 "parse.y"
+#line 868 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   Expr *p = 0;
   if( yymsp[-1].minor.yy410.n>0 ){
@@ -2951,10 +2951,10 @@ static void yy_reduce(
   yygotominor.yy174 = sqlite3ExprListAppend(yymsp[-4].minor.yy174, p, &yymsp[-2].minor.yy410);
   if( yygotominor.yy174 ) yygotominor.yy174->a[yygotominor.yy174->nExpr-1].sortOrder = yymsp[0].minor.yy46;
 }
-#line 2957 "parse.c"
+#line 2957 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 239:
-#line 877 "parse.y"
+#line 877 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   Expr *p = 0;
   if( yymsp[-1].minor.yy410.n>0 ){
@@ -2964,108 +2964,108 @@ static void yy_reduce(
   yygotominor.yy174 = sqlite3ExprListAppend(0, p, &yymsp[-2].minor.yy410);
   if( yygotominor.yy174 ) yygotominor.yy174->a[yygotominor.yy174->nExpr-1].sortOrder = yymsp[0].minor.yy46;
 }
-#line 2970 "parse.c"
+#line 2970 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 241:
-#line 889 "parse.y"
+#line 889 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy410.z = 0; yygotominor.yy410.n = 0;}
-#line 2975 "parse.c"
+#line 2975 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 243:
-#line 895 "parse.y"
+#line 895 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3DropIndex(pParse, yymsp[0].minor.yy373, yymsp[-1].minor.yy46);}
-#line 2980 "parse.c"
+#line 2980 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 244:
       case 245:
-#line 901 "parse.y"
+#line 901 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3Vacuum(pParse);}
-#line 2986 "parse.c"
+#line 2986 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 246:
-#line 909 "parse.y"
+#line 909 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3Pragma(pParse,&yymsp[-3].minor.yy410,&yymsp[-2].minor.yy410,&yymsp[0].minor.yy410,0);}
-#line 2991 "parse.c"
+#line 2991 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 247:
-#line 910 "parse.y"
+#line 910 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3Pragma(pParse,&yymsp[-3].minor.yy410,&yymsp[-2].minor.yy410,&yymsp[0].minor.yy0,0);}
-#line 2996 "parse.c"
+#line 2996 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 248:
-#line 911 "parse.y"
+#line 911 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   sqlite3Pragma(pParse,&yymsp[-3].minor.yy410,&yymsp[-2].minor.yy410,&yymsp[0].minor.yy410,1);
 }
-#line 3003 "parse.c"
+#line 3003 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 249:
-#line 914 "parse.y"
+#line 914 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3Pragma(pParse,&yymsp[-4].minor.yy410,&yymsp[-3].minor.yy410,&yymsp[-1].minor.yy410,0);}
-#line 3008 "parse.c"
+#line 3008 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 250:
-#line 915 "parse.y"
+#line 915 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3Pragma(pParse,&yymsp[-1].minor.yy410,&yymsp[0].minor.yy410,0,0);}
-#line 3013 "parse.c"
+#line 3013 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 258:
-#line 929 "parse.y"
+#line 929 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   Token all;
   all.z = yymsp[-3].minor.yy410.z;
   all.n = (yymsp[0].minor.yy0.z - yymsp[-3].minor.yy410.z) + yymsp[0].minor.yy0.n;
   sqlite3FinishTrigger(pParse, yymsp[-1].minor.yy243, &all);
 }
-#line 3023 "parse.c"
+#line 3023 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 259:
-#line 938 "parse.y"
+#line 938 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   sqlite3BeginTrigger(pParse, &yymsp[-7].minor.yy410, &yymsp[-6].minor.yy410, yymsp[-5].minor.yy46, yymsp[-4].minor.yy370.a, yymsp[-4].minor.yy370.b, yymsp[-2].minor.yy373, yymsp[0].minor.yy172, yymsp[-10].minor.yy46, yymsp[-8].minor.yy46);
   yygotominor.yy410 = (yymsp[-6].minor.yy410.n==0?yymsp[-7].minor.yy410:yymsp[-6].minor.yy410);
 }
-#line 3031 "parse.c"
+#line 3031 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 260:
       case 263:
-#line 944 "parse.y"
+#line 944 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy46 = TK_BEFORE; }
-#line 3037 "parse.c"
+#line 3037 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 261:
-#line 945 "parse.y"
+#line 945 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy46 = TK_AFTER;  }
-#line 3042 "parse.c"
+#line 3042 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 262:
-#line 946 "parse.y"
+#line 946 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy46 = TK_INSTEAD;}
-#line 3047 "parse.c"
+#line 3047 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 264:
       case 265:
-#line 951 "parse.y"
+#line 951 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy370.a = yymsp[0].major; yygotominor.yy370.b = 0;}
-#line 3053 "parse.c"
+#line 3053 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 266:
-#line 953 "parse.y"
+#line 953 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy370.a = TK_UPDATE; yygotominor.yy370.b = yymsp[0].minor.yy432;}
-#line 3058 "parse.c"
+#line 3058 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 269:
-#line 960 "parse.y"
+#line 960 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy172 = 0; }
-#line 3063 "parse.c"
+#line 3063 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 270:
-#line 961 "parse.y"
+#line 961 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy172 = yymsp[0].minor.yy172; }
-#line 3068 "parse.c"
+#line 3068 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 271:
-#line 965 "parse.y"
+#line 965 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   if( yymsp[-2].minor.yy243 ){
     yymsp[-2].minor.yy243->pLast->pNext = yymsp[-1].minor.yy243;
@@ -3075,40 +3075,40 @@ static void yy_reduce(
   yymsp[-2].minor.yy243->pLast = yymsp[-1].minor.yy243;
   yygotominor.yy243 = yymsp[-2].minor.yy243;
 }
-#line 3081 "parse.c"
+#line 3081 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 272:
-#line 974 "parse.y"
+#line 974 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy243 = 0; }
-#line 3086 "parse.c"
+#line 3086 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 273:
-#line 980 "parse.y"
+#line 980 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy243 = sqlite3TriggerUpdateStep(&yymsp[-3].minor.yy410, yymsp[-1].minor.yy174, yymsp[0].minor.yy172, yymsp[-4].minor.yy46); }
-#line 3091 "parse.c"
+#line 3091 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 274:
-#line 985 "parse.y"
+#line 985 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy243 = sqlite3TriggerInsertStep(&yymsp[-5].minor.yy410, yymsp[-4].minor.yy432, yymsp[-1].minor.yy174, 0, yymsp[-7].minor.yy46);}
-#line 3096 "parse.c"
+#line 3096 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 275:
-#line 988 "parse.y"
+#line 988 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy243 = sqlite3TriggerInsertStep(&yymsp[-2].minor.yy410, yymsp[-1].minor.yy432, 0, yymsp[0].minor.yy219, yymsp[-4].minor.yy46);}
-#line 3101 "parse.c"
+#line 3101 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 276:
-#line 992 "parse.y"
+#line 992 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy243 = sqlite3TriggerDeleteStep(&yymsp[-1].minor.yy410, yymsp[0].minor.yy172);}
-#line 3106 "parse.c"
+#line 3106 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 277:
-#line 995 "parse.y"
+#line 995 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy243 = sqlite3TriggerSelectStep(yymsp[0].minor.yy219); }
-#line 3111 "parse.c"
+#line 3111 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 278:
-#line 998 "parse.y"
+#line 998 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy172 = sqlite3Expr(TK_RAISE, 0, 0, 0); 
   if( yygotominor.yy172 ){
@@ -3116,10 +3116,10 @@ static void yy_reduce(
     sqlite3ExprSpan(yygotominor.yy172, &yymsp[-3].minor.yy0, &yymsp[0].minor.yy0);
   }
 }
-#line 3122 "parse.c"
+#line 3122 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 279:
-#line 1005 "parse.y"
+#line 1005 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   yygotominor.yy172 = sqlite3Expr(TK_RAISE, 0, 0, &yymsp[-1].minor.yy410); 
   if( yygotominor.yy172 ) {
@@ -3127,119 +3127,119 @@ static void yy_reduce(
     sqlite3ExprSpan(yygotominor.yy172, &yymsp[-5].minor.yy0, &yymsp[0].minor.yy0);
   }
 }
-#line 3133 "parse.c"
+#line 3133 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 280:
-#line 1015 "parse.y"
+#line 1015 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy46 = OE_Rollback;}
-#line 3138 "parse.c"
+#line 3138 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 282:
-#line 1017 "parse.y"
+#line 1017 "ext/pdo_sqlite/sqlite/src/parse.y"
 {yygotominor.yy46 = OE_Fail;}
-#line 3143 "parse.c"
+#line 3143 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 283:
-#line 1022 "parse.y"
+#line 1022 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   sqlite3DropTrigger(pParse,yymsp[0].minor.yy373,yymsp[-1].minor.yy46);
 }
-#line 3150 "parse.c"
+#line 3150 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 284:
-#line 1029 "parse.y"
+#line 1029 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   sqlite3Attach(pParse, yymsp[-3].minor.yy172, yymsp[-1].minor.yy172, yymsp[0].minor.yy386);
 }
-#line 3157 "parse.c"
+#line 3157 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 285:
-#line 1032 "parse.y"
+#line 1032 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   sqlite3Detach(pParse, yymsp[0].minor.yy172);
 }
-#line 3164 "parse.c"
+#line 3164 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 286:
-#line 1038 "parse.y"
+#line 1038 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy386 = 0; }
-#line 3169 "parse.c"
+#line 3169 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 287:
-#line 1039 "parse.y"
+#line 1039 "ext/pdo_sqlite/sqlite/src/parse.y"
 { yygotominor.yy386 = yymsp[0].minor.yy172; }
-#line 3174 "parse.c"
+#line 3174 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 290:
-#line 1047 "parse.y"
+#line 1047 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3Reindex(pParse, 0, 0);}
-#line 3179 "parse.c"
+#line 3179 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 291:
-#line 1048 "parse.y"
+#line 1048 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3Reindex(pParse, &yymsp[-1].minor.yy410, &yymsp[0].minor.yy410);}
-#line 3184 "parse.c"
+#line 3184 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 292:
-#line 1053 "parse.y"
+#line 1053 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3Analyze(pParse, 0, 0);}
-#line 3189 "parse.c"
+#line 3189 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 293:
-#line 1054 "parse.y"
+#line 1054 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3Analyze(pParse, &yymsp[-1].minor.yy410, &yymsp[0].minor.yy410);}
-#line 3194 "parse.c"
+#line 3194 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 294:
-#line 1059 "parse.y"
+#line 1059 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   sqlite3AlterRenameTable(pParse,yymsp[-3].minor.yy373,&yymsp[0].minor.yy410);
 }
-#line 3201 "parse.c"
+#line 3201 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 295:
-#line 1062 "parse.y"
+#line 1062 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   sqlite3AlterFinishAddColumn(pParse, &yymsp[0].minor.yy410);
 }
-#line 3208 "parse.c"
+#line 3208 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 296:
-#line 1065 "parse.y"
+#line 1065 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
   sqlite3AlterBeginAddColumn(pParse, yymsp[0].minor.yy373);
 }
-#line 3215 "parse.c"
+#line 3215 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 299:
-#line 1074 "parse.y"
+#line 1074 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3VtabFinishParse(pParse,0);}
-#line 3220 "parse.c"
+#line 3220 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 300:
-#line 1075 "parse.y"
+#line 1075 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3VtabFinishParse(pParse,&yymsp[0].minor.yy0);}
-#line 3225 "parse.c"
+#line 3225 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 301:
-#line 1076 "parse.y"
+#line 1076 "ext/pdo_sqlite/sqlite/src/parse.y"
 {
     sqlite3VtabBeginParse(pParse, &yymsp[-3].minor.yy410, &yymsp[-2].minor.yy410, &yymsp[0].minor.yy410);
 }
-#line 3232 "parse.c"
+#line 3232 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 304:
-#line 1081 "parse.y"
+#line 1081 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3VtabArgInit(pParse);}
-#line 3237 "parse.c"
+#line 3237 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
       case 306:
       case 307:
       case 308:
       case 310:
-#line 1083 "parse.y"
+#line 1083 "ext/pdo_sqlite/sqlite/src/parse.y"
 {sqlite3VtabArgExtend(pParse,&yymsp[0].minor.yy0);}
-#line 3245 "parse.c"
+#line 3245 "ext/pdo_sqlite/sqlite/src/parse.c"
         break;
   };
   yygoto = yyRuleInfo[yyruleno].lhs;
@@ -3296,7 +3296,7 @@ static void yy_syntax_error(
 ){
   sqlite3ParserARG_FETCH;
 #define TOKEN (yyminor.yy0)
-#line 34 "parse.y"
+#line 34 "ext/pdo_sqlite/sqlite/src/parse.y"
 
   if( !pParse->parseError ){
     if( TOKEN.z[0] ){
@@ -3306,7 +3306,7 @@ static void yy_syntax_error(
     }
     pParse->parseError = 1;
   }
-#line 3313 "parse.c"
+#line 3313 "ext/pdo_sqlite/sqlite/src/parse.c"
   sqlite3ParserARG_STORE; /* Suppress warning about unused %extra_argument variable */
 }
 
Index: ext/pdo_sqlite/sqlite/src/select.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/select.c,v
retrieving revision 1.3.2.2.2.4
retrieving revision 1.3.2.2.2.5
diff -u -p -d -r1.3.2.2.2.4 -r1.3.2.2.2.5
--- ext/pdo_sqlite/sqlite/src/select.c	9 Apr 2007 16:35:11 -0000	1.3.2.2.2.4
+++ ext/pdo_sqlite/sqlite/src/select.c	18 Apr 2007 22:53:46 -0000	1.3.2.2.2.5
@@ -551,6 +551,7 @@ static int selectInnerLoop(
       sqlite3VdbeAddOp(v, OP_NotNull, -1, addr1+3);
       sqlite3VdbeAddOp(v, OP_Pop, 1, 0);
       addr2 = sqlite3VdbeAddOp(v, OP_Goto, 0, 0);
+      p->affinity = sqlite3CompareAffinity(pEList->a[0].pExpr,(iParm>>16)&0xff);
       if( pOrderBy ){
         /* At first glance you would think we could optimize out the
         ** ORDER BY in this case since the order of entries in the set
@@ -558,9 +559,7 @@ static int selectInnerLoop(
         ** case the order does matter */
         pushOntoSorter(pParse, pOrderBy, p);
       }else{
-        char affinity = (iParm>>16)&0xFF;
-        affinity = sqlite3CompareAffinity(pEList->a[0].pExpr, affinity);
-        sqlite3VdbeOp3(v, OP_MakeRecord, 1, 0, &affinity, 1);
+        sqlite3VdbeOp3(v, OP_MakeRecord, 1, 0, &p->affinity, 1);
         sqlite3VdbeAddOp(v, OP_IdxInsert, (iParm&0x0000FFFF), 0);
       }
       sqlite3VdbeJumpHere(v, addr2);
@@ -721,7 +720,7 @@ static void generateSortTail(
       sqlite3VdbeAddOp(v, OP_NotNull, -1, sqlite3VdbeCurrentAddr(v)+3);
       sqlite3VdbeAddOp(v, OP_Pop, 1, 0);
       sqlite3VdbeAddOp(v, OP_Goto, 0, sqlite3VdbeCurrentAddr(v)+3);
-      sqlite3VdbeOp3(v, OP_MakeRecord, 1, 0, "c", P3_STATIC);
+      sqlite3VdbeOp3(v, OP_MakeRecord, 1, 0, &p->affinity, 1);
       sqlite3VdbeAddOp(v, OP_IdxInsert, (iParm&0x0000FFFF), 0);
       break;
     }
@@ -1096,7 +1095,7 @@ Table *sqlite3ResultSetOfSelect(Parse *p
     sqlite3Dequote(zName);
     if( sqlite3MallocFailed() ){
       sqliteFree(zName);
-      sqlite3DeleteTable(0, pTab);
+      sqlite3DeleteTable(pTab);
       return 0;
     }
 
@@ -1400,8 +1399,11 @@ static int matchOrderbyToColumn(
   }
   pEList = pSelect->pEList;
   for(i=0; i<pOrderBy->nExpr; i++){
+    struct ExprList_item *pItem;
     Expr *pE = pOrderBy->a[i].pExpr;
     int iCol = -1;
+    char *zLabel;
+
     if( pOrderBy->a[i].done ) continue;
     if( sqlite3ExprIsInteger(pE, &iCol) ){
       if( iCol<=0 || iCol>pEList->nExpr ){
@@ -1414,20 +1416,23 @@ static int matchOrderbyToColumn(
       if( !mustComplete ) continue;
       iCol--;
     }
-    for(j=0; iCol<0 && j<pEList->nExpr; j++){
-      if( pEList->a[j].zName && (pE->op==TK_ID || pE->op==TK_STRING) ){
-        char *zName, *zLabel;
-        zName = pEList->a[j].zName;
-        zLabel = sqlite3NameFromToken(&pE->token);
-        assert( zLabel!=0 );
-        if( sqlite3StrICmp(zName, zLabel)==0 ){ 
+    if( iCol<0 && (zLabel = sqlite3NameFromToken(&pE->token))!=0 ){
+      for(j=0, pItem=pEList->a; j<pEList->nExpr; j++, pItem++){
+        char *zName;
+        int isMatch;
+        if( pItem->zName ){
+          zName = sqlite3StrDup(pItem->zName);
+        }else{
+          zName = sqlite3NameFromToken(&pItem->pExpr->token);
+        }
+        isMatch = zName && sqlite3StrICmp(zName, zLabel)==0;
+        sqliteFree(zName);
+        if( isMatch ){
           iCol = j;
+          break;
         }
-        sqliteFree(zLabel);
-      }
-      if( iCol<0 && sqlite3ExprCompare(pE, pEList->a[j].pExpr) ){
-        iCol = j;
       }
+      sqliteFree(zLabel);
     }
     if( iCol>=0 ){
       pE->op = TK_COLUMN;
@@ -1435,8 +1440,7 @@ static int matchOrderbyToColumn(
       pE->iTable = iTable;
       pE->iAgg = -1;
       pOrderBy->a[i].done = 1;
-    }
-    if( iCol<0 && mustComplete ){
+    }else if( mustComplete ){
       sqlite3ErrorMsg(pParse,
         "ORDER BY term number %d does not match any result column", i+1);
       nErr++;
@@ -2212,7 +2216,7 @@ static int flattenSubquery(
     int nSubSrc = pSubSrc->nSrc;
     int jointype = pSubitem->jointype;
 
-    sqlite3DeleteTable(0, pSubitem->pTab);
+    sqlite3DeleteTable(pSubitem->pTab);
     sqliteFree(pSubitem->zDatabase);
     sqliteFree(pSubitem->zName);
     sqliteFree(pSubitem->zAlias);
@@ -2590,12 +2594,15 @@ int sqlite3SelectResolve(
   */
   sNC.pEList = p->pEList;
   if( sqlite3ExprResolveNames(&sNC, p->pWhere) ||
-      sqlite3ExprResolveNames(&sNC, p->pHaving) ||
-      processOrderGroupBy(&sNC, p->pOrderBy, "ORDER") ||
-      processOrderGroupBy(&sNC, pGroupBy, "GROUP")
-  ){
+     sqlite3ExprResolveNames(&sNC, p->pHaving) ){
     return SQLITE_ERROR;
   }
+  if( p->pPrior==0 ){
+    if( processOrderGroupBy(&sNC, p->pOrderBy, "ORDER") ||
+        processOrderGroupBy(&sNC, pGroupBy, "GROUP") ){
+      return SQLITE_ERROR;
+    }
+  }
 
   /* Make sure the GROUP BY clause does not contain aggregate functions.
   */
Index: ext/pdo_sqlite/sqlite/src/sqliteInt.h
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/sqliteInt.h,v
retrieving revision 1.3.2.2.2.4
retrieving revision 1.3.2.2.2.5
diff -u -p -d -r1.3.2.2.2.4 -r1.3.2.2.2.5
--- ext/pdo_sqlite/sqlite/src/sqliteInt.h	9 Apr 2007 16:35:11 -0000	1.3.2.2.2.4
+++ ext/pdo_sqlite/sqlite/src/sqliteInt.h	18 Apr 2007 22:53:46 -0000	1.3.2.2.2.5
@@ -381,6 +381,14 @@ struct Db {
 
 /*
 ** An instance of the following structure stores a database schema.
+**
+** If there are no virtual tables configured in this schema, the
+** Schema.db variable is set to NULL. After the first virtual table
+** has been added, it is set to point to the database connection 
+** used to create the connection. Once a virtual table has been
+** added to the Schema structure and the Schema.db variable populated, 
+** only that database connection may use the Schema to prepare 
+** statements.
 */
 struct Schema {
   int schema_cookie;   /* Database schema version number for this file */
@@ -393,6 +401,9 @@ struct Schema {
   u8 enc;              /* Text encoding used by this database */
   u16 flags;           /* Flags associated with this schema */
   int cache_size;      /* Number of pages to use in the cache */
+#ifndef SQLITE_OMIT_VIRTUALTABLE
+  sqlite3 *db;         /* "Owner" connection. See comment above */
+#endif
 };
 
 /*
@@ -1266,6 +1277,7 @@ struct Select {
   u8 isAgg;              /* True if this is an aggregate query */
   u8 usesEphm;           /* True if uses an OpenEphemeral opcode */
   u8 disallowOrderBy;    /* Do not allow an ORDER BY to be attached if TRUE */
+  char affinity;         /* MakeRecord with this affinity for SRT_Set */
   SrcList *pSrc;         /* The FROM clause */
   Expr *pWhere;          /* The WHERE clause */
   ExprList *pGroupBy;    /* The GROUP BY clause */
@@ -1631,7 +1643,7 @@ void sqlite3CreateView(Parse*,Token*,Tok
 #endif
 
 void sqlite3DropTable(Parse*, SrcList*, int, int);
-void sqlite3DeleteTable(sqlite3*, Table*);
+void sqlite3DeleteTable(Table*);
 void sqlite3Insert(Parse*, SrcList*, ExprList*, Select*, IdList*, int);
 void *sqlite3ArrayAllocate(void*,int,int,int*,int*,int*);
 IdList *sqlite3IdListAppend(IdList*, Token*);
@@ -1889,7 +1901,7 @@ int sqlite3OpenTempDatabase(Parse *);
    int sqlite3VtabCommit(sqlite3 *db);
 #endif
 void sqlite3VtabLock(sqlite3_vtab*);
-void sqlite3VtabUnlock(sqlite3_vtab*);
+void sqlite3VtabUnlock(sqlite3*, sqlite3_vtab*);
 void sqlite3VtabBeginParse(Parse*, Token*, Token*, Token*);
 void sqlite3VtabFinishParse(Parse*, Token*);
 void sqlite3VtabArgInit(Parse*);
Index: ext/pdo_sqlite/sqlite/src/test1.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/test1.c,v
retrieving revision 1.3.2.2.2.4
retrieving revision 1.3.2.2.2.5
diff -u -p -d -r1.3.2.2.2.4 -r1.3.2.2.2.5
--- ext/pdo_sqlite/sqlite/src/test1.c	9 Apr 2007 16:35:11 -0000	1.3.2.2.2.4
+++ ext/pdo_sqlite/sqlite/src/test1.c	18 Apr 2007 22:53:46 -0000	1.3.2.2.2.5
@@ -198,6 +198,57 @@ static int exec_printf_cb(void *pArg, in
 }
 
 /*
+** The I/O tracing callback.
+*/
+static FILE *iotrace_file = 0;
+static void io_trace_callback(const char *zFormat, ...){
+  va_list ap;
+  va_start(ap, zFormat);
+  vfprintf(iotrace_file, zFormat, ap);
+  va_end(ap);
+  fflush(iotrace_file);
+}
+
+/*
+** Usage:  io_trace FILENAME
+**
+** Turn I/O tracing on or off.  If FILENAME is not an empty string,
+** I/O tracing begins going into FILENAME. If FILENAME is an empty
+** string, I/O tracing is turned off.
+*/
+static int test_io_trace(
+  void *NotUsed,
+  Tcl_Interp *interp,    /* The TCL interpreter that invoked this command */
+  int argc,              /* Number of arguments */
+  char **argv            /* Text of each argument */
+){
+  if( argc!=2 ){
+    Tcl_AppendResult(interp, "wrong # args: should be \"", argv[0],
+          " FILENAME\"", 0);
+    return TCL_ERROR;
+  }
+  if( iotrace_file ){
+    if( iotrace_file!=stdout && iotrace_file!=stderr ){
+      fclose(iotrace_file);
+    }
+    iotrace_file = 0;
+    sqlite3_io_trace = 0;
+  }
+  if( argv[1][0] ){
+    if( strcmp(argv[1],"stdout")==0 ){
+      iotrace_file = stdout;
+    }else if( strcmp(argv[1],"stderr")==0 ){
+      iotrace_file = stderr;
+    }else{
+      iotrace_file = fopen(argv[1], "w");
+    }
+    sqlite3_io_trace = io_trace_callback;
+  }
+  return SQLITE_OK;
+}
+
+
+/*
 ** Usage:  sqlite3_exec_printf  DB  FORMAT  STRING
 **
 ** Invoke the sqlite3_exec_printf() interface using the open database
@@ -4216,6 +4267,7 @@ int Sqlitetest1_Init(Tcl_Interp *interp)
      { "sqlite3_stack_used",            (Tcl_CmdProc*)test_stack_used       },
      { "sqlite3_busy_timeout",          (Tcl_CmdProc*)test_busy_timeout     },
      { "printf",                        (Tcl_CmdProc*)test_printf           },
+     { "sqlite3_io_trace",              (Tcl_CmdProc*)test_io_trace         },
   };
   static struct {
      char *zName;
@@ -4338,6 +4390,10 @@ int Sqlitetest1_Init(Tcl_Interp *interp)
   extern int sqlite3_like_count;
   extern int sqlite3_tsd_count;
   extern int sqlite3_xferopt_count;
+  extern int sqlite3_pager_readdb_count;
+  extern int sqlite3_pager_writedb_count;
+  extern int sqlite3_pager_writej_count;
+  extern int sqlite3_pager_pgfree_count;
 #if OS_UNIX && defined(SQLITE_TEST) && defined(THREADSAFE) && THREADSAFE
   extern int threadsOverrideEachOthersLocks;
 #endif
@@ -4377,6 +4433,14 @@ int Sqlitetest1_Init(Tcl_Interp *interp)
       (char*)&sqlite3_tsd_count, TCL_LINK_INT);
   Tcl_LinkVar(interp, "sqlite3_xferopt_count",
       (char*)&sqlite3_xferopt_count, TCL_LINK_INT);
+  Tcl_LinkVar(interp, "sqlite3_pager_readdb_count",
+      (char*)&sqlite3_pager_readdb_count, TCL_LINK_INT);
+  Tcl_LinkVar(interp, "sqlite3_pager_writedb_count",
+      (char*)&sqlite3_pager_writedb_count, TCL_LINK_INT);
+  Tcl_LinkVar(interp, "sqlite3_pager_writej_count",
+      (char*)&sqlite3_pager_writej_count, TCL_LINK_INT);
+  Tcl_LinkVar(interp, "sqlite3_pager_pgfree_count",
+      (char*)&sqlite3_pager_pgfree_count, TCL_LINK_INT);
 #ifndef SQLITE_OMIT_UTF16
   Tcl_LinkVar(interp, "unaligned_string_counter",
       (char*)&unaligned_string_counter, TCL_LINK_INT);
Index: ext/pdo_sqlite/sqlite/src/tokenize.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/tokenize.c,v
retrieving revision 1.3.2.2.2.2
retrieving revision 1.3.2.2.2.3
diff -u -p -d -r1.3.2.2.2.2 -r1.3.2.2.2.3
--- ext/pdo_sqlite/sqlite/src/tokenize.c	9 Feb 2007 03:17:47 -0000	1.3.2.2.2.2
+++ ext/pdo_sqlite/sqlite/src/tokenize.c	18 Apr 2007 22:53:46 -0000	1.3.2.2.2.3
@@ -495,7 +495,7 @@ abort_parse:
     ** structure built up in pParse->pNewTable. The calling code (see vtab.c)
     ** will take responsibility for freeing the Table structure.
     */
-    sqlite3DeleteTable(pParse->db, pParse->pNewTable);
+    sqlite3DeleteTable(pParse->pNewTable);
   }
 
   sqlite3DeleteTrigger(pParse->pNewTrigger);
Index: ext/pdo_sqlite/sqlite/src/vdbe.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/vdbe.c,v
retrieving revision 1.3.2.2.2.3
retrieving revision 1.3.2.2.2.4
diff -u -p -d -r1.3.2.2.2.3 -r1.3.2.2.2.4
--- ext/pdo_sqlite/sqlite/src/vdbe.c	9 Apr 2007 16:35:11 -0000	1.3.2.2.2.3
+++ ext/pdo_sqlite/sqlite/src/vdbe.c	18 Apr 2007 22:53:46 -0000	1.3.2.2.2.4
@@ -2521,7 +2521,23 @@ case OP_VerifyCookie: {       /* no-push
   }
   if( rc==SQLITE_OK && iMeta!=pOp->p2 ){
     sqlite3SetString(&p->zErrMsg, "database schema has changed", (char*)0);
-    sqlite3ResetInternalSchema(db, pOp->p1);
+    /* If the schema-cookie from the database file matches the cookie 
+    ** stored with the in-memory representation of the schema, do
+    ** not reload the schema from the database file.
+    **
+    ** If virtual-tables are in use, this is not just an optimisation.
+    ** Often, v-tables store their data in other SQLite tables, which
+    ** are queried from within xNext() and other v-table methods using
+    ** prepared queries. If such a query is out-of-date, we do not want to
+    ** discard the database schema, as the user code implementing the
+    ** v-table would have to be ready for the sqlite3_vtab structure itself
+    ** to be invalidated whenever sqlite3_step() is called from within 
+    ** a v-table method.
+    */
+    if( db->aDb[pOp->p1].pSchema->schema_cookie!=iMeta ){
+      sqlite3ResetInternalSchema(db, pOp->p1);
+    }
+
     sqlite3ExpirePreparedStatements(db);
     rc = SQLITE_SCHEMA;
   }
@@ -4881,7 +4897,7 @@ case OP_VUpdate: {   /* no-push */
     if( sqlite3SafetyOff(db) ) goto abort_due_to_misuse;
     sqlite3VtabLock(pVtab);
     rc = pModule->xUpdate(pVtab, nArg, apArg, &rowid);
-    sqlite3VtabUnlock(pVtab);
+    sqlite3VtabUnlock(db, pVtab);
     if( sqlite3SafetyOn(db) ) goto abort_due_to_misuse;
     if( pOp->p1 && rc==SQLITE_OK ){
       assert( nArg>1 && apArg[0] && (apArg[0]->flags&MEM_Null) );
Index: ext/pdo_sqlite/sqlite/src/vdbeaux.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/vdbeaux.c,v
retrieving revision 1.3.2.2.2.4
retrieving revision 1.3.2.2.2.5
diff -u -p -d -r1.3.2.2.2.4 -r1.3.2.2.2.5
--- ext/pdo_sqlite/sqlite/src/vdbeaux.c	9 Apr 2007 16:35:11 -0000	1.3.2.2.2.4
+++ ext/pdo_sqlite/sqlite/src/vdbeaux.c	18 Apr 2007 22:53:46 -0000	1.3.2.2.2.5
@@ -145,7 +145,6 @@ int sqlite3VdbeAddOp(Vdbe *p, int op, in
   VdbeOp *pOp;
 
   i = p->nOp;
-  p->nOp++;
   assert( p->magic==VDBE_MAGIC_INIT );
   if( p->nOpAlloc<=i ){
     resizeOpArray(p, i+1);
@@ -153,6 +152,7 @@ int sqlite3VdbeAddOp(Vdbe *p, int op, in
       return 0;
     }
   }
+  p->nOp++;
   pOp = &p->aOp[i];
   pOp->opcode = op;
   pOp->p1 = p1;
@@ -557,9 +557,8 @@ void sqlite3VdbeChangeP3(Vdbe *p, int ad
 */
 void sqlite3VdbeComment(Vdbe *p, const char *zFormat, ...){
   va_list ap;
-  assert( p->nOp>0 );
-  assert( p->aOp==0 || p->aOp[p->nOp-1].p3==0 
-          || sqlite3MallocFailed() );
+  assert( p->nOp>0 || p->aOp==0 );
+  assert( p->aOp==0 || p->aOp[p->nOp-1].p3==0 || sqlite3MallocFailed() );
   va_start(ap, zFormat);
   sqlite3VdbeChangeP3(p, -1, sqlite3VMPrintf(zFormat, ap), P3_DYNAMIC);
   va_end(ap);
@@ -571,8 +570,8 @@ void sqlite3VdbeComment(Vdbe *p, const c
 */
 VdbeOp *sqlite3VdbeGetOp(Vdbe *p, int addr){
   assert( p->magic==VDBE_MAGIC_INIT );
-  assert( addr>=0 && addr<p->nOp );
-  return &p->aOp[addr];
+  assert( (addr>=0 && addr<p->nOp) || sqlite3MallocFailed() );
+  return ((addr>=0 && addr<p->nOp)?(&p->aOp[addr]):0);
 }
 
 #if !defined(SQLITE_OMIT_EXPLAIN) || !defined(NDEBUG) \
Index: ext/pdo_sqlite/sqlite/src/vtab.c
===================================================================
RCS file: /repository/php-src/ext/pdo_sqlite/sqlite/src/vtab.c,v
retrieving revision 1.1.2.2
retrieving revision 1.1.2.3
diff -u -p -d -r1.1.2.2 -r1.1.2.3
--- ext/pdo_sqlite/sqlite/src/vtab.c	9 Feb 2007 03:17:47 -0000	1.1.2.2
+++ ext/pdo_sqlite/sqlite/src/vtab.c	18 Apr 2007 22:53:46 -0000	1.1.2.3
@@ -56,10 +56,18 @@ void sqlite3VtabLock(sqlite3_vtab *pVtab
 ** Unlock a virtual table.  When the last lock is removed,
 ** disconnect the virtual table.
 */
-void sqlite3VtabUnlock(sqlite3_vtab *pVtab){
+void sqlite3VtabUnlock(sqlite3 *db, sqlite3_vtab *pVtab){
   pVtab->nRef--;
+  assert(db);
+  assert(!sqlite3SafetyCheck(db));
   if( pVtab->nRef==0 ){
-    pVtab->pModule->xDisconnect(pVtab);
+    if( db->magic==SQLITE_MAGIC_BUSY ){
+      sqlite3SafetyOff(db);
+      pVtab->pModule->xDisconnect(pVtab);
+      sqlite3SafetyOn(db);
+    } else {
+      pVtab->pModule->xDisconnect(pVtab);
+    }
   }
 }
 
@@ -72,7 +80,7 @@ void sqlite3VtabClear(Table *p){
   sqlite3_vtab *pVtab = p->pVtab;
   if( pVtab ){
     assert( p->pMod && p->pMod->pModule );
-    sqlite3VtabUnlock(pVtab);
+    sqlite3VtabUnlock(p->pSchema->db, pVtab);
     p->pVtab = 0;
   }
   if( p->azModuleArg ){
@@ -124,6 +132,11 @@ void sqlite3VtabBeginParse(
   int iDb;              /* The database the table is being created in */
   Table *pTable;        /* The new virtual table */
 
+  if( sqlite3ThreadDataReadOnly()->useSharedData ){
+    sqlite3ErrorMsg(pParse, "Cannot use virtual tables in shared-cache mode");
+    return;
+  }
+
   sqlite3StartTable(pParse, pName1, pName2, 0, 0, 1, 0);
   pTable = pParse->pNewTable;
   if( pTable==0 || pParse->nErr ) return;
@@ -248,6 +261,7 @@ void sqlite3VtabFinishParse(Parse *pPars
       assert( pTab==pOld );  /* Malloc must have failed inside HashInsert() */
       return;
     }
+    pSchema->db = pParse->db;
     pParse->pNewTable = 0;
   }
 }
@@ -297,6 +311,10 @@ static int vtabCallConstructor(
   char *zErr = 0;
   char *zModuleName = sqlite3MPrintf("%s", pTab->zName);
 
+  if( !zModuleName ){
+    return SQLITE_NOMEM;
+  }
+
   assert( !db->pVTab );
   assert( xConstruct );
 
@@ -457,6 +475,7 @@ int sqlite3_declare_vtab(sqlite3 *db, co
     pTab->nCol = sParse.pNewTable->nCol;
     sParse.pNewTable->nCol = 0;
     sParse.pNewTable->aCol = 0;
+    db->pVTab = 0;
   } else {
     sqlite3Error(db, SQLITE_ERROR, zErr);
     sqliteFree(zErr);
@@ -465,12 +484,11 @@ int sqlite3_declare_vtab(sqlite3 *db, co
   sParse.declareVtab = 0;
 
   sqlite3_finalize((sqlite3_stmt*)sParse.pVdbe);
-  sqlite3DeleteTable(0, sParse.pNewTable);
+  sqlite3DeleteTable(sParse.pNewTable);
   sParse.pNewTable = 0;
-  db->pVTab = 0;
 
   assert( (rc&0xff)==rc );
-  return rc;
+  return sqlite3ApiExit(db, rc);
 }
 
 /*
@@ -518,7 +536,7 @@ static void callFinaliser(sqlite3 *db, i
     int (*x)(sqlite3_vtab *);
     x = *(int (**)(sqlite3_vtab *))((char *)pVtab->pModule + offset);
     if( x ) x(pVtab);
-    sqlite3VtabUnlock(pVtab);
+    sqlite3VtabUnlock(db, pVtab);
   }
   sqliteFree(db->aVTrans);
   db->nVTrans = 0;
Index: ext/reflection/php_reflection.c
===================================================================
RCS file: /repository/php-src/ext/reflection/php_reflection.c,v
retrieving revision 1.164.2.33.2.36
retrieving revision 1.164.2.33.2.37
diff -u -p -d -r1.164.2.33.2.36 -r1.164.2.33.2.37
--- ext/reflection/php_reflection.c	17 Mar 2007 23:00:49 -0000	1.164.2.33.2.36
+++ ext/reflection/php_reflection.c	12 Apr 2007 18:39:46 -0000	1.164.2.33.2.37
@@ -747,23 +747,27 @@ static void _function_string(string *str
 		string_printf(str, "static ");
 	}
 
-	/* These are mutually exclusive */
-	switch (fptr->common.fn_flags & ZEND_ACC_PPP_MASK) {
-		case ZEND_ACC_PUBLIC:
-			string_printf(str, "public ");
-			break;
-		case ZEND_ACC_PRIVATE:
-			string_printf(str, "private ");
-			break;
-		case ZEND_ACC_PROTECTED:
-			string_printf(str, "protected ");
-			break;
-		default:
-		    string_printf(str, "<visibility error> ");
-		    break;
+	if (fptr->common.scope) {
+		/* These are mutually exclusive */
+		switch (fptr->common.fn_flags & ZEND_ACC_PPP_MASK) {
+			case ZEND_ACC_PUBLIC:
+				string_printf(str, "public ");
+				break;
+			case ZEND_ACC_PRIVATE:
+				string_printf(str, "private ");
+				break;
+			case ZEND_ACC_PROTECTED:
+				string_printf(str, "protected ");
+				break;
+			default:
+			    string_printf(str, "<visibility error> ");
+			    break;
+		}
+		string_printf(str, "method ");
+	} else {
+		string_printf(str, "function ");
 	}
 
-	string_printf(str, fptr->common.scope ? "method " : "function ");
 	if (fptr->op_array.return_reference) {
 		string_printf(str, "&");
 	}
Index: ext/reflection/tests/008.phpt
===================================================================
RCS file: /repository/php-src/ext/reflection/tests/008.phpt,v
retrieving revision 1.2.2.2
retrieving revision 1.2.2.3
diff -u -p -d -r1.2.2.2 -r1.2.2.3
--- ext/reflection/tests/008.phpt	11 Oct 2006 15:52:56 -0000	1.2.2.2
+++ ext/reflection/tests/008.phpt	12 Apr 2007 12:29:47 -0000	1.2.2.3
@@ -1,5 +1,7 @@
 --TEST--
 ReflectionMethod::__construct() tests
+--SKIPIF--
+<?php extension_loaded('reflection') or die('skip'); ?>
 --FILE--
 <?php
 
Index: ext/reflection/tests/bug37816.phpt
===================================================================
RCS file: /repository/php-src/ext/reflection/tests/bug37816.phpt,v
retrieving revision 1.1.2.2
retrieving revision 1.1.2.3
diff -u -p -d -r1.1.2.2 -r1.1.2.3
--- ext/reflection/tests/bug37816.phpt	10 Jul 2006 00:18:53 -0000	1.1.2.2
+++ ext/reflection/tests/bug37816.phpt	12 Apr 2007 12:29:47 -0000	1.1.2.3
@@ -1,5 +1,7 @@
 --TEST--
 Bug #37816 (ReflectionProperty does not throw exception when accessing protected attribute)
+--SKIPIF--
+<?php extension_loaded('reflection') or die('skip'); ?>
 --FILE--
 <?php
 
Index: ext/reflection/tests/bug38217.phpt
===================================================================
RCS file: /repository/php-src/ext/reflection/tests/bug38217.phpt,v
retrieving revision 1.1.2.1
retrieving revision 1.1.2.2
diff -u -p -d -r1.1.2.1 -r1.1.2.2
--- ext/reflection/tests/bug38217.phpt	26 Jul 2006 08:03:48 -0000	1.1.2.1
+++ ext/reflection/tests/bug38217.phpt	12 Apr 2007 12:29:47 -0000	1.1.2.2
@@ -1,5 +1,7 @@
 --TEST--
-#38217 (ReflectionClass::newInstanceArgs() tries to allocate too much memory)
+Bug #38217 (ReflectionClass::newInstanceArgs() tries to allocate too much memory)
+--SKIPIF--
+<?php extension_loaded('reflection') or die('skip'); ?>
 --FILE--
 <?php
 
Index: ext/reflection/tests/bug38653.phpt
===================================================================
RCS file: /repository/php-src/ext/reflection/tests/bug38653.phpt,v
retrieving revision 1.1.2.2
retrieving revision 1.1.2.3
diff -u -p -d -r1.1.2.2 -r1.1.2.3
--- ext/reflection/tests/bug38653.phpt	30 Aug 2006 10:42:49 -0000	1.1.2.2
+++ ext/reflection/tests/bug38653.phpt	12 Apr 2007 12:29:47 -0000	1.1.2.3
@@ -1,5 +1,7 @@
 --TEST--
 Bug #38653 (memory leak in ReflectionClass::getConstant())
+--SKIPIF--
+<?php extension_loaded('reflection') or die('skip'); ?>
 --FILE--
 <?php
 
Index: ext/reflection/tests/bug38942.phpt
===================================================================
RCS file: /repository/php-src/ext/reflection/tests/bug38942.phpt,v
retrieving revision 1.1.2.2
retrieving revision 1.1.2.3
diff -u -p -d -r1.1.2.2 -r1.1.2.3
--- ext/reflection/tests/bug38942.phpt	2 Oct 2006 08:36:35 -0000	1.1.2.2
+++ ext/reflection/tests/bug38942.phpt	12 Apr 2007 12:29:47 -0000	1.1.2.3
@@ -1,5 +1,7 @@
 --TEST--
 Bug #38942 (Double old-style-ctor inheritance)
+--SKIPIF--
+<?php extension_loaded('reflection') or die('skip'); ?>
 --FILE--
 <?php
 class foo {
Index: ext/reflection/tests/bug39001.phpt
===================================================================
RCS file: /repository/php-src/ext/reflection/tests/bug39001.phpt,v
retrieving revision 1.1.2.2
retrieving revision 1.1.2.3
diff -u -p -d -r1.1.2.2 -r1.1.2.3
--- ext/reflection/tests/bug39001.phpt	2 Oct 2006 12:16:35 -0000	1.1.2.2
+++ ext/reflection/tests/bug39001.phpt	12 Apr 2007 12:29:47 -0000	1.1.2.3
@@ -1,5 +1,7 @@
 --TEST--
 Bug #39001 (ReflectionProperty returns incorrect declaring class for protected properties)
+--SKIPIF--
+<?php extension_loaded('reflection') or die('skip'); ?>
 --FILE--
 <?php
 
Index: ext/reflection/tests/bug39067.phpt
===================================================================
RCS file: /repository/php-src/ext/reflection/tests/bug39067.phpt,v
retrieving revision 1.1.2.3
retrieving revision 1.1.2.4
diff -u -p -d -r1.1.2.3 -r1.1.2.4
--- ext/reflection/tests/bug39067.phpt	6 Oct 2006 18:03:19 -0000	1.1.2.3
+++ ext/reflection/tests/bug39067.phpt	12 Apr 2007 12:29:48 -0000	1.1.2.4
@@ -1,5 +1,7 @@
 --TEST--
 Bug #39067 (getDeclaringClass() and private properties)
+--SKIPIF--
+<?php extension_loaded('reflection') or die('skip'); ?>
 --FILE--
 <?php
 
Index: ext/reflection/tests/bug39884.phpt
===================================================================
RCS file: /repository/php-src/ext/reflection/tests/bug39884.phpt,v
retrieving revision 1.1.2.1
retrieving revision 1.1.2.2
diff -u -p -d -r1.1.2.1 -r1.1.2.2
--- ext/reflection/tests/bug39884.phpt	22 Dec 2006 15:37:48 -0000	1.1.2.1
+++ ext/reflection/tests/bug39884.phpt	12 Apr 2007 12:29:48 -0000	1.1.2.2
@@ -1,5 +1,7 @@
 --TEST--
 Bug #39884 (ReflectionParameter::getClass() throws exception for type hint self)
+--SKIPIF--
+<?php extension_loaded('reflection') or die('skip'); ?>
 --FILE--
 <?php
 class stubParamTest
Index: ext/reflection/tests/bug40431.phpt
===================================================================
RCS file: /repository/php-src/ext/reflection/tests/bug40431.phpt,v
retrieving revision 1.1.2.2
retrieving revision 1.1.2.3
diff -u -p -d -r1.1.2.2 -r1.1.2.3
--- ext/reflection/tests/bug40431.phpt	10 Feb 2007 20:52:42 -0000	1.1.2.2
+++ ext/reflection/tests/bug40431.phpt	12 Apr 2007 12:29:48 -0000	1.1.2.3
@@ -1,5 +1,7 @@
 --TEST--
 Bug #40431 (dynamic properties may cause crash in ReflectionProperty methods)
+--SKIPIF--
+<?php extension_loaded('reflection') or die('skip'); ?>
 --FILE--
 <?php
 
Index: ext/soap/tests/bugs/bug34657.phpt
===================================================================
RCS file: /repository/php-src/ext/soap/tests/bugs/bug34657.phpt,v
retrieving revision 1.1.2.4
retrieving revision 1.1.2.5
diff -u -p -d -r1.1.2.4 -r1.1.2.5
--- ext/soap/tests/bugs/bug34657.phpt	10 Apr 2007 21:38:20 -0000	1.1.2.4
+++ ext/soap/tests/bugs/bug34657.phpt	11 Apr 2007 22:29:53 -0000	1.1.2.5
@@ -23,8 +23,9 @@ try {
 } catch (Exception $e) {
 	echo get_class($e)."\n";
 }
+?>
 --EXPECTF--
-Warning: SoapClient::SoapClient(): php_network_getaddresses: getaddrinfo failed: %sbug34657.php on line 3
+Warning: SoapClient::SoapClient(): %s %sbug34657.php on line 3
 
 Warning: SoapClient::SoapClient(http://i_dont_exist.com/some.wsdl): failed to open stream: %sbug34657.php on line 3
 
Index: ext/soap/tests/interop/Round3/GroupD/r3_groupD_compound2_001w.phpt
===================================================================
RCS file: /repository/php-src/ext/soap/tests/interop/Round3/GroupD/r3_groupD_compound2_001w.phpt,v
retrieving revision 1.1.2.1.2.1
retrieving revision 1.1.2.1.2.2
diff -u -p -d -r1.1.2.1.2.1 -r1.1.2.1.2.2
--- ext/soap/tests/interop/Round3/GroupD/r3_groupD_compound2_001w.phpt	19 Dec 2006 11:54:38 -0000	1.1.2.1.2.1
+++ ext/soap/tests/interop/Round3/GroupD/r3_groupD_compound2_001w.phpt	22 Apr 2007 08:37:38 -0000	1.1.2.1.2.2
@@ -31,7 +31,7 @@ echo "ok\n";
 ?>
 --EXPECT--
 <?xml version="1.0" encoding="UTF-8"?>
-<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://soapinterop.org/person" xmlns:ns2="http://soapinterop.org/employee"><SOAP-ENV:Body><ns2:x_Employee><ns2:person><ns1:Name>Shane</ns1:Name><ns1:Male>true</ns1:Male></ns2:person><ns2:salary>1.0E+6</ns2:salary><ns2:ID>12345</ns2:ID></ns2:x_Employee></SOAP-ENV:Body></SOAP-ENV:Envelope>
+<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://soapinterop.org/person" xmlns:ns2="http://soapinterop.org/employee"><SOAP-ENV:Body><ns2:x_Employee><ns2:person><ns1:Name>Shane</ns1:Name><ns1:Male>true</ns1:Male></ns2:person><ns2:salary>1000000</ns2:salary><ns2:ID>12345</ns2:ID></ns2:x_Employee></SOAP-ENV:Body></SOAP-ENV:Envelope>
 <?xml version="1.0" encoding="UTF-8"?>
-<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://soapinterop.org/person" xmlns:ns2="http://soapinterop.org/employee"><SOAP-ENV:Body><ns2:result_Employee><ns2:person><ns1:Name>Shane</ns1:Name><ns1:Male>true</ns1:Male></ns2:person><ns2:salary>1.0E+6</ns2:salary><ns2:ID>12345</ns2:ID></ns2:result_Employee></SOAP-ENV:Body></SOAP-ENV:Envelope>
+<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://soapinterop.org/person" xmlns:ns2="http://soapinterop.org/employee"><SOAP-ENV:Body><ns2:result_Employee><ns2:person><ns1:Name>Shane</ns1:Name><ns1:Male>true</ns1:Male></ns2:person><ns2:salary>1000000</ns2:salary><ns2:ID>12345</ns2:ID></ns2:result_Employee></SOAP-ENV:Body></SOAP-ENV:Envelope>
 ok
Index: ext/spl/spl.php
===================================================================
RCS file: /repository/php-src/ext/spl/spl.php,v
retrieving revision 1.49.2.11.2.5
retrieving revision 1.49.2.11.2.6
diff -u -p -d -r1.49.2.11.2.5 -r1.49.2.11.2.6
--- ext/spl/spl.php	31 Dec 2006 18:20:22 -0000	1.49.2.11.2.5
+++ ext/spl/spl.php	17 Apr 2007 06:33:50 -0000	1.49.2.11.2.6
@@ -32,12 +32,12 @@
  * 
  * SPL offers some advanced iterator algorithms:
  * 
- * - interface RecursiveIterator implements Iterator
+ * - interface RecursiveIterator extends Iterator
  * - interface OuterIterator extends Iterator
  * - class RecursiveIteratorIterator implements OuterIterator
  * - abstract class FilterIterator implements OuterIterator
  * - class ParentIterator extends FilterIterator implements RecursiveIterator
- * - interface SeekableIterator implements Iterator
+ * - interface SeekableIterator extends Iterator
  * - class LimitIterator implements OuterIterator
  * - class CachingIterator implements OuterIterator
  * - class RecursiveCachingIterator extends CachingIterator implements RecursiveIterator
Index: ext/spl/internal/recursiveiterator.inc
===================================================================
RCS file: /repository/php-src/ext/spl/internal/recursiveiterator.inc,v
retrieving revision 1.6
retrieving revision 1.6.4.1
diff -u -p -d -r1.6 -r1.6.4.1
--- ext/spl/internal/recursiveiterator.inc	17 Feb 2005 00:24:57 -0000	1.6
+++ ext/spl/internal/recursiveiterator.inc	17 Apr 2007 06:33:50 -0000	1.6.4.1
@@ -15,7 +15,7 @@
  * @version 1.0
  * @since PHP 5.0
  */
-interface RecursiveIterator implements Iterator
+interface RecursiveIterator extends Iterator
 {
 	/** @return whether the current element has children
 	 */
Index: ext/spl/internal/seekableiterator.inc
===================================================================
RCS file: /repository/php-src/ext/spl/internal/seekableiterator.inc,v
retrieving revision 1.6
retrieving revision 1.6.4.1
diff -u -p -d -r1.6 -r1.6.4.1
--- ext/spl/internal/seekableiterator.inc	1 Mar 2005 23:44:05 -0000	1.6
+++ ext/spl/internal/seekableiterator.inc	17 Apr 2007 06:33:50 -0000	1.6.4.1
@@ -18,7 +18,7 @@
  * to seek on an iterator LimitIterator can use this to efficiently rewind
  * to offset.
  */
-interface SeekableIterator implements Iterator
+interface SeekableIterator extends Iterator
 {
 	/** Seek to an absolute position
 	 *
Index: ext/spl/tests/iterator_044.phpt
===================================================================
RCS file: /repository/php-src/ext/spl/tests/iterator_044.phpt,v
retrieving revision 1.1.2.2
retrieving revision 1.1.2.3
diff -u -p -d -r1.1.2.2 -r1.1.2.3
--- ext/spl/tests/iterator_044.phpt	21 May 2006 18:13:37 -0000	1.1.2.2
+++ ext/spl/tests/iterator_044.phpt	18 Apr 2007 08:06:29 -0000	1.1.2.3
@@ -76,10 +76,10 @@ Exception: MyCachingIterator does not us
 Notice: Undefined index:  0 in %siterator_044.php on line %d
 Exception: MyCachingIterator does not use a full cache (see CachingIterator::__construct)
 
-Warning: CachingIterator::offsetExists() expects exactly 1 parameter, 0 given in %s/iterator_044.php on line %d
+Warning: CachingIterator::offsetExists() expects exactly 1 parameter, 0 given in %siterator_044.php on line %d
 NULL
 
-Warning: CachingIterator::offsetGet() expects exactly 1 parameter, 0 given in %s/iterator_044.php on line %d
+Warning: CachingIterator::offsetGet() expects exactly 1 parameter, 0 given in %siterator_044.php on line %d
 NULL
 ===0===
 int(0)
Index: ext/sqlite/config.m4
===================================================================
RCS file: /repository/php-src/ext/sqlite/config.m4,v
retrieving revision 1.41.2.1
retrieving revision 1.41.2.1.2.1
diff -u -p -d -r1.41.2.1 -r1.41.2.1.2.1
--- ext/sqlite/config.m4	30 Nov 2005 04:50:03 -0000	1.41.2.1
+++ ext/sqlite/config.m4	19 Apr 2007 06:42:28 -0000	1.41.2.1.2.1
@@ -91,7 +91,7 @@ if test "$PHP_SQLITE" != "no"; then
     # use bundled library
     PHP_PROG_LEMON
     SQLITE_MODULE_TYPE=builtin
-    PHP_SQLITE_CFLAGS="-I@ext_builddir@/libsqlite/src $pdo_inc_path"
+    PHP_SQLITE_CFLAGS="-I@ext_srcdir@/libsqlite/src -I@ext_builddir@/libsqlite/src $pdo_inc_path"
     sqlite_extra_sources="libsqlite/src/opcodes.c \
         libsqlite/src/parse.c libsqlite/src/encode.c \
         libsqlite/src/auth.c libsqlite/src/btree.c libsqlite/src/build.c \
Index: ext/standard/array.c
===================================================================
RCS file: /repository/php-src/ext/standard/array.c,v
retrieving revision 1.308.2.21.2.26
retrieving revision 1.308.2.21.2.27
diff -u -p -d -r1.308.2.21.2.26 -r1.308.2.21.2.27
--- ext/standard/array.c	18 Mar 2007 20:20:23 -0000	1.308.2.21.2.26
+++ ext/standard/array.c	19 Apr 2007 23:21:21 -0000	1.308.2.21.2.27
@@ -1718,13 +1718,13 @@ double_str:		
 			add_next_index_double(return_value, low);
 		}
 	} else {
-		int low, high;
+		double low, high;
 		long lstep;
 long_str:
-		convert_to_long(zlow);
-		convert_to_long(zhigh);
-		low = Z_LVAL_P(zlow);
-		high = Z_LVAL_P(zhigh);
+		convert_to_double(zlow);
+		convert_to_double(zhigh);
+		low = Z_DVAL_P(zlow);
+		high = Z_DVAL_P(zhigh);
 		lstep = (long) step;
 				
 		if (low > high) { 		/* Negative steps */
@@ -1733,18 +1733,18 @@ long_str:
 				goto err;
 			}
 			for (; low >= high; low -= lstep) {
-				add_next_index_long(return_value, low);
+				add_next_index_long(return_value, (long)low);
 			}	
-		} else if (high > low) { 	/* Positive steps */
+ 		} else if (high > low) { 	/* Positive steps */
 			if (high - low < lstep || lstep <= 0) {
 				err = 1;
 				goto err;
 			}
 			for (; low <= high; low += lstep) {
-				add_next_index_long(return_value, low);
+				add_next_index_long(return_value, (long)low);
 			}	
 		} else {
-			add_next_index_long(return_value, low);
+			add_next_index_long(return_value, (long)low);
 		}
 	}
 err:
Index: ext/standard/basic_functions.c
===================================================================
RCS file: /repository/php-src/ext/standard/basic_functions.c,v
retrieving revision 1.725.2.31.2.48
retrieving revision 1.725.2.31.2.49
diff -u -p -d -r1.725.2.31.2.48 -r1.725.2.31.2.49
--- ext/standard/basic_functions.c	10 Apr 2007 09:37:09 -0000	1.725.2.31.2.48
+++ ext/standard/basic_functions.c	17 Apr 2007 20:34:14 -0000	1.725.2.31.2.49
@@ -4461,8 +4461,15 @@ PHP_FUNCTION(putenv)
 		 * We try to avoid this by setting our own value first */
 		SetEnvironmentVariable(pe.key, "bugbug");
 #endif
-		
+
+#if HAVE_UNSETENV
+		if (!p) { /* no '=' means we want to unset it */
+			unsetenv(pe.putenv_string);
+		}
+		if (!p || putenv(pe.putenv_string) == 0) {	/* success */
+#else
 		if (putenv(pe.putenv_string) == 0) {	/* success */
+#endif
 			zend_hash_add(&BG(putenv_ht), pe.key, pe.key_len+1, (void **) &pe, sizeof(putenv_entry), NULL);
 #ifdef HAVE_TZSET
 			if (!strncmp(pe.key, "TZ", pe.key_len)) {
Index: ext/standard/config.w32
===================================================================
RCS file: /repository/php-src/ext/standard/config.w32,v
retrieving revision 1.4.2.2
retrieving revision 1.4.2.2.2.1
diff -u -p -d -r1.4.2.2 -r1.4.2.2.2.1
--- ext/standard/config.w32	4 Jan 2006 21:31:29 -0000	1.4.2.2
+++ ext/standard/config.w32	18 Apr 2007 09:38:54 -0000	1.4.2.2.2.1
@@ -16,5 +16,5 @@ EXTENSION("standard", "array.c base64.c 
 	url_scanner_ex.c ftp_fopen_wrapper.c http_fopen_wrapper.c \
 	php_fopen_wrapper.c credits.c css.c var_unserializer.c ftok.c sha1.c \
 	user_filters.c uuencode.c filters.c proc_open.c \
-	streamsfuncs.c http.c", false /* never shared */);
+	streamsfuncs.c http.c flock_compat.c", false /* never shared */);
 
Index: ext/standard/credits_ext.h
===================================================================
RCS file: /repository/php-src/ext/standard/credits_ext.h,v
retrieving revision 1.30.2.6.2.4
retrieving revision 1.30.2.6.2.5
diff -u -p -d -r1.30.2.6.2.4 -r1.30.2.6.2.5
--- ext/standard/credits_ext.h	4 Oct 2006 12:51:33 -0000	1.30.2.6.2.4
+++ ext/standard/credits_ext.h	19 Apr 2007 09:46:54 -0000	1.30.2.6.2.5
@@ -46,7 +46,7 @@ CREDIT_LINE("mSQL", "Zeev Suraski");
 CREDIT_LINE("MS SQL", "Frank M. Kromann");
 CREDIT_LINE("Multibyte String Functions", "Tsukada Takuya, Rui Hirokawa");
 CREDIT_LINE("mySQL driver for PDO", "George Schlossnagle, Wez Furlong, Ilia Alshanetsky");
-CREDIT_LINE("MySQLi", "Zak Greant, Georg Richter");
+CREDIT_LINE("MySQLi", "Zak Greant, Georg Richter, Andrey Hristov, Ulf Wendel");
 CREDIT_LINE("MySQL", "Zeev Suraski, Zak Greant, Georg Richter");
 CREDIT_LINE("ncurses", "Ilia Alshanetsky, Wez Furlong, Hartmut Holzgraefe, Georg Richter");
 CREDIT_LINE("OCI8", "Stig Bakken, Thies C. Arntzen, Andy Sautins, David Benson, Maxim Maletsky, Harald Radi, Antony Dovgal, Andi Gutmans, Wez Furlong");
Index: ext/standard/proc_open.c
===================================================================
RCS file: /repository/php-src/ext/standard/proc_open.c,v
retrieving revision 1.36.2.1.2.14
retrieving revision 1.36.2.1.2.15
diff -u -p -d -r1.36.2.1.2.14 -r1.36.2.1.2.15
--- ext/standard/proc_open.c	2 Apr 2007 20:44:30 -0000	1.36.2.1.2.14
+++ ext/standard/proc_open.c	16 Apr 2007 08:09:55 -0000	1.36.2.1.2.15
@@ -946,7 +946,7 @@ PHP_FUNCTION(proc_open)
 						break;
 				}
 #ifdef PHP_WIN32
-				stream = php_stream_fopen_from_fd(_open_osfhandle((long)descriptors[i].parentend,
+				stream = php_stream_fopen_from_fd(_open_osfhandle((zend_intptr_t)descriptors[i].parentend,
 							descriptors[i].mode_flags), mode_string, NULL);
 #else
 				stream = php_stream_fopen_from_fd(descriptors[i].parentend, mode_string, NULL);
Index: ext/standard/tests/file/bug22414.phpt
===================================================================
RCS file: /repository/php-src/ext/standard/tests/file/bug22414.phpt,v
retrieving revision 1.10.6.1
retrieving revision 1.10.6.2
diff -u -p -d -r1.10.6.1 -r1.10.6.2
--- ext/standard/tests/file/bug22414.phpt	10 Aug 2006 13:43:18 -0000	1.10.6.1
+++ ext/standard/tests/file/bug22414.phpt	18 Apr 2007 14:51:29 -0000	1.10.6.2
@@ -16,8 +16,13 @@ output_handler=
 
 	/* Binary Data Test */
 	
-	$cmd = $php . ' -n -r \"readfile(@getenv(\'TEST_PHP_EXECUTABLE\')); \"';
-	$cmd = $php . ' -n -r \' passthru("'.$cmd.'"); \' > '.$tmpfile ;
+	if (substr(PHP_OS, 0, 3) != 'WIN') {
+		$cmd = $php . ' -n -r \"readfile(@getenv(\'TEST_PHP_EXECUTABLE\')); \"';
+		$cmd = $php . ' -n -r \' passthru("'.$cmd.'"); \' > '.$tmpfile ;
+	} else {
+		$cmd = $php . ' -n -r \"readfile(@getenv(\\\\\\"TEST_PHP_EXECUTABLE\\\\\\")); \"';
+		$cmd = $php . ' -n -r " passthru(\''.$cmd.'\');" > '.$tmpfile ;
+	}
 	exec($cmd);
 
 	if (md5_file($php) == md5_file($tmpfile)) {
Index: ext/standard/tests/file/bug24313.phpt
===================================================================
RCS file: /repository/php-src/ext/standard/tests/file/bug24313.phpt,v
retrieving revision 1.3.4.1.2.2
retrieving revision 1.3.4.1.2.3
diff -u -p -d -r1.3.4.1.2.2 -r1.3.4.1.2.3
--- ext/standard/tests/file/bug24313.phpt	28 Jul 2006 13:47:56 -0000	1.3.4.1.2.2
+++ ext/standard/tests/file/bug24313.phpt	18 Apr 2007 14:51:29 -0000	1.3.4.1.2.3
@@ -1,5 +1,11 @@
 --TEST--
 Bug #24313 (file_exists() throws a warning on nonexistent files when is open_basedir enabled)
+--SKIPIF--
+<?php
+if (substr(PHP_OS, 0, 3) == 'WIN') {
+    die('skip "/dev" is not available');
+}
+?>
 --INI--
 open_basedir=/dev
 --FILE--
Index: ext/standard/tests/file/bug26615.phpt
===================================================================
RCS file: /repository/php-src/ext/standard/tests/file/bug26615.phpt,v
retrieving revision 1.4
retrieving revision 1.4.4.1
diff -u -p -d -r1.4 -r1.4.4.1
--- ext/standard/tests/file/bug26615.phpt	18 Jun 2005 02:24:37 -0000	1.4
+++ ext/standard/tests/file/bug26615.phpt	18 Apr 2007 14:51:29 -0000	1.4.4.1
@@ -6,7 +6,11 @@ variables_order=E
 <?php
 $out = array();
 $status = -1;
-exec($_ENV['TEST_PHP_EXECUTABLE'].' -r \'for($i=1;$i<=5000;$i++) print "$i\n";\' | tr \'\n\' \' \'', $out, $status);
+if (substr(PHP_OS, 0, 3) != 'WIN') {
+	exec($_ENV['TEST_PHP_EXECUTABLE'].' -r \'for($i=1;$i<=5000;$i++) print "$i\n";\' | tr \'\n\' \' \'', $out, $status);
+} else {
+	exec($_ENV['TEST_PHP_EXECUTABLE'].' -r "for($i=1;$i<=5000;$i++) echo $i,\' \';"', $out, $status);
+}
 print_r($out);
 ?>
 --EXPECT--
Index: ext/standard/tests/file/bug26938.phpt
===================================================================
RCS file: /repository/php-src/ext/standard/tests/file/bug26938.phpt,v
retrieving revision 1.1
retrieving revision 1.1.8.1
diff -u -p -d -r1.1 -r1.1.8.1
--- ext/standard/tests/file/bug26938.phpt	21 Jan 2004 22:48:28 -0000	1.1
+++ ext/standard/tests/file/bug26938.phpt	18 Apr 2007 14:51:29 -0000	1.1.8.1
@@ -5,12 +5,21 @@ Bug #26938 (exec does not read consecuti
 $out = array();
 $status = -1;
 $php = getenv('TEST_PHP_EXECUTABLE');
-exec($php . ' -r \'' 
-     . '$lengths = array(10,20000,10000,5,10000,3);'
-     . 'foreach($lengths as $length) {'
-     . '  for($i=0;$i<$length;$i++) print chr(65+$i % 27);'
-     . '  print "\n";'
-     . '}\'', $out, $status);
+if (substr(PHP_OS, 0, 3) != 'WIN') {
+	exec($php . ' -r \'' 
+	     . '$lengths = array(10,20000,10000,5,10000,3);'
+	     . 'foreach($lengths as $length) {'
+	     . '  for($i=0;$i<$length;$i++) print chr(65+$i % 27);'
+	     . '  print "\n";'
+	     . '}\'', $out, $status);
+} else {
+	exec($php . ' -r "' 
+	     . '$lengths = array(10,20000,10000,5,10000,3);'
+	     . 'foreach($lengths as $length) {'
+	     . '  for($i=0;$i<$length;$i++) print chr(65+$i % 27);'
+	     . '  print \\"\\n\\";'
+	     . '}"', $out, $status);
+}
 for ($i=0;$i<6;$i++)
      print "md5(line $i)= " . md5($out[$i]) . " (length " .
 strlen($out[$i]) . ")\n";
Index: ext/standard/tests/file/bug39367.phpt
===================================================================
RCS file: /repository/php-src/ext/standard/tests/file/bug39367.phpt,v
retrieving revision 1.1.2.1
retrieving revision 1.1.2.2
diff -u -p -d -r1.1.2.1 -r1.1.2.2
--- ext/standard/tests/file/bug39367.phpt	22 Jan 2007 09:31:46 -0000	1.1.2.1
+++ ext/standard/tests/file/bug39367.phpt	18 Apr 2007 14:51:29 -0000	1.1.2.2
@@ -1,5 +1,11 @@
 --TEST--
 Bug #39367 (clearstatcache() doesn't clear realpath cache)
+--SKIPIF--
+<?php
+if (substr(PHP_OS, 0, 3) == 'WIN') {
+    die('skip no symlinks on Windows');
+}
+?>
 --FILE--
 <?php
 function test() {
Index: ext/standard/tests/file/mkdir-002.phpt
===================================================================
RCS file: /repository/php-src/ext/standard/tests/file/mkdir-002.phpt,v
retrieving revision 1.1.2.1
retrieving revision 1.1.2.2
diff -u -p -d -r1.1.2.1 -r1.1.2.2
--- ext/standard/tests/file/mkdir-002.phpt	16 May 2006 13:06:06 -0000	1.1.2.1
+++ ext/standard/tests/file/mkdir-002.phpt	18 Apr 2007 14:51:29 -0000	1.1.2.2
@@ -1,5 +1,11 @@
 --TEST--
 mkdir(dir, 0777) tests
+--SKIPIF--
+<?php
+if (substr(PHP_OS, 0, 3) == 'WIN') {
+    die('skip no symlinks on Windows');
+}
+?>
 --FILE--
 <?php
 
Index: ext/standard/tests/file/stream_001.phpt
===================================================================
RCS file: /repository/php-src/ext/standard/tests/file/stream_001.phpt,v
retrieving revision 1.1.2.2
retrieving revision 1.1.2.3
diff -u -p -d -r1.1.2.2 -r1.1.2.3
--- ext/standard/tests/file/stream_001.phpt	15 Sep 2006 07:27:22 -0000	1.1.2.2
+++ ext/standard/tests/file/stream_001.phpt	18 Apr 2007 14:51:29 -0000	1.1.2.3
@@ -17,7 +17,7 @@ Notice: fopen(): Unable to find the wrap
 
 Warning: fopen(): Plainfiles wrapper disabled in %s on line %d
 
-Warning: fopen(file:///%s): failed to open stream: no suitable wrapper could be found in %s on line %d
+Warning: fopen(file://%s): failed to open stream: no suitable wrapper could be found in %s on line %d
 bool(false)
 bool(true)
 resource(%d) of type (stream)
Index: ext/standard/tests/general_functions/highlight_heredoc.phpt
===================================================================
RCS file: /repository/php-src/ext/standard/tests/general_functions/highlight_heredoc.phpt,v
retrieving revision 1.2
retrieving revision 1.2.6.1
diff -u -p -d -r1.2 -r1.2.6.1
--- ext/standard/tests/general_functions/highlight_heredoc.phpt	25 Feb 2004 22:55:45 -0000	1.2
+++ ext/standard/tests/general_functions/highlight_heredoc.phpt	16 Apr 2007 08:14:33 -0000	1.2.6.1
@@ -1,5 +1,7 @@
 --TEST--
 highlight_string() handling of heredoc
+--INI--
+highlight.html=#000000
 --FILE--
 <?php
 $str = '
Index: ext/standard/tests/strings/pack.phpt
===================================================================
RCS file: /repository/php-src/ext/standard/tests/strings/pack.phpt,v
retrieving revision 1.1.2.3
retrieving revision 1.1.2.4
diff -u -p -d -r1.1.2.3 -r1.1.2.4
--- ext/standard/tests/strings/pack.phpt	3 Apr 2007 19:50:40 -0000	1.1.2.3
+++ ext/standard/tests/strings/pack.phpt	13 Apr 2007 02:15:07 -0000	1.1.2.4
@@ -145,7 +145,7 @@ Array
 )
 Array
 (
-    [1] => -1
+    [1] => 0
 )
 Array
 (
@@ -185,7 +185,7 @@ Array
 )
 Array
 (
-    [1] => -1
+    [1] => 0
 )
 Array
 (
@@ -233,7 +233,7 @@ Array
 )
 Array
 (
-    [1] => -1
+    [1] => 0
 )
 Array
 (
@@ -305,7 +305,7 @@ Array
 )
 Array
 (
-    [1] => -1
+    [1] => 0
 )
 Array
 (
Index: ext/standard/tests/strings/pathinfo.phpt
===================================================================
RCS file: /repository/php-src/ext/standard/tests/strings/pathinfo.phpt,v
retrieving revision 1.1.2.2
retrieving revision 1.1.2.3
diff -u -p -d -r1.1.2.2 -r1.1.2.3
--- ext/standard/tests/strings/pathinfo.phpt	17 Jul 2006 06:45:08 -0000	1.1.2.2
+++ ext/standard/tests/strings/pathinfo.phpt	18 Apr 2007 14:51:29 -0000	1.1.2.3
@@ -57,7 +57,7 @@ array(4) {
 }
 array(3) {
   ["dirname"]=>
-  string(1) "/"
+  string(1) "%e"
   ["basename"]=>
   string(0) ""
   ["filename"]=>
@@ -75,7 +75,7 @@ array(4) {
 }
 array(4) {
   ["dirname"]=>
-  string(1) "/"
+  string(1) "%e"
   ["basename"]=>
   string(1) "."
   ["extension"]=>
@@ -96,13 +96,13 @@ array(4) {
 string(12) "pathinfo.php"
 string(8) "pathinfo"
 string(3) "php"
-string(%d) "%s/strings"
-string(%d) "%s/strings"
+string(%d) "%s%estrings"
+string(%d) "%s%estrings"
 string(12) "pathinfo.php"
 string(3) "php"
 string(12) "pathinfo.php"
-string(%d) "%s/strings"
+string(%d) "%s%estrings"
 string(12) "pathinfo.php"
-string(%d) "%s/strings"
-string(%d) "%s/strings"
+string(%d) "%s%estrings"
+string(%d) "%s%estrings"
 Done
Index: ext/standard/tests/time/bug38524.phpt
===================================================================
RCS file: /repository/php-src/ext/standard/tests/time/bug38524.phpt,v
retrieving revision 1.1.2.2
retrieving revision 1.1.2.3
diff -u -p -d -r1.1.2.2 -r1.1.2.3
--- ext/standard/tests/time/bug38524.phpt	24 Aug 2006 11:27:20 -0000	1.1.2.2
+++ ext/standard/tests/time/bug38524.phpt	18 Apr 2007 14:51:29 -0000	1.1.2.3
@@ -1,5 +1,7 @@
 --TEST--
 Bug #38524 (strptime() does not initialize the internal date storage structure)
+--SKIPIF--
+<?php if (!function_exists('strptime')) echo "SKIP"; ?>
 --FILE--
 <?php
 	var_dump(strptime('2006-08-20', '%Y-%m-%d'));
Index: main/SAPI.c
===================================================================
RCS file: /repository/php-src/main/SAPI.c,v
retrieving revision 1.202.2.7.2.9
retrieving revision 1.202.2.7.2.10
diff -u -p -d -r1.202.2.7.2.9 -r1.202.2.7.2.10
--- main/SAPI.c	27 Feb 2007 03:28:17 -0000	1.202.2.7.2.9
+++ main/SAPI.c	16 Apr 2007 08:09:56 -0000	1.202.2.7.2.10
@@ -541,7 +541,7 @@ SAPI_API int sapi_header_op(sapi_header_
 
 	switch (op) {
 		case SAPI_HEADER_SET_STATUS:
-			sapi_update_response_code((long) arg TSRMLS_CC);
+			sapi_update_response_code((int)(zend_intptr_t) arg TSRMLS_CC);
 			return SUCCESS;
 
 		case SAPI_HEADER_REPLACE:
Index: main/fopen_wrappers.c
===================================================================
RCS file: /repository/php-src/main/fopen_wrappers.c,v
retrieving revision 1.175.2.3.2.10
retrieving revision 1.175.2.3.2.11
diff -u -p -d -r1.175.2.3.2.10 -r1.175.2.3.2.11
--- main/fopen_wrappers.c	10 Apr 2007 22:30:07 -0000	1.175.2.3.2.10
+++ main/fopen_wrappers.c	18 Apr 2007 11:58:40 -0000	1.175.2.3.2.11
@@ -151,6 +151,8 @@ PHPAPI int php_check_specific_open_based
 			if (path_len > 1 && path_tmp[path_len - 2] == ':') {
 				/* this is c:\,  */
 				path_tmp[path_len] = '\0';
+			} else {
+				path_tmp[path_len - 1] = '\0';
 			}
 #else
 			path_tmp[path_len - 1] = '\0';
Index: main/main.c
===================================================================
RCS file: /repository/php-src/main/main.c,v
retrieving revision 1.640.2.23.2.33
retrieving revision 1.640.2.23.2.35
diff -u -p -d -r1.640.2.23.2.33 -r1.640.2.23.2.35
--- main/main.c	6 Apr 2007 13:58:48 -0000	1.640.2.23.2.33
+++ main/main.c	18 Apr 2007 09:38:56 -0000	1.640.2.23.2.35
@@ -63,6 +63,7 @@
 #ifdef PHP_WIN32
 #include <io.h>
 #include "win32/php_registry.h"
+#include "ext/standard/flock_compat.h"
 #endif
 #include "php_syslog.h"
 #include "Zend/zend_exceptions.h"
@@ -362,8 +363,11 @@ PHPAPI void php_log_err(char *log_messag
 			time(&error_time);
 			strftime(error_time_str, sizeof(error_time_str), "%d-%b-%Y %H:%M:%S", php_localtime_r(&error_time, &tmbuf));
 			len = spprintf(&tmp, 0, "[%s] %s%s", error_time_str, log_message, PHP_EOL);
+#ifdef PHP_WIN32
+			php_flock(fd, 2);
+#endif
 			write(fd, tmp, len);
-			efree(tmp); 
+			efree(tmp);
 			close(fd);
 			return;
 		}
@@ -974,7 +978,7 @@ static void php_message_handler_for_zend
 				if (message==ZMSG_MEMORY_LEAK_DETECTED) {
 					zend_leak_info *t = (zend_leak_info *) data;
 
-					snprintf(memory_leak_buf, 512, "%s(%d) :  Freeing 0x%.8lX (%zu bytes), script=%s\n", t->filename, t->lineno, (unsigned long)t->addr, t->size, SAFE_FILENAME(SG(request_info).path_translated));
+					snprintf(memory_leak_buf, 512, "%s(%d) :  Freeing 0x%.8lX (%zu bytes), script=%s\n", t->filename, t->lineno, (zend_uintptr_t)t->addr, t->size, SAFE_FILENAME(SG(request_info).path_translated));
 					if (t->orig_filename) {
 						char relay_buf[512];
 
@@ -982,7 +986,7 @@ static void php_message_handler_for_zend
 						strlcat(memory_leak_buf, relay_buf, sizeof(memory_leak_buf));
 					}
 				} else {
-					unsigned long leak_count = (unsigned long) data;
+					unsigned long leak_count = (zend_uintptr_t) data;
 
 					snprintf(memory_leak_buf, 512, "Last leak repeated %ld time%s\n", leak_count, (leak_count>1?"s":""));
 				}
Index: main/output.c
===================================================================
RCS file: /repository/php-src/main/output.c,v
retrieving revision 1.167.2.3.2.2
retrieving revision 1.167.2.3.2.3
diff -u -p -d -r1.167.2.3.2.2 -r1.167.2.3.2.3
--- main/output.c	29 Jan 2007 11:21:31 -0000	1.167.2.3.2.2
+++ main/output.c	16 Apr 2007 02:25:24 -0000	1.167.2.3.2.3
@@ -112,7 +112,7 @@ void php_output_register_constants(TSRML
 /* }}} */
 
 
-/* {{{ php_body_wirte
+/* {{{ php_body_write
  * Write body part */
 PHPAPI int php_body_write(const char *str, uint str_length TSRMLS_DC)
 {
@@ -120,7 +120,7 @@ PHPAPI int php_body_write(const char *st
 }
 /* }}} */
 
-/* {{{ php_header_wirte
+/* {{{ php_header_write
  * Write HTTP header */
 PHPAPI int php_header_write(const char *str, uint str_length TSRMLS_DC)
 {
Index: main/php_ini.c
===================================================================
RCS file: /repository/php-src/main/php_ini.c,v
retrieving revision 1.136.2.4.2.7
retrieving revision 1.136.2.4.2.8
diff -u -p -d -r1.136.2.4.2.7 -r1.136.2.4.2.8
--- main/php_ini.c	24 Feb 2007 02:17:28 -0000	1.136.2.4.2.7
+++ main/php_ini.c	16 Apr 2007 08:09:56 -0000	1.136.2.4.2.8
@@ -142,7 +142,7 @@ PHPAPI void display_ini_entries(zend_mod
 	}
 	php_info_print_table_start();
 	php_info_print_table_header(3, "Directive", "Local Value", "Master Value");
-	zend_hash_apply_with_argument(EG(ini_directives), (apply_func_arg_t) php_ini_displayer, (void *) (long) module_number TSRMLS_CC);
+	zend_hash_apply_with_argument(EG(ini_directives), (apply_func_arg_t) php_ini_displayer, (void *) (zend_intptr_t) module_number TSRMLS_CC);
 	php_info_print_table_end();
 }
 /* }}} */
@@ -590,7 +590,7 @@ PHPAPI int cfg_get_long(char *varname, l
 	zval *tmp, var;
 	
 	if (zend_hash_find(&configuration_hash, varname, strlen(varname) + 1, (void **) &tmp) == FAILURE) {
-		*result = (long) NULL;
+		*result = 0;
 		return FAILURE;
 	}
 	var = *tmp;
Index: main/php_variables.c
===================================================================
RCS file: /repository/php-src/main/php_variables.c,v
retrieving revision 1.104.2.10.2.7
retrieving revision 1.104.2.10.2.8
diff -u -p -d -r1.104.2.10.2.7 -r1.104.2.10.2.8
--- main/php_variables.c	28 Mar 2007 09:14:08 -0000	1.104.2.10.2.7
+++ main/php_variables.c	17 Apr 2007 15:06:50 -0000	1.104.2.10.2.8
@@ -158,8 +158,7 @@ PHPAPI void php_register_variable_ex(cha
 				array_init(gpc_element);
 				zend_hash_next_index_insert(symtable1, &gpc_element, sizeof(zval *), (void **) &gpc_element_p);
 			} else {
-				if (PG(magic_quotes_gpc) && (index != var)) {
-					/* no need to addslashes() the index if it's the main variable name */
+				if (PG(magic_quotes_gpc)) {
 					escaped_index = php_addslashes(index, index_len, &index_len, 0 TSRMLS_CC);
 				} else {
 					escaped_index = index;
Index: main/php_version.h
===================================================================
RCS file: /repository/php-src/main/php_version.h,v
retrieving revision 1.112.2.37.2.28
retrieving revision 1.112.2.37.2.29
diff -u -p -d -r1.112.2.37.2.28 -r1.112.2.37.2.29
--- main/php_version.h	10 Apr 2007 22:31:16 -0000	1.112.2.37.2.28
+++ main/php_version.h	10 Apr 2007 22:38:47 -0000	1.112.2.37.2.29
@@ -3,6 +3,6 @@
 #define PHP_MAJOR_VERSION 5
 #define PHP_MINOR_VERSION 2
 #define PHP_RELEASE_VERSION 2
-#define PHP_EXTRA_VERSION "RC1"
-#define PHP_VERSION "5.2.2RC1"
+#define PHP_EXTRA_VERSION "RC2-dev"
+#define PHP_VERSION "5.2.2RC2-dev"
 #define PHP_VERSION_ID 50202
Index: main/snprintf.c
===================================================================
RCS file: /repository/php-src/main/snprintf.c,v
retrieving revision 1.37.2.4.2.10
retrieving revision 1.37.2.4.2.11
diff -u -p -d -r1.37.2.4.2.10 -r1.37.2.4.2.11
--- main/snprintf.c	26 Feb 2007 12:05:52 -0000	1.37.2.4.2.10
+++ main/snprintf.c	12 Apr 2007 22:01:20 -0000	1.37.2.4.2.11
@@ -708,6 +708,16 @@ static int format_converter(register buf
 					fmt++;
 					modifier = LM_LONG_DOUBLE;
 					break;
+				case 'I':
+					fmt++;
+#if SIZEOF_LONG_LONG
+					if (*fmt == '6' && *(fmt+1) == '4') {
+						fmt += 2;
+						modifier = LM_LONG_LONG;
+					} else
+#endif
+						modifier = LM_LONG;
+					break;
 				case 'l':
 					fmt++;
 #if SIZEOF_LONG_LONG
Index: main/streams/plain_wrapper.c
===================================================================
RCS file: /repository/php-src/main/streams/plain_wrapper.c,v
retrieving revision 1.52.2.6.2.18
retrieving revision 1.52.2.6.2.21
diff -u -p -d -r1.52.2.6.2.18 -r1.52.2.6.2.21
--- main/streams/plain_wrapper.c	9 Apr 2007 15:38:41 -0000	1.52.2.6.2.18
+++ main/streams/plain_wrapper.c	18 Apr 2007 14:23:06 -0000	1.52.2.6.2.21
@@ -223,9 +223,9 @@ PHPAPI php_stream *_php_stream_fopen_fro
 		}
 #elif defined(PHP_WIN32)
 		{
-			long handle = _get_osfhandle(self->fd);
+			zend_uintptr_t handle = _get_osfhandle(self->fd);
 
-			if (handle != 0xFFFFFFFF) {
+			if (handle != (zend_uintptr_t)INVALID_HANDLE_VALUE) {
 				self->is_pipe = GetFileType((HANDLE)handle) == FILE_TYPE_PIPE;
 			}
 		}
@@ -261,9 +261,9 @@ PHPAPI php_stream *_php_stream_fopen_fro
 		}
 #elif defined(PHP_WIN32)
 		{
-			long handle = _get_osfhandle(self->fd);
+			zend_uintptr_t handle = _get_osfhandle(self->fd);
 
-			if (handle != 0xFFFFFFFF) {
+			if (handle != (zend_uintptr_t)INVALID_HANDLE_VALUE) {
 				self->is_pipe = GetFileType((HANDLE)handle) == FILE_TYPE_PIPE;
 			}
 		}
@@ -601,7 +601,7 @@ static int php_stdiop_set_option(php_str
 				return -1;
 			}
 
-			if ((long) ptrparam == PHP_STREAM_LOCK_SUPPORTED) {
+			if ((zend_uintptr_t) ptrparam == PHP_STREAM_LOCK_SUPPORTED) {
 				return 0;
 			}
 
@@ -714,8 +714,16 @@ static int php_stdiop_set_option(php_str
 							return PHP_STREAM_OPTION_RETURN_ERR;
 						}
 
-						if (range->length == 0) {
-							range->length = GetFileSize(hfile, NULL) - range->offset;
+						size = GetFileSize(hfile, NULL);
+						if (range->length == 0 && range->offset > 0 && range->offset < size) {
+							range->length = size - range->offset;
+						}
+						if (range->length == 0 || range->length > size) {
+							range->length = size;
+						}
+						if (range->offset >= size) {
+							range->offset = size;
+							range->length = 0;
 						}
 
 						/* figure out how big a chunk to map to be able to view the part that we need */
@@ -765,8 +773,13 @@ static int php_stdiop_set_option(php_str
 				case PHP_STREAM_TRUNCATE_SUPPORTED:
 					return fd == -1 ? PHP_STREAM_OPTION_RETURN_ERR : PHP_STREAM_OPTION_RETURN_OK;
 
-				case PHP_STREAM_TRUNCATE_SET_SIZE:
-					return ftruncate(fd, *(ptrdiff_t*)ptrparam) == 0 ? PHP_STREAM_OPTION_RETURN_OK : PHP_STREAM_OPTION_RETURN_ERR;
+				case PHP_STREAM_TRUNCATE_SET_SIZE: {
+					ptrdiff_t new_size = *(ptrdiff_t*)ptrparam;
+					if (new_size < 0) {
+						return PHP_STREAM_OPTION_RETURN_ERR;
+					}
+					return ftruncate(fd, new_size) == 0 ? PHP_STREAM_OPTION_RETURN_OK : PHP_STREAM_OPTION_RETURN_ERR;
+				}
 			}
 			
 		default:
Index: sapi/cgi/cgi_main.c
===================================================================
RCS file: /repository/php-src/sapi/cgi/cgi_main.c,v
retrieving revision 1.267.2.15.2.32
retrieving revision 1.267.2.15.2.36
diff -u -p -d -r1.267.2.15.2.32 -r1.267.2.15.2.36
--- sapi/cgi/cgi_main.c	29 Mar 2007 18:47:04 -0000	1.267.2.15.2.32
+++ sapi/cgi/cgi_main.c	17 Apr 2007 20:00:53 -0000	1.267.2.15.2.36
@@ -1151,6 +1151,7 @@ int main(int argc, char *argv[])
 #endif
 
 	sapi_startup(&cgi_sapi_module);
+	cgi_sapi_module.php_ini_path_override = NULL;
 
 #ifdef PHP_WIN32
 	_fmode = _O_BINARY; /* sets default for file streams to binary */
@@ -1178,6 +1179,9 @@ int main(int argc, char *argv[])
 	while ((c = php_getopt(argc, argv, OPTIONS, &php_optarg, &php_optind, 0)) != -1) {
 		switch (c) {
 			case 'c':
+				if (cgi_sapi_module.php_ini_path_override) {
+					free(cgi_sapi_module.php_ini_path_override);
+				}
 				cgi_sapi_module.php_ini_path_override = strdup(php_optarg);
 				break;
 			case 'n':
@@ -1224,6 +1228,10 @@ int main(int argc, char *argv[])
 				}
 				break;
 #endif
+			case 's': /* generate highlighted HTML from source */
+				behavior = PHP_MODE_HIGHLIGHT;
+				break;
+
 		}
 
 	}
@@ -1474,6 +1482,9 @@ consult the installation file that came 
 						break;
 
   				case 'f': /* parse file */
+						if (script_file) {
+							efree(script_file);
+						}
 						script_file = estrdup(php_optarg);
 						no_headers = 1;
 						/* arguments after the file are considered script args */
@@ -1524,10 +1535,6 @@ consult the installation file that came 
 						no_headers = 1;
 						break;
 
-  				case 's': /* generate highlighted HTML from source */
-						behavior = PHP_MODE_HIGHLIGHT;
-						break;
-
 				case 'v': /* show php version & quit */
 						no_headers = 1;
 						if (php_request_startup(TSRMLS_C) == FAILURE) {
@@ -1737,6 +1744,11 @@ consult the installation file that came 
 					if (open_file_for_scanning(&file_handle TSRMLS_CC) == SUCCESS) {
 						php_get_highlight_struct(&syntax_highlighter_ini);
 						zend_highlight(&syntax_highlighter_ini TSRMLS_CC);
+#if PHP_FASTCGI
+						if (fastcgi) {
+							goto fastcgi_request_done;
+						}
+#endif
 						fclose(file_handle.handle.fp);
 						php_end_ob_buffers(1 TSRMLS_CC);
 					}
Index: sapi/cgi/getopt.c
===================================================================
RCS file: /repository/php-src/sapi/cgi/getopt.c,v
retrieving revision 1.9.2.1.2.1
retrieving revision 1.9.2.1.2.2
diff -u -p -d -r1.9.2.1.2.1 -r1.9.2.1.2.2
--- sapi/cgi/getopt.c	1 Jan 2007 09:36:12 -0000	1.9.2.1.2.1
+++ sapi/cgi/getopt.c	15 Apr 2007 22:50:58 -0000	1.9.2.1.2.2
@@ -77,29 +79,34 @@ int php_getopt(int argc, char* const *ar
 	}
 	if ((argv[*optind][0] == '-') && (argv[*optind][1] == '-')) {
 		/* '--' indicates end of args if not followed by a known long option name */
+		if (argv[*optind][2] == '\0') {
+			(*optind)++;
+			return(EOF);
+		}
+
 		while (1) {
 			opts_idx++;
 			if (opts[opts_idx].opt_char == '-') {
 				(*optind)++;
-				return(EOF);
+				return(php_opt_error(argc, argv, *optind-1, optchr, OPTERRARG, show_err));
 			} else if (opts[opts_idx].opt_name && !strcmp(&argv[*optind][2], opts[opts_idx].opt_name)) {
 				break;
 			}
 		}
 		optchr = 0;
-		dash = 1;
-		arg_start = 2 + strlen(opts[opts_idx].opt_name);
-	}
-	if (!dash) {
-		dash = 1;
-		optchr = 1;
-	}
-
-	/* Check if the guy tries to do a -: kind of flag */
-	if (argv[*optind][optchr] == ':') {
 		dash = 0;
-		(*optind)++;
-		return (php_opt_error(argc, argv, *optind-1, optchr, OPTERRCOLON, show_err));
+		arg_start = 2 + strlen(opts[opts_idx].opt_name);
+	} else {
+		if (!dash) {
+			dash = 1;
+			optchr = 1;
+		}
+		/* Check if the guy tries to do a -: kind of flag */
+		if (argv[*optind][optchr] == ':') {
+			dash = 0;
+			(*optind)++;
+			return (php_opt_error(argc, argv, *optind-1, optchr, OPTERRCOLON, show_err));
+		}
 	}
 	if (opts_idx < 0) {
 		while (1) {
Index: sapi/cgi/php_getopt.h
===================================================================
RCS file: /repository/php-src/sapi/cgi/php_getopt.h,v
retrieving revision 1.7.2.1.2.1
retrieving revision 1.7.2.1.2.2
diff -u -p -d -r1.7.2.1.2.1 -r1.7.2.1.2.2
--- sapi/cgi/php_getopt.h	1 Jan 2007 09:36:12 -0000	1.7.2.1.2.1
+++ sapi/cgi/php_getopt.h	15 Apr 2007 22:50:58 -0000	1.7.2.1.2.2
@@ -16,8 +16,17 @@
    +----------------------------------------------------------------------+
 */
 
+/* $Id: php-5.2.2RC1.diff,v 1.3 2007-04-26 15:18:40 avishay Exp $ */
+
 #include "php.h"
 
+#ifdef NETWARE
+/*
+As NetWare LibC has optind and optarg macros defined in unistd.h our local variables were getting mistakenly preprocessed so undeffing optind and optarg
+*/
+#undef optarg
+#undef optind
+#endif
 /* Define structure for one recognized option (both single char and long name).
  * If short_open is '-' this is the last option.
  */
Index: sapi/cli/php_cli.c
===================================================================
RCS file: /repository/php-src/sapi/cli/php_cli.c,v
retrieving revision 1.129.2.13.2.16
retrieving revision 1.129.2.13.2.17
diff -u -p -d -r1.129.2.13.2.16 -r1.129.2.13.2.17
--- sapi/cli/php_cli.c	22 Feb 2007 10:06:22 -0000	1.129.2.13.2.16
+++ sapi/cli/php_cli.c	17 Apr 2007 19:46:13 -0000	1.129.2.13.2.17
@@ -652,7 +652,10 @@ int main(int argc, char *argv[])
 	while ((c = php_getopt(argc, argv, OPTIONS, &php_optarg, &php_optind, 0))!=-1) {
 		switch (c) {
 			case 'c':
-				cli_sapi_module.php_ini_path_override = strdup(php_optarg);
+				if (cli_sapi_module.php_ini_path_override) {
+					free(cli_sapi_module.php_ini_path_override);
+				}
+ 				cli_sapi_module.php_ini_path_override = strdup(php_optarg);
 				break;
 			case 'n':
 				cli_sapi_module.php_ini_ignore = 1;
Index: sapi/cli/tests/004.phpt
===================================================================
RCS file: /repository/php-src/sapi/cli/tests/004.phpt,v
retrieving revision 1.1.2.5
retrieving revision 1.1.2.6
diff -u -p -d -r1.1.2.5 -r1.1.2.6
--- sapi/cli/tests/004.phpt	17 Mar 2007 19:16:17 -0000	1.1.2.5
+++ sapi/cli/tests/004.phpt	13 Apr 2007 12:29:32 -0000	1.1.2.6
@@ -23,7 +23,7 @@ string(45) "Exception: Function unknown(
 "
 string(42) "Exception: Function echo() does not exist
 "
-string(117) "Function [ <internal> public function phpinfo ] {
+string(110) "Function [ <internal> function phpinfo ] {
 
   - Parameters [1] {
     Parameter #0 [ <optional> $what ]
Index: sapi/cli/tests/006.phpt
===================================================================
RCS file: /repository/php-src/sapi/cli/tests/006.phpt,v
retrieving revision 1.1.2.5
retrieving revision 1.1.2.6
diff -u -p -d -r1.1.2.5 -r1.1.2.6
--- sapi/cli/tests/006.phpt	17 Mar 2007 19:16:17 -0000	1.1.2.5
+++ sapi/cli/tests/006.phpt	13 Apr 2007 12:29:32 -0000	1.1.2.6
@@ -65,35 +65,35 @@ string(%d) "Extension [ <persistent> ext
   }
 
   - Functions {
-    Function [ <internal> public function strtotime ] {
+    Function [ <internal> function strtotime ] {
 
       - Parameters [2] {
         Parameter #0 [ <required> $time ]
         Parameter #1 [ <optional> $now ]
       }
     }
-    Function [ <internal> public function date ] {
+    Function [ <internal> function date ] {
 
       - Parameters [2] {
         Parameter #0 [ <required> $format ]
         Parameter #1 [ <optional> $timestamp ]
       }
     }
-    Function [ <internal> public function idate ] {
+    Function [ <internal> function idate ] {
 
       - Parameters [2] {
         Parameter #0 [ <required> $format ]
         Parameter #1 [ <optional> $timestamp ]
       }
     }
-    Function [ <internal> public function gmdate ] {
+    Function [ <internal> function gmdate ] {
 
       - Parameters [2] {
         Parameter #0 [ <required> $format ]
         Parameter #1 [ <optional> $timestamp ]
       }
     }
-    Function [ <internal> public function mktime ] {
+    Function [ <internal> function mktime ] {
 
       - Parameters [6] {
         Parameter #0 [ <optional> $hour ]
@@ -104,7 +104,7 @@ string(%d) "Extension [ <persistent> ext
         Parameter #5 [ <optional> $year ]
       }
     }
-    Function [ <internal> public function gmmktime ] {
+    Function [ <internal> function gmmktime ] {
 
       - Parameters [6] {
         Parameter #0 [ <optional> $hour ]
@@ -115,7 +115,7 @@ string(%d) "Extension [ <persistent> ext
         Parameter #5 [ <optional> $year ]
       }
     }
-    Function [ <internal> public function checkdate ] {
+    Function [ <internal> function checkdate ] {
 
       - Parameters [3] {
         Parameter #0 [ <required> $month ]
@@ -123,84 +123,84 @@ string(%d) "Extension [ <persistent> ext
         Parameter #2 [ <required> $year ]
       }
     }
-    Function [ <internal> public function strftime ] {
+    Function [ <internal> function strftime ] {
 
       - Parameters [2] {
         Parameter #0 [ <required> $format ]
         Parameter #1 [ <optional> $timestamp ]
       }
     }
-    Function [ <internal> public function gmstrftime ] {
+    Function [ <internal> function gmstrftime ] {
 
       - Parameters [2] {
         Parameter #0 [ <required> $format ]
         Parameter #1 [ <optional> $timestamp ]
       }
     }
-    Function [ <internal> public function time ] {
+    Function [ <internal> function time ] {
 
       - Parameters [0] {
       }
     }
-    Function [ <internal> public function localtime ] {
+    Function [ <internal> function localtime ] {
 
       - Parameters [2] {
         Parameter #0 [ <optional> $timestamp ]
         Parameter #1 [ <optional> $associative_array ]
       }
     }
-    Function [ <internal> public function getdate ] {
+    Function [ <internal> function getdate ] {
 
       - Parameters [1] {
         Parameter #0 [ <optional> $timestamp ]
       }
     }
-    Function [ <internal> public function date_create ] {
+    Function [ <internal> function date_create ] {
     }
-    Function [ <internal> public function date_parse ] {
+    Function [ <internal> function date_parse ] {
     }
-    Function [ <internal> public function date_format ] {
+    Function [ <internal> function date_format ] {
     }
-    Function [ <internal> public function date_modify ] {
+    Function [ <internal> function date_modify ] {
     }
-    Function [ <internal> public function date_timezone_get ] {
+    Function [ <internal> function date_timezone_get ] {
     }
-    Function [ <internal> public function date_timezone_set ] {
+    Function [ <internal> function date_timezone_set ] {
     }
-    Function [ <internal> public function date_offset_get ] {
+    Function [ <internal> function date_offset_get ] {
     }
-    Function [ <internal> public function date_time_set ] {
+    Function [ <internal> function date_time_set ] {
     }
-    Function [ <internal> public function date_date_set ] {
+    Function [ <internal> function date_date_set ] {
     }
-    Function [ <internal> public function date_isodate_set ] {
+    Function [ <internal> function date_isodate_set ] {
     }
-    Function [ <internal> public function timezone_open ] {
+    Function [ <internal> function timezone_open ] {
     }
-    Function [ <internal> public function timezone_name_get ] {
+    Function [ <internal> function timezone_name_get ] {
     }
-    Function [ <internal> public function timezone_name_from_abbr ] {
+    Function [ <internal> function timezone_name_from_abbr ] {
     }
-    Function [ <internal> public function timezone_offset_get ] {
+    Function [ <internal> function timezone_offset_get ] {
     }
-    Function [ <internal> public function timezone_transitions_get ] {
+    Function [ <internal> function timezone_transitions_get ] {
     }
-    Function [ <internal> public function timezone_identifiers_list ] {
+    Function [ <internal> function timezone_identifiers_list ] {
     }
-    Function [ <internal> public function timezone_abbreviations_list ] {
+    Function [ <internal> function timezone_abbreviations_list ] {
     }
-    Function [ <internal> public function date_default_timezone_set ] {
+    Function [ <internal> function date_default_timezone_set ] {
 
       - Parameters [1] {
         Parameter #0 [ <required> $timezone_identifier ]
       }
     }
-    Function [ <internal> public function date_default_timezone_get ] {
+    Function [ <internal> function date_default_timezone_get ] {
 
       - Parameters [0] {
       }
     }
-    Function [ <internal> public function date_sunrise ] {
+    Function [ <internal> function date_sunrise ] {
 
       - Parameters [6] {
         Parameter #0 [ <required> $time ]
@@ -211,7 +211,7 @@ string(%d) "Extension [ <persistent> ext
         Parameter #5 [ <optional> $gmt_offset ]
       }
     }
-    Function [ <internal> public function date_sunset ] {
+    Function [ <internal> function date_sunset ] {
 
       - Parameters [6] {
         Parameter #0 [ <required> $time ]
@@ -222,7 +222,7 @@ string(%d) "Extension [ <persistent> ext
         Parameter #5 [ <optional> $gmt_offset ]
       }
     }
-    Function [ <internal> public function date_sun_info ] {
+    Function [ <internal> function date_sun_info ] {
 
       - Parameters [3] {
         Parameter #0 [ <required> $time ]
Index: sapi/cli/tests/009.phpt
===================================================================
RCS file: /repository/php-src/sapi/cli/tests/009.phpt,v
retrieving revision 1.1.2.4
retrieving revision 1.1.2.5
diff -u -p -d -r1.1.2.4 -r1.1.2.5
--- sapi/cli/tests/009.phpt	20 Jan 2007 22:12:55 -0000	1.1.2.4
+++ sapi/cli/tests/009.phpt	19 Apr 2007 07:00:40 -0000	1.1.2.5
@@ -7,9 +7,9 @@ using invalid combinations of cmdline op
 
 $php = getenv('TEST_PHP_EXECUTABLE');
 
-var_dump(`$php -n -c -r 'echo hello;'`);
-var_dump(`$php -n -a -r 'echo hello;'`);
-var_dump(`$php -n -r 'echo hello;' -a`);
+var_dump(`$php -n -c -r "echo hello;"`);
+var_dump(`$php -n -a -r "echo hello;"`);
+var_dump(`$php -n -r "echo hello;" -a`);
 
 echo "Done\n";
 ?>
Index: sapi/cli/tests/011.phpt
===================================================================
RCS file: /repository/php-src/sapi/cli/tests/011.phpt,v
retrieving revision 1.1.2.6
retrieving revision 1.1.2.7
diff -u -p -d -r1.1.2.6 -r1.1.2.7
--- sapi/cli/tests/011.phpt	20 Jan 2007 22:12:55 -0000	1.1.2.6
+++ sapi/cli/tests/011.phpt	19 Apr 2007 07:00:41 -0000	1.1.2.7
@@ -25,7 +25,7 @@ echo test::$var;
 
 file_put_contents($filename, $code);
 
-var_dump(`"$php" -n -l "$filename"`);
+var_dump(`"$php" -n -l $filename`);
 var_dump(`"$php" -n -l some.unknown`);
 
 $code = '
@@ -40,7 +40,7 @@ class test 
 
 file_put_contents($filename, $code);
 
-var_dump(`"$php" -n -l "$filename"`);
+var_dump(`"$php" -n -l $filename`);
 
 @unlink($filename);
 
Index: sapi/cli/tests/012.phpt
===================================================================
RCS file: /repository/php-src/sapi/cli/tests/012.phpt,v
retrieving revision 1.1.2.4
retrieving revision 1.1.2.5
diff -u -p -d -r1.1.2.4 -r1.1.2.5
--- sapi/cli/tests/012.phpt	20 Jan 2007 22:12:55 -0000	1.1.2.4
+++ sapi/cli/tests/012.phpt	19 Apr 2007 07:00:41 -0000	1.1.2.5
@@ -14,7 +14,7 @@ var_dump(`"$php" -n -R some.php -R some.
 var_dump(`"$php" -n -f some.php -f some.php`);
 var_dump(`"$php" -n -B '' -B ''`);
 var_dump(`"$php" -n -E '' -E ''`);
-var_dump(`"$php" -n -r "" -r ""`);
+var_dump(`"$php" -n -r '' -r ''`);
 
 echo "Done\n";
 ?>
Index: sapi/cli/tests/014.phpt
===================================================================
RCS file: /repository/php-src/sapi/cli/tests/014.phpt,v
retrieving revision 1.1.2.3
retrieving revision 1.1.2.4
diff -u -p -d -r1.1.2.3 -r1.1.2.4
--- sapi/cli/tests/014.phpt	20 Jan 2007 22:12:55 -0000	1.1.2.3
+++ sapi/cli/tests/014.phpt	19 Apr 2007 07:00:41 -0000	1.1.2.4
@@ -27,8 +27,8 @@ $o = new test;
 
 file_put_contents($filename, $code);
 
-var_dump(`"$php" -n -s "$filename"`);
-var_dump(`"$php" -n -s "unknown"`);
+var_dump(`"$php" -n -s $filename`);
+var_dump(`"$php" -n -s unknown`);
 
 @unlink($filename);
 
Index: sapi/cli/tests/015.phpt
===================================================================
RCS file: /repository/php-src/sapi/cli/tests/015.phpt,v
retrieving revision 1.1.2.3
retrieving revision 1.1.2.4
diff -u -p -d -r1.1.2.3 -r1.1.2.4
--- sapi/cli/tests/015.phpt	28 Mar 2007 12:25:33 -0000	1.1.2.3
+++ sapi/cli/tests/015.phpt	19 Apr 2007 07:00:41 -0000	1.1.2.4
@@ -1,7 +1,12 @@
 --TEST--
 CLI long options
 --SKIPIF--
-<?php include "skipif.inc"; ?>
+<?php 
+include "skipif.inc"; 
+if (substr(PHP_OS, 0, 3) == 'WIN') {
+	die ("skip not for Windows");
+}
+?>
 --FILE--
 <?php
 
Index: tests/classes/abstract_static.phpt
===================================================================
RCS file: /repository/php-src/tests/classes/abstract_static.phpt,v
retrieving revision 1.3.6.3
retrieving revision 1.3.6.4
diff -u -p -d -r1.3.6.3 -r1.3.6.4
--- tests/classes/abstract_static.phpt	20 Oct 2006 02:44:26 -0000	1.3.6.3
+++ tests/classes/abstract_static.phpt	18 Apr 2007 08:06:29 -0000	1.3.6.4
@@ -31,6 +31,6 @@ echo "Done\n"; // shouldn't be displayed
 --EXPECTF--
 Call to function show()
 
-Strict Standards: Static function fail::func() should not be abstract in %stests/classes/abstract_static.php(%d) : eval()'d code on line %d
+Strict Standards: Static function fail::func() should not be abstract in %sabstract_static.php(%d) : eval()'d code on line %d
 
-Fatal error: Class fail contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (fail::func) in %s/tests/classes/abstract_static.php(%d) : eval()'d code on line %d
+Fatal error: Class fail contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (fail::func) in %sabstract_static.php(%d) : eval()'d code on line %d
Index: win32/install.txt
===================================================================
RCS file: /repository/php-src/win32/install.txt,v
retrieving revision 1.34.2.1.2.2
retrieving revision 1.34.2.1.2.3
diff -u -p -d -r1.34.2.1.2.2 -r1.34.2.1.2.3
--- win32/install.txt	19 Jan 2007 19:25:02 -0000	1.34.2.1.2.2
+++ win32/install.txt	20 Apr 2007 14:13:47 -0000	1.34.2.1.2.3
@@ -6,8 +6,8 @@ Installing PHP
    1. General Installation Considerations
    2. Installation on Windows systems
 
-        Windows Installer (PHP 5.1 and earlier)
         Windows Installer (PHP 5.2 and later)
+        Windows Installer (PHP 5.1.0 and earlier)
         Manual Installation Steps
         ActiveScript
         Microsoft IIS / PWS
@@ -24,7 +24,7 @@ Installing PHP
         Introduction to PECL Installations
         Downloading PECL extensions
         PECL for Windows users
-        Compiling shared PECL extensions with PEAR
+        Compiling shared PECL extensions with the pecl command
         Compiling shared PECL extensions with phpize
         Compiling PECL extensions statically into PHP
 
@@ -86,7 +86,7 @@ Chapter 1. General Installation Consider
 
    With PHP you can also write desktop GUI applications using the PHP-GTK
    extension. This is a completely different approach than writing web
-   pages, as you do not output any HTML, but manage windows and objects
+   pages, as you do not output any HTML, but manage Windows and objects
    within them. For more information about PHP-GTK, please visit the site
    dedicated to this extension. PHP-GTK is not included in the official
    PHP distribution.
@@ -125,46 +125,6 @@ Chapter 2. Installation on Windows syste
    optimised.
      __________________________________________________________________
 
-Windows Installer (PHP 5.1 and earlier)
-
-   The Windows PHP installer is available from the downloads page at
-   http://www.php.net/downloads.php. This installs the CGI version of PHP
-   and for IIS, PWS, and Xitami, it configures the web server as well. The
-   installer does not include any extra external PHP extensions
-   (php_*.dll) as you'll only find those in the Windows Zip Package and
-   PECL downloads.
-
-     Note: While the Windows installer is an easy way to make PHP work,
-     it is restricted in many aspects as, for example, the automatic
-     setup of extensions is not supported. Use of the installer isn't the
-     preferred method for installing PHP.
-
-   First, install your selected HTTP (web) server on your system, and make
-   sure that it works.
-
-   Run the executable installer and follow the instructions provided by
-   the installation wizard. Two types of installation are supported -
-   standard, which provides sensible defaults for all the settings it can,
-   and advanced, which asks questions as it goes along.
-
-   The installation wizard gathers enough information to set up the
-   php.ini file, and configure certain web servers to use PHP. One of the
-   web servers the PHP installer does not configure for is Apache, so
-   you'll need to configure it manually.
-
-   Once the installation has completed, the installer will inform you if
-   you need to restart your system, restart the server, or just start
-   using PHP.
-
-   Warning
-
-   Be aware, that this setup of PHP is not secure. If you would like to
-   have a secure PHP setup, you'd better go on the manual way, and set
-   every option carefully. This automatically working setup gives you an
-   instantly working PHP installation, but it is not meant to be used on
-   online servers.
-     __________________________________________________________________
-
 Windows Installer (PHP 5.2 and later)
 
    The Windows PHP installer for later versions of PHP is built using MSI
@@ -233,10 +193,8 @@ apache13 - Apache 1.3 module
 apache20 - Apache 2.0 module
 apache22 - Apache 2,2 module
 apacheCGI - Apache CGI executable
-iis4ISAPI - IIS 4+ ISAPI module
-iis4CGI - IIS 4+ CGI executable
-pws4 - PWS 4 CGI executable
-iis3 - IIS/PWS 3 CGI executable
+iis4ISAPI - IIS ISAPI module
+iis4CGI - IIS CGI executable
 NSAPI - Sun/iPlanet/Netscape server module
 Xitami - Xitami CGI executable
 Sambar - Sambar Server ISAPI module
@@ -250,6 +208,46 @@ Manual - PHP Manual in CHM Format
    asp
      __________________________________________________________________
 
+Windows Installer (PHP 5.1.0 and earlier)
+
+   The Windows PHP installer is available from the downloads page at
+   http://www.php.net/downloads.php. This installs the CGI version of PHP
+   and for IIS, PWS, and Xitami, it configures the web server as well. The
+   installer does not include any extra external PHP extensions
+   (php_*.dll) as you'll only find those in the Windows Zip Package and
+   PECL downloads.
+
+     Note: While the Windows installer is an easy way to make PHP work,
+     it is restricted in many aspects as, for example, the automatic
+     setup of extensions is not supported. Use of the installer isn't the
+     preferred method for installing PHP.
+
+   First, install your selected HTTP (web) server on your system, and make
+   sure that it works.
+
+   Run the executable installer and follow the instructions provided by
+   the installation wizard. Two types of installation are supported -
+   standard, which provides sensible defaults for all the settings it can,
+   and advanced, which asks questions as it goes along.
+
+   The installation wizard gathers enough information to set up the
+   php.ini file, and configure certain web servers to use PHP. One of the
+   web servers the PHP installer does not configure for is Apache, so
+   you'll need to configure it manually.
+
+   Once the installation has completed, the installer will inform you if
+   you need to restart your system, restart the server, or just start
+   using PHP.
+
+   Warning
+
+   Be aware, that this setup of PHP is not secure. If you would like to
+   have a secure PHP setup, you'd better go on the manual way, and set
+   every option carefully. This automatically working setup gives you an
+   instantly working PHP installation, but it is not meant to be used on
+   online servers.
+     __________________________________________________________________
+
 Manual Installation Steps
 
    This install guide will help you manually install and configure PHP
@@ -299,7 +297,7 @@ c:\php
    |
    +--cli
    |  |
-   |  |-php.exe           -- CLI executable - ONLY for commandline scripting
+   |  |-php.exe           -- CLI executable - ONLY for command line scripting
    |
    +--dlls                -- support DLLs required by some extensions
    |  |
@@ -511,7 +509,7 @@ doc_root = c:\apache\htdocs // for Apach
        browscap.ini, read the following FAQ.
 
    PHP is now setup on your system. The next step is to choose a web
-   server, and enable it to run PHP. Choose a webserver from the table of
+   server, and enable it to run PHP. Choose a web server from the table of
    contents.
      __________________________________________________________________
 
@@ -519,13 +517,13 @@ ActiveScript
 
    This section contains notes specific to the ActiveScript installation.
 
-   ActiveScript is a windows only SAPI that enables you to use PHP script
+   ActiveScript is a Windows only SAPI that enables you to use PHP script
    in any ActiveScript compliant host, like Windows Script Host,
    ASP/ASP.NET, Windows Script Components or Microsoft Scriptlet control.
 
    As of PHP 5.0.1, ActiveScript has been moved to the PECL repository.
-   You may download this PECL extension DLL from the PHP Downloads page or
-   at http://snaps.php.net/.
+   The DLL for this PECL extension may be downloaded from either the PHP
+   Downloads page or from http://pecl4win.php.net/
 
      Note: You should read the manual installation steps first!
 
@@ -982,7 +980,7 @@ Sun, iPlanet and Netscape servers on Mic
    From PHP 4.3.3 on you can use PHP scripts with the NSAPI module to
    generate custom directory listings and error pages. Additional
    functions for Apache compatibility are also available. For support in
-   current webservers read the note about subrequests.
+   current web servers read the note about subrequests.
      __________________________________________________________________
 
 CGI setup on Sun, iPlanet and Netscape servers
@@ -1035,7 +1033,7 @@ Init fn="php4_init" LateInit="yes" error
 ini="c:/path/to/php.ini"]
 
        (PHP >= 4.3.3) The php_ini parameter is optional but with it you
-       can place your php.ini in your webserver config directory.
+       can place your php.ini in your web server configuration directory.
      * Configure the default object in obj.conf (for virtual server
        classes [Sun Web Server 6.0+] in their vserver.obj.conf): In the
        <Object name="default"> section, place this line necessarily after
@@ -1069,8 +1067,8 @@ Service fn=php4_execute [inikey=value in
      found here: http://benoit.noss.free.fr/php/install-php4.html
 
      Note: The stacksize that PHP uses depends on the configuration of
-     the webserver. If you get crashes with very large PHP scripts, it is
-     recommended to raise it with the Admin Server (in the section
+     the web server. If you get crashes with very large PHP scripts, it
+     is recommended to raise it with the Admin Server (in the section
      "MAGNUS EDITOR").
      __________________________________________________________________
 
@@ -1078,22 +1076,21 @@ CGI environment and recommended modifica
 
    Important when writing PHP scripts is the fact that Sun JSWS/Sun ONE
    WS/iPlanet/Netscape is a multithreaded web server. Because of that all
-   requests are running in the same process space (the space of the
-   webserver itself) and this space has only one environment. If you want
-   to get CGI variables like PATH_INFO, HTTP_HOST etc. it is not the
-   correct way to try this in the old PHP 3.x way with getenv() or a
-   similar way (register globals to environment, $_ENV). You would only
-   get the environment of the running webserver without any valid CGI
-   variables!
+   requests are running in the same process space (the space of the web
+   server itself) and this space has only one environment. If you want to
+   get CGI variables like PATH_INFO, HTTP_HOST etc. it is not the correct
+   way to try this in the old PHP 3.x way with getenv() or a similar way
+   (register globals to environment, $_ENV). You would only get the
+   environment of the running web server without any valid CGI variables!
 
      Note: Why are there (invalid) CGI variables in the environment?
 
-     Answer: This is because you started the webserver process from the
-     admin server which runs the startup script of the webserver, you
+     Answer: This is because you started the web server process from the
+     admin server which runs the startup script of the web server, you
      wanted to start, as a CGI script (a CGI script inside of the admin
-     server!). This is why the environment of the started webserver has
+     server!). This is why the environment of the started web server has
      some CGI environment variables in it. You can test this by starting
-     the webserver not from the administration server. Use the command
+     the web server not from the administration server. Use the command
      line as root user and start it manually - you will see there are no
      CGI-like environment variables.
 
@@ -1134,8 +1131,8 @@ pt.php" [inikey=value inikey=value...]
 Note about nsapi_virtual() and subrequests (PHP >= 4.3.3)
 
    The NSAPI module now supports the nsapi_virtual() function (alias:
-   virtual()) to make subrequests on the webserver and insert the result
-   in the webpage. The problem is, that this function uses some
+   virtual()) to make subrequests on the web server and insert the result
+   in the web page. The problem is, that this function uses some
    undocumented features from the NSAPI library.
 
    Under Unix this is not a problem, because the module automatically
@@ -1225,6 +1222,14 @@ Sambar Server on Microsoft Windows
 
        (This line assumes that PHP was installed in c:\php.)
      * Now restart the Sambar server for the changes to take effect.
+
+     Note: If you intend to use PHP to communicate with resources which
+     are held on a different computer on your network, then you will need
+     to alter the account used by the Sambar Server Service. The default
+     account used for the Sambar Server Service is LocalSystem which will
+     not have access to remote resources. The account can be amended by
+     using the Services option from within the Windows Control Panel
+     Administation Tools.
      __________________________________________________________________
 
 Xitami on Microsoft Windows
@@ -1247,7 +1252,7 @@ Xitami on Microsoft Windows
    attacks. Please read our CGI security section to learn how to defend
    yourself from those attacks.
 
-     * Make sure the webserver is running, and point your browser to
+     * Make sure the web server is running, and point your browser to
        xitamis admin console (usually http://127.0.0.1/admin), and click
        on Configuration.
      * Navigate to the Filters, and put the extension which PHP should
@@ -1261,8 +1266,8 @@ Xitami on Microsoft Windows
 
 Installation of extensions on Windows
 
-   After installing PHP and a webserver on Windows, you will probably want
-   to install some extensions for added functionality. You can choose
+   After installing PHP and a web server on Windows, you will probably
+   want to install some extensions for added functionality. You can choose
    which extensions you would like to load when PHP starts by modifying
    your php.ini. You can also load a module dynamically in your script
    using dl().
@@ -1318,7 +1323,7 @@ extension=php_bz2.dll
        in PECL, and these extensions require a separate download.
 
      Note: If you are running a server module version of PHP remember to
-     restart your webserver to reflect your changes to php.ini.
+     restart your web server to reflect your changes to php.ini.
 
    The following table describes some of the extensions available and
    required additional dlls.
@@ -1412,7 +1417,8 @@ Introduction to PECL Installations
    These instructions assume /your/phpsrcdir/ is the path to the PHP
    source distribution, and that extname is the name of the PECL
    extension. Adjust accordingly. These instructions also assume a
-   familiarity with the pear command.
+   familiarity with the pear command. The information in the PEAR manual
+   for the pear command also applies to the pecl command.
 
    To be useful, a shared extension must be built, installed, and loaded.
    The methods described below provide you with various instructions on
@@ -1437,7 +1443,7 @@ Downloading PECL extensions
        requirements and other similar details.
      * pecl download extname
        PECL extensions that have releases listed on the PECL web site are
-       available for download and installation using the pear command.
+       available for download and installation using the pecl command.
        Specific revisions may also be specified.
      * CVS
        Most PECL extensions also reside in CVS. A web-based view may be
@@ -1450,9 +1456,9 @@ $ cvs -d:pserver:cvsread@cvs.php.net:/re
 
      * Windows downloads
        Windows users may find compiled PECL binaries by downloading the
-       Collection of PECL modules from the PHP Downloads page, and by
-       retrieving a PECL Snapshot. To compile PHP under Windows, read the
-       appropriate chapter.
+       Collection of PECL modules from the PHP Downloads page, or by
+       retrieving a PECL Snapshot or an extension DLL on PECL4WIN. To
+       compile PHP under Windows, read the appropriate chapter.
      __________________________________________________________________
 
 PECL for Windows users
@@ -1467,9 +1473,9 @@ PECL for Windows users
    After doing this, restart the web server.
      __________________________________________________________________
 
-Compiling shared PECL extensions with PEAR
+Compiling shared PECL extensions with the pecl command
 
-   PEAR makes it easy to create shared PHP extensions. Using the pear
+   PECL makes it easy to create shared PHP extensions. Using the pecl
    command, do the following:
 
    $ pecl install extname
@@ -1478,7 +1484,7 @@ Compiling shared PECL extensions with PE
    extname.so into your extension_dir. extname.so may then be loaded via
    php.ini
 
-   By default, the pear command will not install packages that are marked
+   By default, the pecl command will not install packages that are marked
    with the alpha or beta state. If no stable packages are available, you
    may install a beta package using the following command:
 
@@ -1491,9 +1497,9 @@ Compiling shared PECL extensions with PE
 
 Compiling shared PECL extensions with phpize
 
-   Sometimes, using the pear installer is not an option. This could be
+   Sometimes, using the pecl installer is not an option. This could be
    because you're behind a firewall, or it could be because the extension
-   you want to install is not available as a PEAR compatible package, such
+   you want to install is not available as a PECL compatible package, such
    as unreleased extensions from CVS. If you need to build such an
    extension, you can use the lower-level build tools to perform the build
    manually.
@@ -1529,7 +1535,7 @@ Compiling PECL extensions statically int
    regenerate its configure script.
 
 $ cd /your/phpsrcdir/ext
-$ pear download extname
+$ pecl download extname
 $ gzip -d < extname.tgz | tar -xvf -
 $ mv extname-x.x.x extname
 
@@ -1615,9 +1621,9 @@ The configuration file
      * The PHPRC environment variable. Before PHP 5.2.0 this was checked
        after the registry key mentioned below.
      * As of PHP 5.2.0, the following registry locations are searched in
-       order: HKEY_LOCAL_MACHINE\SOFTWARE\PHP\IniFilePath\x.y.z,
-       HKEY_LOCAL_MACHINE\SOFTWARE\PHP\IniFilePath\x.y and
-       HKEY_LOCAL_MACHINE\SOFTWARE\PHP\IniFilePath\x, where x, y and z
+       order: HKEY_LOCAL_MACHINE\SOFTWARE\PHP\x.y.z\IniFilePath,
+       HKEY_LOCAL_MACHINE\SOFTWARE\PHP\x.y\IniFilePath and
+       HKEY_LOCAL_MACHINE\SOFTWARE\PHP\x\IniFilePath, where x, y and z
        mean the PHP major, minor and release versions.
      * HKEY_LOCAL_MACHINE\SOFTWARE\PHP\IniFilePath (Windows Registry
        location)
Index: win32/registry.c
===================================================================
RCS file: /repository/php-src/win32/registry.c,v
retrieving revision 1.16.4.3
retrieving revision 1.16.4.4
diff -u -p -d -r1.16.4.3 -r1.16.4.4
--- win32/registry.c	24 Feb 2007 02:17:28 -0000	1.16.4.3
+++ win32/registry.c	22 Apr 2007 10:25:18 -0000	1.16.4.4
@@ -133,10 +133,12 @@ static int LoadDirectory(HashTable *dire
 						if (path_len) {
 							memcpy(new_path, path, path_len);
 							new_path[path_len] = '/';
-							path_len++;
+							memcpy(new_path+path_len+1, name, name_len+1);
+							zend_str_tolower(new_path, path_len+name_len+1);
+						} else {
+							memcpy(new_path, name, name_len+1);
+							zend_str_tolower(new_path, name_len);
 						}
-						memcpy(new_path+path_len, name, name_len+1);
-						zend_str_tolower(new_path, path_len+name_len);
 						if (LoadDirectory(directories, subkey, new_path, path_len+name_len, ht)) {
 							ret = 1;
 						}
Index: win32/select.c
===================================================================
RCS file: /repository/php-src/win32/select.c,v
retrieving revision 1.10.2.2.2.1
retrieving revision 1.10.2.2.2.2
diff -u -p -d -r1.10.2.2.2.1 -r1.10.2.2.2.2
--- win32/select.c	1 Jan 2007 09:36:13 -0000	1.10.2.2.2.1
+++ win32/select.c	16 Apr 2007 08:09:56 -0000	1.10.2.2.2.2
@@ -63,8 +63,8 @@ PHPAPI int php_select(int max_fd, fd_set
 	/* build an array of handles for non-sockets */
 	for (i = 0; i < max_fd; i++) {
 		if (SAFE_FD_ISSET(i, rfds) || SAFE_FD_ISSET(i, wfds) || SAFE_FD_ISSET(i, efds)) {
-			handles[n_handles] = (HANDLE)_get_osfhandle(i);
-			if ((DWORD)handles[n_handles] == 0xffffffff) {
+			handles[n_handles] = (HANDLE)(zend_uintptr_t)_get_osfhandle(i);
+			if (handles[n_handles] == INVALID_HANDLE_VALUE) {
 				/* socket */
 				if (SAFE_FD_ISSET(i, rfds)) {
 					FD_SET((uint)i, &sock_read);
Index: win32/build/config.w32
===================================================================
RCS file: /repository/php-src/win32/build/config.w32,v
retrieving revision 1.40.2.8.2.8
retrieving revision 1.40.2.8.2.10
diff -u -p -d -r1.40.2.8.2.8 -r1.40.2.8.2.10
--- win32/build/config.w32	10 Apr 2007 06:22:28 -0000	1.40.2.8.2.8
+++ win32/build/config.w32	18 Apr 2007 09:38:59 -0000	1.40.2.8.2.10
@@ -126,8 +126,7 @@ if (VCVERS >= 14) {
 	// disable annoying warnings.  In addition, time_t defaults
 	// to 64-bit.  Ask for 32-bit.
 	if (X64) {
-		ADD_FLAG('CFLAGS', ' /wd4996 ');
-//		ADD_FLAG('CFLAGS', ' /wd4996 /Wp64 ');
+		ADD_FLAG('CFLAGS', ' /wd4996 /Wp64 ');
 	} else {
 		ADD_FLAG('CFLAGS', ' /wd4996 /D_USE_32BIT_TIME_T=1 ');
 	}
@@ -310,7 +309,7 @@ ADD_SOURCES("main", "main.c snprintf.c s
 ADD_SOURCES("main/streams", "streams.c cast.c memory.c filter.c plain_wrapper.c \
 	userspace.c transports.c xp_socket.c mmap.c");
 
-ADD_SOURCES("win32", "crypt_win32.c flock.c glob.c md5crypt.c readdir.c \
+ADD_SOURCES("win32", "crypt_win32.c glob.c md5crypt.c readdir.c \
 	registry.c select.c sendmail.c time.c wfile.c winutil.c wsyslog.c globals.c");
 
 ADD_SOURCES("regex", "regcomp.c regerror.c regexec.c regfree.c");
