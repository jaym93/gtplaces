--- php-5.2.0/ext/curl/config.w32.orig	2006-12-15 09:49:11.000000000 +0300
+++ php-5.2.0/ext/curl/config.w32	2006-12-15 10:04:18.000000000 +0300
@@ -1,4 +1,4 @@
-// $Id: config.w32,v 1.3.4.1.2.1 2006/09/09 20:04:50 bjori Exp $
+// $Id: config.w32,v 1.3.4.1.2.2 2006/11/14 19:57:13 edink Exp $
 // vim:ft=javascript
 
 ARG_WITH("curl", "cURL support", "no");
@@ -13,6 +13,7 @@
 		EXTENSION("curl", "interface.c multi.c streams.c");
 		AC_DEFINE('HAVE_CURL', 1, 'Have cURL library');
 		AC_DEFINE('HAVE_CURL_SSL', 1, 'Have SSL suppurt in cURL');
+		ADD_FLAG("CFLAGS_CURL", "/D CURL_STATICLIB");
 		// TODO: check for curl_version_info
 		// AC_DEFINE('PHP_CURL_URL_WRAPPERS', 0, 'Use curl for URL wrappers [experimental]');
 	} else {
--- php-5.2.0/ext/curl/interface.c.orig	2006-12-15 09:49:11.000000000 +0300
+++ php-5.2.0/ext/curl/interface.c	2006-12-15 10:04:18.000000000 +0300
@@ -16,7 +16,7 @@
    +----------------------------------------------------------------------+
 */
 
-/* $Id: interface.c,v 1.62.2.14.2.12 2006/10/10 23:12:59 iliaa Exp $ */
+/* $Id: interface.c,v 1.62.2.14.2.15 2006/11/21 15:53:23 iliaa Exp $ */
 
 #define ZEND_INCLUDE_FULL_WINDOWS_HEADERS
 
@@ -156,7 +156,7 @@
 #define CAAS(s, v) add_assoc_string_ex(return_value, s, sizeof(s), (char *) v, 1);
 #define CAAZ(s, v) add_assoc_zval_ex(return_value, s, sizeof(s), (zval *) v);
 
-#define PHP_CURL_CHECK_OPEN_BASEDIR(str, len)													\
+#define PHP_CURL_CHECK_OPEN_BASEDIR(str, len, __ret)													\
 	if (((PG(open_basedir) && *PG(open_basedir)) || PG(safe_mode)) &&                                                \
 	    strncasecmp(str, "file:", sizeof("file:") - 1) == 0)								\
 	{ 																							\
@@ -164,19 +164,22 @@
 															\
 		if (!(tmp_url = php_url_parse_ex(str, len))) {											\
 			php_error_docref(NULL TSRMLS_CC, E_WARNING, "Invalid URL '%s'", str);				\
-			RETURN_FALSE; 																		\
+			RETVAL_FALSE;											\
+			return __ret;											\
 		} 																						\
 															\
 		if (php_memnstr(str, tmp_url->path, strlen(tmp_url->path), str + len)) {				\
 			php_error_docref(NULL TSRMLS_CC, E_WARNING, "URL '%s' contains unencoded control characters.", str);	\
-			RETURN_FALSE;											\
+			RETVAL_FALSE;											\
+			return __ret;											\
 		}													\
 																								\
 		if (tmp_url->query || tmp_url->fragment || php_check_open_basedir(tmp_url->path TSRMLS_CC) || 									\
 			(PG(safe_mode) && !php_checkuid(tmp_url->path, "rb+", CHECKUID_CHECK_MODE_PARAM))	\
 		) { 																					\
 			php_url_free(tmp_url); 																\
-			RETURN_FALSE; 																		\
+			RETVAL_FALSE;											\
+			return __ret;											\
 		} 																						\
 		php_url_free(tmp_url); 																	\
 	}
@@ -369,7 +372,9 @@
 	REGISTER_CURL_CONSTANT(CURLOPT_FTPAPPEND);
 	REGISTER_CURL_CONSTANT(CURLOPT_NETRC);
 	REGISTER_CURL_CONSTANT(CURLOPT_FOLLOWLOCATION);
+#if CURLOPT_FTPASCII != 0
 	REGISTER_CURL_CONSTANT(CURLOPT_FTPASCII);
+#endif
 	REGISTER_CURL_CONSTANT(CURLOPT_PUT);
 #if CURLOPT_MUTE != 0
 	REGISTER_CURL_CONSTANT(CURLOPT_MUTE);
@@ -409,7 +414,9 @@
 	REGISTER_CURL_CONSTANT(CURLOPT_FILETIME);
 	REGISTER_CURL_CONSTANT(CURLOPT_WRITEFUNCTION);
 	REGISTER_CURL_CONSTANT(CURLOPT_READFUNCTION);
+#if CURLOPT_PASSWDFUNCTION != 0 
 	REGISTER_CURL_CONSTANT(CURLOPT_PASSWDFUNCTION);
+#endif
 	REGISTER_CURL_CONSTANT(CURLOPT_HEADERFUNCTION);
 	REGISTER_CURL_CONSTANT(CURLOPT_MAXREDIRS);
 	REGISTER_CURL_CONSTANT(CURLOPT_MAXCONNECTS);
@@ -1074,7 +1081,7 @@
 
 	if (argc > 0) {
 		convert_to_string_ex(url);
-		PHP_CURL_CHECK_OPEN_BASEDIR(Z_STRVAL_PP(url), Z_STRLEN_PP(url));
+		PHP_CURL_CHECK_OPEN_BASEDIR(Z_STRVAL_PP(url), Z_STRLEN_PP(url), (void) NULL);
 	}
 
 	cp = curl_easy_init();
@@ -1157,12 +1164,13 @@
 	dupch->handlers->write_header->fp = ch->handlers->write_header->fp;
 	dupch->handlers->read->fp = ch->handlers->read->fp;
 	dupch->handlers->read->fd = ch->handlers->read->fd;
-
+#if CURLOPT_PASSWDDATA != 0
 	if (ch->handlers->passwd) {
 		zval_add_ref(&ch->handlers->passwd);
 		dupch->handlers->passwd = ch->handlers->passwd;
 		curl_easy_setopt(ch->cp, CURLOPT_PASSWDDATA, (void *) dupch);
 	}
+#endif
 	if (ch->handlers->write->func_name) {
 		zval_add_ref(&ch->handlers->write->func_name);
 		dupch->handlers->write->func_name = ch->handlers->write->func_name;
@@ -1264,7 +1272,8 @@
 			if ((PG(open_basedir) && *PG(open_basedir)) || PG(safe_mode)) {
 				if (Z_LVAL_PP(zvalue) != 0) {
 					php_error_docref(NULL TSRMLS_CC, E_WARNING, "CURLOPT_FOLLOWLOCATION cannot be activated when in safe_mode or an open_basedir is set");
-					RETURN_FALSE;
+					RETVAL_FALSE;
+					return 1;
 				}
 			}
 			error = curl_easy_setopt(ch->cp, option, Z_LVAL_PP(zvalue));
@@ -1297,7 +1306,7 @@
 			convert_to_string_ex(zvalue);
 
 			if (option == CURLOPT_URL) {
-				PHP_CURL_CHECK_OPEN_BASEDIR(Z_STRVAL_PP(zvalue), Z_STRLEN_PP(zvalue));
+				PHP_CURL_CHECK_OPEN_BASEDIR(Z_STRVAL_PP(zvalue), Z_STRLEN_PP(zvalue), 1);
 			}
 
 			copystr = estrndup(Z_STRVAL_PP(zvalue), Z_STRLEN_PP(zvalue));
@@ -1315,7 +1324,10 @@
 			void * what;
 		
 			what = zend_fetch_resource(zvalue TSRMLS_CC, -1, "File-Handle", &type, 1, php_file_le_stream());
-			ZEND_VERIFY_RESOURCE(what);
+			if (!what) {
+				RETVAL_FALSE;
+				return 1;
+			}
 
 			if (FAILURE == php_stream_cast((php_stream *) what, PHP_STREAM_AS_STDIO, (void *) &fp, REPORT_ERRORS)) {
 				RETVAL_FALSE;
